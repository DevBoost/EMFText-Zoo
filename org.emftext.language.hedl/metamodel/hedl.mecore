hedl <http://www.emftext.org/language/hedl>

EntityModel (
	entities Entity* <> Entity.entityModel
	enums Enum*
)

abstract Commentable (
	comment EString?
)

abstract NamedElement (
	name EString
)

abstract Type : NamedElement (
	getJavaClassname() EString
)

Entity : Type, Commentable (
	~entityModel EntityModel <> EntityModel.entities
	properties Property*
	constraints Constraint*
)

abstract Constraint

// a constraint over multiple properties
UniqueConstraint : Constraint (
	~properties Property*
)

Enum : Type (
	literals EnumLiteral*
)

EnumLiteral : NamedElement, Commentable

JavaType : Type (
	javaClass EJavaClass
)

Property : NamedElement, Commentable (
	readonly EBoolean
	unique EBoolean
	nullable EBoolean
	persist EBoolean
	refresh EBoolean
	~type Type
	fromMultiplicity EBoolean
	toMultiplicity EBoolean
	getTypeClassname() EString
)
