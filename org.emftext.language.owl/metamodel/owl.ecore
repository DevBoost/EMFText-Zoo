package owl  owl :  "http://org.emftext/owl.ecore"  { 



	abstract class IRIIdentified  { 
			  unique ordered  changeable   attribute EString  iri  ( 1 .. 1 ) ; 
	} 
	
	abstract class URIIdentified  { 
			  unique ordered  changeable   attribute EString  uri  ( 1 .. 1 ) ; 
	} 
	
	 abstract class Annotateable  { 
			containment    unique ordered  changeable resolveProxies reference Annotation  annotations  ( 0 .. -1 ) ; 
	} 
	
	 class Ontology extends URIIdentified , Annotateable  { 
			attribute EString versionIRI (0..1);
			    unique ordered  changeable resolveProxies reference Ontology  imports  ( 0 .. -1 ) ; 
			containment    unique ordered  changeable resolveProxies reference Frame  frames  ( 0 .. -1 ) ; 
	} 
	
	 class OntologyDocument  { 
			containment    unique ordered  changeable resolveProxies reference Ontology  ontology  ( 1 .. 1 ) ; 
			containment    unique ordered  changeable resolveProxies reference Namespace  namespace  ( 0 .. -1 ) ; 
	} 
	
	 class Annotation extends Annotateable { 
			  unique ordered  changeable   attribute EString  propertyIri  ( 1 .. 1 ) ; 
			  containment reference Target target  ( 1 .. 1 ) ; 
	} 
	
	abstract class Target {}
	
	class IRITarget extends Target {
		reference IRIIdentified target (1..1) ;
	}
	
	class LiteralTarget extends Target {
		containment reference Literal literal (1..1) ;
	}
	
	
	
	 class Namespace extends URIIdentified  { 
			  unique ordered  changeable   attribute EString  prefix  ( 1 .. 1 ) ; 
	} 
	
	abstract class Frame extends IRIIdentified  { 
	} 

	 class DataProperty extends Frame , Annotateable  { 
	 	containment reference Description domain (0..-1);
	 	containment reference DataRange range (0..-1);
	 	reference DataProperty superProperties (0..-1);
	 	reference DataProperty equivalentProperties (0..-1);
	 	reference DataProperty disjointProperties (0..-1);
	 		
	} 
	
	 class AnnotationProperty extends Frame , Annotateable  { 
	 	reference IRIIdentified domains (0..-1);
	 	reference IRIIdentified ranges (0..-1);
	 	reference AnnotationProperty superAnnotationProperties (0..-1);	
	} 
	
	
	class DataRange {
		containment reference DataConjunction dataConjunctions (1 .. -1);
	}
	
	class DataConjunction {
		containment reference DataPrimary dataPrimaries (1..-1);
	}
	
	abstract class DataPrimary {
		attribute EBoolean not (1..1);
	}
	
	class DatatypeReference extends DataPrimary {
		reference Datatype theDatatype (1..1);
		containment reference Facet facets (0..-1);
	}
	
	class Facet {
		attribute FacetType facetType (1..1);
		containment reference Literal literal (1..1);
	}
	
	enum FacetType {
		1 : LENGTH = "length";
		2 : MIN_LENGTH = "minLength";
		3 : MAX_LENGTH = "maxLength";
		4 : PATTERN = "pattern";
		5 : LANG_PATTERN = "langPattern";
		6 : LESS_EQUALS = "<=";
		7 : LESS = "<";
		8 : GREATER = ">";
		9 : GREATER_EQUALS = ">=";
	}
	
	class NestedDataRange extends DataPrimary {
		containment reference DataRange dataRange (1..1);
	}
	
	class DataPrimaryLiterals extends DataPrimary {
		containment reference Literal literals (1..-1);
	}
	
	 class Class extends Frame , Annotateable  { 
			containment    unique ordered  changeable resolveProxies reference Description  superClassesDescriptions  ( 0 .. -1 ) ; 
			containment    unique ordered  changeable resolveProxies reference Description  equivalentClassesDescriptions  ( 0 .. -1 ) ; 
			containment    unique ordered  changeable resolveProxies reference Description  disjointWithClassesDescriptions  ( 0 .. -1 ) ; 
			containment    unique ordered  changeable resolveProxies reference Description  disjointUnionWithClassesDescriptions  ( 0 .. -1 ) ; 
	} 
	
	 class ObjectProperty extends Frame , Annotateable  { 
	 	containment    unique ordered  changeable resolveProxies reference Description  propertyDomain  ( 0 .. -1 ) ; 
		containment    unique ordered  changeable resolveProxies reference Description  propertyRange  ( 0 .. -1 ) ; 
		unique ordered  changeable   attribute Characteristic  characteristic  ( 0 .. -1 ) ; 
		containment    unique ordered  changeable resolveProxies reference ObjectProperty  superProperties  ( 0 .. -1 ) ; 
		containment    unique ordered  changeable resolveProxies reference ObjectProperty  equivalentProperties  ( 0 .. -1 ) ; 
		containment    unique ordered  changeable resolveProxies reference ObjectProperty  disjointProperties  ( 0 .. -1 ) ; 
		containment    unique ordered  changeable resolveProxies reference ObjectProperty  inverseProperties  ( 0 .. -1 ) ; 
		containment    unique ordered  changeable resolveProxies reference ObjectProperty  subPropertyChains  ( 0 .. -1 ) ; 
	} 
	
	
	 class Individual extends Frame, Annotateable { 
		containment reference Description types (0..-1);
		containment reference Fact facts (0..-1);
		reference Individual sameAs (0..-1);
		reference Individual differentFrom (0..-1);
	} 
	
	abstract class Fact {
		attribute EBoolean not (1..1);
	}
	
	class ObjectPropertyFact extends Fact {
		reference ObjectProperty objectProperty (1..1);
		reference Individual individual (1..1);
	}
	
	class DataPropertyFact extends Fact {
		reference DataProperty dataProperty (1..1);
		containment reference Literal literal (1..1);
	}
	
	serializable enum Characteristic  { 
		1 : FUNCTIONAL = "Functional" ; 
		2 : INVERSE_FUNCTIONAL = "InverseFunctional" ; 
		3 : REFLEXIVE = "Reflexive" ; 
		4 : IRREFLEXIVE = "Irreflexive" ; 
		5 : SYMETRIC = "Symmetric" ; 
		6 : ASYMETRIC = "Asymmetric" ; 
		7 : TRANSITIVE = "Transitive" ; 
	} 
	
	 class Misc extends Frame  { 
	} 
	
	 class Description extends Annotateable { 
			containment    unique ordered  changeable resolveProxies reference Conjunction  conjunctions  ( 1 .. -1 ) ; 
	} 
	
	 class Conjunction  { 
			    unique ordered  changeable resolveProxies reference Class  clazz  ( 0 .. 1 ) ; 
			containment    unique ordered  changeable resolveProxies reference Primary  primaries  ( 0 .. -1 ) ; 
	} 
	
	abstract class Primary  { 
			  unique ordered  changeable   attribute EBoolean  not  ( 1 .. 1 ) ; 
	} 
	
	 class IndividualsAtomic extends Primary  { 
			    unique ordered  changeable resolveProxies reference Individual  individuals  ( 0 .. -1 ) ; 
	} 
	
	 class ClassAtomic extends Primary  { 
			    unique ordered  changeable resolveProxies reference Class  clazz  ( 1 .. 1 ) ; 
	} 
	
	 class NestedDescription extends Primary  { 
			containment    unique ordered  changeable resolveProxies reference Description  description  ( 1 .. 1 ) ; 
	} 
	
	
	abstract class ObjectPropertyRestriction extends Primary  { 
			    unique ordered  changeable resolveProxies reference ObjectProperty  property  ( 1 .. 1 ) ; 
			  unique ordered  changeable   attribute EBoolean  inverse  ( 1 .. 1 ) ; 
	} 
	
	 class ObjectPropertySome extends ObjectPropertyRestriction  { 
			containment    unique ordered  changeable resolveProxies reference Primary  primary  ( 1 .. 1 ) ; 
	} 
	
	 class ObjectPropertyOnly extends ObjectPropertyRestriction  { 
			containment    unique ordered  changeable resolveProxies reference Primary  primary  ( 1 .. 1 ) ; 
	} 
	
	 class ObjectPropertyValue extends ObjectPropertyRestriction  { 
			    unique ordered  changeable resolveProxies reference Individual  individual  ( 1 .. 1 ) ; 
	} 
	
	 class ObjectPropertySelf extends ObjectPropertyRestriction  { 
	} 
	
	 class ObjectPropertyMin extends ObjectPropertyRestriction  { 
			containment    unique ordered  changeable resolveProxies reference Primary  primary  ( 1 .. 1 ) ; 
			  unique ordered  changeable   attribute EInt  value  ( 1 .. 1 ) ; 
	} 
	
	 class ObjectPropertyMax extends ObjectPropertyRestriction  { 
			containment    unique ordered  changeable resolveProxies reference Primary  primary  ( 1 .. 1 ) ; 
			  unique ordered  changeable   attribute EInt  value  ( 1 .. 1 ) ; 
	} 
	
	 class ObjectPropertyExactly extends ObjectPropertyRestriction  { 
			containment    unique ordered  changeable resolveProxies reference Primary  primary  ( 1 .. 1 ) ; 
			  unique ordered  changeable   attribute EInt  value  ( 1 .. 1 ) ; 
	} 
	
	abstract class DataPropertyRestriction extends Primary  { 
			    unique ordered  changeable resolveProxies reference DataProperty  dataProperty  ( 1 .. 1 ) ; 
	} 
	
	 class DataPropertySome extends DataPropertyRestriction  { 
			containment    unique ordered  changeable resolveProxies reference DataProperty  dataPrimary  ( 1 .. 1 ) ; 
	} 
	
	 class DataPropertyOnly extends DataPropertyRestriction  { 
			containment    unique ordered  changeable resolveProxies reference DataProperty  dataPrimary  ( 1 .. 1 ) ; 
	} 
	
	 class DataPropertyValue extends DataPropertyRestriction  { 
			containment    unique ordered  changeable resolveProxies reference Literal  literal  ( 1 .. 1 ) ; 
	} 
	
	 class DataPropertyMin extends DataPropertyRestriction  { 
			containment    unique ordered  changeable resolveProxies reference DataProperty  dataPrimary  ( 1 .. 1 ) ; 
			  unique ordered  changeable   attribute EInt  value  ( 1 .. 1 ) ; 
	} 
	
	 class DataPropertyMax extends DataPropertyRestriction  { 
			containment    unique ordered  changeable resolveProxies reference DataProperty  dataPrimary  ( 1 .. 1 ) ; 
			  unique ordered  changeable   attribute EInt  value  ( 1 .. 1 ) ; 
	} 
	
	 class DataPropertyExactly extends DataPropertyRestriction  { 
			containment    unique ordered  changeable resolveProxies reference DataProperty  dataPrimary  ( 1 .. 1 ) ; 
			  unique ordered  changeable   attribute EInt  value  ( 1 .. 1 ) ; 
	} 
	
	
	abstract class Literal  { 
	} 
	
	 class TypedLiteral extends Literal  { 
			  unique ordered  changeable   attribute EString  lexicalValue  ( 1 .. 1 ) ; 
			    unique ordered  changeable resolveProxies reference Datatype  theDatatype  ( 1 .. 1 ) ; 
	} 
	
	class AbbreviatedXSDStringLiteral extends Literal {
			attribute EString value (1..1);
	}
	class AbbreviatedRDFTextLiteral extends Literal {
			attribute EString value (1..1);
			attribute EString languageTag (1..1);
	}
	
	class IntegerLiteral extends Literal {
		attribute EInt value (1..1);
	}
	
	class DecimalLiteral extends Literal {
		attribute EInt preComma (1..1);
		attribute EInt postComma (1..1);
	}

	class FloatingPointLiteral extends Literal {
		attribute EFloat literal (1..1) ;
	}

	
	abstract class Datatype  { 
	} 
	
	 class Integer extends Datatype  { 
	} 
	 class String extends Datatype  { 
	} 
	 class Decimal extends Datatype  { 
	} 
	 class Float extends Datatype  { 
	} 
	
	
	
	
} 