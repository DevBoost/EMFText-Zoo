/*******************************************************************************
 * Copyright (C) 2012
 * The Stanford Natural Language Processing Group 
 * http://nlp.stanford.edu/
 * This Eclipse plugin matches the Stanford CoreNLP version 1.3.3
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 ******************************************************************************/
/* Generated By:JJTree&JavaCC: Do not edit this line. TsurgeonParserConstants.java */
package edu.stanford.nlp.trees.tregex.tsurgeon;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
interface TsurgeonParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DELETE = 4;
  /** RegularExpression Id. */
  int PRUNE = 5;
  /** RegularExpression Id. */
  int RELABEL = 6;
  /** RegularExpression Id. */
  int EXCISE = 7;
  /** RegularExpression Id. */
  int INSERT = 8;
  /** RegularExpression Id. */
  int MOVE = 9;
  /** RegularExpression Id. */
  int REPLACE = 10;
  /** RegularExpression Id. */
  int ADJOIN = 11;
  /** RegularExpression Id. */
  int ADJOIN_TO_HEAD = 12;
  /** RegularExpression Id. */
  int ADJOIN_TO_FOOT = 13;
  /** RegularExpression Id. */
  int COINDEX = 14;
  /** RegularExpression Id. */
  int SELECTION = 15;
  /** RegularExpression Id. */
  int GENERAL_RELABEL = 16;
  /** RegularExpression Id. */
  int IDENTIFIER = 17;
  /** RegularExpression Id. */
  int LABEL = 18;
  /** RegularExpression Id. */
  int LOCATION_RELATION = 19;
  /** RegularExpression Id. */
  int REGEX = 20;
  /** RegularExpression Id. */
  int QUOTEX = 21;
  /** RegularExpression Id. */
  int HASH_INTEGER = 22;
  /** RegularExpression Id. */
  int TREE_NODE_TERMINAL_LABEL = 23;
  /** RegularExpression Id. */
  int TREE_NODE_NONTERMINAL_LABEL = 24;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"delete\"",
    "\"prune\"",
    "\"relabel\"",
    "\"excise\"",
    "\"insert\"",
    "\"move\"",
    "\"replace\"",
    "\"adjoin\"",
    "\"adjoinH\"",
    "\"adjoinF\"",
    "\"coindex\"",
    "<SELECTION>",
    "<GENERAL_RELABEL>",
    "<IDENTIFIER>",
    "<LABEL>",
    "<LOCATION_RELATION>",
    "<REGEX>",
    "<QUOTEX>",
    "<HASH_INTEGER>",
    "<TREE_NODE_TERMINAL_LABEL>",
    "<TREE_NODE_NONTERMINAL_LABEL>",
    "\"\\n\"",
    "\")\"",
  };

}
