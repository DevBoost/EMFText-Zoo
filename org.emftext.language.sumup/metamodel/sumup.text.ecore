package sumup sumup "http://www.emftext.org/language/sumup" {

	abstract class NamedElement {
		attribute EString name (1..1);
	}
	
	class Sheet {
		reference Sheet imports (0..-1);
		containment reference UnitDeclaration units (0..-1);
		containment reference InputVariable inputs (0..-1);
		containment reference OutputVariable outputs (0..-1);
		containment reference Assignment computations (0..-1);
	}
		
	class UnitDeclaration extends NamedElement {
		containment reference Calculation normalisation (0..1);
	}
	
	abstract class Variable extends NamedElement {
	}

	class InputVariable extends Variable {
		containment reference Unit unit (1..1);
	}

	class OutputVariable extends Variable {
		containment reference Unit unit (1..1);
	}

	class Assignment {
		reference OutputVariable target (1..1);
		containment reference Unit designatedUnit (1..1);
		containment reference Result resultValue (0..1);
		containment reference Calculation calculation (1..1);
	}
	
	class Result {
		attribute EFloat value (1..1);
		containment reference Unit unit (0..1);
	}
	
	abstract class Calculation {
	}
	
	class Or extends Calculation {
		containment reference Calculation left (1..1);
		containment reference Calculation right (1..1);
	}
	
	class And extends Calculation {
		containment reference Calculation left (1..1);
		containment reference Calculation right (1..1);
	}
	
	class Comparison extends Calculation {
		containment reference Calculation left (1..1);
		attribute CompareOperator operator (1..1);
		containment reference Calculation right (1..1);
	}
	
	serializable enum CompareOperator {
		0 : EQUALS = "=";
		1 : LOWER = "<";
		2 : LEQ = "<=";
		3 : GREATER = ">";
		4 : GEQ = ">=";
	}
	
	class Additive extends Calculation {
		containment reference Calculation left (1..1);
		containment reference Calculation right (1..1);
		attribute AdditiveOperator operator (1..1);
	}
	
	serializable enum AdditiveOperator {
		0 : PLUS = "+";
		1 : MINUS = "-";
	}
	
	class Multiplicative extends Calculation {
		containment reference Calculation left (1..1);
		containment reference Calculation right (1..1);
		attribute MultplicativeOperator operator (1..1);
	}
	
	serializable enum MultplicativeOperator {
		0 : TIMES = "*";
		1 : DIV = "/";
	}
	
	class Unary extends Calculation {
		containment reference Calculation calculation (1..1);
		attribute EBoolean minus (1..1);	
	}
	
	abstract class Primitive extends Calculation {
	}
	
	// a value the has an optional unit
	abstract class UnitValue {
		containment reference Unit unit (0..1);
	}
	
	class Int extends Primitive, UnitValue {
		attribute EInt value (1..1);
	}
	
	class Float extends Primitive, UnitValue {
		attribute EFloat value (1..1);
	}
	
	class Nested extends Primitive {
		containment reference Calculation calculation (1..1);
	}
	
	class VariableRef extends Primitive {
		reference Variable variable (1..1);
	}
	
	class Unit {
	    reference UnitDeclaration numerators (1..-1);
		reference UnitDeclaration denominators (0..-1);
	}
}