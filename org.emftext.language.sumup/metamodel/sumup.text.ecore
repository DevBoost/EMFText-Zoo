package sumup sumup "http://www.emftext.org/language/sumup" {

	class Sheet {
		containment reference VariableDeclaration entries (0..-1);
		containment reference UnitDeclaration units (0..-1);
		reference Sheet imports (0..-1);
	}
		
	class UnitDeclaration {
		containment reference Variable variable (1..1);
		containment reference Calculation normalisation (0..1);
		
	}
	
	class VariableDeclaration {
		containment reference Unit designatedUnit (1..1);
		containment reference Result resultValue (0..1);
		containment reference Variable variable (1..1);
		containment reference Calculation calculation (1..1);
	}
	
	class Result {
		attribute EFloat value (1..1);
		containment reference Unit unit (0..1);
	}
	
	abstract class Calculation {
	}
	
	class Additive extends Calculation {
		containment reference Calculation left (1..1);
		containment reference Calculation right (1..1);
		attribute AdditiveOperator operator (1..1);
	}
	
	serializable enum AdditiveOperator {
		0 : PLUS = "+";
		1 : MINUS = "-";
	}
	
	class Multiplicative extends Calculation {
		containment reference Calculation left (1..1);
		containment reference Calculation right (1..1);
		attribute MultplicativeOperator operator (1..1);
	}
	
	serializable enum MultplicativeOperator {
		0 : TIMES = "*";
		1 : DIV = "/";
	}
	
	class Unary extends Calculation {
		containment reference Calculation calculation (1..1);
		attribute EBoolean minus (1..1);	
	}
	
	abstract class Primitive extends Calculation {
	}
	
	class Int extends Primitive {
		attribute EInt value (1..1);
		containment reference Unit unit (0..1);
	}
	
	class Float extends Primitive {
		attribute EFloat value (1..1);
		containment reference Unit unit (0..1);
	}
	

	
	class Nested extends Primitive {
		containment reference Calculation calculation (1..1);
	}
	
	class PrimitiveUnit extends Primitive {
		containment reference Unit unit (1..1);
	}
	
	class Unit {
	    reference Variable numerators (1..-1);
		reference Variable denominators (0..-1);
	}
	
	class Variable {
		attribute EString name (1..1);
	}
}