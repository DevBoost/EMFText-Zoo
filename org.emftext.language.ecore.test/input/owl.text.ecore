package owl owl "http://org.emftext/owl.ecore" {

	abstract class IRIIdentified {
		iD attribute EString iri (1..1);
	}
	
	abstract class URIIdentified {
		attribute EString uri (1..1);
	}
	
	abstract class Annotateable {
		containment reference Annotation annotations (0..-1);
	}
	
	class Ontology extends URIIdentified, Annotateable {
		attribute EString versionIRI (0..1);
		reference Ontology imports (0..-1);
		containment reference Frame frames (0..-1);
	}
	
	class OntologyDocument {
			containment reference Ontology ontology (1..1);
			containment reference Namespace namespace (0..-1);
	}
	
	class Annotation extends Annotateable {
			reference AnnotationProperty annotationProperty (1..-1);
			containment reference Target target (1..-1);
	}
	
	abstract class Target {
	}
	
	class IRITarget extends Target {
			reference IRIIdentified target (1..1);
	}
	
	class LiteralTarget extends Target {
			containment reference Literal literal (1..1);
	}
	
	class Namespace {
			attribute EString prefix (1..1);
			reference Ontology importedOntology (1..1);
			
	}
	
	abstract class Frame extends IRIIdentified {
	}
	
	abstract class Feature extends Frame {
	}
	
	class DataProperty extends Feature, Annotateable {
			containment reference Description domain (0..-1);
			containment reference DataRange range (0..-1);
			attribute Characteristic characteristic (0..-1) ;
			reference DataProperty superProperties (0..-1);
			reference DataProperty equivalentProperties (0..-1);
			reference DataProperty disjointProperties (0..-1);
	}
	
	class AnnotationProperty extends Frame, Annotateable {
			reference IRIIdentified domains (0..-1);
			reference IRIIdentified ranges (0..-1);
			reference AnnotationProperty superAnnotationProperties (0..-1);
	}
	
	class Class extends Frame, Annotateable {
			containment reference Description superClassesDescriptions (0..-1);
			containment reference Description equivalentClassesDescriptions (0..-1);
			containment reference Description disjointWithClassesDescriptions (0..-1);
			containment reference Description disjointUnionWithClassesDescriptions (0..-1);
	}
	
	class ObjectProperty extends Feature, Annotateable {
			containment reference Description propertyDomain (0..-1);
			containment reference Description propertyRange (0..-1);
			attribute Characteristic characteristics (0..-1);
			containment reference ObjectPropertyReference superProperties (0..-1);
			containment reference ObjectPropertyReference equivalentProperties (0..-1);
			containment reference ObjectPropertyReference disjointProperties (0..-1);
			containment reference ObjectPropertyReference inverseProperties (0..-1);
			containment reference ObjectPropertyReference subPropertyChains (0..-1);
	}
	
	class Individual extends Frame, Annotateable {
			containment reference Description types (0..-1);
			containment reference Fact facts (0..-1);
			reference Individual sameAs (0..-1);
			reference Individual differentFrom (0..-1);
	}
	
	class Datatype extends Class, Annotateable {
			containment reference DataRange dataRange (0..1);
	}
	
	abstract class Misc extends Frame, Annotateable {
	}
	
	class EquivalentClasses extends Misc {
			containment reference Description descriptions (1..-1);
	}
	
	class DisjointClasses extends Misc {
			containment reference Description descriptions (1..-1);
	}
	
	class EquivalentProperties extends Misc {
			reference ObjectProperty objectProperties (1..-1);
	}
	
	class DisjointProperties extends Misc {
			reference ObjectProperty objectProperties (1..-1);
	}
	
	class SameIndividuals extends Misc {
			reference Individual individuals (1..-1);
	}
	
	class DifferentIndividuals extends Misc {
			reference Individual individuals (1..-1);
	}
	
	class HasKey extends Misc {
			containment reference Description description (1..1);
			containment reference FeatureReference featureReferences (0..-1);
	}
	
	class DataRange {
			containment reference DataConjunction dataConjunctions (1..-1);
	}
	
	class DataConjunction extends DataRange {
			containment reference DataPrimary dataPrimaries (1..-1);
	}
	
	abstract class DataPrimary extends DataRange {
			attribute EBoolean not (1..1);
	}
	
	class DatatypeReference extends DataPrimary {
			reference Datatype theDatatype (1..1);
			containment reference Facet facets (0..-1);
	}
	
	class Facet {
			attribute FacetType facetType (1..1);
			containment reference Literal literal (1..1);
	}
	serializable enum FacetType {
			1 : LENGTH = "length";
			2 : MIN_LENGTH = "minLength";
			3 : MAX_LENGTH = "maxLength";
			4 : PATTERN = "pattern";
			5 : LANG_PATTERN = "langPattern";
			6 : LESS_EQUALS = "<=";
			7 : LESS = "<";
			8 : GREATER = ">";
			9 : GREATER_EQUALS = ">=";
}

	class NestedDataRange extends DataPrimary {
			containment reference DataRange dataRange (1..1);
	}
	
	class DataPrimaryLiterals extends DataPrimary {
			containment reference Literal literals (1..-1);
	}
	
	abstract class Fact {
			attribute EBoolean not (1..1);
	}
	
	class ObjectPropertyFact extends Fact {
			reference ObjectProperty objectProperty (1..1);
			reference Individual individual (1..1);
	}
	
	class DataPropertyFact extends Fact {
			reference DataProperty dataProperty (1..1);
			containment reference Literal literal (1..1);
	}
	serializable enum Characteristic {
			1 : FUNCTIONAL = "Functional";
			2 : INVERSE_FUNCTIONAL = "InverseFunctional";
			3 : REFLEXIVE = "Reflexive";
			4 : IRREFLEXIVE = "Irreflexive";
			5 : SYMETRIC = "Symmetric";
			6 : ASYMETRIC = "Asymmetric";
			7 : TRANSITIVE = "Transitive";
}

	abstract class Description extends Annotateable {
	}
	
	class Disjunction extends Description {
			containment reference Description conjunctions (1..-1);
	}
	
	class Conjunction extends Description {
			reference Class clazz (0..1);
			containment reference Description primaries (0..-1);
	}
	
	abstract class Primary extends Description {
			attribute EBoolean not (1..1);
	}
	
	class IndividualsAtomic extends Primary {
			reference Individual individuals (0..-1);
	}
	
	class ClassAtomic extends Primary {
			reference Class clazz (1..1);
	}
	
	class NestedDescription extends Primary {
			containment reference Description description (1..1);
	}
	
	abstract class FeatureRestriction extends Primary {
			containment reference FeatureReference featureReference (1..1);
	}
	
	abstract class ObjectPropertyRestriction extends Primary {
			containment reference ObjectPropertyReference objectPropertyReference (1..1);
	}
	
	class FeatureReference{
			reference Feature feature (1..1);
	}
	
	class InverseFeatureReference extends FeatureReference{
	}
	class OwlApiInverseFeatureReference extends FeatureReference{
	}
	
	class ObjectPropertyReference {
			reference ObjectProperty objectProperty (1..1);
	}
	
	class InverseObjectPropertyReference extends ObjectPropertyReference{
	}
	
	class OwlApiInverseObjectPropertyReference extends ObjectPropertyReference{
	}
	
	class ObjectPropertySome extends FeatureRestriction {
			containment reference Primary primary (0..1);
			containment reference DataPrimary dataPrimary (0..1);
	}
	
	class ObjectPropertyOnly extends FeatureRestriction {
			containment reference Primary primary (0..1);
			containment reference DataPrimary dataPrimary (0..1);
	}
	
	class ObjectPropertyValue extends FeatureRestriction {
			reference Individual individual (0..1);
			containment reference Literal literal (0..1);
	}
	
	class ObjectPropertySelf extends ObjectPropertyRestriction {
	}
	
	class ObjectPropertyMin extends FeatureRestriction {
			containment reference Primary primary (0..1);
			containment reference DataPrimary dataPrimary (0..1);
			attribute EInt value (1..1);
	}
	
	class ObjectPropertyMax extends FeatureRestriction {
			containment reference Primary primary (0..1);
			containment reference DataPrimary dataPrimary (0..1);
			attribute EInt value (1..1);
	}
	
	class ObjectPropertyExactly extends FeatureRestriction {
			containment reference Primary primary (0..1);
			containment reference DataPrimary dataPrimary (0..1);
			attribute EInt value (1..1);
	}
	
	abstract class Literal {
	}
	
	class TypedLiteral extends Literal {
			attribute EString lexicalValue (1..1);
			reference Datatype theDatatype (1..1);
	}
	
	class AbbreviatedXSDStringLiteral extends Literal {
			attribute EString value (1..1);
	}
	
	class AbbreviatedRDFTextLiteral extends Literal {
			attribute EString value (1..1);
			attribute EString languageTag (1..1);
	}
	
	class IntegerLiteral extends Literal {
			attribute EInt value (1..1);
	}
	
	class DecimalLiteral extends Literal {
			attribute EBigDecimal value (1..1);
	}
	
	class FloatingPointLiteral extends Literal {
			attribute EFloat literal (1..1);
	}
	
}