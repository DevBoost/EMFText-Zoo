<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="usecaseinvariant"
    nsURI="http://www.emftext.org/language/UseCaseInvariant" nsPrefix="usecaseinvariant">
  <eClassifiers xsi:type="ecore:EClass" name="CounterActor" eSuperTypes="#//Actor"/>
  <eClassifiers xsi:type="ecore:EClass" name="Value" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="asBefore" eType="#//Actor"
        eOpposite="#//Actor/valuesBefore"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="asAfter" eType="#//Actor"
        eOpposite="#//Actor/valuesAfter"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SetOfValues" eSuperTypes="#//Value">
    <eStructuralFeatures xsi:type="ecore:EReference" name="including" upperBound="-1"
        eType="#//SingleValue" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="excluding" upperBound="-1"
        eType="#//SingleValue" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SingleValue" eSuperTypes="#//Value">
    <eAnnotations source="OCL">
      <details key="Value needs to go somewhere" value="if not asBefore.oclIsUndefined() and asBefore.oclIsKindOf(Actor)&#xD;then &#xD;   if asBefore.model.invariants->collect(i | i.valuesAfter)->flatten()&#xD;           ->exists(v | v.oclIsTypeOf(SingleValue) and (v.type = self.type and v.oclAsType(SingleValue).ID = self.ID))&#xD;   then ''&#xD;   else&#xD;   if asBefore.model.invariants->collect(i | i.valuesAfter)->flatten()&#xD;         ->select(v | v.oclIsTypeOf(SetOfValues))->collect(v | v.oclAsType(SetOfValues).including)->flatten()->exists(v | (v.type = self.type and v.ID = self.ID))&#xD;   then ''&#xD;   else self.type&#xD;   endif&#xD;   endif&#xD;else ''&#xD;endif"/>
      <details key="Value needs to come from somewhere" value="if not asAfter.oclIsUndefined() and asAfter.oclIsKindOf(Actor)&#xD;then &#xD;   if asAfter.model.invariants->collect(i | i.valuesBefore)->flatten()&#xD;           ->exists(v | v.oclIsTypeOf(SingleValue) and (v.type = self.type and v.oclAsType(SingleValue).ID = self.ID))&#xD;   then ''&#xD;   else &#xD;   if asAfter.model.invariants->collect(i | i.valuesAfter)->flatten()&#xD;         ->select(v | v.oclIsTypeOf(SetOfValues))->collect(v | v.oclAsType(SetOfValues).excluding)->flatten()->exists(v | (v.type = self.type and v.ID = self.ID))&#xD;   then ''&#xD;   else&#xD;   if asAfter.model.invariants->collect(i | i.valuesBefore)->flatten()&#xD;         ->select(v | v.oclIsTypeOf(SetOfValues))->collect(v | v.oclAsType(SetOfValues).including)->flatten()->exists(v | (v.type = self.type and v.ID = self.ID))&#xD;   then ''&#xD;   else self.type&#xD;   endif&#xD;   endif&#xD;   endif&#xD;else ''&#xD;endif"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ID" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="UseCaseModel">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="invariants" upperBound="-1"
        eType="#//Actor" containment="true" eOpposite="#//Actor/model"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NormalActor" eSuperTypes="#//Actor"/>
  <eClassifiers xsi:type="ecore:EClass" name="Actor" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="valuesAfter" upperBound="-1"
        eType="#//Value" containment="true" eOpposite="#//Value/asAfter"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="valuesBefore" upperBound="-1"
        eType="#//Value" containment="true" eOpposite="#//Value/asBefore"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="model" eType="#//UseCaseModel"
        eOpposite="#//UseCaseModel/invariants"/>
  </eClassifiers>
</ecore:EPackage>
