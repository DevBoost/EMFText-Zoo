BOOLEAN_LITERAL=13
ML_COMMENT=15
ADDITIVE_OPERATOR_LITERAL=5
WS=17
STRING_LITERAL=12
FLOATING_POINT_LITERAL=10
IDENTIFIER=4
SL_COMMENT=14
CHARACTER_LITERAL=11
OCTAL_LITERAL=9
LB=16
HEX_LITERAL=8
MULTIPLICATIVE_OPERATOR_LITERAL=6
DECIMAL_LITERAL=7
'~'=64
'/='=69
'switch'=56
'%='=73
'implements'=27
'>'=25
'this'=76
'volatile'=85
';'=20
'return'=58
'protected'=79
'for'=49
'.'=19
'byte'=89
'import'=21
'static'=82
'++'=62
'else'=48
'catch'=55
'final'=81
'^='=72
'extends'=26
'native'=83
'+='=66
'break'=60
'...'=39
'{'=28
'package'=18
'void'=75
'?'=43
'try'=53
'private'=80
'int'=91
'&='=70
'if'=47
'('=32
':'=46
'while'=50
','=24
'synchronized'=52
'public'=77
'default'=38
'-='=67
'short'=90
']'=42
'long'=92
'enum'=35
'transient'=84
'!'=65
'assert'=45
'finally'=54
'class'=22
'new'=40
'|='=71
'throws'=37
'null'=74
'='=34
'@'=31
'throw'=59
')'=33
'*='=68
'super'=44
'do'=51
'char'=88
'strictfp'=86
'case'=57
'float'=93
'boolean'=87
'}'=29
'abstract'=78
'double'=94
'continue'=61
'<'=23
'--'=63
'['=41
'&'=36
'interface'=30
