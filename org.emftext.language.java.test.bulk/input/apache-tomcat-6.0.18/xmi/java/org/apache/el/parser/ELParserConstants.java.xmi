<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:references="http://www.emftext.org/java/references" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../java.ecore#/4 http://www.emftext.org/java/literals ../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../java.ecore#/11 http://www.emftext.org/java/references ../../../../../java.ecore#/14 http://www.emftext.org/java/types ../../../../../java.ecore#/16" name="ELParserConstants.java">
  <comments>/*&#xA; * Licensed to the Apache Software Foundation (ASF) under one or more&#xA; * contributor license agreements.  See the NOTICE file distributed with&#xA; * this work for additional information regarding copyright ownership.&#xA; * The ASF licenses this file to You under the Apache License, Version 2.0&#xA; * (the &quot;License&quot;); you may not use this file except in compliance with&#xA; * the License.  You may obtain a copy of the License at&#xA; *&#xA; *     http://www.apache.org/licenses/LICENSE-2.0&#xA; *&#xA; * Unless required by applicable law or agreed to in writing, software&#xA; * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xA; * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; * See the License for the specific language governing permissions and&#xA; * limitations under the License.&#xA; */</comments>
  <comments>/* Generated By:JJTree&amp;JavaCC: Do not edit this line. ELParserConstants.java */</comments>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>el</namespaces>
  <namespaces>parser</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="ELParserConstants">
    <members xsi:type="members:Field" name="EOF">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="LITERAL_EXPRESSION">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="START_DYNAMIC_EXPRESSION">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="START_DEFERRED_EXPRESSION">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="INTEGER_LITERAL">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="FLOATING_POINT_LITERAL">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="EXPONENT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="STRING_LITERAL">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="12"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="BADLY_ESCAPED_STRING_LITERAL">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="13"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="TRUE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="14"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="FALSE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="15"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="NULL">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="END_EXPRESSION">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="17"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="DOT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="18"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="LPAREN">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="19"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="RPAREN">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="20"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="LBRACK">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="21"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="RBRACK">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="22"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="COLON">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="23"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="COMMA">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="GT0">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="25"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="GT1">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="26"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="LT0">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="27"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="LT1">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="28"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="GE0">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="29"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="GE1">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="30"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="LE0">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="31"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="LE1">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="32"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="EQ0">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="33"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="EQ1">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="34"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="NE0">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="35"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="NE1">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="36"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="NOT0">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="37"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="NOT1">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="38"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="AND0">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="39"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="AND1">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="40"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="OR0">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="41"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="OR1">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="42"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="EMPTY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="43"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="INSTANCEOF">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="44"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="MULT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="45"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="PLUS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="46"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="MINUS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="47"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="QUESTIONMARK">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="48"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="DIV0">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="49"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="DIV1">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="50"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="MOD0">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="51"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="MOD1">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="52"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="IDENTIFIER">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="53"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="NAMESPACE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="54"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="NAMESPACE_NAME">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="55"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="FUNCTION_CALL">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="56"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="FUNCTIONSUFFIX">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="57"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="IMPL_OBJ_START">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="58"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="LETTER">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="59"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="DIGIT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="60"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="ILLEGAL_CHARACTER">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="61"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="DEFAULT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="IN_EXPRESSION">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="tokenImage">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="references:StringReference" value="&lt;EOF>"/>
          <initialValues xsi:type="references:StringReference" value="&lt;LITERAL_EXPRESSION>"/>
          <initialValues xsi:type="references:StringReference" value="&quot;${&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;#{&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;\\&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot; &quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;\t&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;\n&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;\r&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&lt;INTEGER_LITERAL>"/>
          <initialValues xsi:type="references:StringReference" value="&lt;FLOATING_POINT_LITERAL>"/>
          <initialValues xsi:type="references:StringReference" value="&lt;EXPONENT>"/>
          <initialValues xsi:type="references:StringReference" value="&lt;STRING_LITERAL>"/>
          <initialValues xsi:type="references:StringReference" value="&lt;BADLY_ESCAPED_STRING_LITERAL>"/>
          <initialValues xsi:type="references:StringReference" value="&quot;true&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;false&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;null&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;}&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;.&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;(&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;)&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;[&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;]&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;:&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;,&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;>&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;gt&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;&lt;&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;lt&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;>=&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;ge&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;&lt;=&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;le&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;==&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;eq&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;!=&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;ne&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;!&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;not&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;&amp;&amp;&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;and&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;||&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;or&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;empty&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;instanceof&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;*&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;+&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;-&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;?&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;/&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;div&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;%&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&quot;mod&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&lt;IDENTIFIER>"/>
          <initialValues xsi:type="references:StringReference" value="&lt;NAMESPACE>"/>
          <initialValues xsi:type="references:StringReference" value="&lt;NAMESPACE_NAME>"/>
          <initialValues xsi:type="references:StringReference" value="&lt;FUNCTION_CALL>"/>
          <initialValues xsi:type="references:StringReference" value="&lt;FUNCTIONSUFFIX>"/>
          <initialValues xsi:type="references:StringReference" value="&quot;#&quot;"/>
          <initialValues xsi:type="references:StringReference" value="&lt;LETTER>"/>
          <initialValues xsi:type="references:StringReference" value="&lt;DIGIT>"/>
          <initialValues xsi:type="references:StringReference" value="&lt;ILLEGAL_CHARACTER>"/>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public"/>
  </classifiers>
</containers:CompilationUnit>
