<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../../java.ecore#/16" name="FileUploadBase.java">
  <comments>/*&#xA; * Licensed to the Apache Software Foundation (ASF) under one or more&#xA; * contributor license agreements.  See the NOTICE file distributed with&#xA; * this work for additional information regarding copyright ownership.&#xA; * The ASF licenses this file to You under the Apache License, Version 2.0&#xA; * (the &quot;License&quot;); you may not use this file except in compliance with&#xA; * the License.  You may obtain a copy of the License at&#xA; * &#xA; *      http://www.apache.org/licenses/LICENSE-2.0&#xA; * &#xA; * Unless required by applicable law or agreed to in writing, software&#xA; * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xA; * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; * See the License for the specific language governing permissions and&#xA; * limitations under the License.&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>tomcat</namespaces>
  <namespaces>util</namespaces>
  <namespaces>http</namespaces>
  <namespaces>fileupload</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../io/InputStream.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../io/OutputStream.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../util/ArrayList.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../util/HashMap.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../util/List.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../util/Map.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>servlet</namespaces>
    <namespaces>http</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../javax/servlet/http/HttpServletRequest.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="FileUploadBase">
    <members xsi:type="members:ClassMethod" name="isMultipartContent">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="req">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../javax/servlet/http/HttpServletRequest.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// ---------------------------------------------------------- Class methods</comments>
        <comments>/**&#xA;     * Utility method that determines whether the request contains multipart&#xA;     * content.&#xA;     *&#xA;     * @param req The servlet request to be evaluated. Must be non-null.&#xA;     *&#xA;     * @return &lt;code>true&lt;/code> if the request is multipart;&#xA;     *         &lt;code>false&lt;/code> otherwise.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="contentType">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../../../../javax/servlet/http/HttpServletRequest.class.xmi#//@classifiers.0/@members.7"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.42"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:Field" name="CONTENT_TYPE">
      <initialValue xsi:type="references:StringReference" value="Content-type"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// ----------------------------------------------------- Manifest constants</comments>
        <comments>/**&#xA;     * HTTP content type header name.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="CONTENT_DISPOSITION">
      <initialValue xsi:type="references:StringReference" value="Content-disposition"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * HTTP content disposition header name.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FORM_DATA">
      <initialValue xsi:type="references:StringReference" value="form-data"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Content-disposition value for form data.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ATTACHMENT">
      <initialValue xsi:type="references:StringReference" value="attachment"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Content-disposition value for file attachment.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MULTIPART">
      <initialValue xsi:type="references:StringReference" value="multipart/"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Part of HTTP content type header.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MULTIPART_FORM_DATA">
      <initialValue xsi:type="references:StringReference" value="multipart/form-data"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * HTTP content type header for multipart forms.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MULTIPART_MIXED">
      <initialValue xsi:type="references:StringReference" value="multipart/mixed"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * HTTP content type header for multiple uploads.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MAX_HEADER_SIZE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1024"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The maximum length of a single header line that will be parsed&#xA;     * (1024 bytes).&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="sizeMax">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      </initialValue>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// ----------------------------------------------------------- Data members</comments>
        <comments>/**&#xA;     * The maximum size permitted for an uploaded file. A value of -1 indicates&#xA;     * no maximum.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="headerEncoding">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * The content encoding to use when reading part headers.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getFileItemFactory">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileItemFactory.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// ----------------------------------------------------- Property accessors</comments>
        <comments>/**&#xA;     * Returns the factory class used when creating file items.&#xA;     *&#xA;     * @return The factory class for new file items.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setFileItemFactory">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="factory">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileItemFactory.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the factory class to use when creating file items.&#xA;     *&#xA;     * @param factory The factory class for new file items.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:ClassMethod" name="getSizeMax">
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the maximum allowed upload size.&#xA;     *&#xA;     * @return The maximum allowed size, in bytes.&#xA;     *&#xA;     * @see #setSizeMax(long)&#xA;     *&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setSizeMax">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="sizeMax">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the maximum allowed upload size. If negative, there is no maximum.&#xA;     *&#xA;     * @param sizeMax The maximum allowed size, in bytes, or -1 for no maximum.&#xA;     *&#xA;     * @see #getSizeMax()&#xA;     *&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getHeaderEncoding">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Retrieves the character encoding used when reading the headers of an&#xA;     * individual part. When not specified, or &lt;code>null&lt;/code>, the platform&#xA;     * default encoding is used.&#xA;     *&#xA;     * @return The encoding used to read part headers.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setHeaderEncoding">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="encoding">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Specifies the character encoding to be used when reading the headers of&#xA;     * individual parts. When not specified, or &lt;code>null&lt;/code>, the platform&#xA;     * default encoding is used.&#xA;     *&#xA;     * @param encoding The encoding used to read part headers.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="parseRequest">
      <comments>/* FileItem */</comments>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../util/List.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="req">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../javax/servlet/http/HttpServletRequest.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileUploadException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// --------------------------------------------------------- Public methods</comments>
        <comments>/**&#xA;     * Processes an &lt;a href=&quot;http://www.ietf.org/rfc/rfc1867.txt&quot;>RFC 1867&lt;/a>&#xA;     * compliant &lt;code>multipart/form-data&lt;/code> stream. If files are stored&#xA;     * on disk, the path is given by &lt;code>getRepository()&lt;/code>.&#xA;     *&#xA;     * @param req The servlet request to be parsed.&#xA;     *&#xA;     * @return A list of &lt;code>FileItem&lt;/code> instances parsed from the&#xA;     *         request, in the order that they were transmitted.&#xA;     *&#xA;     * @exception FileUploadException if there are problems reading/parsing&#xA;     *                                the request or storing files.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../lang/NullPointerException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="req parameter"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="literals:NullLiteral"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="items">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../util/ArrayList.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../util/ArrayList.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="contentType">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../../../../javax/servlet/http/HttpServletRequest.class.xmi#//@classifiers.0/@members.7"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.23"/>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="the request doesn't contain a "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                <children xsi:type="references:StringReference" value=" or "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                <children xsi:type="references:StringReference" value=" stream, content type header is "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="literals:NullLiteral"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@variable"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.42"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                </next>
              </child>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="requestSize">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../../../../javax/servlet/ServletRequest.class.xmi#//@classifiers.0/@members.4"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.24"/>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="the request was rejected because it's size is unknown"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.4/@variable"/>
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Subtraction"/>
            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.25"/>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="the request was rejected because "/>
                <children xsi:type="references:StringReference" value="it's size exceeds allowed range"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.4/@variable"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
            <relationOperators xsi:type="operators:GreaterThan"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="boundaryIndex">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.49"/>
                <arguments xsi:type="references:StringReference" value="boundary="/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Throw">
              <throwable xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileUploadException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="the request was rejected because "/>
                  <children xsi:type="references:StringReference" value="no multipart boundary was found"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </throwable>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.0/@variable"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="boundary">
            <typeReference xsi:type="types:Byte"/>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@variable">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.32"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.55"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.0/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="input">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../io/InputStream.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../../../javax/servlet/ServletRequest.class.xmi#//@classifiers.0/@members.6"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="multi">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.3/@variable"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.2/@variable"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.19"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="nextPart">
            <typeReference xsi:type="types:Boolean"/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.26"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:WhileLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="headers">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../util/Map.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.21">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.23"/>
                    </next>
                  </arguments>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="fieldName">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.19">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.0/@variable"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="subContentType">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.22">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.0/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="subBoundary">
                        <typeReference xsi:type="types:Byte">
                          <comments>// Multiple files.</comments>
                        </typeReference>
                        <arrayDimensionsBefore/>
                        <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.32"/>
                            </next>
                            <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.55"/>
                            <arguments xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.49"/>
                                  <arguments xsi:type="references:StringReference" value="boundary="/>
                                </next>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                            </arguments>
                          </next>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.22"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="nextSubPart">
                        <typeReference xsi:type="types:Boolean"/>
                        <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.26"/>
                          </next>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:WhileLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.21">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.23"/>
                                </next>
                              </arguments>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:LocalVariableStatement">
                              <variable name="item">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Interface" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileItem.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.20">
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.0/@variable"/>
                                  <arguments xsi:type="literals:BooleanLiteral"/>
                                </initialValue>
                              </variable>
                            </statements>
                            <statements xsi:type="statements:LocalVariableStatement">
                              <variable name="os">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../../../../io/OutputStream.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@statement/@statements.3/@statement/@statements.1/@statement/@statements.0/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileItem.class.xmi#//@classifiers.0/@members.14"/>
                                  </next>
                                </initialValue>
                              </variable>
                            </statements>
                            <statements xsi:type="statements:TryBlock">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.24"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@statement/@statements.3/@statement/@statements.1/@statement/@statements.1/@variable"/>
                                  </next>
                                </expression>
                              </statements>
                              <finallyBlock>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@statement/@statements.3/@statement/@statements.1/@statement/@statements.1/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../io/OutputStream.class.xmi#//@classifiers.0/@members.5"/>
                                    </next>
                                  </expression>
                                </statements>
                              </finallyBlock>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../util/ArrayList.class.xmi#//@classifiers.0/@members.18"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@statement/@statements.3/@statement/@statements.1/@statement/@statements.0/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.18">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.0/@variable"/>
                            </children>
                            <children xsi:type="literals:NullLiteral"/>
                          </condition>
                          <elseStatement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
                                <comments>// Ignore anything but files inside</comments>
                                <comments>// multipart/mixed.</comments>
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.25"/>
                                </next>
                              </expression>
                            </statements>
                          </elseStatement>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@statement/@statements.2/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.21"/>
                              </next>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@statement/@statements.2/@variable"/>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.22"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.2/@variable"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.0/@variable"/>
                      <children xsi:type="literals:NullLiteral"/>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.42"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                      </next>
                    </children>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="item">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <comments>// A single file.</comments>
                                <target xsi:type="classifiers:Interface" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileItem.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.20">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.0/@variable"/>
                              <arguments xsi:type="literals:BooleanLiteral"/>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="os">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../io/OutputStream.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@elseStatement/@statements.0/@statement/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileItem.class.xmi#//@classifiers.0/@members.14"/>
                              </next>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:TryBlock">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.24"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@elseStatement/@statements.0/@statement/@statements.1/@variable"/>
                              </next>
                            </expression>
                          </statements>
                          <finallyBlock>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@elseStatement/@statements.0/@statement/@statements.1/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../io/OutputStream.class.xmi#//@classifiers.0/@members.5"/>
                                </next>
                              </expression>
                            </statements>
                          </finallyBlock>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../util/ArrayList.class.xmi#//@classifiers.0/@members.18"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@elseStatement/@statements.0/@statement/@statements.0/@variable"/>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:NotEqual"/>
                        <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.18">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.0/@variable"/>
                        </children>
                        <children xsi:type="literals:NullLiteral"/>
                      </condition>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="item">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <comments>// A form field.</comments>
                                <target xsi:type="classifiers:Interface" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileItem.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.20">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.0/@variable"/>
                              <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="os">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../io/OutputStream.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@elseStatement/@statements.0/@elseStatement/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileItem.class.xmi#//@classifiers.0/@members.14"/>
                              </next>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:TryBlock">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.24"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@elseStatement/@statements.0/@elseStatement/@statements.1/@variable"/>
                              </next>
                            </expression>
                          </statements>
                          <finallyBlock>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@elseStatement/@statements.0/@elseStatement/@statements.1/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../io/OutputStream.class.xmi#//@classifiers.0/@members.5"/>
                                </next>
                              </expression>
                            </statements>
                          </finallyBlock>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../util/ArrayList.class.xmi#//@classifiers.0/@members.18"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.2/@statement/@statements.1/@elseStatement/@statements.0/@elseStatement/@statements.0/@variable"/>
                            </next>
                          </expression>
                        </statements>
                      </elseStatement>
                    </statements>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.7/@statement/@statements.1/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
                    <comments>// Skip this part.</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.25"/>
                    </next>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.6/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.4/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/MultipartStream.class.xmi#//@classifiers.0/@members.21"/>
                  </next>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statements.6/@variable"/>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileUploadException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="Processing of "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                <children xsi:type="references:StringReference" value=" request failed. "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@catcheBlocks.0/@parameter">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../lang/Throwable.class.xmi#//@classifiers.0/@members.9"/>
                  </next>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../io/IOException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getFileName">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="headers">
        <comments>/* String, String */</comments>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// ------------------------------------------------------ Protected methods</comments>
        <comments>/**&#xA;     * Retrieves the file name from the &lt;code>Content-disposition&lt;/code>&#xA;     * header.&#xA;     *&#xA;     * @param headers A &lt;code>Map&lt;/code> containing the HTTP request headers.&#xA;     *&#xA;     * @return The file name for the current &lt;code>encapsulation&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="fileName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="cd">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.22">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="start">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.49"/>
                  <arguments xsi:type="references:StringReference" value="filename=&quot;"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="end">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.46"/>
                  <arguments xsi:type="literals:CharacterLiteral" value="34"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.2/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.71"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.56"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.2/@statement/@statements.0/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.2/@statement/@statements.1/@variable"/>
                    </next>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.2/@statement/@statements.0/@variable"/>
                <children xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Subtraction"/>
                  <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                </children>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.2/@statement/@statements.1/@variable"/>
                <children xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Subtraction"/>
                  <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                </children>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.42"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
            </next>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.42"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
            </next>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getFieldName">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="headers">
        <comments>/* String, String */</comments>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Retrieves the field name from the &lt;code>Content-disposition&lt;/code>&#xA;     * header.&#xA;     *&#xA;     * @param headers A &lt;code>Map&lt;/code> containing the HTTP request headers.&#xA;     *&#xA;     * @return The field name for the current &lt;code>encapsulation&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="fieldName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="cd">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.22">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="start">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.49"/>
                  <arguments xsi:type="references:StringReference" value="name=&quot;"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="end">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.46"/>
                  <arguments xsi:type="literals:CharacterLiteral" value="34"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.2/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.56"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.2/@statement/@statements.0/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.2/@statement/@statements.1/@variable"/>
                    </next>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.2/@statement/@statements.0/@variable"/>
                <children xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Subtraction"/>
                  <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                </children>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.2/@statement/@statements.1/@variable"/>
                <children xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Subtraction"/>
                  <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                </children>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.1/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.42"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
            </next>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createItem">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileItem.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="headers">
        <comments>/* String, String */</comments>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="isFormField">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileUploadException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Creates a new {@link FileItem} instance.&#xA;     *&#xA;     * @param headers       A &lt;code>Map&lt;/code> containing the HTTP request&#xA;     *                      headers.&#xA;     * @param isFormField   Whether or not this item is a form field, as&#xA;     *                      opposed to a file.&#xA;     *&#xA;     * @return A newly created &lt;code>FileItem&lt;/code> instance.&#xA;     *&#xA;     * @exception FileUploadException if an error occurs.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.11">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileItemFactory.class.xmi#//@classifiers.0/@members.0"/>
            <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.19">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.0"/>
            </arguments>
            <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.22">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.1"/>
            <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.18">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.0"/>
            </arguments>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="parseHeaders">
      <comments>/* String, String */</comments>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../util/Map.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="headerPart">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * &lt;p> Parses the &lt;code>header-part&lt;/code> and returns as key/value&#xA;     * pairs.&#xA;     *&#xA;     * &lt;p> If there are multiple headers of the same names, the name&#xA;     * will map to a comma-separated list containing the values.&#xA;     *&#xA;     * @param headerPart The &lt;code>header-part&lt;/code> of the current&#xA;     *                   &lt;code>encapsulation&lt;/code>.&#xA;     *&#xA;     * @return A &lt;code>Map&lt;/code> containing the parsed HTTP request headers.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="headers">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../util/Map.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../util/HashMap.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="buffer">
          <typeReference xsi:type="types:Char"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Char"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="done">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="literals:BooleanLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="j">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="i">
          <typeReference xsi:type="types:Int"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="header">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <additionalLocalVariables name="headerName"/>
          <additionalLocalVariables name="headerValue"/>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:WhileLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.4/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </expression>
            </statements>
            <statements xsi:type="statements:WhileLoop">
              <comments>// Copy a single line of characters into the buffer,</comments>
              <comments>// omitting trailing CRLF.</comments>
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.1/@variable">
                      <arraySelectors>
                        <position xsi:type="expressions:SuffixUnaryModificationExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.4/@variable"/>
                          <operator xsi:type="operators:PlusPlus"/>
                        </position>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.23"/>
                        <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.3/@variable"/>
                          <operator xsi:type="operators:PlusPlus"/>
                        </arguments>
                      </next>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalOrExpression">
                <children xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.4/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                  <relationOperators xsi:type="operators:LessThan"/>
                </children>
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.4/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <additiveOperators xsi:type="operators:Subtraction"/>
                      </position>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:CharacterLiteral" value="13"/>
                </children>
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.4/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <additiveOperators xsi:type="operators:Subtraction"/>
                      </position>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:CharacterLiteral" value="10"/>
                </children>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.1/@variable"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.4/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                  </arguments>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.2/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:BooleanLiteral" value="true"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:StringReference" value=""/>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Continue">
                      <comments>// This header line is malformed, skip it.</comments>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.45"/>
                        <arguments xsi:type="literals:CharacterLiteral" value="58"/>
                      </next>
                    </children>
                    <children xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Subtraction"/>
                      <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    </children>
                  </condition>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable/@additionalLocalVariables.0"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.68"/>
                          </next>
                          <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.71"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.56"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.45"/>
                            <arguments xsi:type="literals:CharacterLiteral" value="58"/>
                          </next>
                        </arguments>
                      </next>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable/@additionalLocalVariables.1"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.71"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.55"/>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.45"/>
                              <arguments xsi:type="literals:CharacterLiteral" value="58"/>
                            </next>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                      </next>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@variable">
                        <comments>// More that one heder of that name exists,</comments>
                        <comments>// append to the list.</comments>
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../util/Map.class.xmi#//@classifiers.0/@members.5"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable/@additionalLocalVariables.0"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.22">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@variable"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable/@additionalLocalVariables.0"/>
                            </children>
                            <children xsi:type="literals:CharacterLiteral" value="44"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable/@additionalLocalVariables.1"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.22">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable/@additionalLocalVariables.0"/>
                    </children>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../util/Map.class.xmi#//@classifiers.0/@members.5"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable/@additionalLocalVariables.0"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.5/@variable/@additionalLocalVariables.1"/>
                        </next>
                      </expression>
                    </statements>
                  </elseStatement>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.2/@variable"/>
          </condition>
        </statements>
        <catcheBlocks>
          <comments>// Headers were malformed. continue with all that was</comments>
          <comments>// parsed.</comments>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../lang/IndexOutOfBoundsException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getHeader">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="headers">
        <comments>/* String, String */</comments>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Returns the header with the specified name from the supplied map. The&#xA;     * header lookup is case-insensitive.&#xA;     *&#xA;     * @param headers A &lt;code>Map&lt;/code> containing the HTTP request headers.&#xA;     * @param name    The name of the header to return.&#xA;     *&#xA;     * @return The value of specified header, or a comma-separated list if&#xA;     *         there were multiple headers of that name.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../../../util/Map.class.xmi#//@classifiers.0/@members.4"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../lang/String.class.xmi#//@classifiers.0/@members.68"/>
                </next>
              </arguments>
            </next>
          </child>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="classifiers:Class" name="InvalidContentTypeException">
      <members xsi:type="members:Constructor" name="InvalidContentTypeException">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="instantiations:ExplicitConstructorCall">
            <callTarget xsi:type="literals:Super"/>
          </expression>
        </statements>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Constructs a &lt;code>InvalidContentTypeException&lt;/code> with no&#xA;         * detail message.&#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Constructor" name="InvalidContentTypeException">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="instantiations:ExplicitConstructorCall">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@members.1/@parameters.0"/>
            <callTarget xsi:type="literals:Super"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="message">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Constructs an &lt;code>InvalidContentTypeException&lt;/code> with&#xA;         * the specified detail message.&#xA;         *&#xA;         * @param message The detail message.&#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Thrown to indicate that the request is not a multipart request.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <extends xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileUploadException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </extends>
    </members>
    <members xsi:type="classifiers:Class" name="UnknownSizeException">
      <members xsi:type="members:Constructor" name="UnknownSizeException">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="instantiations:ExplicitConstructorCall">
            <callTarget xsi:type="literals:Super"/>
          </expression>
        </statements>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Constructs a &lt;code>UnknownSizeException&lt;/code> with no&#xA;         * detail message.&#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Constructor" name="UnknownSizeException">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="instantiations:ExplicitConstructorCall">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@members.1/@parameters.0"/>
            <callTarget xsi:type="literals:Super"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="message">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Constructs an &lt;code>UnknownSizeException&lt;/code> with&#xA;         * the specified detail message.&#xA;         *&#xA;         * @param message The detail message.&#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Thrown to indicate that the request size is not specified.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <extends xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileUploadException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </extends>
    </members>
    <members xsi:type="classifiers:Class" name="SizeLimitExceededException">
      <members xsi:type="members:Constructor" name="SizeLimitExceededException">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="instantiations:ExplicitConstructorCall">
            <callTarget xsi:type="literals:Super"/>
          </expression>
        </statements>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Constructs a &lt;code>SizeExceededException&lt;/code> with no&#xA;         * detail message.&#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Constructor" name="SizeLimitExceededException">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="instantiations:ExplicitConstructorCall">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@members.1/@parameters.0"/>
            <callTarget xsi:type="literals:Super"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="message">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Constructs an &lt;code>SizeExceededException&lt;/code> with&#xA;         * the specified detail message.&#xA;         *&#xA;         * @param message The detail message.&#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Thrown to indicate that the request size exceeds the configured maximum.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <extends xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/apache/tomcat/util/http/fileupload/FileUploadException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </extends>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;p>High level API for processing file uploads.&lt;/p>&#xA; *&#xA; * &lt;p>This class handles multiple files per single HTML widget, sent using&#xA; * &lt;code>multipart/mixed&lt;/code> encoding type, as specified by&#xA; * &lt;a href=&quot;http://www.ietf.org/rfc/rfc1867.txt&quot;>RFC 1867&lt;/a>.  Use {@link&#xA; * #parseRequest(HttpServletRequest)} to acquire a list of {@link&#xA; * org.apache.tomcat.util.http.fileupload.FileItem}s associated with a given HTML&#xA; * widget.&lt;/p>&#xA; *&#xA; * &lt;p>How the data for individual parts is stored is determined by the factory&#xA; * used to create them; a given part may be in memory, on disk, or somewhere&#xA; * else.&lt;/p>&#xA; *&#xA; * @author &lt;a href=&quot;mailto:Rafal.Krzewski@e-point.pl&quot;>Rafal Krzewski&lt;/a>&#xA; * @author &lt;a href=&quot;mailto:dlr@collab.net&quot;>Daniel Rall&lt;/a>&#xA; * @author &lt;a href=&quot;mailto:jvanzyl@apache.org&quot;>Jason van Zyl&lt;/a>&#xA; * @author &lt;a href=&quot;mailto:jmcnally@collab.net&quot;>John McNally&lt;/a>&#xA; * @author &lt;a href=&quot;mailto:martinc@apache.org&quot;>Martin Cooper&lt;/a>&#xA; * @author Sean C. Sullivan&#xA; *&#xA; * @version $Id: FileUploadBase.java 467222 2006-10-24 03:17:11Z markt $&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
  </classifiers>
</containers:CompilationUnit>
