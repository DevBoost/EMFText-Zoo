<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../../../java.ecore#/17" name="Base64.java">
  <comments>/*&#xA; *  Licensed to the Apache Software Foundation (ASF) under one or more&#xA; *  contributor license agreements.  See the NOTICE file distributed with&#xA; *  this work for additional information regarding copyright ownership.&#xA; *  The ASF licenses this file to You under the Apache License, Version 2.0&#xA; *  (the &quot;License&quot;); you may not use this file except in compliance with&#xA; *  the License.  You may obtain a copy of the License at&#xA; *&#xA; *      http://www.apache.org/licenses/LICENSE-2.0&#xA; *&#xA; *  Unless required by applicable law or agreed to in writing, software&#xA; *  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xA; *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; *  See the License for the specific language governing permissions and&#xA; *  limitations under the License.&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>tomcat</namespaces>
  <namespaces>util</namespaces>
  <namespaces>buf</namespaces>
  <classifiers xsi:type="classifiers:Class" name="Base64">
    <members xsi:type="members:Field" name="log">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../org/apache/juli/logging/LogFactory.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0">
                    <next xsi:type="references:ReflectiveClassReference"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../../org/apache/juli/logging/LogFactory.class.xmi#//@classifiers.0"/>
              </next>
            </next>
          </next>
        </next>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>org</namespaces>
        <namespaces>apache</namespaces>
        <namespaces>juli</namespaces>
        <namespaces>logging</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="BASELENGTH">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="255"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="LOOKUPLENGTH">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="63"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="TWENTYFOURBITGROUP">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="EIGHTBIT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SIXTEENBIT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SIXBIT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FOURBYTE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="PAD">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:CharacterLiteral" value="61"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="base64Alphabet">
      <initialValue xsi:type="arrays:ArrayInstantiationBySize">
        <typeReference xsi:type="types:Byte"/>
        <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="lookUpBase64Alphabet">
      <initialValue xsi:type="arrays:ArrayInstantiationBySize">
        <typeReference xsi:type="types:Byte"/>
        <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="statements:Block">
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.0/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Subtraction"/>
                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.0/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.0/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Byte"/>
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@init"/>
                    <children xsi:type="literals:CharacterLiteral" value="65"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                  </expression>
                </child>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@init"/>
          <children xsi:type="literals:CharacterLiteral" value="65"/>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:CharacterLiteral" value="90"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@init"/>
          <operator xsi:type="operators:MinusMinus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.2/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Byte"/>
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.2/@init"/>
                    <children xsi:type="literals:CharacterLiteral" value="97"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="26"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </expression>
                </child>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.2/@init"/>
          <children xsi:type="literals:CharacterLiteral" value="97"/>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:CharacterLiteral" value="122"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.2/@init"/>
          <operator xsi:type="operators:MinusMinus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Byte"/>
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@init"/>
                    <children xsi:type="literals:CharacterLiteral" value="48"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="52"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </expression>
                </child>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@init"/>
          <children xsi:type="literals:CharacterLiteral" value="48"/>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:CharacterLiteral" value="57"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@init"/>
          <operator xsi:type="operators:MinusMinus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <arraySelectors>
              <position xsi:type="literals:CharacterLiteral" value="43"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="62"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <arraySelectors>
              <position xsi:type="literals:CharacterLiteral" value="47"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="63"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.6/@init"/>
              </arraySelectors>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Byte"/>
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="literals:CharacterLiteral" value="65"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.6/@init"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </expression>
              </child>
            </value>
          </expression>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.6/@init"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="25"/>
          <relationOperators xsi:type="operators:LessThanOrEqual"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.6/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.7/@init"/>
              </arraySelectors>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Byte"/>
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="literals:CharacterLiteral" value="97"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.7/@init/@additionalLocalVariables.0"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </expression>
              </child>
            </value>
          </expression>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.7/@init"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="51"/>
          <relationOperators xsi:type="operators:LessThanOrEqual"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="26"/>
          <additionalLocalVariables name="j">
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </additionalLocalVariables>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.7/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.7/@init/@additionalLocalVariables.0"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.8/@init"/>
              </arraySelectors>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Byte"/>
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="literals:CharacterLiteral" value="48"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.8/@init/@additionalLocalVariables.0"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </expression>
              </child>
            </value>
          </expression>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.8/@init"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="61"/>
          <relationOperators xsi:type="operators:LessThanOrEqual"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="52"/>
          <additionalLocalVariables name="j">
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </additionalLocalVariables>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.8/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.8/@init/@additionalLocalVariables.0"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <modifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:ClassMethod" name="isBase64">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="octect">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Return">
        <comments>//shall we ignore white space? JEFF??</comments>
        <returnValue xsi:type="expressions:NestedExpression">
          <expression xsi:type="expressions:ConditionalOrExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            </children>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
                </arraySelectors>
              </children>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Subtraction"/>
                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </children>
            </children>
          </expression>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isArrayByteBase64">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="arrayOctect">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="length">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
            <next xsi:type="references:IdentifierReference"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="literals:BooleanLiteral"/>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.0/@variable"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Return">
              <returnValue xsi:type="literals:BooleanLiteral"/>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.2/@init"/>
                    </arraySelectors>
                  </arguments>
                </next>
              </children>
              <children xsi:type="literals:BooleanLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.0/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="encode">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="binaryData">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Encodes hex octects into Base64&#xA;     *&#xA;     * @param binaryData Array containing binaryData&#xA;     * @return Encoded Base64 array&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lengthDataBits">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0">
              <next xsi:type="references:IdentifierReference"/>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
            <multiplicativeOperators xsi:type="operators:Multiplication"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="fewerThan24bits">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.0/@variable"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
            <multiplicativeOperators xsi:type="operators:Remainder"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="numberTriplets">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.0/@variable"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
            <multiplicativeOperators xsi:type="operators:Division"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="encodedData">
          <typeReference xsi:type="types:Byte"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
              <comments>//data not divisible by 24 bit</comments>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="arrays:ArrayInstantiationBySize">
              <typeReference xsi:type="types:Byte"/>
              <sizes xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.2/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </sizes>
            </value>
          </expression>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@variable"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
        <elseStatement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
              <comments>// 16 or 8 bit</comments>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="arrays:ArrayInstantiationBySize">
              <typeReference xsi:type="types:Byte"/>
              <sizes xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.2/@variable"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </sizes>
            </value>
          </expression>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="k">
          <typeReference xsi:type="types:Byte"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          <additionalLocalVariables name="l">
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </additionalLocalVariables>
          <additionalLocalVariables name="b1">
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </additionalLocalVariables>
          <additionalLocalVariables name="b2">
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </additionalLocalVariables>
          <additionalLocalVariables name="b3">
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </additionalLocalVariables>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="encodedIndex">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="dataIndex">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.7/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.8/@variable"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.7/@variable"/>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.2"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0">
                <arraySelectors>
                  <position xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.7/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </position>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.3"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0">
                <arraySelectors>
                  <position xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.7/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </position>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Byte"/>
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.2"/>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="15"/>
                  </expression>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Byte"/>
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.1"/>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="3"/>
                  </expression>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.8/@variable"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
                <arraySelectors>
                  <position xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.1"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    <shiftOperators xsi:type="operators:RightShift"/>
                  </position>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
                <arraySelectors>
                  <position xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </position>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
                <arraySelectors>
                  <position xsi:type="expressions:InclusiveOrExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ShiftExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.2"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                        <shiftOperators xsi:type="operators:RightShift"/>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ShiftExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                        <shiftOperators xsi:type="operators:LeftShift"/>
                      </expression>
                    </children>
                  </position>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
                <arraySelectors>
                  <position xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </position>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
                <arraySelectors>
                  <position xsi:type="expressions:InclusiveOrExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ShiftExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.0"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <shiftOperators xsi:type="operators:LeftShift"/>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ShiftExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.3"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
                        <shiftOperators xsi:type="operators:RightShift"/>
                      </expression>
                    </children>
                  </position>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
                <arraySelectors>
                  <position xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </position>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
                <arraySelectors>
                  <position xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.3"/>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="63"/>
                  </position>
                </arraySelectors>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.8/@variable"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.2/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="expressions:ExpressionList">
          <expressions xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.8/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </expressions>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.8/@variable"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.7/@variable">
            <comments>// form integral number of 6-bit groups</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.8/@variable"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
            <multiplicativeOperators xsi:type="operators:Multiplication"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.8/@variable"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
            <multiplicativeOperators xsi:type="operators:Multiplication"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.7/@variable"/>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Byte"/>
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.1"/>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="3"/>
                  </expression>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
                <arraySelectors>
                  <position xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.1"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    <shiftOperators xsi:type="operators:RightShift"/>
                  </position>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
                <arraySelectors>
                  <position xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </position>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
                <arraySelectors>
                  <position xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                    <shiftOperators xsi:type="operators:LeftShift"/>
                  </position>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
                <arraySelectors>
                  <position xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </position>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
                <arraySelectors>
                  <position xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </position>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@variable"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.1"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.7/@variable"/>
                  </arraySelectors>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.2"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0">
                  <arraySelectors>
                    <position xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.7/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </position>
                  </arraySelectors>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.0"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Byte"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.2"/>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="15"/>
                    </expression>
                  </child>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Byte"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.1"/>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="3"/>
                    </expression>
                  </child>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
                  </arraySelectors>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
                  <arraySelectors>
                    <position xsi:type="expressions:ShiftExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.1"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                      <shiftOperators xsi:type="operators:RightShift"/>
                    </position>
                  </arraySelectors>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
                  <arraySelectors>
                    <position xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </position>
                  </arraySelectors>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
                  <arraySelectors>
                    <position xsi:type="expressions:InclusiveOrExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.2"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                          <shiftOperators xsi:type="operators:RightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                          <shiftOperators xsi:type="operators:LeftShift"/>
                        </expression>
                      </children>
                    </position>
                  </arraySelectors>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
                  <arraySelectors>
                    <position xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </position>
                  </arraySelectors>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
                  <arraySelectors>
                    <position xsi:type="expressions:ShiftExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.5/@variable/@additionalLocalVariables.0"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                      <shiftOperators xsi:type="operators:LeftShift"/>
                    </position>
                  </arraySelectors>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable">
                  <arraySelectors>
                    <position xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.6/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </position>
                  </arraySelectors>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@variable"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          </condition>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="decode">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="base64Data">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Decodes Base64 data into octects&#xA;     *&#xA;     * @param base64Data Byte array containing Base64 data&#xA;     * @return Array containind decoded data.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="numberQuadruple">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.0">
              <next xsi:type="references:IdentifierReference"/>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
            <multiplicativeOperators xsi:type="operators:Division"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="decodedData">
          <typeReference xsi:type="types:Byte"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="b1">
          <typeReference xsi:type="types:Byte"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          <additionalLocalVariables name="b2">
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </additionalLocalVariables>
          <additionalLocalVariables name="b3">
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </additionalLocalVariables>
          <additionalLocalVariables name="b4">
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </additionalLocalVariables>
          <additionalLocalVariables name="marker0">
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </additionalLocalVariables>
          <additionalLocalVariables name="marker1">
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </additionalLocalVariables>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="encodedIndex">
          <typeReference xsi:type="types:Int">
            <comments>// Throw away anything not in base64Data</comments>
            <comments>// Adjust size</comments>
          </typeReference>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="dataIndex">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Byte"/>
            <sizes xsi:type="expressions:AdditiveExpression">
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.0/@variable"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </sizes>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.6/@init"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.3"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.0">
                <arraySelectors>
                  <position xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.4/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </position>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.4"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.0">
                <arraySelectors>
                  <position xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.4/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </position>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.0">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.4/@variable"/>
                    </arraySelectors>
                  </position>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.0">
                    <arraySelectors>
                      <position xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.4/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </position>
                    </arraySelectors>
                  </position>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.1">
                    <comments>//No PAD e.g 3cQl</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.3"/>
                    </arraySelectors>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.2"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.4"/>
                    </arraySelectors>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Byte"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:InclusiveOrExpression">
                        <children xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                          <shiftOperators xsi:type="operators:LeftShift"/>
                        </children>
                        <children xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.0"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                          <shiftOperators xsi:type="operators:RightShift"/>
                        </children>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </position>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Byte"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:InclusiveOrExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:ShiftExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:AndExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.0"/>
                                <children xsi:type="literals:HexIntegerLiteral" hexValue="15"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                            <shiftOperators xsi:type="operators:LeftShift"/>
                          </expression>
                        </children>
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AndExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:ShiftExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.1"/>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                                <shiftOperators xsi:type="operators:RightShift"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="15"/>
                          </expression>
                        </children>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </position>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Byte"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:InclusiveOrExpression">
                        <children xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.1"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
                          <shiftOperators xsi:type="operators:LeftShift"/>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.2"/>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.3"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.4"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable">
                      <comments>//Two PAD e.g. 3c[Pad][Pad]</comments>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Byte"/>
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:InclusiveOrExpression">
                          <children xsi:type="expressions:ShiftExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable"/>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                            <shiftOperators xsi:type="operators:LeftShift"/>
                          </children>
                          <children xsi:type="expressions:ShiftExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.0"/>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                            <shiftOperators xsi:type="operators:RightShift"/>
                          </children>
                        </expression>
                      </child>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable">
                      <arraySelectors>
                        <position xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </position>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Byte"/>
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.0"/>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="15"/>
                            </expression>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                          <shiftOperators xsi:type="operators:LeftShift"/>
                        </expression>
                      </child>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable">
                      <arraySelectors>
                        <position xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </position>
                      </arraySelectors>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Byte"/>
                      <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.3"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.1">
                        <comments>//One PAD e.g. 3cQ[Pad]</comments>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.3"/>
                        </arraySelectors>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Byte"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:InclusiveOrExpression">
                            <children xsi:type="expressions:ShiftExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable"/>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                              <shiftOperators xsi:type="operators:LeftShift"/>
                            </children>
                            <children xsi:type="expressions:ShiftExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.0"/>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                              <shiftOperators xsi:type="operators:RightShift"/>
                            </children>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable">
                        <arraySelectors>
                          <position xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </position>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Byte"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:InclusiveOrExpression">
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:ShiftExpression">
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:AndExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.0"/>
                                    <children xsi:type="literals:HexIntegerLiteral" hexValue="15"/>
                                  </expression>
                                </children>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                                <shiftOperators xsi:type="operators:LeftShift"/>
                              </expression>
                            </children>
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:AndExpression">
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:ShiftExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.1"/>
                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                                    <shiftOperators xsi:type="operators:RightShift"/>
                                  </expression>
                                </children>
                                <children xsi:type="literals:HexIntegerLiteral" hexValue="15"/>
                              </expression>
                            </children>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable">
                        <arraySelectors>
                          <position xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </position>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Byte"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:ShiftExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.1"/>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
                            <shiftOperators xsi:type="operators:LeftShift"/>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.2/@variable/@additionalLocalVariables.4"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                </condition>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.6/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.0/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.6/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:Field" name="base64">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="62"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="63"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="52"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="53"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="54"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="55"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="56"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="57"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="58"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="59"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="60"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="61"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="12"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="13"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="14"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="15"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="17"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="18"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="19"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="20"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="21"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="22"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="23"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="25"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="26"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="27"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="28"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="29"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="30"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="31"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="32"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="33"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="34"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="35"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="36"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="37"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="38"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="39"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="40"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="41"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="42"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="43"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="44"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="45"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="46"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="47"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="48"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="49"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="50"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="51"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
          <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsAfter/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:ClassMethod" name="base64Decode">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orig">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="chars">
          <typeReference xsi:type="types:Char"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../lang/String.class.xmi#//@classifiers.0/@members.73"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sb">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="shift">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="acc">
          <typeReference xsi:type="types:Int">
            <comments>// # of excess bits stored in accum</comments>
          </typeReference>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="v">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                <arraySelectors>
                  <position xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@variable"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                  </position>
                </arraySelectors>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Condition">
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.8"/>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:StringReference" value="Wrong char in base64: "/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.0/@variable">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@variable"/>
                            </arraySelectors>
                          </children>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                      </next>
                    </expression>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </condition>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@variable"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:CharacterLiteral" value="61"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.5/@statement/@statements.0/@variable"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.4/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:InclusiveOrExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ShiftExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.4/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
                        <shiftOperators xsi:type="operators:LeftShift"/>
                      </expression>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.5/@statement/@statements.0/@variable"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.3/@variable"/>
                  <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                  <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.3/@variable"/>
                      <assignmentOperator xsi:type="operators:AssignmentMinus"/>
                      <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                        <arguments xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Char"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AndExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.4/@variable"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.3/@variable"/>
                                  <shiftOperators xsi:type="operators:RightShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                            </expression>
                          </child>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.3/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                  <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                </condition>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@variable"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.0/@variable">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="expressions:ExpressionList">
          <expressions xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </expressions>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@variable"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This class provides encode/decode for RFC 2045 Base64 as&#xA; * defined by RFC 2045, N. Freed and N. Borenstein.&#xA; * RFC 2045: Multipurpose Internet Mail Extensions (MIME)&#xA; * Part One: Format of Internet Message Bodies. Reference&#xA; * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt&#xA; * This class is used by XML Schema binary format validation&#xA; *&#xA; * @author Jeffrey Rodriguez&#xA; * @version $Revision: 467222 $ $Date: 2006-10-24 05:17:11 +0200 (Tue, 24 Oct 2006) $&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Final"/>
  </classifiers>
</containers:CompilationUnit>
