<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../java.ecore#/16" name="UTF8Decoder.java">
  <comments>/*&#xA; *  Licensed to the Apache Software Foundation (ASF) under one or more&#xA; *  contributor license agreements.  See the NOTICE file distributed with&#xA; *  this work for additional information regarding copyright ownership.&#xA; *  The ASF licenses this file to You under the Apache License, Version 2.0&#xA; *  (the &quot;License&quot;); you may not use this file except in compliance with&#xA; *  the License.  You may obtain a copy of the License at&#xA; *&#xA; *      http://www.apache.org/licenses/LICENSE-2.0&#xA; *&#xA; *  Unless required by applicable law or agreed to in writing, software&#xA; *  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xA; *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; *  See the License for the specific language governing permissions and&#xA; *  limitations under the License.&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>tomcat</namespaces>
  <namespaces>util</namespaces>
  <namespaces>buf</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="UTF8Decoder">
    <members xsi:type="members:Field" name="log">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../org/apache/juli/logging/LogFactory.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0">
                    <next xsi:type="references:ReflectiveClassReference"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../../org/apache/juli/logging/LogFactory.class.xmi#//@classifiers.0"/>
              </next>
            </next>
          </next>
        </next>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>org</namespaces>
        <namespaces>apache</namespaces>
        <namespaces>juli</namespaces>
        <namespaces>logging</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Constructor" name="UTF8Decoder">
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// may have state !!</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="recycle">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <members xsi:type="members:ClassMethod" name="convert">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="cb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../org/apache/tomcat/util/buf/CharChunk.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bytesOff">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.25"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bytesLen">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.27"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bytes">
          <typeReference xsi:type="types:Byte"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.22"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="j">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.0/@variable"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="end">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@variable"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@variable"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="b0">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="expressions:AndExpression">
                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.2/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@variable"/>
                  </arraySelectors>
                </children>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../org/apache/tomcat/util/buf/CharChunk.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Char"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@variable"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Continue"/>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="128"/>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// 2 byte ?</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <comments>// ok, just ignore - we could throw exception</comments>
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../io/IOException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:StringReference" value="Conversion error - EOF "/>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@variable"/>
                <operator xsi:type="operators:PlusPlus"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.4/@variable"/>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="b1">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="expressions:AndExpression">
                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.2/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@variable"/>
                  </arraySelectors>
                </children>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// ok, let's the fun begin - we're handling UTF8</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="ch">
                  <typeReference xsi:type="types:Int">
                    <comments>// 110yyyyy 10xxxxxx (0x80 to 0x7ff)</comments>
                  </typeReference>
                  <initialValue xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ShiftExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AndExpression">
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="31"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
                        <shiftOperators xsi:type="operators:LeftShift"/>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AndExpression">
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="63"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.3/@variable"/>
                      </expression>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Convert "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                      <children xsi:type="references:StringReference" value=" "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.3/@variable"/>
                      <children xsi:type="references:StringReference" value=" "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.4/@statement/@statements.0/@variable"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Char"/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.4/@statement/@statements.0/@variable"/>
                        </expression>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </expression>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <relationOperators xsi:type="operators:GreaterThan"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../org/apache/tomcat/util/buf/CharChunk.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Char"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.4/@statement/@statements.0/@variable"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@variable"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Continue"/>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="224"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                </expression>
              </children>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="192"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Return"/>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@variable"/>
                <operator xsi:type="operators:PlusPlus"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.4/@variable"/>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="b2">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="expressions:AndExpression">
                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.2/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@variable"/>
                  </arraySelectors>
                </children>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:StringReference" value="Error "/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                          <children xsi:type="references:StringReference" value=" "/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.3/@variable"/>
                          <children xsi:type="references:StringReference" value=" "/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.6/@variable"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                      </expression>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      <relationOperators xsi:type="operators:GreaterThan"/>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:Throw">
                    <throwable xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../io/IOException.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:StringReference" value="Conversion error 2"/>
                    </throwable>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ConditionalAndExpression">
                      <children xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="237"/>
                      </children>
                      <children xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.3/@variable"/>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="160"/>
                        <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                      </children>
                    </expression>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ConditionalAndExpression">
                      <children xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="239"/>
                      </children>
                      <children xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.3/@variable"/>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="191"/>
                      </children>
                      <children xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.6/@variable"/>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="190"/>
                        <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                      </children>
                    </expression>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="ch">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ShiftExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AndExpression">
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="15"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="12"/>
                        <shiftOperators xsi:type="operators:LeftShift"/>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ShiftExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AndExpression">
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="63"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.3/@variable"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
                        <shiftOperators xsi:type="operators:LeftShift"/>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AndExpression">
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="63"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.6/@variable"/>
                      </expression>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../org/apache/tomcat/util/buf/CharChunk.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Char"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.7/@statement/@statements.1/@variable"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Convert "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                      <children xsi:type="references:StringReference" value=" "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.3/@variable"/>
                      <children xsi:type="references:StringReference" value=" "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.6/@variable"/>
                      <children xsi:type="references:StringReference" value=" "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.7/@statement/@statements.1/@variable"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Char"/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.7/@statement/@statements.1/@variable"/>
                        </expression>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </expression>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <relationOperators xsi:type="operators:GreaterThan"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@variable"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Continue"/>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="240"/>
                </expression>
              </children>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="224"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Return"/>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@variable"/>
                <operator xsi:type="operators:PlusPlus"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.4/@variable"/>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="b3">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="expressions:AndExpression">
                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.2/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@variable"/>
                  </arraySelectors>
                </children>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:StringReference" value="Convert "/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                          <children xsi:type="references:StringReference" value=" "/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.3/@variable"/>
                          <children xsi:type="references:StringReference" value=" "/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.6/@variable"/>
                          <children xsi:type="references:StringReference" value=" "/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.9/@variable"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                      </expression>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      <relationOperators xsi:type="operators:GreaterThan"/>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:Throw">
                    <throwable xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../io/IOException.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:StringReference" value="Conversion error "/>
                    </throwable>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="244"/>
                    <relationOperators xsi:type="operators:GreaterThan"/>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ConditionalAndExpression">
                      <children xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="244"/>
                      </children>
                      <children xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.3/@variable"/>
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="144"/>
                        <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                      </children>
                    </expression>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="ch">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ShiftExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AndExpression">
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="15"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="18"/>
                        <shiftOperators xsi:type="operators:LeftShift"/>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ShiftExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AndExpression">
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="63"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.3/@variable"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="12"/>
                        <shiftOperators xsi:type="operators:LeftShift"/>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ShiftExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AndExpression">
                            <children xsi:type="literals:HexIntegerLiteral" hexValue="63"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.6/@variable"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
                        <shiftOperators xsi:type="operators:LeftShift"/>
                      </expression>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AndExpression">
                        <children xsi:type="literals:HexIntegerLiteral" hexValue="63"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.9/@variable"/>
                      </expression>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Convert "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                      <children xsi:type="references:StringReference" value=" "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.3/@variable"/>
                      <children xsi:type="references:StringReference" value=" "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.6/@variable"/>
                      <children xsi:type="references:StringReference" value=" "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.9/@variable"/>
                      <children xsi:type="references:StringReference" value=" "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.10/@statement/@statements.1/@variable"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Char"/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.10/@statement/@statements.1/@variable"/>
                        </expression>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </expression>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <relationOperators xsi:type="operators:GreaterThan"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../org/apache/tomcat/util/buf/CharChunk.class.xmi#//@classifiers.0/@members.30"/>
                        <arguments xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Char"/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.10/@statement/@statements.1/@variable"/>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.10/@statement/@statements.1/@variable"/>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="65536"/>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../org/apache/tomcat/util/buf/CharChunk.class.xmi#//@classifiers.0/@members.30"/>
                        <arguments xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Char"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ShiftExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.10/@statement/@statements.1/@variable"/>
                                      <children xsi:type="literals:HexIntegerLiteral" hexValue="65536"/>
                                      <additiveOperators xsi:type="operators:Subtraction"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
                                  <shiftOperators xsi:type="operators:RightShift"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="55296"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                            </expression>
                          </child>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../org/apache/tomcat/util/buf/CharChunk.class.xmi#//@classifiers.0/@members.30"/>
                        <arguments xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Char"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AndExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.10/@statement/@statements.1/@variable"/>
                                      <children xsi:type="literals:HexIntegerLiteral" hexValue="65536"/>
                                      <additiveOperators xsi:type="operators:Subtraction"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="literals:HexIntegerLiteral" hexValue="1023"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:HexIntegerLiteral" hexValue="56320"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                            </expression>
                          </child>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@variable"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Continue"/>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="248"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                </expression>
              </children>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="240"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <comments>// XXX Throw conversion exception !!!</comments>
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Convert "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.0/@variable"/>
                      <children xsi:type="references:StringReference" value=" "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.3/@variable"/>
                      <children xsi:type="references:StringReference" value=" "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.6/@variable"/>
                      <children xsi:type="references:StringReference" value=" "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@statement/@statements.9/@variable"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </expression>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <relationOperators xsi:type="operators:GreaterThan"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../io/IOException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:StringReference" value="Conversion error 4"/>
                </throwable>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.3/@variable"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.4/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:Field" name="debug">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:ClassMethod" name="log">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.8"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="UTF8Decoder: "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.0"/>
          </next>
        </condition>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Moved from ByteChunk - code to convert from UTF8 bytes to chars.&#xA; * Not used in the current tomcat3.3 : the performance gain is not very&#xA; * big if the String is created, only if we avoid that and work only&#xA; * on char[]. Until than, it's better to be safe. ( I tested this code&#xA; * with 2 and 3 bytes chars, and it works fine in xerces )&#xA; * &#xA; * Cut from xerces' UTF8Reader.copyMultiByteCharData() &#xA; *&#xA; * @author Costin Manolache&#xA; * @author ( Xml-Xerces )&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Final"/>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="../../../../../../org/apache/tomcat/util/buf/B2CConverter.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
