<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../../java.ecore#/17" name="Http11Processor.java">
  <comments>/*&#xA; *  Licensed to the Apache Software Foundation (ASF) under one or more&#xA; *  contributor license agreements.  See the NOTICE file distributed with&#xA; *  this work for additional information regarding copyright ownership.&#xA; *  The ASF licenses this file to You under the Apache License, Version 2.0&#xA; *  (the &quot;License&quot;); you may not use this file except in compliance with&#xA; *  the License.  You may obtain a copy of the License at&#xA; *&#xA; *      http://www.apache.org/licenses/LICENSE-2.0&#xA; *&#xA; *  Unless required by applicable law or agreed to in writing, software&#xA; *  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xA; *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; *  See the License for the specific language governing permissions and&#xA; *  limitations under the License.&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>coyote</namespaces>
  <namespaces>http11</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../io/InterruptedIOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>net</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../net/InetAddress.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>net</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../net/Socket.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../security/AccessController.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../security/PrivilegedAction.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../util/StringTokenizer.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <namespaces>regex</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <namespaces>regex</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../util/regex/PatternSyntaxException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/ActionHook.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/Adapter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/RequestInfo.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <namespaces>http11</namespaces>
    <namespaces>filters</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/BufferedInputFilter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <namespaces>http11</namespaces>
    <namespaces>filters</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/ChunkedInputFilter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <namespaces>http11</namespaces>
    <namespaces>filters</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/ChunkedOutputFilter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <namespaces>http11</namespaces>
    <namespaces>filters</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/GzipOutputFilter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <namespaces>http11</namespaces>
    <namespaces>filters</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/IdentityInputFilter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <namespaces>http11</namespaces>
    <namespaces>filters</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/IdentityOutputFilter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <namespaces>http11</namespaces>
    <namespaces>filters</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/SavedRequestInputFilter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <namespaces>http11</namespaces>
    <namespaces>filters</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/VoidInputFilter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>coyote</namespaces>
    <namespaces>http11</namespaces>
    <namespaces>filters</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/VoidOutputFilter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>tomcat</namespaces>
    <namespaces>util</namespaces>
    <namespaces>buf</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/Ascii.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>tomcat</namespaces>
    <namespaces>util</namespaces>
    <namespaces>buf</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>tomcat</namespaces>
    <namespaces>util</namespaces>
    <namespaces>buf</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/HexUtils.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>tomcat</namespaces>
    <namespaces>util</namespaces>
    <namespaces>buf</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>tomcat</namespaces>
    <namespaces>util</namespaces>
    <namespaces>http</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/http/FastHttpDateFormat.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>tomcat</namespaces>
    <namespaces>util</namespaces>
    <namespaces>http</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>tomcat</namespaces>
    <namespaces>util</namespaces>
    <namespaces>net</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/net/JIoEndpoint.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>tomcat</namespaces>
    <namespaces>util</namespaces>
    <namespaces>net</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>tomcat</namespaces>
    <namespaces>util</namespaces>
    <namespaces>res</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="Http11Processor">
    <members xsi:type="members:Field" name="log">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/juli/logging/LogFactory.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0">
                    <next xsi:type="references:ReflectiveClassReference"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/juli/logging/LogFactory.class.xmi#//@classifiers.0"/>
              </next>
            </next>
          </next>
        </next>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>org</namespaces>
        <namespaces>apache</namespaces>
        <namespaces>juli</namespaces>
        <namespaces>logging</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Logger.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="sm">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.13"/>
          <arguments xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
          </arguments>
        </next>
        <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * The string manager for this package.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Constructor" name="Http11Processor">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.80"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.26"/>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.23"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.68"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.80"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="foo">
          <typeReference xsi:type="types:Int">
            <comments>// Cause loading of HexUtils</comments>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <arraySelectors>
                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </arraySelectors>
              <target xsi:type="members:Field" href="../../../../../org/apache/tomcat/util/buf/HexUtils.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/HexUtils.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="headerBufferSize">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="endpoint">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/net/JIoEndpoint.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// ------------------------------------------------------------ Constructor</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="adapter">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/Adapter.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// ----------------------------------------------------- Instance Variables</comments>
        <comments>/**&#xA;     * Associated adapter.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="request">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Request object.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="response">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Response object.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="inputBuffer">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Input.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="outputBuffer">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Output.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="started">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * State flag.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="error">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Error flag.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="keepAlive">
      <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Keep-alive.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="http11">
      <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * HTTP/1.1 flag.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="http09">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * HTTP/0.9 flag.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="contentDelimitation">
      <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Content delimitator for the request (if false, the connection will&#xA;     * be closed at the end of the request).&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="expectation">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Is there an expectation ?&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="restrictedUserAgents">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * List of restricted user agents.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="maxKeepAliveRequests">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Maximum number of Keep-Alive requests to honor.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="keepAliveTimeout">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * The number of seconds Tomcat will wait for a subsequent request&#xA;     * before closing the connection.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="sslSupport">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * SSL information.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="socket">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../net/Socket.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Socket associated with the current connection.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="remoteAddr">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Remote Address associated with the current connection.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="remoteHost">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Remote Host associated with the current connection.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="localName">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Local Host associated with the current connection.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="localPort">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Local port to which the socket is connected&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="remotePort">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Remote port to which the socket is connected&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="localAddr">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * The local Host address.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="timeout">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="300000"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Maximum timeout on uploads. 5 minutes as in Apache HTTPD server.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="disableUploadTimeout">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Flag to disable setting a different time-out on uploads.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="compressionLevel">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Allowed compression level.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="compressionMinSize">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2048"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Minimum contentsize to make compression.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="socketBuffer">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Socket buffering.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="maxSavePostSize">
      <initialValue xsi:type="expressions:MultiplicativeExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1024"/>
        <multiplicativeOperators xsi:type="operators:Multiplication"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Max saved post size.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="noCompressionUserAgents">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsAfter/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * List of user agents to not use gzip with&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="compressableMimeTypes">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="references:StringReference" value="text/html"/>
          <initialValues xsi:type="references:StringReference" value="text/xml"/>
          <initialValues xsi:type="references:StringReference" value="text/plain"/>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * List of MIMES which could be gzipped&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="hostNameC">
      <initialValue xsi:type="arrays:ArrayInstantiationBySize">
        <typeReference xsi:type="types:Char"/>
        <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      </initialValue>
      <typeReference xsi:type="types:Char"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Host name (used to avoid useless B2C conversion on the host name).&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="endpoint">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/net/JIoEndpoint.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Associated endpoint.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="server">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Allow a customized the server header for the tin-foil hat folks.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="getCompression">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// ------------------------------------------------------------- Properties</comments>
        <comments>/**&#xA;     * Return compression level.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="off"/>
          </statements>
          <condition xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="on"/>
          </statements>
          <condition xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="force"/>
          </statements>
          <condition xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:StringReference" value="off"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setCompression">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="compression">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set compression level.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
            <arguments xsi:type="references:StringReference" value="on"/>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                  <self xsi:type="literals:This"/>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
              <arguments xsi:type="references:StringReference" value="force"/>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                    <self xsi:type="literals:This"/>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:StringReference" value="off"/>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:TryBlock">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29">
                      <comments>// Try to parse compression as an int, which would give the</comments>
                      <comments>// minimum compression size</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/Integer.class.xmi#//@classifiers.0/@members.19"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.0"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../lang/Integer.class.xmi#//@classifiers.0"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                      <self xsi:type="literals:This"/>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  </expression>
                </statements>
                <catcheBlocks>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                        <self xsi:type="literals:This"/>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </expression>
                  </statements>
                  <parameter name="e">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/Exception.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </parameter>
                </catcheBlocks>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setCompressionMinSize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="compressionMinSize">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set Minimum size to trigger compression.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addNoCompressionUserAgent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="userAgent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Add user-agent for which gzip compression didn't works&#xA;     * The user agent String given will be exactly matched&#xA;     * to the user-agent header submitted by the client.&#xA;     *&#xA;     * @param userAgent user-agent string&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="nRule">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.49">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@statements.0/@variable"/>
            </value>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.15"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.8"/>
                    <arguments xsi:type="references:StringReference" value="http11processor.regexp.error"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.0"/>
                  </next>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@catcheBlocks.0/@parameter"/>
              </next>
            </expression>
          </statements>
          <parameter name="pse">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../util/regex/PatternSyntaxException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setNoCompressionUserAgents">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="noCompressionUserAgents">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set no compression user agent list (this method is best when used with&#xA;     * a large number of connectors, where it would be better to have all of&#xA;     * them referenced a single array).&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setNoCompressionUserAgents">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="noCompressionUserAgents">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set no compression user agent list.&#xA;     * List contains users agents separated by ',' :&#xA;     *&#xA;     * ie: &quot;gorilla,desesplorer,tigrus&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="st">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../util/StringTokenizer.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../util/StringTokenizer.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.0"/>
                <arguments xsi:type="references:StringReference" value=","/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.40">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.0/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.71"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../util/StringTokenizer.class.xmi#//@classifiers.0/@members.18"/>
                    </next>
                  </arguments>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/StringTokenizer.class.xmi#//@classifiers.0/@members.17"/>
              </next>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addCompressableMimeType">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mimeType">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Add a mime-type which will be compressable&#xA;     * The mime-type String will be exactly matched&#xA;     * in the response mime-type header .&#xA;     *&#xA;     * @param mimeType mime-type string&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.48">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@parameters.0"/>
          </value>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setCompressableMimeTypes">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="compressableMimeTypes">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set compressable mime-type list (this method is best when used with&#xA;     * a large number of connectors, where it would be better to have all of&#xA;     * them referenced a single array).&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setCompressableMimeTypes">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="compressableMimeTypes">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set compressable mime-type list&#xA;     * List contains users agents separated by ',' :&#xA;     *&#xA;     * ie: &quot;text/html,text/xml,text/plain&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="st">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../util/StringTokenizer.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../util/StringTokenizer.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.0"/>
                <arguments xsi:type="references:StringReference" value=","/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.0/@statement/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.71"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../util/StringTokenizer.class.xmi#//@classifiers.0/@members.18"/>
                    </next>
                  </arguments>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.0/@statement/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/StringTokenizer.class.xmi#//@classifiers.0/@members.17"/>
              </next>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="findCompressableMimeTypes">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Return the list of restricted user agents.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:NestedExpression">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addFilter">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="className">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// --------------------------------------------------------- Public Methods</comments>
        <comments>/**&#xA;     * Add input or output filter.&#xA;     *&#xA;     * @param className class name of the filter&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="clazz">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../lang/Class.class.xmi#//@classifiers.0/@members.32"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@parameters.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="obj">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@statements.0/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../lang/Class.class.xmi#//@classifiers.0/@members.35"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.19"/>
                  <arguments xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/http11/InputFilter.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@statements.0/@statements.1/@variable"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:InstanceOfExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/http11/InputFilter.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@statements.0/@statements.1/@variable"/>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/http11/OutputFilter.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@statements.0/@statements.1/@variable"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:InstanceOfExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/http11/OutputFilter.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@statements.0/@statements.1/@variable"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.12"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.8"/>
                        <arguments xsi:type="references:StringReference" value="http11processor.filter.unknown"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@parameters.0"/>
                      </next>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </elseStatement>
          </elseStatement>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.15"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.8"/>
                    <arguments xsi:type="references:StringReference" value="http11processor.filter.error"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@parameters.0"/>
                  </next>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@statements.0/@catcheBlocks.0/@parameter"/>
              </next>
            </expression>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/Exception.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addStringArray">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="sArray">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsAfter/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * General use method&#xA;     *&#xA;     * @param sArray the StringArray&#xA;     * @param value string&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="result">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.0/@variable">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.1"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <sizes xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.0">
                    <next xsi:type="references:IdentifierReference"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </sizes>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.0/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@elseStatement/@statements.1/@init"/>
                  </arraySelectors>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.0">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@elseStatement/@statements.1/@init"/>
                  </arraySelectors>
                </value>
              </expression>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@elseStatement/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.0">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@elseStatement/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.0/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.0">
                    <next xsi:type="references:IdentifierReference"/>
                  </position>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.1"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addREArray">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="rArray">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsAfter/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * General use method&#xA;     *&#xA;     * @param rArray the REArray&#xA;     * @param value Obj&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="result">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.0/@variable">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.1"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <sizes xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.0">
                    <next xsi:type="references:IdentifierReference"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </sizes>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.0/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.1/@elseStatement/@statements.1/@init"/>
                  </arraySelectors>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.0">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.1/@elseStatement/@statements.1/@init"/>
                  </arraySelectors>
                </value>
              </expression>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.1/@elseStatement/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.0">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.1/@elseStatement/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.0/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.0">
                    <next xsi:type="references:IdentifierReference"/>
                  </position>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.1"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="inStringArray">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="sArray">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsAfter/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * General use method&#xA;     *&#xA;     * @param sArray the StringArray&#xA;     * @param value string&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@parameters.1"/>
              </next>
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.0/@init"/>
              </arraySelectors>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.0/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@parameters.0">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.0/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="startsWithStringArray">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="sArray">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsAfter/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Checks if any entry in the string array starts with the specified value&#xA;     *&#xA;     * @param sArray the StringArray&#xA;     * @param value string&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="literals:BooleanLiteral"/>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.42"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.1/@init"/>
                  </arraySelectors>
                </arguments>
              </next>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.1/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.1/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addRestrictedUserAgent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="userAgent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Add restricted user-agent (which will downgrade the connector&#xA;     * to HTTP/1.0 mode). The user agent String given will be matched&#xA;     * via regexp to the user-agent header submitted by the client.&#xA;     *&#xA;     * @param userAgent user-agent string&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="nRule">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@parameters.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.49">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@statements.0/@statements.0/@variable"/>
            </value>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.15"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.8"/>
                    <arguments xsi:type="references:StringReference" value="http11processor.regexp.error"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@parameters.0"/>
                  </next>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52/@statements.0/@catcheBlocks.0/@parameter"/>
              </next>
            </expression>
          </statements>
          <parameter name="pse">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../util/regex/PatternSyntaxException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setRestrictedUserAgents">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="restrictedUserAgents">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set restricted user agent list (this method is best when used with&#xA;     * a large number of connectors, where it would be better to have all of&#xA;     * them referenced a single array).&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setRestrictedUserAgents">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="restrictedUserAgents">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set restricted user agent list (which will downgrade the connector&#xA;     * to HTTP/1.0 mode). List contains users agents separated by ',' :&#xA;     *&#xA;     * ie: &quot;gorilla,desesplorer,tigrus&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="st">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../util/StringTokenizer.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../util/StringTokenizer.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54/@parameters.0"/>
                <arguments xsi:type="references:StringReference" value=","/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.52">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54/@statements.0/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.71"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../util/StringTokenizer.class.xmi#//@classifiers.0/@members.18"/>
                    </next>
                  </arguments>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/StringTokenizer.class.xmi#//@classifiers.0/@members.17"/>
              </next>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="findRestrictedUserAgents">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Return the list of restricted user agents.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sarr">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
              <next xsi:type="references:IdentifierReference"/>
            </sizes>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55/@statements.0/@variable">
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55/@statements.1/@init"/>
              </arraySelectors>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0/@members.33"/>
              </next>
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55/@statements.1/@init"/>
              </arraySelectors>
            </value>
          </expression>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55/@statements.1/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55/@statements.1/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:NestedExpression">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55/@statements.0/@variable"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setMaxKeepAliveRequests">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mkar">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set the maximum number of Keep-Alive requests to honor.&#xA;     * This is to safeguard from DoS attacks.  Setting to a negative&#xA;     * value disables the check.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.56/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getMaxKeepAliveRequests">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Return the number of Keep-Alive requests that we will honor.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setKeepAliveTimeout">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="timeout">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set the Keep-Alive timeout.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getKeepAliveTimeout">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Return the number Keep-Alive timeout.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setMaxSavePostSize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="msps">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set the maximum size of a POST which will be buffered in SSL mode.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getMaxSavePostSize">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Return the maximum size of a POST which will be buffered in SSL mode.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setSSLSupport">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="sslSupport">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set the SSL information for this HTTP connection.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setDisableUploadTimeout">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="isDisabled">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set the flag to control upload time-outs.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDisableUploadTimeout">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get the flag that controls upload time-outs.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setSocketBuffer">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="socketBuffer">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set the socket buffer flag.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@parameters.0"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getSocketBuffer">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get the socket buffer flag.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setTimeout">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="timeouts">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set the upload timeout.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getTimeout">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get the upload timeout.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setServer">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="server">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set the server header name.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69/@parameters.0"/>
            <children xsi:type="literals:NullLiteral"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
              <arguments xsi:type="references:StringReference" value=""/>
            </next>
          </children>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69/@parameters.0"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getServer">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get the server header name.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getRequest">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Get the request associated with this processor.&#xA;     *&#xA;     * @return The request&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="process">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="socket">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../net/Socket.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Process pipelined HTTP requests using the specified input and output&#xA;     * streams.&#xA;     *&#xA;     * @param input stream from which the HTTP requests will be read&#xA;     * @param output stream which will be used to output the HTTP&#xA;     * responses&#xA;     * @throws IOException error during an I/O operation&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rp">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/RequestInfo.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.89"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/RequestInfo.class.xmi#//@classifiers.0/@members.30"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0/@members.5"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0"/>
                  </next>
                </next>
              </next>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <comments>// Set the remote address</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Subtraction"/>
            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Subtraction"/>
            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
            <self xsi:type="literals:This">
              <comments>// Setting up the I/O</comments>
            </self>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.38"/>
              </next>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.39"/>
              </next>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <comments>// Error flag</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral" value="true"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="keepAliveLeft">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="soTimeout">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.48"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldSoTimeout">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.14/@variable"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="threadRatio">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/net/JIoEndpoint.class.xmi#//@classifiers.0/@members.61"/>
                  </next>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="100"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </expression>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/net/JIoEndpoint.class.xmi#//@classifiers.0/@members.35"/>
              </next>
            </children>
            <multiplicativeOperators xsi:type="operators:Division"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.13/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.16/@variable"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="75"/>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.47"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.14/@variable"/>
                </next>
              </expression>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.9"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.7"/>
                        <arguments xsi:type="references:StringReference" value="http11processor.socket.timeout"/>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.18/@statement/@statements.0/@catcheBlocks.0/@parameter"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <parameter name="t">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/Throwable.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.14/@variable"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.15/@variable"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="keptAlive">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="literals:BooleanLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:TryBlock">
            <comments>// Parsing the request header</comments>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.47"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:GreaterThan"/>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.47"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.14/@variable"/>
                          </next>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.14/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      <relationOperators xsi:type="operators:GreaterThan"/>
                    </condition>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Negate"/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.19/@variable"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.27"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.84"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/System.class.xmi#//@classifiers.0/@members.18"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../lang/System.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.19/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral" value="true"/>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.47"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.28"/>
                </next>
              </expression>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../io/IOException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
            <catcheBlocks>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.9"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.7"/>
                            <arguments xsi:type="references:StringReference" value="http11processor.header.parse"/>
                          </next>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.20/@statement/@statements.0/@catcheBlocks.1/@parameter"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                  <comments>// 400 - Bad Request</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.31"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="400"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <parameter name="t">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/Throwable.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.0/@variable">
              <comments>// Setting up filters, and parse some request headers</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/RequestInfo.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0/@members.6"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0"/>
                      </next>
                    </next>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.76"/>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.9"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.7"/>
                            <arguments xsi:type="references:StringReference" value="http11processor.request.prepare"/>
                          </next>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.20/@statement/@statements.2/@catcheBlocks.0/@parameter"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                  <comments>// 400 - Internal Server Error</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.31"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="400"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <parameter name="t">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/Throwable.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral"/>
              </expression>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:GreaterThan"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="expressions:PrefixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.13/@variable"/>
                  <operator xsi:type="operators:MinusMinus"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// Process the request in the adapter</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:TryBlock">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/RequestInfo.class.xmi#//@classifiers.0/@members.30"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0/@members.7"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0"/>
                            </next>
                          </next>
                        </next>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/coyote/Adapter.class.xmi#//@classifiers.0/@members.0"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <comments>// Handle when the response was committed before a serious</comments>
                  <comments>// error occurred.  Throwing a ServletException should both</comments>
                  <comments>// set the status to 500 and set the errorException.</comments>
                  <comments>// If we fail here, then the response is likely already</comments>
                  <comments>// committed, so we can't try and set headers.</comments>
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                          <comments>// Avoid checking twice.</comments>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:ConditionalOrExpression">
                          <children xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.37"/>
                              </next>
                            </children>
                            <children xsi:type="literals:NullLiteral"/>
                          </children>
                          <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.83">
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.30"/>
                              </next>
                            </arguments>
                          </children>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                    <children xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                    </children>
                  </condition>
                </statements>
                <catcheBlocks>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral" value="true"/>
                    </expression>
                  </statements>
                  <parameter name="e">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../io/InterruptedIOException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </parameter>
                </catcheBlocks>
                <catcheBlocks>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.15"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.7"/>
                            <arguments xsi:type="references:StringReference" value="http11processor.request.process"/>
                          </next>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.20/@statement/@statements.4/@statement/@statements.0/@catcheBlocks.1/@parameter"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                      <comments>// 500 - Internal Server Error</comments>
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.31"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="500"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral" value="true"/>
                    </expression>
                  </statements>
                  <parameter name="t">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/Throwable.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </parameter>
                </catcheBlocks>
              </statements>
            </statement>
            <condition xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
            </condition>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <comments>// Finish the handling of the request</comments>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/RequestInfo.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0/@members.8"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0"/>
                        </next>
                      </next>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.26"/>
                </next>
              </expression>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../io/IOException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.15"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.7"/>
                        <arguments xsi:type="references:StringReference" value="http11processor.request.finish"/>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.20/@statement/@statements.5/@catcheBlocks.1/@parameter"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                  <comments>// 500 - Internal Server Error</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.31"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="500"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <parameter name="t">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/Throwable.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/RequestInfo.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0/@members.9"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0"/>
                        </next>
                      </next>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.28"/>
                </next>
              </expression>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../io/IOException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.15"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.7"/>
                        <arguments xsi:type="references:StringReference" value="http11processor.response.finish"/>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.20/@statement/@statements.6/@catcheBlocks.1/@parameter"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <parameter name="t">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/Throwable.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// If there was an error, make sure the request is counted as</comments>
            <comments>// and error, and update the statistics counter</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.31"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="500"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.88"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/RequestInfo.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0/@members.10"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0"/>
                      </next>
                    </next>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
              <comments>// Don't reset the param - we'll see it as ended. Next request</comments>
              <comments>// will reset it</comments>
              <comments>// thrA.setParam(null);</comments>
              <comments>// Next request</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.25"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.27"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/RequestInfo.class.xmi#//@classifiers.0/@members.30"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0/@members.11"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0"/>
                  </next>
                </next>
              </next>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
          <comments>// Recycle</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.24"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.26"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18">
            <comments>// Recycle ssl info</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="action">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="actionCode">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="param">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// ----------------------------------------------------- ActionHook Methods</comments>
        <comments>/**&#xA;     * Send an action to the connector.&#xA;     *&#xA;     * @param actionCode Type of the action&#xA;     * @param param Action parameter&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <comments>// Commit current response</comments>
            <statement xsi:type="statements:Return"/>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.34"/>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.79">
              <comments>// Validate and write response headers</comments>
            </expression>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.37"/>
                </next>
              </expression>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                    <comments>// Set error flag</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../io/IOException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
          <children xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
          </children>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <comments>// Acknowlege request</comments>
              <comments>// Send a 100 status back if it makes sense (response not committed</comments>
              <comments>// yet, and client specified an expectation for 100-continue)</comments>
              <statement xsi:type="statements:Return"/>
              <condition xsi:type="expressions:ConditionalOrExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.34"/>
                    </next>
                  </expression>
                </children>
                <children xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Negate"/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
                </children>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.23"/>
                  <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:TryBlock">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.29"/>
                  </next>
                </expression>
              </statements>
              <catcheBlocks>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                      <comments>// Set error flag</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:BooleanLiteral" value="true"/>
                  </expression>
                </statements>
                <parameter name="e">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../io/IOException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameter>
              </catcheBlocks>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
            </children>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:TryBlock">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.24"/>
                    </next>
                  </expression>
                </statements>
                <catcheBlocks>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                        <comments>// Set error flag</comments>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral" value="true"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.36"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@catcheBlocks.0/@parameter"/>
                      </next>
                    </expression>
                  </statements>
                  <parameter name="e">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../io/IOException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </parameter>
                </catcheBlocks>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.3"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:TryBlock">
                  <comments>// Close</comments>
                  <comments>// End the processing of the current request, and stop any further</comments>
                  <comments>// transactions with the client</comments>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.28"/>
                      </next>
                    </expression>
                  </statements>
                  <catcheBlocks>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                          <comments>// Set error flag</comments>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="literals:BooleanLiteral" value="true"/>
                      </expression>
                    </statements>
                    <parameter name="e">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../io/IOException.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                    </parameter>
                  </catcheBlocks>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                      <comments>// Reset response</comments>
                      <comments>// Note: This must be called before the response is committed</comments>
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.25"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.5"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <comments>// Do nothing</comments>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                    <children xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.4"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                    </children>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="literals:BooleanLiteral" value="true"/>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                      <children xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.6"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                      </children>
                    </condition>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="literals:BooleanLiteral"/>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                        <children xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.7"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                        </children>
                      </condition>
                      <elseStatement xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:TryBlock">
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:LocalVariableStatement">
                                  <variable name="sslO">
                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                      <classifierReferences>
                                        <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
                                      </classifierReferences>
                                    </typeReference>
                                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0/@members.6"/>
                                      </next>
                                    </initialValue>
                                  </variable>
                                </statements>
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.72"/>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0/@members.0"/>
                                          </next>
                                          <target xsi:type="classifiers:Interface" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@statement/@statements.0/@variable"/>
                                      </next>
                                    </expression>
                                  </statement>
                                  <condition xsi:type="expressions:EqualityExpression">
                                    <equalityOperators xsi:type="operators:NotEqual"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@statement/@statements.0/@variable"/>
                                    <children xsi:type="literals:NullLiteral"/>
                                  </condition>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@statement/@statements.0/@variable"/>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0/@members.8"/>
                                        <arguments xsi:type="literals:BooleanLiteral"/>
                                      </next>
                                    </value>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.72"/>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0/@members.2"/>
                                          </next>
                                          <target xsi:type="classifiers:Interface" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@statement/@statements.0/@variable"/>
                                      </next>
                                    </expression>
                                  </statement>
                                  <condition xsi:type="expressions:EqualityExpression">
                                    <equalityOperators xsi:type="operators:NotEqual"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@statement/@statements.0/@variable"/>
                                    <children xsi:type="literals:NullLiteral"/>
                                  </condition>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@statement/@statements.0/@variable"/>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0/@members.9"/>
                                      </next>
                                    </value>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.72"/>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0/@members.1"/>
                                          </next>
                                          <target xsi:type="classifiers:Interface" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@statement/@statements.0/@variable"/>
                                      </next>
                                    </expression>
                                  </statement>
                                  <condition xsi:type="expressions:EqualityExpression">
                                    <equalityOperators xsi:type="operators:NotEqual"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@statement/@statements.0/@variable"/>
                                    <children xsi:type="literals:NullLiteral"/>
                                  </condition>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@statement/@statements.0/@variable"/>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0/@members.10"/>
                                      </next>
                                    </value>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.72"/>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0/@members.3"/>
                                          </next>
                                          <target xsi:type="classifiers:Interface" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@statement/@statements.0/@variable"/>
                                      </next>
                                    </expression>
                                  </statement>
                                  <condition xsi:type="expressions:EqualityExpression">
                                    <equalityOperators xsi:type="operators:NotEqual"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@statement/@statements.0/@variable"/>
                                    <children xsi:type="literals:NullLiteral"/>
                                  </condition>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:EqualityExpression">
                                <equalityOperators xsi:type="operators:NotEqual"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                <children xsi:type="literals:NullLiteral"/>
                              </condition>
                            </statements>
                            <catcheBlocks>
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.13"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.7"/>
                                        <arguments xsi:type="references:StringReference" value="http11processor.socket.ssl"/>
                                      </next>
                                    </arguments>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@catcheBlocks.0/@parameter"/>
                                  </next>
                                </expression>
                              </statements>
                              <parameter name="e">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../../lang/Exception.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                              </parameter>
                            </catcheBlocks>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                          <children xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.12"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                          </children>
                        </condition>
                        <elseStatement xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:LocalVariableStatement">
                                  <variable name="inetAddr">
                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                      <classifierReferences>
                                        <target xsi:type="classifiers:Class" href="../../../../net/InetAddress.class.xmi#//@classifiers.0"/>
                                      </classifierReferences>
                                    </typeReference>
                                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.31"/>
                                      </next>
                                    </initialValue>
                                  </variable>
                                </statements>
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="expressions:AssignmentExpression">
                                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
                                        <assignmentOperator xsi:type="operators:Assignment"/>
                                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@variable">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../net/InetAddress.class.xmi#//@classifiers.0/@members.35"/>
                                          </next>
                                        </value>
                                      </expression>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="expressions:EqualityExpression">
                                    <equalityOperators xsi:type="operators:NotEqual"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@variable"/>
                                    <children xsi:type="literals:NullLiteral"/>
                                  </condition>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:ConditionalAndExpression">
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:EqualityExpression">
                                    <equalityOperators xsi:type="operators:Equal"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
                                    <children xsi:type="literals:NullLiteral"/>
                                  </expression>
                                </children>
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:EqualityExpression">
                                    <equalityOperators xsi:type="operators:NotEqual"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
                                    <children xsi:type="literals:NullLiteral"/>
                                  </expression>
                                </children>
                              </condition>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                                <next xsi:type="references:MethodCall">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
                                  </next>
                                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.49"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:Equal"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                            <children xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.11"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                            </children>
                          </condition>
                          <elseStatement xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:LocalVariableStatement">
                                    <variable name="inetAddr">
                                      <typeReference xsi:type="types:NamespaceClassifierReference">
                                        <classifierReferences>
                                          <target xsi:type="classifiers:Class" href="../../../../net/InetAddress.class.xmi#//@classifiers.0"/>
                                        </classifierReferences>
                                      </typeReference>
                                      <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.32"/>
                                        </next>
                                      </initialValue>
                                    </variable>
                                  </statements>
                                  <statements xsi:type="statements:Condition">
                                    <statement xsi:type="statements:Block">
                                      <statements xsi:type="statements:ExpressionStatement">
                                        <expression xsi:type="expressions:AssignmentExpression">
                                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
                                          <assignmentOperator xsi:type="operators:Assignment"/>
                                          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@variable">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:ClassMethod" href="../../../../net/InetAddress.class.xmi#//@classifiers.0/@members.30"/>
                                            </next>
                                          </value>
                                        </expression>
                                      </statements>
                                    </statement>
                                    <condition xsi:type="expressions:EqualityExpression">
                                      <equalityOperators xsi:type="operators:NotEqual"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@variable"/>
                                      <children xsi:type="literals:NullLiteral"/>
                                    </condition>
                                  </statements>
                                </statement>
                                <condition xsi:type="expressions:ConditionalAndExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:EqualityExpression">
                                      <equalityOperators xsi:type="operators:Equal"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
                                      <children xsi:type="literals:NullLiteral"/>
                                    </expression>
                                  </children>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:EqualityExpression">
                                      <equalityOperators xsi:type="operators:NotEqual"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
                                      <children xsi:type="literals:NullLiteral"/>
                                    </expression>
                                  </children>
                                </condition>
                              </statements>
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                                  <next xsi:type="references:MethodCall">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
                                    </next>
                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.51"/>
                                  </next>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:Equal"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                              <children xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.18"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                              </children>
                            </condition>
                            <elseStatement xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:LocalVariableStatement">
                                      <variable name="inetAddr">
                                        <typeReference xsi:type="types:NamespaceClassifierReference">
                                          <classifierReferences>
                                            <target xsi:type="classifiers:Class" href="../../../../net/InetAddress.class.xmi#//@classifiers.0"/>
                                          </classifierReferences>
                                        </typeReference>
                                        <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.31"/>
                                          </next>
                                        </initialValue>
                                      </variable>
                                    </statements>
                                    <statements xsi:type="statements:Condition">
                                      <statement xsi:type="statements:Block">
                                        <statements xsi:type="statements:ExpressionStatement">
                                          <expression xsi:type="expressions:AssignmentExpression">
                                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                                            <assignmentOperator xsi:type="operators:Assignment"/>
                                            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@variable">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="../../../../net/InetAddress.class.xmi#//@classifiers.0/@members.30"/>
                                              </next>
                                            </value>
                                          </expression>
                                        </statements>
                                      </statement>
                                      <condition xsi:type="expressions:EqualityExpression">
                                        <equalityOperators xsi:type="operators:NotEqual"/>
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@variable"/>
                                        <children xsi:type="literals:NullLiteral"/>
                                      </condition>
                                    </statements>
                                    <statements xsi:type="statements:Condition">
                                      <statement xsi:type="statements:Block">
                                        <statements xsi:type="statements:Condition">
                                          <statement xsi:type="statements:Block">
                                            <statements xsi:type="statements:ExpressionStatement">
                                              <expression xsi:type="expressions:AssignmentExpression">
                                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                                                <assignmentOperator xsi:type="operators:Assignment"/>
                                                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
                                              </expression>
                                            </statements>
                                          </statement>
                                          <condition xsi:type="expressions:EqualityExpression">
                                            <equalityOperators xsi:type="operators:NotEqual"/>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
                                            <children xsi:type="literals:NullLiteral"/>
                                          </condition>
                                          <elseStatement xsi:type="statements:Block">
                                            <statements xsi:type="statements:ExpressionStatement">
                                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                                                <comments>// all we can do is punt</comments>
                                                <next xsi:type="references:MethodCall">
                                                  <next xsi:type="references:MethodCall">
                                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.25"/>
                                                  </next>
                                                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.50"/>
                                                </next>
                                              </expression>
                                            </statements>
                                          </elseStatement>
                                        </statements>
                                      </statement>
                                      <condition xsi:type="expressions:EqualityExpression">
                                        <equalityOperators xsi:type="operators:Equal"/>
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                                        <children xsi:type="literals:NullLiteral"/>
                                      </condition>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="expressions:ConditionalAndExpression">
                                    <children xsi:type="expressions:NestedExpression">
                                      <expression xsi:type="expressions:EqualityExpression">
                                        <equalityOperators xsi:type="operators:Equal"/>
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                                        <children xsi:type="literals:NullLiteral"/>
                                      </expression>
                                    </children>
                                    <children xsi:type="expressions:NestedExpression">
                                      <expression xsi:type="expressions:EqualityExpression">
                                        <equalityOperators xsi:type="operators:NotEqual"/>
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
                                        <children xsi:type="literals:NullLiteral"/>
                                      </expression>
                                    </children>
                                  </condition>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                                    <next xsi:type="references:MethodCall">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                                      </next>
                                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.50"/>
                                    </next>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:EqualityExpression">
                                <equalityOperators xsi:type="operators:Equal"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                                <children xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.10"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                                </children>
                              </condition>
                              <elseStatement xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:Condition">
                                    <statement xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="expressions:AssignmentExpression">
                                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
                                        <assignmentOperator xsi:type="operators:Assignment"/>
                                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19">
                                          <next xsi:type="references:MethodCall">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:ClassMethod" href="../../../../net/InetAddress.class.xmi#//@classifiers.0/@members.35"/>
                                            </next>
                                            <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.32"/>
                                          </next>
                                        </value>
                                      </expression>
                                    </statement>
                                    <condition xsi:type="expressions:EqualityExpression">
                                      <equalityOperators xsi:type="operators:Equal"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
                                      <children xsi:type="literals:NullLiteral"/>
                                    </condition>
                                  </statements>
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                                      <next xsi:type="references:MethodCall">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
                                        </next>
                                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.52"/>
                                      </next>
                                    </expression>
                                  </statements>
                                </statement>
                                <condition xsi:type="expressions:EqualityExpression">
                                  <equalityOperators xsi:type="operators:Equal"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                                  <children xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.17"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                                  </children>
                                </condition>
                                <elseStatement xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:Condition">
                                      <statement xsi:type="statements:Block">
                                        <statements xsi:type="statements:ExpressionStatement">
                                          <expression xsi:type="expressions:AssignmentExpression">
                                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                                            <assignmentOperator xsi:type="operators:Assignment"/>
                                            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.33"/>
                                              </next>
                                            </value>
                                          </expression>
                                        </statements>
                                      </statement>
                                      <condition xsi:type="expressions:ConditionalAndExpression">
                                        <children xsi:type="expressions:NestedExpression">
                                          <expression xsi:type="expressions:EqualityExpression">
                                            <equalityOperators xsi:type="operators:Equal"/>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                                            <children xsi:type="expressions:UnaryExpression">
                                              <operators xsi:type="operators:Subtraction"/>
                                              <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                            </children>
                                          </expression>
                                        </children>
                                        <children xsi:type="expressions:NestedExpression">
                                          <expression xsi:type="expressions:EqualityExpression">
                                            <equalityOperators xsi:type="operators:NotEqual"/>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
                                            <children xsi:type="literals:NullLiteral"/>
                                          </expression>
                                        </children>
                                      </condition>
                                    </statements>
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.54"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                                        </next>
                                      </expression>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="expressions:EqualityExpression">
                                    <equalityOperators xsi:type="operators:Equal"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                                    <children xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.15"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                                    </children>
                                  </condition>
                                  <elseStatement xsi:type="statements:Condition">
                                    <statement xsi:type="statements:Block">
                                      <statements xsi:type="statements:Condition">
                                        <statement xsi:type="statements:Block">
                                          <statements xsi:type="statements:ExpressionStatement">
                                            <expression xsi:type="expressions:AssignmentExpression">
                                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
                                              <assignmentOperator xsi:type="operators:Assignment"/>
                                              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19">
                                                <next xsi:type="references:MethodCall">
                                                  <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.34"/>
                                                </next>
                                              </value>
                                            </expression>
                                          </statements>
                                        </statement>
                                        <condition xsi:type="expressions:ConditionalAndExpression">
                                          <children xsi:type="expressions:NestedExpression">
                                            <expression xsi:type="expressions:EqualityExpression">
                                              <equalityOperators xsi:type="operators:Equal"/>
                                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
                                              <children xsi:type="expressions:UnaryExpression">
                                                <operators xsi:type="operators:Subtraction"/>
                                                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                              </children>
                                            </expression>
                                          </children>
                                          <children xsi:type="expressions:NestedExpression">
                                            <expression xsi:type="expressions:EqualityExpression">
                                              <equalityOperators xsi:type="operators:NotEqual"/>
                                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
                                              <children xsi:type="literals:NullLiteral"/>
                                            </expression>
                                          </children>
                                        </condition>
                                      </statements>
                                      <statements xsi:type="statements:ExpressionStatement">
                                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.56"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
                                          </next>
                                        </expression>
                                      </statements>
                                    </statement>
                                    <condition xsi:type="expressions:EqualityExpression">
                                      <equalityOperators xsi:type="operators:Equal"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                                      <children xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.16"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                                      </children>
                                    </condition>
                                    <elseStatement xsi:type="statements:Condition">
                                      <statement xsi:type="statements:Block">
                                        <statements xsi:type="statements:Condition">
                                          <statement xsi:type="statements:Block">
                                            <statements xsi:type="statements:LocalVariableStatement">
                                              <variable name="inputFilters">
                                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                                  <classifierReferences>
                                                    <comments>/*&#xA;                 * Consume and buffer the request body, so that it does not&#xA;                 * interfere with the client's handshake messages&#xA;                 */</comments>
                                                    <target xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/http11/InputFilter.class.xmi#//@classifiers.0"/>
                                                  </classifierReferences>
                                                </typeReference>
                                                <arrayDimensionsBefore/>
                                                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                                                  <next xsi:type="references:MethodCall">
                                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.20"/>
                                                  </next>
                                                </initialValue>
                                              </variable>
                                            </statements>
                                            <statements xsi:type="statements:ExpressionStatement">
                                              <expression xsi:type="expressions:NestedExpression">
                                                <next xsi:type="references:MethodCall">
                                                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/filters/BufferedInputFilter.class.xmi#//@classifiers.0/@members.8"/>
                                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                                                </next>
                                                <expression xsi:type="expressions:CastExpression">
                                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                                    <classifierReferences>
                                                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/BufferedInputFilter.class.xmi#//@classifiers.0"/>
                                                    </classifierReferences>
                                                  </typeReference>
                                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@variable">
                                                    <arraySelectors>
                                                      <position xsi:type="references:IdentifierReference">
                                                        <next xsi:type="references:IdentifierReference">
                                                          <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.37"/>
                                                        </next>
                                                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                                                      </position>
                                                    </arraySelectors>
                                                  </child>
                                                </expression>
                                              </expression>
                                            </statements>
                                            <statements xsi:type="statements:ExpressionStatement">
                                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                                                <next xsi:type="references:MethodCall">
                                                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.22"/>
                                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@variable">
                                                    <arraySelectors>
                                                      <position xsi:type="references:IdentifierReference">
                                                        <next xsi:type="references:IdentifierReference">
                                                          <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.37"/>
                                                        </next>
                                                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                                                      </position>
                                                    </arraySelectors>
                                                  </arguments>
                                                </next>
                                              </expression>
                                            </statements>
                                            <statements xsi:type="statements:TryBlock">
                                              <statements xsi:type="statements:LocalVariableStatement">
                                                <variable name="sslO">
                                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                                    <classifierReferences>
                                                      <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
                                                    </classifierReferences>
                                                  </typeReference>
                                                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18">
                                                    <next xsi:type="references:MethodCall">
                                                      <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0/@members.8"/>
                                                      <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                                                    </next>
                                                  </initialValue>
                                                </variable>
                                              </statements>
                                              <statements xsi:type="statements:Condition">
                                                <statement xsi:type="statements:Block">
                                                  <statements xsi:type="statements:ExpressionStatement">
                                                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                                                      <next xsi:type="references:MethodCall">
                                                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.72"/>
                                                        <arguments xsi:type="references:IdentifierReference">
                                                          <next xsi:type="references:IdentifierReference">
                                                            <target xsi:type="members:Field" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0/@members.2"/>
                                                          </next>
                                                          <target xsi:type="classifiers:Interface" href="../../../../../org/apache/tomcat/util/net/SSLSupport.class.xmi#//@classifiers.0"/>
                                                        </arguments>
                                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.3/@statements.0/@variable"/>
                                                      </next>
                                                    </expression>
                                                  </statements>
                                                </statement>
                                                <condition xsi:type="expressions:EqualityExpression">
                                                  <equalityOperators xsi:type="operators:NotEqual"/>
                                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.3/@statements.0/@variable"/>
                                                  <children xsi:type="literals:NullLiteral"/>
                                                </condition>
                                              </statements>
                                              <catcheBlocks>
                                                <statements xsi:type="statements:ExpressionStatement">
                                                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                                                    <next xsi:type="references:MethodCall">
                                                      <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.13"/>
                                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                                                        <next xsi:type="references:MethodCall">
                                                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.7"/>
                                                          <arguments xsi:type="references:StringReference" value="http11processor.socket.ssl"/>
                                                        </next>
                                                      </arguments>
                                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.3/@catcheBlocks.0/@parameter"/>
                                                    </next>
                                                  </expression>
                                                </statements>
                                                <parameter name="e">
                                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                                    <classifierReferences>
                                                      <target xsi:type="classifiers:Class" href="../../../../lang/Exception.class.xmi#//@classifiers.0"/>
                                                    </classifierReferences>
                                                  </typeReference>
                                                </parameter>
                                              </catcheBlocks>
                                            </statements>
                                          </statement>
                                          <condition xsi:type="expressions:EqualityExpression">
                                            <equalityOperators xsi:type="operators:NotEqual"/>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                            <children xsi:type="literals:NullLiteral"/>
                                          </condition>
                                        </statements>
                                      </statement>
                                      <condition xsi:type="expressions:EqualityExpression">
                                        <equalityOperators xsi:type="operators:Equal"/>
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                                        <children xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.14"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                                        </children>
                                      </condition>
                                      <elseStatement xsi:type="statements:Condition">
                                        <statement xsi:type="statements:Block">
                                          <statements xsi:type="statements:LocalVariableStatement">
                                            <variable name="body">
                                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                                <classifierReferences>
                                                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0"/>
                                                </classifierReferences>
                                              </typeReference>
                                              <initialValue xsi:type="expressions:CastExpression">
                                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                                  <classifierReferences>
                                                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0"/>
                                                  </classifierReferences>
                                                </typeReference>
                                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.1"/>
                                              </initialValue>
                                            </variable>
                                          </statements>
                                          <statements xsi:type="statements:LocalVariableStatement">
                                            <variable name="savedBody">
                                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                                <classifierReferences>
                                                  <target xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/http11/InputFilter.class.xmi#//@classifiers.0"/>
                                                </classifierReferences>
                                              </typeReference>
                                              <initialValue xsi:type="instantiations:NewConstructorCall">
                                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                                  <classifierReferences>
                                                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/SavedRequestInputFilter.class.xmi#//@classifiers.0"/>
                                                  </classifierReferences>
                                                </typeReference>
                                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                                              </initialValue>
                                            </variable>
                                          </statements>
                                          <statements xsi:type="statements:ExpressionStatement">
                                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@variable">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/coyote/http11/InputFilter.class.xmi#//@classifiers.0/@members.1"/>
                                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                                              </next>
                                            </expression>
                                          </statements>
                                          <statements xsi:type="statements:LocalVariableStatement">
                                            <variable name="internalBuffer">
                                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                                <classifierReferences>
                                                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0"/>
                                                </classifierReferences>
                                              </typeReference>
                                              <initialValue xsi:type="expressions:CastExpression">
                                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                                  <classifierReferences>
                                                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0"/>
                                                  </classifierReferences>
                                                </typeReference>
                                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                                                  <next xsi:type="references:MethodCall">
                                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.79"/>
                                                  </next>
                                                </child>
                                              </initialValue>
                                            </variable>
                                          </statements>
                                          <statements xsi:type="statements:ExpressionStatement">
                                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.3/@variable">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.22"/>
                                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@variable"/>
                                              </next>
                                            </expression>
                                          </statements>
                                        </statement>
                                        <condition xsi:type="expressions:EqualityExpression">
                                          <equalityOperators xsi:type="operators:Equal"/>
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@parameters.0"/>
                                          <children xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0/@members.19"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/ActionCode.class.xmi#//@classifiers.0"/>
                                          </children>
                                        </condition>
                                      </elseStatement>
                                    </elseStatement>
                                  </elseStatement>
                                </elseStatement>
                              </elseStatement>
                            </elseStatement>
                          </elseStatement>
                        </elseStatement>
                      </elseStatement>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setAdapter">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="adapter">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/Adapter.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// ------------------------------------------------------ Connector Methods</comments>
        <comments>/**&#xA;     * Set the associated adapter.&#xA;     *&#xA;     * @param adapter the new adapter&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.74/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getAdapter">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/Adapter.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get the associated adapter.&#xA;     *&#xA;     * @return the associated adapter&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="prepareRequest">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// ------------------------------------------------------ Protected Methods</comments>
        <comments>/**&#xA;     * After reading the request headers, we have to setup the request filters.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral" value="true"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:StringReference" value="https"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.38"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="protocolMB">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.45"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.5/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.39"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.5/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.39"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.39"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.5/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.38"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.5/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.39"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.38"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                    <comments>// HTTP/0.9</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral"/>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.5/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.39"/>
                <arguments xsi:type="references:StringReference" value=""/>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
                    <comments>// Unsupported protocol</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral"/>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <comments>// Send 505; Unsupported HTTP version</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.8"/>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.7"/>
                              <arguments xsi:type="references:StringReference" value="http11processor.request.prepare"/>
                            </next>
                          </children>
                          <children xsi:type="references:StringReference" value=" Unsupported HTTP version &quot;"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.5/@variable"/>
                          <children xsi:type="references:StringReference" value="&quot;"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.31"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="505"/>
                  </next>
                </expression>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="methodMB">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.39"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.7/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.41"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.7/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.39"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.41"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.7/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.43"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.7/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.39"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.43"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </condition>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="headers">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.36"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="connectionValueMB">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Check connection header</comments>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.9/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.18"/>
              <arguments xsi:type="references:StringReference" value="connection"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="connectionValueBC">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.10/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.33"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.82">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.11/@statement/@statements.0/@variable"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.24"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </children>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Subtraction"/>
                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:BooleanLiteral" value="true"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.82">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.11/@statement/@statements.0/@variable"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.26"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </children>
                <children xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Subtraction"/>
                  <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                </children>
              </condition>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.10/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="expectMB">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.12/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.9/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:StringReference" value="expect"/>
              </next>
            </value>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.23"/>
                <arguments xsi:type="literals:BooleanLiteral"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.12/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.12/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.50"/>
                  <arguments xsi:type="references:StringReference" value="100-continue"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </next>
              </children>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Subtraction"/>
                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Check user-agent header</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="userAgentValueMB">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.9/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.18"/>
                  <arguments xsi:type="references:StringReference" value="user-agent"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// Check in the restricted list, and adjust the http11</comments>
            <comments>// and keepAlive flags accordingly</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="userAgentValue">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.15/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.31"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="literals:BooleanLiteral"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="literals:BooleanLiteral"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Break"/>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../util/regex/Matcher.class.xmi#//@classifiers.0/@members.31"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0/@members.34"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.15/@statement/@statements.1/@statement/@statements.0/@variable"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.15/@statement/@statements.1/@statement/@statements.1/@init"/>
                      </arraySelectors>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.15/@statement/@statements.1/@statement/@statements.1/@init"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                    <next xsi:type="references:IdentifierReference"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="i">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.15/@statement/@statements.1/@statement/@statements.1/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.15/@statement/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="uriBC">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Check for a full URI (including protocol://host:port/)</comments>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.33"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.41"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="pos">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.16/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.56"/>
                  <arguments xsi:type="references:StringReference" value="://"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="uriBCStart">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.16/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.24"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="slashPos">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Subtraction"/>
                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="uriB">
                  <typeReference xsi:type="types:Byte"/>
                  <arrayDimensionsBefore/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.16/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.22"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.2/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.16/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.61"/>
                      <arguments xsi:type="literals:CharacterLiteral" value="47"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.0/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.2/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.16/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.27"/>
                        </next>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                      <comments>// Set URI as &quot;/&quot;</comments>
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.26"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.3/@statement/@statements.0/@variable"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.1/@variable"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.0/@variable"/>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.41"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.2/@variable"/>
                  <children xsi:type="expressions:UnaryExpression">
                    <operators xsi:type="operators:Subtraction"/>
                    <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.26"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.3/@statement/@statements.0/@variable"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.1/@variable"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.2/@variable"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.16/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.27"/>
                              </next>
                            </children>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.2/@variable"/>
                            <additiveOperators xsi:type="operators:Subtraction"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.41"/>
                      </next>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="hostMB">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.9/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="host"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.3/@statement/@statements.3/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.26"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.3/@statement/@statements.0/@variable"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.1/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.0/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.2/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.0/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.17/@statement/@statements.0/@variable"/>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Subtraction"/>
                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.16/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.55"/>
            <arguments xsi:type="references:StringReference" value="http"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="inputFilters">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Input filter setup</comments>
              <target xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/http11/InputFilter.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.20"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="transferEncodingValueMB">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Parse transfer-encoding header</comments>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.19/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.9/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:StringReference" value="transfer-encoding"/>
              </next>
            </value>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="transferEncodingValue">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.19/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.31"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="startPos">
              <typeReference xsi:type="types:Int">
                <comments>// Parse the comma separated list. &quot;identity&quot; codings are ignored</comments>
              </typeReference>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="commaPos">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.45"/>
                  <arguments xsi:type="literals:CharacterLiteral" value="44"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="encodingName">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="literals:NullLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.3/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.71"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.68"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.56"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.1/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.2/@variable"/>
                    </next>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                        <comments>// Unsupported transfer encoding</comments>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral" value="true"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                      <comments>// 501 - Unimplemented</comments>
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.31"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="501"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Negate"/>
                  <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.81">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.18/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.3/@variable"/>
                  </child>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.2/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.2/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.46"/>
                      <arguments xsi:type="literals:CharacterLiteral" value="44"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.1/@variable"/>
                    </next>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.2/@variable"/>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Subtraction"/>
                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.71"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.68"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.55"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.1/@variable"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                    <comments>// Unsupported transfer encoding</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <comments>// 501 - Unimplemented</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.8"/>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.7"/>
                              <arguments xsi:type="references:StringReference" value="http11processor.request.prepare"/>
                            </next>
                          </children>
                          <children xsi:type="references:StringReference" value=" Unsupported transfer encoding &quot;"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.3/@variable"/>
                          <children xsi:type="references:StringReference" value="&quot;"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.31"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="501"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.81">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.18/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.21/@statement/@statements.3/@variable"/>
              </child>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.19/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="contentLength">
          <typeReference xsi:type="types:Long">
            <comments>// Parse content-length header</comments>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.61"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.18/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.33"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                    </position>
                  </arraySelectors>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.22/@variable"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </children>
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="valueMB">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.9/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.18"/>
              <arguments xsi:type="references:StringReference" value="host"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Check host header</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// 400 - Bad request</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.8"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/res/StringManager.class.xmi#//@classifiers.0/@members.7"/>
                          <arguments xsi:type="references:StringReference" value="http11processor.request.prepare"/>
                        </next>
                      </children>
                      <children xsi:type="references:StringReference" value=" host header missing"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/juli/logging/Log.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.31"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="400"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.24/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.77">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.24/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
              <comments>// If there's no content length </comments>
              <comments>// (broken HTTP/1.0 or HTTP/1.1), assume</comments>
              <comments>// the client is not broken and didn't send a body</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76/@statements.18/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.35"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                    </position>
                  </arraySelectors>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="parseHost">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="valueMB">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Parse host.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <comments>// HTTP/1.0</comments>
              <comments>// Default is what the socket tells us. Overriden if a host is</comments>
              <comments>// found/parsed</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.48"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.34"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="localAddress">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../net/InetAddress.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../net/Socket.class.xmi#//@classifiers.0/@members.32"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <comments>// Setting the socket-related fields. The adapter doesn't know</comments>
              <comments>// about socket.</comments>
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.0/@statement/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../net/InetAddress.class.xmi#//@classifiers.0/@members.30"/>
                    </next>
                  </arguments>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.46"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Return"/>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@parameters.0"/>
            <children xsi:type="literals:NullLiteral"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.24"/>
            </next>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="valueBC">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.33"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="valueB">
          <typeReference xsi:type="types:Byte"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.22"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="valueL">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.27"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="valueS">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.24"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="colonPos">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Subtraction"/>
            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Char"/>
                <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.3/@variable"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.3/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ipv6">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.2/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.4/@variable"/>
                </arraySelectors>
              </children>
              <children xsi:type="literals:CharacterLiteral" value="91"/>
            </expression>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bracketClosed">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="literals:BooleanLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="b">
              <typeReference xsi:type="types:Char"/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Char"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.2/@variable">
                  <arraySelectors>
                    <position xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.9/@init"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.4/@variable"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </position>
                  </arraySelectors>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.9/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.9/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.8/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.9/@statement/@statements.0/@variable"/>
              <children xsi:type="literals:CharacterLiteral" value="93"/>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.5/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.9/@init"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:Break"/>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.7/@variable"/>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.8/@variable"/>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.9/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:CharacterLiteral" value="58"/>
              </condition>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.9/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.3/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.9/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <comments>// 80 - Default HTTP port</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.48"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="80"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <comments>// 443 - Default HTTPS port</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.48"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="443"/>
                  </next>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.28"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.3/@variable"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.46"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.5/@variable"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.28"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.5/@variable"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.46"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="port">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="mult">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="charValue">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <arraySelectors>
                        <position xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Int"/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.2/@variable">
                            <arraySelectors>
                              <position xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.10/@elseStatement/@statements.3/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.4/@variable"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </position>
                            </arraySelectors>
                          </child>
                        </position>
                      </arraySelectors>
                      <target xsi:type="members:Field" href="../../../../../org/apache/tomcat/util/buf/HexUtils.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/HexUtils.class.xmi#//@classifiers.0"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                        <comments>// Invalid character</comments>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral" value="true"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                      <comments>// 400 - Bad request</comments>
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.31"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="400"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Break"/>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.10/@elseStatement/@statements.3/@statement/@statements.0/@variable"/>
                  <children xsi:type="expressions:UnaryExpression">
                    <operators xsi:type="operators:Subtraction"/>
                    <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.10/@elseStatement/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.10/@elseStatement/@statements.1/@variable"/>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:MultiplicativeExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.10/@elseStatement/@statements.3/@statement/@statements.0/@variable"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.10/@elseStatement/@statements.2/@variable"/>
                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                      </expression>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.10/@elseStatement/@statements.2/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:MultiplicativeExpression">
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.10/@elseStatement/@statements.2/@variable"/>
                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.10/@elseStatement/@statements.3/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.5/@variable"/>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.3/@variable"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                <additiveOperators xsi:type="operators:Subtraction"/>
              </initialValue>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.10/@elseStatement/@statements.3/@init"/>
              <operator xsi:type="operators:MinusMinus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.48"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77/@statements.10/@elseStatement/@statements.1/@variable"/>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isCompressable">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Check for compression&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="acceptEncodingMB">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Nope Compression could works in HTTP 1.0 also</comments>
              <comments>// cf: mod_deflate</comments>
              <comments>// Compression only since HTTP 1.1</comments>
              <comments>// if (! http11)</comments>
              <comments>//    return false;</comments>
              <comments>// Check if browser support gzip encoding</comments>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:StringReference" value="accept-encoding"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.36"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="literals:BooleanLiteral"/>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.49"/>
                  <arguments xsi:type="references:StringReference" value="gzip"/>
                </next>
              </children>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Subtraction"/>
                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="contentEncodingMB">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Check if content is not allready gzipped</comments>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:StringReference" value="Content-Encoding"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.24"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="literals:BooleanLiteral"/>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.49"/>
                  <arguments xsi:type="references:StringReference" value="gzip"/>
                </next>
              </children>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Subtraction"/>
                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// If force mode, allways compress (test purposes only)</comments>
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Check for incompatible Browser</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="userAgentValueMB">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.18"/>
                    <arguments xsi:type="references:StringReference" value="user-agent"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.36"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="userAgentValue">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.5/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.31"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <comments>// If one Regexp rule match, disable compression</comments>
                <statement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Return">
                    <returnValue xsi:type="literals:BooleanLiteral"/>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../util/regex/Matcher.class.xmi#//@classifiers.0/@members.31"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../util/regex/Pattern.class.xmi#//@classifiers.0/@members.34"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.5/@statement/@statements.1/@statement/@statements.0/@variable"/>
                    </next>
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.5/@statement/@statements.1/@statement/@statements.1/@init"/>
                    </arraySelectors>
                  </condition>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.5/@statement/@statements.1/@statement/@statements.1/@init"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32">
                    <next xsi:type="references:IdentifierReference"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="i">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.5/@statement/@statements.1/@statement/@statements.1/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.5/@statement/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="contentLength">
          <typeReference xsi:type="types:Long">
            <comments>// Check if suffisant len to trig the compression</comments>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.59"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <comments>// Check for compatible MIME-TYPE</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="expressions:NestedExpression">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.55"/>
                      </next>
                    </arguments>
                  </expression>
                </returnValue>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.6/@variable"/>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Subtraction"/>
                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </children>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.6/@variable"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="prepareResponse">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * When committing the response, we have to validate the set of headers, as&#xA;     * well as setup the response filters.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="entityBody">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="outputFilters">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/http11/OutputFilter.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.21"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
              <comments>// HTTP/0.9</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.23"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.2/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.33"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                    </position>
                  </arraySelectors>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Return"/>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
          <children xsi:type="literals:BooleanLiteral" value="true"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="statusCode">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.30"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
              <comments>// No entity body</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.23"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.2/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.35"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                    </position>
                  </arraySelectors>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.4/@variable"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="204"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.4/@variable"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="205"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.4/@variable"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="304"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="methodMB">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Request.class.xmi#//@classifiers.0/@members.39"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
              <comments>// No entity body</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.23"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.2/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.35"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                    </position>
                  </arraySelectors>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.6/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.39"/>
            <arguments xsi:type="references:StringReference" value="HEAD"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="useCompression">
          <typeReference xsi:type="types:Boolean">
            <comments>// Check for compression</comments>
          </typeReference>
          <initialValue xsi:type="literals:BooleanLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.8/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.78"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// Change content-length to -1 to force chunking</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.56"/>
                    <arguments xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Subtraction"/>
                      <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.8/@variable"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.0/@variable"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="headers">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.24"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.56"/>
                <arguments xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Subtraction"/>
                  <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.0/@variable"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="contentType">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.55"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.10/@variable">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.11/@elseStatement/@statements.0/@variable"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.17"/>
                    <arguments xsi:type="references:StringReference" value="Content-Type"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.11/@elseStatement/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="contentLanguage">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.51"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.10/@variable">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.11/@elseStatement/@statements.2/@variable"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.17"/>
                    <arguments xsi:type="references:StringReference" value="Content-Language"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.11/@elseStatement/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="contentLength">
          <typeReference xsi:type="types:Long"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/Response.class.xmi#//@classifiers.0/@members.59"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.10/@variable">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.56"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.12/@variable"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="Content-Length"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.23"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.2/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.33"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                    </position>
                  </arraySelectors>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.12/@variable"/>
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Subtraction"/>
            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </children>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.23"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.2/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.34"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                        </position>
                      </arraySelectors>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.10/@variable">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.27"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.14"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.29"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.0/@variable"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.23"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.2/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.33"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                        </position>
                      </arraySelectors>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </elseStatement>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.23"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.2/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.36"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                    </position>
                  </arraySelectors>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.10/@variable">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:StringReference" value="gzip"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="Content-Encoding"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.10/@variable">
              <comments>// Make Proxies happy via Vary (from mod_deflate)</comments>
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:StringReference" value="Accept-Encoding"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="Vary"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.8/@variable"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="date">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Add date header</comments>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.15/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../security/AccessController.class.xmi#//@classifiers.0/@members.1"/>
                    <arguments xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Interface" href="../../../../security/PrivilegedAction.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <anonymousClass>
                        <members xsi:type="members:ClassMethod" name="run">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <annotationsAndModifiers xsi:type="modifiers:Public"/>
                          <statements xsi:type="statements:Return">
                            <returnValue xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/FastHttpDateFormat.class.xmi#//@classifiers.0/@members.10"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/http/FastHttpDateFormat.class.xmi#//@classifiers.0"/>
                            </returnValue>
                          </statements>
                        </members>
                      </anonymousClass>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../security/AccessController.class.xmi#//@classifiers.0"/>
                </child>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0/@members.12"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/Constants.class.xmi#//@classifiers.0"/>
              </next>
            </next>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.15/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/FastHttpDateFormat.class.xmi#//@classifiers.0/@members.10"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/http/FastHttpDateFormat.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.10/@variable">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.15/@variable"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="Date"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// FIXME: Add transfer encoding header</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
                <comments>// Mark as close the connection after the request, and add the</comments>
                <comments>// connection: close header</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.0/@variable"/>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
            <comments>// If we know that the request is bad this early, add the</comments>
            <comments>// Connection: close header.</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            <children xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.83">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.4/@variable"/>
              </child>
            </children>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.10/@variable">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.23"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.14"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.22"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.10/@variable">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.25"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.14"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.22"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
            </children>
            <children xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
            </children>
          </condition>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
          <comments>// Build the response header</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Add server header</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.10/@variable">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/MessageBytes.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="Server"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.41"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="size">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.10/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.7"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.32"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.10/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.8"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.24/@init"/>
                  </next>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.10/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/http/MimeHeaders.class.xmi#//@classifiers.0/@members.9"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.24/@init"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.24/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.23/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.24/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.35"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="initializeFilters">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Initialize standard input and output filters.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
          <comments>// Create and add the identity filters.</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/IdentityInputFilter.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/IdentityOutputFilter.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
          <comments>// Create and add the chunked filters.</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/ChunkedInputFilter.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/ChunkedOutputFilter.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
          <comments>// Create and add the void filters.</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/VoidInputFilter.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/VoidOutputFilter.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
          <comments>// Create and add buffered input filter</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/BufferedInputFilter.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
          <comments>// Create and add the chunked filters.</comments>
          <comments>//inputBuffer.addFilter(new GzipInputFilter());</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalOutputBuffer.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/filters/GzipOutputFilter.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </arguments>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addInputFilter">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inputFilters">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/http11/InputFilter.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="encodingName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Add an input filter to the current request.&#xA;     *&#xA;     * @return false if the encoding was not found (which would mean it is&#xA;     * unsupported)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <comments>// Skip</comments>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@parameters.1">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
            <arguments xsi:type="references:StringReference" value="identity"/>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.22"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@parameters.0">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0/@members.34"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/coyote/http11/Constants.class.xmi#//@classifiers.0"/>
                      </position>
                    </arraySelectors>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral" value="true"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
              <arguments xsi:type="references:StringReference" value="chunked"/>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/coyote/http11/InternalInputBuffer.class.xmi#//@classifiers.0/@members.22"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@parameters.0">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.0/@elseStatement/@elseStatement/@statements.0/@init"/>
                            </arraySelectors>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@parameters.1"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.43"/>
                      </next>
                      <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/coyote/http11/InputFilter.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.0/@elseStatement/@elseStatement/@statements.0/@init"/>
                    </arraySelectors>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.0/@elseStatement/@elseStatement/@statements.0/@init"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@parameters.0">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.0/@elseStatement/@elseStatement/@statements.0/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="literals:BooleanLiteral"/>
            </statements>
          </elseStatement>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="findBytes">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="b">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Specialized utility method: find a sequence of lower case bytes inside&#xA;     * a ByteChunk.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="first">
          <typeReference xsi:type="types:Byte"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@parameters.1">
            <arraySelectors>
              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </arraySelectors>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="buff">
          <typeReference xsi:type="types:Byte"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.23"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="start">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.24"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="end">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/ByteChunk.class.xmi#//@classifiers.0/@members.32"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="srcEnd">
          <typeReference xsi:type="types:Int">
            <comments>// Look for first char</comments>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@parameters.1">
            <next xsi:type="references:IdentifierReference"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Continue"/>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/Ascii.class.xmi#//@classifiers.0/@members.10"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.5/@init"/>
                    </arraySelectors>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/Ascii.class.xmi#//@classifiers.0"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.0/@variable"/>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="myPos">
              <typeReference xsi:type="types:Int">
                <comments>// found first char, now look for a match</comments>
              </typeReference>
              <initialValue xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.5/@init"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <comments>// found it</comments>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Break"/>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/tomcat/util/buf/Ascii.class.xmi#//@classifiers.0/@members.10"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.1/@variable">
                        <arraySelectors>
                          <position xsi:type="expressions:SuffixUnaryModificationExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.5/@statement/@statements.1/@variable"/>
                            <operator xsi:type="operators:PlusPlus"/>
                          </position>
                        </arraySelectors>
                      </arguments>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/tomcat/util/buf/Ascii.class.xmi#//@classifiers.0"/>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@parameters.1">
                    <arraySelectors>
                      <position xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.5/@statement/@statements.2/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </position>
                    </arraySelectors>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.5/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.2/@variable"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                  </returnValue>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.5/@statement/@statements.2/@init"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.4/@variable"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.5/@statement/@statements.2/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.4/@variable"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="srcPos">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            </init>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.5/@init"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.3/@variable"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.4/@variable"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </expression>
          </children>
          <relationOperators xsi:type="operators:LessThanOrEqual"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.2/@variable"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.5/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Subtraction"/>
          <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="statusDropsConnection">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="status">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Determine if we must drop the connection because of the HTTP status&#xA;     * code.  Use the same list of codes as Apache/httpd.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <comments>/* SC_NOT_IMPLEMENTED */</comments>
        <returnValue xsi:type="expressions:ConditionalOrExpression">
          <comments>/* SC_BAD_REQUEST */</comments>
          <comments>/* SC_REQUEST_TIMEOUT */</comments>
          <comments>/* SC_LENGTH_REQUIRED */</comments>
          <comments>/* SC_REQUEST_ENTITY_TOO_LARGE */</comments>
          <comments>/* SC_REQUEST_URI_TOO_LARGE */</comments>
          <comments>/* SC_INTERNAL_SERVER_ERROR */</comments>
          <comments>/* SC_SERVICE_UNAVAILABLE */</comments>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.83/@parameters.0"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="400"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.83/@parameters.0"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="408"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.83/@parameters.0"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="411"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.83/@parameters.0"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="413"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.83/@parameters.0"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="414"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.83/@parameters.0"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="500"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.83/@parameters.0"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="503"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.83/@parameters.0"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="501"/>
          </children>
        </returnValue>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Processes HTTP requests.&#xA; *&#xA; * @author Remy Maucherat&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../../../org/apache/coyote/ActionHook.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
