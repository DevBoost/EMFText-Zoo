<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../java.ecore#/4 http://www.emftext.org/java/literals ../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../java.ecore#/10 http://www.emftext.org/java/types ../../../../../java.ecore#/16" name="SSIConditionalState.java">
  <comments>/*&#xA; * Licensed to the Apache Software Foundation (ASF) under one or more&#xA; * contributor license agreements.  See the NOTICE file distributed with&#xA; * this work for additional information regarding copyright ownership.&#xA; * The ASF licenses this file to You under the Apache License, Version 2.0&#xA; * (the &quot;License&quot;); you may not use this file except in compliance with&#xA; * the License.  You may obtain a copy of the License at&#xA; *&#xA; *      http://www.apache.org/licenses/LICENSE-2.0&#xA; *&#xA; * Unless required by applicable law or agreed to in writing, software&#xA; * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xA; * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; * See the License for the specific language governing permissions and&#xA; * limitations under the License.&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>catalina</namespaces>
  <namespaces>ssi</namespaces>
  <classifiers xsi:type="classifiers:Class" name="SSIConditionalState">
    <comments>/**&#xA; * This class is used by SSIMediator and SSIConditional to keep track of state&#xA; * information necessary to process the nested conditional commands ( if, elif,&#xA; * else, endif ).&#xA; * &#xA; * @version $Revision: 531303 $&#xA; * @author Dan Sandberg&#xA; * @author Paul Speed&#xA; */</comments>
    <members xsi:type="members:Field" name="branchTaken">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * Set to true if the current conditional has already been completed, i.e.:&#xA;     * a branch was taken.&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="nestingCount">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;     * Counts the number of nested false branches.&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="processConditionalCommandsOnly">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * Set to true if only conditional commands ( if, elif, else, endif )&#xA;     * should be processed.&#xA;     */</comments>
      </typeReference>
    </members>
  </classifiers>
</containers:CompilationUnit>
