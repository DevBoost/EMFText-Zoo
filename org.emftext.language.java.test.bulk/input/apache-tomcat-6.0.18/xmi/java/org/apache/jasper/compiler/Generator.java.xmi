<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:generics="http://www.emftext.org/java/generics" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../java.ecore#/5 http://www.emftext.org/java/generics ../../../../../java.ecore#/6 http://www.emftext.org/java/imports ../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../../java.ecore#/17" name="Generator.java">
  <comments>/*&#xA; * Licensed to the Apache Software Foundation (ASF) under one or more&#xA; * contributor license agreements.  See the NOTICE file distributed with&#xA; * this work for additional information regarding copyright ownership.&#xA; * The ASF licenses this file to You under the Apache License, Version 2.0&#xA; * (the &quot;License&quot;); you may not use this file except in compliance with&#xA; * the License.  You may obtain a copy of the License at&#xA; *&#xA; *      http://www.apache.org/licenses/LICENSE-2.0&#xA; *&#xA; * Unless required by applicable law or agreed to in writing, software&#xA; * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xA; * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; * See the License for the specific language governing permissions and&#xA; * limitations under the License.&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>jasper</namespaces>
  <namespaces>compiler</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>beans</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../beans/BeanInfo.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>beans</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../beans/IntrospectionException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>beans</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../beans/Introspector.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>beans</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../beans/PropertyDescriptor.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>lang</namespaces>
    <namespaces>reflect</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../lang/reflect/Method.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>lang</namespaces>
    <namespaces>reflect</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../lang/reflect/Modifier.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../util/ArrayList.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../util/Arrays.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../util/Collections.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../util/Enumeration.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../util/HashMap.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../util/Iterator.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../util/List.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../util/Vector.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>el</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/el/MethodExpression.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>el</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/el/ValueExpression.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>servlet</namespaces>
    <namespaces>jsp</namespaces>
    <namespaces>tagext</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>servlet</namespaces>
    <namespaces>jsp</namespaces>
    <namespaces>tagext</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagInfo.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>servlet</namespaces>
    <namespaces>jsp</namespaces>
    <namespaces>tagext</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>servlet</namespaces>
    <namespaces>jsp</namespaces>
    <namespaces>tagext</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>jasper</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>jasper</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>jasper</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>jasper</namespaces>
    <namespaces>runtime</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/runtime/JspRuntimeLibrary.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>xml</namespaces>
    <namespaces>sax</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../org/xml/sax/Attributes.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="Generator">
    <comments>/**&#xA; * Generate Java source from Nodes&#xA; * &#xA; * @author Anil K. Vijendran&#xA; * @author Danno Ferrin&#xA; * @author Mandar Raje&#xA; * @author Rajiv Mordani&#xA; * @author Pierre Delisle&#xA; * &#xA; * Tomcat 4.1.x and Tomcat 5:&#xA; * @author Kin-man Chung&#xA; * @author Jan Luehe&#xA; * @author Shawn Bayern&#xA; * @author Mark Roth&#xA; * @author Denis Benoit&#xA; * &#xA; * Tomcat 6.x&#xA; * @author Jacob Hookom&#xA; * @author Remy Maucherat&#xA; */</comments>
    <members xsi:type="members:Field" name="OBJECT_CLASS">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="references:IdentifierReference">
            <next xsi:type="references:ReflectiveClassReference"/>
            <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
          </initialValues>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VAR_EXPRESSIONFACTORY">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="../../../../lang/System.class.xmi#//@classifiers.0/@members.26"/>
          <arguments xsi:type="references:StringReference" value="org.apache.jasper.compiler.Generator.VAR_EXPRESSIONFACTORY"/>
          <arguments xsi:type="references:StringReference" value="_el_expressionfactory"/>
        </next>
        <target xsi:type="classifiers:Class" href="../../../../lang/System.class.xmi#//@classifiers.0"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VAR_ANNOTATIONPROCESSOR">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="../../../../lang/System.class.xmi#//@classifiers.0/@members.26"/>
          <arguments xsi:type="references:StringReference" value="org.apache.jasper.compiler.Generator.VAR_ANNOTATIONPROCESSOR"/>
          <arguments xsi:type="references:StringReference" value="_jsp_annotationprocessor"/>
        </next>
        <target xsi:type="classifiers:Class" href="../../../../lang/System.class.xmi#//@classifiers.0"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="out">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="methodsBuffered">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../util/ArrayList.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fragmentHelperClass">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0/@members.49"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="err">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ErrorDispatcher.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="beanInfo">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/BeanRepository.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="ctxt">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="isPoolingEnabled">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="breakAtLF">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="jspIdPrefix">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="jspId">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="pageInfo">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="tagHandlerPoolNames">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <typeArguments xsi:type="generics:QualifiedTypeArgument">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </typeArguments>
          <target xsi:type="classifiers:Class" href="../../../../util/Vector.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="charArrayBuffer">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0/@members.48"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:ClassMethod" name="quote">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>/**&#xA;     * @param s&#xA;     *            the input string&#xA;     * @return quoted and escaped string, per Java rule&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="references:StringReference" value="null"/>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:AdditiveExpression">
          <children xsi:type="literals:CharacterLiteral" value="34"/>
          <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.17">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0"/>
          </children>
          <children xsi:type="literals:CharacterLiteral" value="34"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="escape">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>/**&#xA;     * @param s&#xA;     *            the input string&#xA;     * @return escaped string, per Java rule&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="references:StringReference" value=""/>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="b">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="c">
              <typeReference xsi:type="types:Char"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.23"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@init"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                    <arguments xsi:type="literals:CharacterLiteral" value="34"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                  <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                </next>
              </expression>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@statement/@statements.0/@variable"/>
              <children xsi:type="literals:CharacterLiteral" value="34"/>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                      <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                    <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                  </next>
                </expression>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:CharacterLiteral" value="92"/>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                        <arguments xsi:type="literals:CharacterLiteral" value="110"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                      <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                    </next>
                  </expression>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@statement/@statements.0/@variable"/>
                  <children xsi:type="literals:CharacterLiteral" value="10"/>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                          <arguments xsi:type="literals:CharacterLiteral" value="114"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                        <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                      </next>
                    </expression>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:CharacterLiteral" value="13"/>
                  </condition>
                  <elseStatement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@statement/@statements.0/@variable"/>
                      </next>
                    </expression>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.22"/>
            </next>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="quote">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:Char"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>/**&#xA;     * Single quote and escape a character&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="b">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
            <arguments xsi:type="literals:CharacterLiteral" value="39"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                <arguments xsi:type="literals:CharacterLiteral" value="39"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
              <arguments xsi:type="literals:CharacterLiteral" value="92"/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
          <children xsi:type="literals:CharacterLiteral" value="39"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                  <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                <arguments xsi:type="literals:CharacterLiteral" value="92"/>
              </next>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
            <children xsi:type="literals:CharacterLiteral" value="92"/>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                    <arguments xsi:type="literals:CharacterLiteral" value="110"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                  <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                </next>
              </expression>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
              <children xsi:type="literals:CharacterLiteral" value="10"/>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                      <arguments xsi:type="literals:CharacterLiteral" value="114"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                    <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                  </next>
                </expression>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
                <children xsi:type="literals:CharacterLiteral" value="13"/>
              </condition>
              <elseStatement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
                  </next>
                </expression>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
            <arguments xsi:type="literals:CharacterLiteral" value="39"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createJspId">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="sb">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="32"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="name">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.64"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                    <arguments xsi:type="literals:CharacterLiteral" value="95"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.27"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/Math.class.xmi#//@classifiers.0/@members.29"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.0/@statement/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.44"/>
                        </next>
                      </arguments>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../lang/Math.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="jsp_"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.0/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:AdditiveExpression">
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
                <self xsi:type="literals:This"/>
              </child>
              <operator xsi:type="operators:PlusPlus"/>
            </expression>
          </children>
          <additiveOperators xsi:type="operators:Addition"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="generateDeclarations">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="page">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>Node</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Generates declarations. This includes &quot;info&quot; of the page directive, and&#xA;     * scriptlet declarations.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="classifiers:Class" name="DeclarationVisitor">
        <members xsi:type="members:Field" name="getServletInfoGenerated">
          <initialValue xsi:type="literals:BooleanLiteral"/>
          <typeReference xsi:type="types:Boolean"/>
          <annotationsAndModifiers xsi:type="modifiers:Private"/>
        </members>
        <members xsi:type="members:ClassMethod" name="visit">
          <typeReference xsi:type="types:Void"/>
          <parameters xsi:type="parameters:OrdinaryParameter" name="n">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$PageDirective.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameters>
          <exceptions>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </exceptions>
          <annotationsAndModifiers xsi:type="modifiers:Public">
            <comments>/*&#xA;             * Generates getServletInfo() method that returns the value of the&#xA;             * page directive's 'info' attribute, if present.&#xA;             * &#xA;             * The Validator has already ensured that if the translation unit&#xA;             * contains more than one page directive with an 'info' attribute,&#xA;             * their values match.&#xA;             */</comments>
          </annotationsAndModifiers>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return"/>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="info">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.1/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.28"/>
                  <arguments xsi:type="references:StringReference" value="info"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Return"/>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.1/@statements.1/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="public String getServletInfo() {"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                <arguments xsi:type="references:StringReference" value="return "/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.1/@statements.1/@variable"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                <arguments xsi:type="references:StringReference" value=";"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="}"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
              </next>
            </expression>
          </statements>
        </members>
        <members xsi:type="members:ClassMethod" name="visit">
          <typeReference xsi:type="types:Void"/>
          <parameters xsi:type="parameters:OrdinaryParameter" name="n">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Declaration.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameters>
          <exceptions>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </exceptions>
          <annotationsAndModifiers xsi:type="modifiers:Public"/>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.2/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.21"/>
                <arguments xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.2/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ScriptingElement.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </arguments>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.2/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
        </members>
        <members xsi:type="members:ClassMethod" name="visit">
          <typeReference xsi:type="types:Void"/>
          <parameters xsi:type="parameters:OrdinaryParameter" name="n">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameters>
          <exceptions>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </exceptions>
          <annotationsAndModifiers xsi:type="modifiers:Public">
            <comments>// Custom Tags may contain declarations from tag plugins.</comments>
          </annotationsAndModifiers>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.3/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
                          <arguments xsi:type="references:SelfReference">
                            <self xsi:type="literals:This"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.67"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.3/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.67"/>
                    </next>
                  </children>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.3/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.3/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
                          <arguments xsi:type="references:SelfReference">
                            <self xsi:type="literals:This"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.69"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.3/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.69"/>
                    </next>
                  </children>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.3/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.63"/>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@members.3/@parameters.0"/>
                </expression>
              </statements>
            </elseStatement>
          </statements>
        </members>
        <extends xsi:type="types:NamespaceClassifierReference">
          <namespaces>Node</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </extends>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.20/@statements.0"/>
              </typeReference>
            </arguments>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="compileTagHandlerPoolList">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="page">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>Node</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Compiles list of tag handler pool names.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="classifiers:Class" name="TagHandlerPoolVisitor">
        <members xsi:type="members:Field" name="names">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../util/Vector.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <annotationsAndModifiers xsi:type="modifiers:Private"/>
        </members>
        <members xsi:type="members:Constructor" name="TagHandlerPoolVisitor">
          <comments>/*&#xA;             * Constructor&#xA;             * &#xA;             * @param v Vector of tag handler pool names to populate&#xA;             */</comments>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.1/@parameters.0"/>
            </expression>
          </statements>
          <parameters xsi:type="parameters:OrdinaryParameter" name="v">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../util/Vector.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameters>
        </members>
        <members xsi:type="members:ClassMethod" name="visit">
          <typeReference xsi:type="types:Void"/>
          <parameters xsi:type="parameters:OrdinaryParameter" name="n">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameters>
          <exceptions>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </exceptions>
          <annotationsAndModifiers xsi:type="modifiers:Public">
            <comments>/*&#xA;             * Gets the name of the tag handler pool for the given custom tag&#xA;             * and adds it to the list of tag handler pool names unless it is&#xA;             * already contained in it.&#xA;             */</comments>
          </annotationsAndModifiers>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="name">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.21/@statements.0/@members.3">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.2/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.32"/>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.2/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.23"/>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.2/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.24"/>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.2/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.71"/>
                      </next>
                    </arguments>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.2/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.39"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.2/@statements.0/@statement/@statements.0/@variable"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.2/@statements.0/@statement/@statements.0/@variable"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Negate"/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.2/@statements.0/@statement/@statements.0/@variable"/>
                    </next>
                  </child>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.2/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.50"/>
                </next>
              </child>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.2/@parameters.0"/>
            </expression>
          </statements>
        </members>
        <members xsi:type="members:ClassMethod" name="createTagHandlerPoolName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <parameters xsi:type="parameters:OrdinaryParameter" name="prefix">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameters>
          <parameters xsi:type="parameters:OrdinaryParameter" name="shortName">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameters>
          <parameters xsi:type="parameters:OrdinaryParameter" name="attrs">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../../../org/xml/sax/Attributes.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameters>
          <parameters xsi:type="parameters:OrdinaryParameter" name="hasEmptyBody">
            <typeReference xsi:type="types:Boolean"/>
          </parameters>
          <annotationsAndModifiers xsi:type="modifiers:Private">
            <comments>/*&#xA;             * Creates the name of the tag handler pool whose tag handlers may&#xA;             * be (re)used to service this action.&#xA;             * &#xA;             * @return The name of the tag handler pool&#xA;             */</comments>
          </annotationsAndModifiers>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="poolName">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="literals:NullLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="_jspx_tagPool_"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@parameters.0"/>
                <children xsi:type="references:StringReference" value="_"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@parameters.1"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="attrNames">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arrayDimensionsBefore/>
                  <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@parameters.2">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../org/xml/sax/Attributes.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                    </sizes>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.2/@statement/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.2/@statement/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@parameters.2">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../org/xml/sax/Attributes.class.xmi#//@classifiers.0/@members.3"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.2/@statement/@statements.1/@init"/>
                        </next>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.2/@statement/@statements.1/@init"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.2/@statement/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="i">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.2/@statement/@statements.1/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../util/Arrays.class.xmi#//@classifiers.0/@members.46"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.2/@statement/@statements.0/@variable"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../util/Collections.class.xmi#//@classifiers.0/@members.68"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../util/Collections.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../util/Arrays.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.0/@variable"/>
                        <children xsi:type="references:StringReference" value="&amp;"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.2/@statement/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <relationOperators xsi:type="operators:GreaterThan"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.0/@variable"/>
                        <children xsi:type="references:StringReference" value="_"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.2/@statement/@statements.0/@variable">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.2/@statement/@statements.4/@init"/>
                          </arraySelectors>
                        </children>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.2/@statement/@statements.4/@init"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.2/@statement/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="i">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.2/@statement/@statements.4/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@parameters.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.0/@variable"/>
                    <children xsi:type="references:StringReference" value="_nobody"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@parameters.3"/>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.48"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@statements.0/@members.3/@statements.0/@variable"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
        </members>
        <extends xsi:type="types:NamespaceClassifierReference">
          <namespaces>Node</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </extends>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.21/@statements.0"/>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
            </arguments>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="declareTemporaryScriptingVars">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="page">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>Node</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="classifiers:Class" name="ScriptingVarVisitor">
        <members xsi:type="members:Field" name="vars">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../util/Vector.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <annotationsAndModifiers xsi:type="modifiers:Private"/>
        </members>
        <members xsi:type="members:Constructor" name="ScriptingVarVisitor">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../util/Vector.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </value>
            </expression>
          </statements>
        </members>
        <members xsi:type="members:ClassMethod" name="visit">
          <typeReference xsi:type="types:Void"/>
          <parameters xsi:type="parameters:OrdinaryParameter" name="n">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameters>
          <exceptions>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </exceptions>
          <annotationsAndModifiers xsi:type="modifiers:Public"/>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="tagVarInfos">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arrayDimensionsBefore/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.52"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="varInfos">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arrayDimensionsBefore/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.53"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ForLoop">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="varName">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.1/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.8"/>
                            </next>
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@statement/@statements.0/@init"/>
                            </arraySelectors>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="tmpVarName">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:StringReference" value="_jspx_"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@statement/@statements.0/@statement/@statements.0/@variable"/>
                            <children xsi:type="references:StringReference" value="_"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@parameters.0">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.60"/>
                              </next>
                            </children>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.0">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@statement/@statements.0/@statement/@statements.1/@variable"/>
                              </next>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.1/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.9"/>
                                  </next>
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@statement/@statements.0/@init"/>
                                  </arraySelectors>
                                </arguments>
                              </next>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                                <arguments xsi:type="references:StringReference" value=" "/>
                              </next>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@statement/@statements.0/@statement/@statements.1/@variable"/>
                              </next>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                                <arguments xsi:type="references:StringReference" value=" = "/>
                              </next>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.18"/>
                                <arguments xsi:type="literals:NullLiteral"/>
                              </next>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                                <arguments xsi:type="references:StringReference" value=";"/>
                              </next>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:UnaryExpression">
                          <operators xsi:type="operators:Negate"/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.17"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@statement/@statements.0/@statement/@statements.1/@variable"/>
                            </next>
                          </child>
                        </condition>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@statement/@statements.0/@init"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.1/@variable">
                        <next xsi:type="references:IdentifierReference"/>
                      </children>
                      <relationOperators xsi:type="operators:LessThan"/>
                    </condition>
                    <init xsi:type="variables:LocalVariable" name="i">
                      <typeReference xsi:type="types:Int"/>
                      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </init>
                    <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@statement/@statements.0/@init"/>
                      <operator xsi:type="operators:PlusPlus"/>
                    </updates>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.1/@variable">
                    <next xsi:type="references:IdentifierReference"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <relationOperators xsi:type="operators:GreaterThan"/>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ForLoop">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="varName">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.6"/>
                            </next>
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@elseStatement/@statements.0/@init"/>
                            </arraySelectors>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@elseStatement/@statements.0/@statement/@statements.0/@variable"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagData.class.xmi#//@classifiers.0/@members.8"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.0/@variable">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.7"/>
                                      </next>
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@elseStatement/@statements.0/@init"/>
                                      </arraySelectors>
                                    </arguments>
                                  </next>
                                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.38"/>
                                </next>
                              </value>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@elseStatement/@statements.0/@statement/@statements.0/@variable"/>
                          <children xsi:type="literals:NullLiteral"/>
                        </condition>
                        <elseStatement xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:Continue">
                              <comments>// alias</comments>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.7"/>
                              </next>
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@elseStatement/@statements.0/@init"/>
                              </arraySelectors>
                            </children>
                            <children xsi:type="literals:NullLiteral"/>
                          </condition>
                        </elseStatement>
                      </statements>
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="tmpVarName">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:StringReference" value="_jspx_"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@elseStatement/@statements.0/@statement/@statements.0/@variable"/>
                            <children xsi:type="references:StringReference" value="_"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@parameters.0">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.60"/>
                              </next>
                            </children>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.0">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@elseStatement/@statements.0/@statement/@statements.2/@variable"/>
                              </next>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.0/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.8"/>
                                  </next>
                                  <arraySelectors>
                                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@elseStatement/@statements.0/@init"/>
                                  </arraySelectors>
                                </arguments>
                              </next>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                                <arguments xsi:type="references:StringReference" value=" "/>
                              </next>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@elseStatement/@statements.0/@statement/@statements.2/@variable"/>
                              </next>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                                <arguments xsi:type="references:StringReference" value=" = "/>
                              </next>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.18"/>
                                <arguments xsi:type="literals:NullLiteral"/>
                              </next>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                                <arguments xsi:type="references:StringReference" value=";"/>
                              </next>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:UnaryExpression">
                          <operators xsi:type="operators:Negate"/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.17"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@elseStatement/@statements.0/@statement/@statements.2/@variable"/>
                            </next>
                          </child>
                        </condition>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@elseStatement/@statements.0/@init"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.0/@variable">
                        <next xsi:type="references:IdentifierReference"/>
                      </children>
                      <relationOperators xsi:type="operators:LessThan"/>
                    </condition>
                    <init xsi:type="variables:LocalVariable" name="i">
                      <typeReference xsi:type="types:Int"/>
                      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </init>
                    <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@statements.0/@statement/@statements.2/@elseStatement/@statements.0/@init"/>
                      <operator xsi:type="operators:PlusPlus"/>
                    </updates>
                  </statements>
                </elseStatement>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.60"/>
                </next>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@statements.0/@members.2/@parameters.0"/>
            </expression>
          </statements>
        </members>
        <extends xsi:type="types:NamespaceClassifierReference">
          <namespaces>Node</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </extends>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.22/@statements.0"/>
              </typeReference>
            </arguments>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="generateInit">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Generates the _jspInit() method for instantiating the tag handler pools.&#xA;     * For tag file, _jspInit has to be invoked manually, and the ServletConfig&#xA;     * object explicitly passed.&#xA;     * &#xA;     * In JSP 2.1, we also instantiate an ExpressionFactory&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="private void _jspInit(ServletConfig config) {"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.56"/>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="public void _jspInit() {"/>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.22"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.2/@statement/@statements.0/@init"/>
                      </next>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:StringReference" value=" = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool("/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:StringReference" value="config"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.56"/>
                  </next>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:StringReference" value="getServletConfig()"/>
                      </next>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:StringReference" value=");"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.2/@statement/@statements.0/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.14"/>
                </next>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.2/@statement/@statements.0/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:StringReference" value=" = _jspxFactory.getJspApplicationContext("/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:StringReference" value="config"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.56"/>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:StringReference" value="getServletConfig()"/>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:StringReference" value=".getServletContext()).getExpressionFactory();"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:StringReference" value=" = (org.apache.AnnotationProcessor) "/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:StringReference" value="config"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.56"/>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:StringReference" value="getServletConfig()"/>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:StringReference" value=".getServletContext().getAttribute(org.apache.AnnotationProcessor.class.getName());"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="}"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="generateDestroy">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Generates the _jspDestroy() method which is responsible for calling the&#xA;     * release() method on every tag handler in any of the tag handler pools.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="public void _jspDestroy() {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.22"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.2/@statement/@statements.0/@init"/>
                        </next>
                      </child>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:StringReference" value=".release();"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.2/@statement/@statements.0/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.14"/>
                </next>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.2/@statement/@statements.0/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="}"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="genPreamblePackage">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="packageName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Generate preamble package name (shared by servlet and tag handler&#xA;     * preamble generation)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="package "/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0"/>
                  <children xsi:type="references:StringReference" value=";"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:StringReference" value="">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0"/>
              </next>
            </child>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0"/>
            <children xsi:type="literals:NullLiteral"/>
          </children>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="genPreambleImports">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Generate preamble imports (shared by servlet and tag handler preamble&#xA;     * generation)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="iter">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../util/Iterator.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../util/List.class.xmi#//@classifiers.0/@members.3"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.48"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                <arguments xsi:type="references:StringReference" value="import "/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </child>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                <arguments xsi:type="references:StringReference" value=";"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../../../../util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="genPreambleStaticInitializers">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Generation of static initializers in preamble. For example, dependant&#xA;     * list, el function map, prefix map. (shared by servlet and tag handler&#xA;     * preamble generation)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// Static data for getDependants()</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="private static java.util.List _jspx_dependants;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="dependants">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../util/List.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.51"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="iter">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../util/Iterator.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.4/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../util/List.class.xmi#//@classifiers.0/@members.3"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="static {"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                <arguments xsi:type="references:StringReference" value="_jspx_dependants = new java.util.ArrayList("/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value=""/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.4/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../util/List.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                <arguments xsi:type="references:StringReference" value=");"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:StringReference" value="_jspx_dependants.add(&quot;"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.5/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                      </child>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:StringReference" value="&quot;);"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.5/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="}"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.4/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../util/List.class.xmi#//@classifiers.0/@members.1"/>
            </next>
          </child>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="genPreambleClassVariableDeclarations">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="className">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Declare tag handler pools (tags of the same type and with the same&#xA;     * attribute set share the same tag handler pool) (shared by servlet and tag&#xA;     * handler preamble generation)&#xA;     * &#xA;     * In JSP 2.1, we also scope an instance of ExpressionFactory&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="private org.apache.jasper.runtime.TagHandlerPool "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.22"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.0/@statement/@statements.0/@init"/>
                        </next>
                      </children>
                      <children xsi:type="references:StringReference" value=";"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.0/@statement/@statements.0/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.14"/>
                </next>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.0/@statement/@statements.0/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.15"/>
              </next>
            </child>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
            <arguments xsi:type="references:StringReference" value="private javax.el.ExpressionFactory "/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:StringReference" value=";"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
            <arguments xsi:type="references:StringReference" value="private org.apache.AnnotationProcessor "/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:StringReference" value=";"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="genPreambleMethods">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Declare general-purpose methods (shared by servlet and tag handler&#xA;     * preamble generation)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// Method used to get compile time file dependencies</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="public Object getDependants() {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="return _jspx_dependants;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="}"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.23"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.24"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="generatePreamble">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="page">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>Node</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Generates the beginning of the static portion of the servlet.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="servletPackageName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.61"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="servletClassName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.51"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="serviceMethodName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.25">
          <comments>// First the package name:</comments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.0/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.26">
          <comments>// Generate imports</comments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// Generate class declaration</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
            <arguments xsi:type="references:StringReference" value="public final class "/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.1/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:StringReference" value=" extends "/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.88"/>
              </next>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
            <arguments xsi:type="references:StringReference" value="    implements org.apache.jasper.runtime.JspSourceDependent"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                <arguments xsi:type="references:StringReference" value=","/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                <arguments xsi:type="references:StringReference" value="                 SingleThreadModel"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.102"/>
            </next>
          </child>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:StringReference" value=" {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.20">
          <comments>// Class body begins here</comments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.27">
          <comments>// Static initializations here</comments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.28">
          <comments>// Class variable declarations</comments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.1/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29">
          <comments>// Constructor</comments>
          <comments>// generateConstructor(className);</comments>
          <comments>// Methods here</comments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// Now the service method</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
            <arguments xsi:type="references:StringReference" value="public void "/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.2/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:StringReference" value="(HttpServletRequest request, HttpServletResponse response)"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:StringReference" value="        throws java.io.IOException, ServletException {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// Local variable declarations</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="PageContext pageContext = null;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="HttpSession session = null;"/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.96"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="Throwable exception = org.apache.jasper.runtime.JspRuntimeLibrary.getThrowable(request);"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="if (exception != null) {"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="}"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.109"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="ServletContext application = null;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="ServletConfig config = null;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="JspWriter out = null;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="Object page = this;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="JspWriter _jspx_out = null;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="PageContext _jspx_page_context = null;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="try {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
            <arguments xsi:type="references:StringReference" value="response.setContentType("/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.90"/>
                </next>
              </arguments>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:StringReference" value=");"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="response.addHeader(&quot;X-Powered-By&quot;, &quot;JSP/2.1&quot;);"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/jasper/Options.class.xmi#//@classifiers.0/@members.23"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.65"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="pageContext = _jspxFactory.getPageContext(this, request, response,"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
            <arguments xsi:type="references:StringReference" value="&#x9;&#x9;&#x9;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.106"/>
                </next>
              </arguments>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value=", "/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.96"/>
                </next>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value=", "/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.93"/>
                </next>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value=", "/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.99"/>
                </next>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:StringReference" value=");"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="_jspx_page_context = pageContext;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="application = pageContext.getServletContext();"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="config = pageContext.getServletConfig();"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="session = pageContext.getSession();"/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.96"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="out = pageContext.getOut();"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="_jspx_out = out;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="generateXmlProlog">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="page">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>Node</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Generates an XML Prolog, which includes an XML declaration and an XML&#xA;     * doctype declaration.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="omitXmlDecl">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/*&#xA;         * An XML declaration is generated under the following conditions: -&#xA;         * 'omit-xml-declaration' attribute of &lt;jsp:output> action is set to&#xA;         * &quot;no&quot; or &quot;false&quot; - JSP document without a &lt;jsp:root>&#xA;         */</comments>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.63"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="cType">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.90"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="charSet">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.1/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.55"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.1/@statement/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.49"/>
                        <arguments xsi:type="references:StringReference" value="charset="/>
                      </next>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="out.write(&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.1/@statement/@statements.1/@variable"/>
                  <children xsi:type="references:StringReference" value="\&quot;?>\n&quot;);"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </children>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.22"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.0/@variable"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                </child>
              </children>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Root.class.xmi#//@classifiers.0/@members.9"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </children>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.62"/>
                  </next>
                </child>
              </children>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.56"/>
                  </next>
                </child>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="doctypeName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/*&#xA;         * Output a DOCTYPE declaration if the doctype-root-element appears. If&#xA;         * doctype-public appears: &lt;!DOCTYPE name PUBLIC &quot;doctypePublic&quot;&#xA;         * &quot;doctypeSystem&quot;> else &lt;!DOCTYPE name SYSTEM &quot;doctypeSystem&quot; >&#xA;         */</comments>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.65"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="doctypePublic">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.69"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="doctypeSystem">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.67"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                <arguments xsi:type="references:StringReference" value="out.write(&quot;&lt;!DOCTYPE "/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.2/@variable"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:StringReference" value=" SYSTEM \&quot;"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.3/@statement/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:StringReference" value=" PUBLIC \&quot;"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.3/@statement/@statements.0/@variable"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:StringReference" value="\&quot; \&quot;"/>
                  </next>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.3/@statement/@statements.1/@variable"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                <arguments xsi:type="references:StringReference" value="\&quot;>\n&quot;);"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.2/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="generateConstructor">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="className">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/*&#xA;     * Generates the constructor. (shared by servlet and tag handler preamble&#xA;     * generation)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="public "/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0"/>
              <children xsi:type="references:StringReference" value="() {"/>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="}"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="classifiers:Class" name="GenerateVisitor">
      <comments>/**&#xA;     * A visitor that generates codes for the elements in the page.&#xA;     */</comments>
      <members xsi:type="members:Field" name="handlerInfos">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/*&#xA;         * Hashtable containing introspection information on tag handlers:&#xA;         * &lt;key>: tag prefix &lt;value>: hashtable containing introspection on tag&#xA;         * handlers: &lt;key>: tag short name &lt;value>: introspection info of tag&#xA;         * handler for &lt;prefix:shortName> tag&#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="tagVarNumbers">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="isSimpleTagParent">
        <typeReference xsi:type="types:Boolean"/>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="pushBodyCountVar">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>// Is parent a SimpleTag?</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="simpleTagHandlerVar">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="isSimpleTagHandler">
        <typeReference xsi:type="types:Boolean"/>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="isFragment">
        <typeReference xsi:type="types:Boolean"/>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="isTagFile">
        <typeReference xsi:type="types:Boolean"/>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="methodsBuffered">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../util/ArrayList.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="fragmentHelperClass">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0/@members.49"/>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="methodNesting">
        <typeReference xsi:type="types:Int"/>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="tagInfo">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="loader">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="charArrayCount">
        <typeReference xsi:type="types:Int"/>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="textMap">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../util/HashMap.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Constructor" name="GenerateVisitor">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.8"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.17/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.17/@parameters.1"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.10"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.17/@parameters.2"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.11"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.17/@parameters.3"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.14"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.17/@parameters.4"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.13"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.17/@parameters.5"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.12"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.0"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.1"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.16"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../util/HashMap.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </value>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="isTagFile">
          <typeReference xsi:type="types:Boolean"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="out">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="methodsBuffered">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../util/ArrayList.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="fragmentHelperClass">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.49"/>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="loader">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagInfo">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagInfo.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Constructor.&#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:ClassMethod" name="attributeValue">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="attr">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="encode">
          <typeReference xsi:type="types:Boolean"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="expectedType">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/**&#xA;         * Returns an attribute value, optionally URL encoded. If the value is a&#xA;         * runtime expression, the result is the expression itself, as a string.&#xA;         * If the result is an EL expression, we insert a call to the&#xA;         * interpreter. If the result is a Named Attribute we insert the&#xA;         * generated variable name. Otherwise the result is a string literal,&#xA;         * quoted and escaped.&#xA;         * &#xA;         * @param attr&#xA;         *            An JspAttribute object&#xA;         * @param encode&#xA;         *            true if to be URL encoded&#xA;         * @param expectedType&#xA;         *            the expected type for an EL evaluation (ignored for&#xA;         *            attributes that aren't EL expressions)&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="v">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.21"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value=""/>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.24"/>
                </next>
              </child>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </children>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf("/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@statements.0/@variable"/>
                    <children xsi:type="references:StringReference" value="), request.getCharacterEncoding())"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </returnValue>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@parameters.1"/>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@statements.0/@variable"/>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.23"/>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="replaceESC">
                  <typeReference xsi:type="types:Boolean"/>
                  <initialValue xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.45"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0/@members.28"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:GreaterThan"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.24"/>
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.8"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@statements.0/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@parameters.2"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ELNode$Nodes.class.xmi#//@classifiers.0/@members.9"/>
                          </next>
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.28"/>
                        </next>
                      </arguments>
                      <arguments xsi:type="literals:BooleanLiteral"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <comments>// XXX ESC replacement hack</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="("/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@statements.0/@variable"/>
                        <children xsi:type="references:StringReference" value=").replace("/>
                        <children xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0/@members.29"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0"/>
                        </children>
                        <children xsi:type="references:StringReference" value=", '$')"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@statements.2/@elseStatement/@statement/@statements.0/@variable"/>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@statements.0/@variable"/>
                      <children xsi:type="references:StringReference" value=", request.getCharacterEncoding())"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </returnValue>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@parameters.1"/>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@statements.0/@variable"/>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.25"/>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$NamedAttribute.class.xmi#//@classifiers.0/@members.14"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.22"/>
                    </next>
                  </returnValue>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.24"/>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("/>
                        <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@statements.0/@variable"/>
                        </children>
                        <children xsi:type="references:StringReference" value=", request.getCharacterEncoding())"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </returnValue>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@parameters.1"/>
                </statements>
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.18/@statements.0/@variable"/>
                  </returnValue>
                </statements>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="printParams">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="pageParam">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="literal">
          <typeReference xsi:type="types:Boolean"/>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/**&#xA;         * Prints the attribute value specified in the param action, in the form&#xA;         * of name=value string.&#xA;         * &#xA;         * @param n&#xA;         *            the parent node for the param action nodes.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="classifiers:Class" name="ParamVisitor">
          <members xsi:type="members:Field" name="separator">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </members>
          <members xsi:type="members:Constructor" name="ParamVisitor">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@statements.0/@members.0"/>
                  <self xsi:type="literals:This"/>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@statements.0/@members.1/@parameters.0"/>
              </expression>
            </statements>
            <parameters xsi:type="parameters:OrdinaryParameter" name="separator">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </parameters>
          </members>
          <members xsi:type="members:ClassMethod" name="visit">
            <typeReference xsi:type="types:Void"/>
            <parameters xsi:type="parameters:OrdinaryParameter" name="n">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>Node</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$ParamAction.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </parameters>
            <exceptions>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </exceptions>
            <annotationsAndModifiers xsi:type="modifiers:Public"/>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=" + "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@statements.0/@members.0"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=" + "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="org.apache.jasper.runtime.JspRuntimeLibrary."/>
                    <children xsi:type="references:StringReference" value="URLEncode("/>
                    <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@statements.0/@members.2/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                          <arguments xsi:type="references:StringReference" value="name"/>
                        </next>
                      </arguments>
                    </children>
                    <children xsi:type="references:StringReference" value=", request.getCharacterEncoding())"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value="+ &quot;=&quot; + "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.18">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@statements.0/@members.2/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ParamAction.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                    </arguments>
                    <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:ReflectiveClassReference"/>
                      <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@statements.0/@members.0">
                  <comments>// The separator is '&amp;' after the second use</comments>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:StringReference" value="&quot;&amp;&quot;"/>
              </expression>
            </statements>
          </members>
          <extends xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </extends>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="sep">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@statements.1/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@parameters.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.45"/>
                        <arguments xsi:type="literals:CharacterLiteral" value="63"/>
                      </next>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:GreaterThan"/>
                  </child>
                  <expressionIf xsi:type="references:StringReference" value="&quot;&amp;&quot;"/>
                  <expressionElse xsi:type="references:StringReference" value="&quot;?&quot;"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@parameters.2"/>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@statements.1/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="(("/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@parameters.1"/>
                  <children xsi:type="references:StringReference" value=").indexOf('?')>0? '&amp;': '?')"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </value>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
                    <arguments xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences target="//@classifiers.0/@members.33/@members.19/@statements.0"/>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@statements.1/@variable"/>
                    </arguments>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.19/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
              </next>
            </children>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Expression.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.20/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="out.print("/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.21"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.20/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ScriptingElement.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=");"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.20/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Scriptlet.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.21/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.21"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.21/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ScriptingElement.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.21/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$ELExpression.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.22/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="out.write("/>
                    <children xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.24"/>
                        <arguments xsi:type="references:SelfReference">
                          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.8"/>
                          <self xsi:type="literals:This"/>
                        </arguments>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.22/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ELExpression.class.xmi#//@classifiers.0/@members.6"/>
                            </next>
                          </children>
                          <children xsi:type="references:StringReference" value="{"/>
                          <children xsi:type="instantiations:NewConstructorCall">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.22/@parameters.0">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.34"/>
                              </next>
                            </arguments>
                          </children>
                          <children xsi:type="references:StringReference" value="}"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:ReflectiveClassReference"/>
                          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.22/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ELNode$Nodes.class.xmi#//@classifiers.0/@members.9"/>
                            </next>
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ELExpression.class.xmi#//@classifiers.0/@members.5"/>
                          </next>
                        </arguments>
                        <arguments xsi:type="literals:BooleanLiteral"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                    </children>
                    <children xsi:type="references:StringReference" value=");"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.115"/>
                </next>
              </child>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.22/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ELExpression.class.xmi#//@classifiers.0/@members.5"/>
                  </next>
                </children>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </children>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="out.write("/>
                    <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.22/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ELExpression.class.xmi#//@classifiers.0/@members.6"/>
                          </next>
                        </children>
                        <children xsi:type="references:StringReference" value="{"/>
                        <children xsi:type="instantiations:NewConstructorCall">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.22/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.34"/>
                            </next>
                          </arguments>
                        </children>
                        <children xsi:type="references:StringReference" value="}"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </children>
                    <children xsi:type="references:StringReference" value=");"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.22/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$IncludeAction.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="flush">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="flush"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="page">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$IncludeAction.class.xmi#//@classifiers.0/@members.5"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="isFlush">
            <typeReference xsi:type="types:Boolean"/>
            <initialValue xsi:type="literals:BooleanLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// default to false;</comments>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@statements.2/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statement>
          <condition xsi:type="references:StringReference" value="true">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@statements.0/@variable"/>
            </next>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="pageParam">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@statements.5/@variable">
                  <comments>// If the page for jsp:include was specified via</comments>
                  <comments>// jsp:attribute, first generate code to evaluate</comments>
                  <comments>// that body.</comments>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.61">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.22"/>
                    </next>
                  </arguments>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.24"/>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@statements.5/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.18">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@statements.1/@variable"/>
                  <arguments xsi:type="literals:BooleanLiteral"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:ReflectiveClassReference"/>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </arguments>
                </value>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="jspBody">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <comments>// If any of the params have their values specified by</comments>
                <comments>// jsp:attribute, prepare those values first.</comments>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.25">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@parameters.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.24">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@statements.7/@variable"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@statements.7/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.24">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@parameters.0"/>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@statements.5/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.19">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@statements.5/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.26"/>
              </next>
            </arguments>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value=", out, "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@statements.2/@variable"/>
                <children xsi:type="references:StringReference" value=");"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.23/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="prepareParams">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/**&#xA;         * Scans through all child nodes of the given parent for &lt;param>&#xA;         * subelements. For each &lt;param> element, if its value is specified via&#xA;         * a Named Attribute (&lt;jsp:attribute>), generate the code to evaluate&#xA;         * those bodies first.&#xA;         * &lt;p>&#xA;         * If parent is null, simply returns.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Return"/>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@parameters.0"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="subelements">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="n">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.9"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.2/@statement/@statements.0/@init"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="paramSubElements">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <namespaces>Node</namespaces>
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.2/@statement/@statements.0/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
                          </next>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:ForLoop">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="m">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.2/@statement/@statements.0/@statement/@statements.1/@statement/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.9"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.2/@statement/@statements.0/@statement/@statements.1/@statement/@statements.1/@init"/>
                              </next>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.61">
                                <arguments xsi:type="expressions:CastExpression">
                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                    <namespaces>Node</namespaces>
                                    <classifierReferences>
                                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$NamedAttribute.class.xmi#//@classifiers.0"/>
                                    </classifierReferences>
                                  </typeReference>
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.2/@statement/@statements.0/@statement/@statements.1/@statement/@statements.1/@statement/@statements.0/@variable"/>
                                </arguments>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:InstanceOfExpression">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <namespaces>Node</namespaces>
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$NamedAttribute.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.2/@statement/@statements.0/@statement/@statements.1/@statement/@statements.1/@statement/@statements.0/@variable"/>
                          </condition>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:ConditionalAndExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.2/@statement/@statements.0/@statement/@statements.1/@statement/@statements.0/@variable"/>
                            <children xsi:type="literals:NullLiteral"/>
                          </expression>
                        </children>
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:RelationExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.2/@statement/@statements.0/@statement/@statements.1/@statement/@statements.1/@init"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.2/@statement/@statements.0/@statement/@statements.1/@statement/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.8"/>
                              </next>
                            </children>
                            <relationOperators xsi:type="operators:LessThan"/>
                          </expression>
                        </children>
                      </condition>
                      <init xsi:type="variables:LocalVariable" name="j">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </init>
                      <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.2/@statement/@statements.0/@statement/@statements.1/@statement/@statements.1/@init"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </updates>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:InstanceOfExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <namespaces>Node</namespaces>
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$ParamAction.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.2/@statement/@statements.0/@statement/@statements.0/@variable"/>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.2/@statement/@statements.0/@init"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.8"/>
                  </next>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.2/@statement/@statements.0/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.24/@statements.1/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="findJspBody">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>Node</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspBody.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/**&#xA;         * Finds the &lt;jsp:body> subelement of the given parent node. If not&#xA;         * found, null is returned.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="result">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspBody.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="literals:NullLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="subelements">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.25/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="n">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.25/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.9"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.25/@statements.2/@init"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.25/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <namespaces>Node</namespaces>
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspBody.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.25/@statements.2/@statement/@statements.0/@variable"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:Break"/>
              </statement>
              <condition xsi:type="expressions:InstanceOfExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <namespaces>Node</namespaces>
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspBody.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.25/@statements.2/@statement/@statements.0/@variable"/>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.25/@statements.1/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.25/@statements.2/@init"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.25/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.8"/>
                  </next>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </expression>
            </children>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.25/@statements.2/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.25/@statements.0/@variable"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <comments>// XXX Not sure if we can eliminate dead codes after this.</comments>
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$ForwardAction.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="page">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ForwardAction.class.xmi#//@classifiers.0/@members.5"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="if (true) {"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// So that javac won't complain about</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="pageParam">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <comments>// codes after &quot;return&quot;</comments>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@statements.4/@variable">
                  <comments>// If the page for jsp:forward was specified via</comments>
                  <comments>// jsp:attribute, first generate code to evaluate</comments>
                  <comments>// that body.</comments>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.61">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.22"/>
                    </next>
                  </arguments>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.24"/>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@statements.4/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.18">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@statements.0/@variable"/>
                  <arguments xsi:type="literals:BooleanLiteral"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:ReflectiveClassReference"/>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </arguments>
                </value>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="jspBody">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <comments>// If any of the params have their values specified by</comments>
                <comments>// jsp:attribute, prepare those values first.</comments>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.25">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@parameters.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.24">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@statements.6/@variable"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@statements.6/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.24">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@parameters.0"/>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="_jspx_page_context.forward("/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@statements.4/@variable"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.19">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@statements.4/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.26"/>
              </next>
            </arguments>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=");"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="throw new SkipPageException();"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalOrExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.8"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.7"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:ConditionalExpression">
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.12"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <relationOperators xsi:type="operators:GreaterThan"/>
                      </expression>
                    </child>
                    <expressionIf xsi:type="references:StringReference" value="return true;"/>
                    <expressionElse xsi:type="references:StringReference" value="return;"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.26/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$GetProperty.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="name">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="name"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="property">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="property"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="bean">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <comments>// Bean is defined using useBean, introspect at compile time</comments>
                    <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/BeanRepository.class.xmi#//@classifiers.0/@members.5"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@statements.0/@variable"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="beanName">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.56"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@statements.3/@statement/@statements.0/@variable"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="meth">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <namespaces>java</namespaces>
                  <namespaces>lang</namespaces>
                  <namespaces>reflect</namespaces>
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/reflect/Method.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/runtime/JspRuntimeLibrary.class.xmi#//@classifiers.0/@members.41"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@statements.3/@statement/@statements.0/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@statements.1/@variable"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/runtime/JspRuntimeLibrary.class.xmi#//@classifiers.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="methodName">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@statements.3/@statement/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../lang/reflect/Method.class.xmi#//@classifiers.0/@members.23"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString("/>
                    <children xsi:type="references:StringReference" value="((("/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@statements.3/@statement/@statements.1/@variable"/>
                    <children xsi:type="references:StringReference" value=")_jspx_page_context.findAttribute("/>
                    <children xsi:type="references:StringReference" value="&quot;"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@statements.0/@variable"/>
                    <children xsi:type="references:StringReference" value="&quot;))."/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@statements.3/@statement/@statements.3/@variable"/>
                    <children xsi:type="references:StringReference" value="())));"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/BeanRepository.class.xmi#//@classifiers.0/@members.6"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@statements.0/@variable"/>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <comments>// The object could be a custom action with an associated</comments>
                <comments>// VariableInfo entry for this name.</comments>
                <comments>// Get the class name and then introspect at runtime.</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString"/>
                    <children xsi:type="references:StringReference" value="(org.apache.jasper.runtime.JspRuntimeLibrary.handleGetProperty"/>
                    <children xsi:type="references:StringReference" value="(_jspx_page_context.getAttribute(&quot;"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@statements.0/@variable"/>
                    <children xsi:type="references:StringReference" value="&quot;, PageContext.PAGE_SCOPE), &quot;"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@statements.1/@variable"/>
                    <children xsi:type="references:StringReference" value="&quot;)));"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.27/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$SetProperty.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="name">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="name"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="property">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="property"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="param">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="param"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="value">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$SetProperty.class.xmi#//@classifiers.0/@members.5"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="org.apache.jasper.runtime.JspRuntimeLibrary.introspect("/>
                    <children xsi:type="references:StringReference" value="_jspx_page_context.findAttribute("/>
                    <children xsi:type="references:StringReference" value="&quot;"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.0/@variable"/>
                    <children xsi:type="references:StringReference" value="&quot;), request);"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:StringReference" value="*">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.1/@variable"/>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.2/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.1/@variable"/>
                  </expression>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.2/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                  <comments>// default to same as property</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper("/>
                      <children xsi:type="references:StringReference" value="_jspx_page_context.findAttribute(&quot;"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.0/@variable"/>
                      <children xsi:type="references:StringReference" value="&quot;), &quot;"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.1/@variable"/>
                      <children xsi:type="references:StringReference" value="&quot;, request.getParameter(&quot;"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.2/@variable"/>
                      <children xsi:type="references:StringReference" value="&quot;), "/>
                      <children xsi:type="references:StringReference" value="request, &quot;"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.2/@variable"/>
                      <children xsi:type="references:StringReference" value="&quot;, false);"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.3/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="org.apache.jasper.runtime.JspRuntimeLibrary.handleSetProperty("/>
                        <children xsi:type="references:StringReference" value="_jspx_page_context.findAttribute(&quot;"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.0/@variable"/>
                        <children xsi:type="references:StringReference" value="&quot;), &quot;"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.1/@variable"/>
                        <children xsi:type="references:StringReference" value="&quot;,"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.18">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.3/@variable"/>
                        <arguments xsi:type="literals:BooleanLiteral"/>
                        <arguments xsi:type="literals:NullLiteral"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=");"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.3/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.23"/>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                      <comments>// We've got to resolve the very call to the interpreter</comments>
                      <comments>// at runtime since we don't know what type to expect</comments>
                      <comments>// in the general case; we thus can't hard-wire the call</comments>
                      <comments>// into the generated code. (XXX We could, however,</comments>
                      <comments>// optimize the case where the bean is exposed with</comments>
                      <comments>// &lt;jsp:useBean>, much as the code here does for</comments>
                      <comments>// getProperty.)</comments>
                      <comments>// The following holds true for the arguments passed to</comments>
                      <comments>// JspRuntimeLibrary.handleSetPropertyExpression():</comments>
                      <comments>// - 'pageContext' is a VariableResolver.</comments>
                      <comments>// - 'this' (either the generated Servlet or the generated tag</comments>
                      <comments>// handler for Tag files) is a FunctionMapper.</comments>
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:StringReference" value="org.apache.jasper.runtime.JspRuntimeLibrary.handleSetPropertyExpression("/>
                          <children xsi:type="references:StringReference" value="_jspx_page_context.findAttribute(&quot;"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.0/@variable"/>
                          <children xsi:type="references:StringReference" value="&quot;), &quot;"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.1/@variable"/>
                          <children xsi:type="references:StringReference" value="&quot;, "/>
                          <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.3/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.21"/>
                              </next>
                            </arguments>
                          </children>
                          <children xsi:type="references:StringReference" value=", "/>
                          <children xsi:type="references:StringReference" value="_jspx_page_context, "/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.3/@variable">
                            <next xsi:type="references:MethodCall">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ELNode$Nodes.class.xmi#//@classifiers.0/@members.9"/>
                              </next>
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.28"/>
                            </next>
                          </children>
                          <children xsi:type="references:StringReference" value=");"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.3/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.25"/>
                  </next>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="valueVarName">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <comments>// If the value for setProperty was specified via</comments>
                            <comments>// jsp:attribute, first generate code to evaluate</comments>
                            <comments>// that body.</comments>
                            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.61">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.3/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.22"/>
                            </next>
                          </arguments>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:StringReference" value="org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper("/>
                            <children xsi:type="references:StringReference" value="_jspx_page_context.findAttribute(&quot;"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.0/@variable"/>
                            <children xsi:type="references:StringReference" value="&quot;), &quot;"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.1/@variable"/>
                            <children xsi:type="references:StringReference" value="&quot;, "/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.5/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                            <children xsi:type="references:StringReference" value=", null, null, false);"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.3/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.24"/>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:StringReference" value="org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper("/>
                            <children xsi:type="references:StringReference" value="_jspx_page_context.findAttribute(&quot;"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.0/@variable"/>
                            <children xsi:type="references:StringReference" value="&quot;), &quot;"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.1/@variable"/>
                            <children xsi:type="references:StringReference" value="&quot;, "/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.18">
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@statements.3/@variable"/>
                            <arguments xsi:type="literals:BooleanLiteral"/>
                            <arguments xsi:type="literals:NullLiteral"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                          <arguments xsi:type="references:StringReference" value=", null, null, false);"/>
                        </next>
                      </expression>
                    </statements>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.28/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$UseBean.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="name">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="id"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="scope">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="scope"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="klass">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="class"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="type">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="type"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="beanName">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$UseBean.class.xmi#//@classifiers.0/@members.5"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="generateNew">
            <typeReference xsi:type="types:Boolean">
              <comments>// If &quot;class&quot; is specified, try an instantiation at compile time</comments>
            </typeReference>
            <initialValue xsi:type="literals:BooleanLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="canonicalName">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="literals:NullLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// Canonical name for klass</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:TryBlock">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="bean">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/ClassLoader.class.xmi#//@classifiers.0/@members.24"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.2/@variable"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.36"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.6/@variable">
                        <comments>// Obtain the canonical type name</comments>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.56"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.7/@statement/@statements.0/@statements.0/@variable"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.45"/>
                      <arguments xsi:type="literals:CharacterLiteral" value="36"/>
                    </next>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.6/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.2/@variable"/>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="modifiers">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.7/@statement/@statements.0/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/Class.class.xmi#//@classifiers.0/@members.55"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Throw">
                    <throwable xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../lang/Exception.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:StringReference" value="Invalid bean class modifier"/>
                    </throwable>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:UnaryExpression">
                    <operators xsi:type="operators:Negate"/>
                    <child xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/reflect/Modifier.class.xmi#//@classifiers.0/@members.18"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.7/@statement/@statements.0/@statements.2/@variable"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../lang/reflect/Modifier.class.xmi#//@classifiers.0"/>
                    </child>
                  </children>
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/reflect/Modifier.class.xmi#//@classifiers.0/@members.27"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.7/@statement/@statements.0/@statements.2/@variable"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../lang/reflect/Modifier.class.xmi#//@classifiers.0"/>
                  </children>
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/reflect/Modifier.class.xmi#//@classifiers.0/@members.28"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.7/@statement/@statements.0/@statements.2/@variable"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../lang/reflect/Modifier.class.xmi#//@classifiers.0"/>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.7/@statement/@statements.0/@statements.0/@variable">
                  <comments>// Check that there is a 0 arg constructor</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../lang/Class.class.xmi#//@classifiers.0/@members.79"/>
                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arrayDimensionsBefore/>
                      <arrayInitializer/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.5/@variable">
                    <comments>// At compile time, we have determined that the bean class</comments>
                    <comments>// exists, with a public zero constructor, new() can be</comments>
                    <comments>// used for bean instantiation.</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <catcheBlocks>
                <statements xsi:type="statements:Condition">
                  <comments>// Cannot instantiate the specified class, either a</comments>
                  <comments>// compilation error or a runtime error will be raised,</comments>
                  <comments>// depending on a compiler flag.</comments>
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ErrorDispatcher.class.xmi#//@classifiers.0/@members.8"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@parameters.0"/>
                          <arguments xsi:type="references:StringReference" value="jsp.error.invalid.bean"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.2/@variable"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/jasper/Options.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.65"/>
                    </next>
                  </condition>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.6/@variable">
                          <comments>// Doing our best here to get a canonical name</comments>
                          <comments>// from the binary name, should work 99.99% of time.</comments>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.2/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.59"/>
                            <arguments xsi:type="literals:CharacterLiteral" value="36"/>
                            <arguments xsi:type="literals:CharacterLiteral" value="46"/>
                          </next>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.6/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
                <parameter name="e">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../lang/Exception.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameter>
              </catcheBlocks>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.3/@variable">
                      <comments>// if type is unspecified, use &quot;class&quot; as type of bean</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.6/@variable"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.3/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.2/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="scopename">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:StringReference" value="PageContext.PAGE_SCOPE"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="lock">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <comments>// Default to page</comments>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:StringReference" value="_jspx_page_context"/>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.8/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:StringReference" value="PageContext.REQUEST_SCOPE"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.9/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:StringReference" value="request"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:StringReference" value="request">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.1/@variable"/>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.8/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:StringReference" value="PageContext.SESSION_SCOPE"/>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.9/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:StringReference" value="session"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:StringReference" value="session">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.1/@variable"/>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.8/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:StringReference" value="PageContext.APPLICATION_SCOPE"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.9/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:StringReference" value="application"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:StringReference" value="application">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.1/@variable"/>
                </next>
              </condition>
            </elseStatement>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// Declare bean</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.3/@variable"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.18"/>
              <arguments xsi:type="literals:CharacterLiteral" value="32"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.0/@variable"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=" = null;"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// Lock while getting or creating bean</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="synchronized ("/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.9/@variable"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=") {"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// Locate bean from context</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.0/@variable"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:StringReference" value=" = ("/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.3/@variable"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:StringReference" value=") _jspx_page_context.getAttribute("/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.0/@variable"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:StringReference" value=", "/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.8/@variable"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=");"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// Create bean</comments>
            <comments>/*&#xA;             * Check if bean is alredy there&#xA;             */</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="if ("/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.0/@variable"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=" == null){"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <comments>/*&#xA;                 * If both class name and beanName is not specified, the bean&#xA;                 * must be found locally, otherwise it's an error&#xA;                 */</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="throw new java.lang.InstantiationException(&quot;bean "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.0/@variable"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=" not found within scope&quot;);"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.4/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <comments>/*&#xA;                 * Instantiate the bean if it is not in the specified scope.&#xA;                 */</comments>
              <statement xsi:type="statements:Block">
                <comments>// close of try</comments>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="binaryName">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.32/@elseStatement/@statements.0/@statement/@statements.0/@variable">
                              <comments>// If the value for beanName was specified via</comments>
                              <comments>// jsp:attribute, first generate code to evaluate</comments>
                              <comments>// that body.</comments>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.61">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.4/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.22"/>
                                </next>
                              </arguments>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.4/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.24"/>
                        </next>
                      </condition>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.32/@elseStatement/@statements.0/@statement/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.18">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.4/@variable"/>
                              <arguments xsi:type="literals:BooleanLiteral"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:ReflectiveClassReference"/>
                                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                              </arguments>
                            </value>
                          </expression>
                        </statements>
                      </elseStatement>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.4/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.32/@elseStatement/@statements.0/@statement/@statements.0/@variable">
                          <comments>// Implies klass is not null</comments>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.2/@variable"/>
                        </value>
                      </expression>
                    </statements>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="try {"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.0/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=" = ("/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.3/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=") java.beans.Beans.instantiate("/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value="this.getClass().getClassLoader(), "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.32/@elseStatement/@statements.0/@statement/@statements.0/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=");"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <comments>/*&#xA;                     * Note: Beans.instantiate throws ClassNotFoundException if&#xA;                     * the bean class is abstract.&#xA;                     */</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="} catch (ClassNotFoundException exc) {"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="throw new InstantiationException(exc.getMessage());"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="} catch (Exception exc) {"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:StringReference" value="throw new ServletException("/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value="&quot;Cannot create bean of class &quot; + "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.32/@elseStatement/@statements.0/@statement/@statements.0/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=", exc);"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="}"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.5/@variable"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <comments>// Implies klass is not null</comments>
                    <comments>// Generate codes to instantiate the bean class</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.0/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=" = new "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.6/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value="();"/>
                    </next>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <comments>/*&#xA;                 * Set attribute for bean in the specified scope&#xA;                 */</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="_jspx_page_context.setAttribute("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.0/@variable"/>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=", "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.0/@variable"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=", "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@statements.8/@variable"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=");"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall">
                <comments>// Only visit the body when bean is instantiated</comments>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@parameters.0"/>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// End of lock block</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.29/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="makeAttr">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="attr">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="value">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/**&#xA;         * @return a string for the form 'attr = &quot;value&quot;'&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value=""/>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.30/@parameters.1"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value=" "/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.30/@parameters.0"/>
            <children xsi:type="references:StringReference" value="=&quot;"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.30/@parameters.1"/>
            <children xsi:type="literals:CharacterLiteral" value="34"/>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$PlugIn.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="classifiers:Class" name="ParamVisitor">
          <comments>/**&#xA;             * A visitor to handle &lt;jsp:param> in a plugin&#xA;             */</comments>
          <members xsi:type="members:Field" name="ie">
            <typeReference xsi:type="types:Boolean"/>
            <annotationsAndModifiers xsi:type="modifiers:Private"/>
          </members>
          <members xsi:type="members:Constructor" name="ParamVisitor">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.0"/>
                  <self xsi:type="literals:This"/>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.1/@parameters.0"/>
              </expression>
            </statements>
            <parameters xsi:type="parameters:OrdinaryParameter" name="ie">
              <typeReference xsi:type="types:Boolean"/>
            </parameters>
          </members>
          <members xsi:type="members:ClassMethod" name="visit">
            <typeReference xsi:type="types:Void"/>
            <parameters xsi:type="parameters:OrdinaryParameter" name="n">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>Node</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$ParamAction.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </parameters>
            <exceptions>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </exceptions>
            <annotationsAndModifiers xsi:type="modifiers:Public"/>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="name">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.2/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                    <arguments xsi:type="references:StringReference" value="name"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.2/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:StringReference" value="java_object"/>
                </expression>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.2/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:StringReference" value="object"/>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.2/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:StringReference" value="java_type"/>
                  </expression>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.2/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:StringReference" value="type"/>
                  </next>
                </condition>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.2/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <comments>// XXX - Fixed a bug here - value used to be output</comments>
              <comments>// inline, which is only okay if value is not an EL</comments>
              <comments>// expression. Also, key/value pairs for the</comments>
              <comments>// embed tag were not being generated correctly.</comments>
              <comments>// Double check that this is now the correct behavior.</comments>
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <comments>// We want something of the form</comments>
                    <comments>// out.println( &quot;&lt;param name=\&quot;blah\&quot;</comments>
                    <comments>// value=\&quot;&quot; + ... + &quot;\&quot;>&quot; );</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="out.write( &quot;&lt;param name=\&quot;"/>
                        <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.17">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.2/@statements.0/@variable"/>
                        </children>
                        <children xsi:type="references:StringReference" value="\&quot; value=\&quot;&quot; + "/>
                        <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.18">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.2/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ParamAction.class.xmi#//@classifiers.0/@members.5"/>
                            </next>
                          </arguments>
                          <arguments xsi:type="literals:BooleanLiteral"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:ReflectiveClassReference"/>
                            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                          </arguments>
                        </children>
                        <children xsi:type="references:StringReference" value=" + &quot;\&quot;>&quot; );"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="out.write(&quot;\n&quot;);"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.0"/>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <comments>// We want something of the form</comments>
                    <comments>// out.print( &quot; blah=\&quot;&quot; + ... + &quot;\&quot;&quot; );</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="out.write( &quot; "/>
                        <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.17">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.2/@statements.0/@variable"/>
                        </children>
                        <children xsi:type="references:StringReference" value="=\&quot;&quot; + "/>
                        <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.18">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.2/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ParamAction.class.xmi#//@classifiers.0/@members.5"/>
                            </next>
                          </arguments>
                          <arguments xsi:type="literals:BooleanLiteral"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:ReflectiveClassReference"/>
                            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                          </arguments>
                        </children>
                        <children xsi:type="references:StringReference" value=" + &quot;\&quot;&quot; );"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.0/@members.2/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
          </members>
          <extends xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </extends>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="type">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="type"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="code">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="code"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="name">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="name"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="height">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$PlugIn.class.xmi#//@classifiers.0/@members.7"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="width">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$PlugIn.class.xmi#//@classifiers.0/@members.8"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="hspace">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="hspace"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="vspace">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="vspace"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="align">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="align"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="iepluginurl">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="iepluginurl"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="nspluginurl">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="nspluginurl"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="codebase">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="codebase"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="archive">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="archive"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="jreversion">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="jreversion"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="widthStr">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="literals:NullLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.14/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.61">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.5/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.22"/>
                        </next>
                      </arguments>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.5/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.24"/>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.14/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.18">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.5/@variable"/>
                      <arguments xsi:type="literals:BooleanLiteral"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:ReflectiveClassReference"/>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </value>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.5/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="heightStr">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="literals:NullLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.16/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.61">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.4/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.22"/>
                        </next>
                      </arguments>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.4/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.24"/>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.16/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.18">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.4/@variable"/>
                      <arguments xsi:type="literals:BooleanLiteral"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:ReflectiveClassReference"/>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </value>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.4/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.9/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0/@members.26"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.9/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.10/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0/@members.25"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.10/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="jspBody">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <comments>// If any of the params have their values specified by</comments>
              <comments>// jsp:attribute, prepare those values first.</comments>
              <comments>// Look for a params node and prepare its param subelements:</comments>
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspBody.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.25">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="subelements">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <namespaces>Node</namespaces>
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.21/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="m">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.22/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.9"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.22/@statement/@statements.1/@statement/@statements.0/@init"/>
                          </next>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.24">
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.22/@statement/@statements.1/@statement/@statements.0/@statement/@statements.0/@variable"/>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Break"/>
                      </statement>
                      <condition xsi:type="expressions:InstanceOfExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <namespaces>Node</namespaces>
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$ParamsAction.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.22/@statement/@statements.1/@statement/@statements.0/@statement/@statements.0/@variable"/>
                      </condition>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.22/@statement/@statements.1/@statement/@statements.0/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.22/@statement/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.8"/>
                      </next>
                    </children>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="i">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.22/@statement/@statements.1/@statement/@statements.0/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.22/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.21/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="s0">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <comments>// XXX - Fixed a bug here - width and height can be set</comments>
                <comments>// dynamically. Double-check if this generation is correct.</comments>
                <comments>// IE style plugin</comments>
                <comments>// &lt;object ...></comments>
                <comments>// First compose the runtime output string</comments>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="&lt;object"/>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="classid"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/jasper/Options.class.xmi#//@classifiers.0/@members.12"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.65"/>
                  </next>
                </arguments>
              </children>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="name"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.3/@variable"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="s1">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:StringReference" value=""/>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.24/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value=" + &quot; width=\&quot;&quot; + "/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.14/@variable"/>
                  <children xsi:type="references:StringReference" value=" + &quot;\&quot;&quot;"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.5/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="s2">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:StringReference" value=""/>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.26/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value=" + &quot; height=\&quot;&quot; + "/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.16/@variable"/>
                  <children xsi:type="references:StringReference" value=" + &quot;\&quot;&quot;"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.4/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="s3">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="hspace"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.6/@variable"/>
              </children>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="vspace"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.7/@variable"/>
              </children>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="align"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.8/@variable"/>
              </children>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="codebase"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.9/@variable"/>
              </children>
              <children xsi:type="literals:CharacterLiteral" value="62"/>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// Then print the output string to the java file</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="out.write("/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.23/@variable"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.24/@variable"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.26/@variable"/>
                <children xsi:type="references:StringReference" value=" + "/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.28/@variable"/>
                </children>
                <children xsi:type="references:StringReference" value=");"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="out.write(&quot;\n&quot;);"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.23/@variable">
              <comments>// &lt;param > for java_code</comments>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="&lt;param name=&quot;java_code&quot;"/>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="value"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.2/@variable"/>
              </children>
              <children xsi:type="literals:CharacterLiteral" value="62"/>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="out.write("/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.23/@variable"/>
                </children>
                <children xsi:type="references:StringReference" value=");"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="out.write(&quot;\n&quot;);"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// &lt;param > for java_codebase</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.23/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="&lt;param name=&quot;java_codebase&quot;"/>
                  <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                    <arguments xsi:type="references:StringReference" value="value"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.11/@variable"/>
                  </children>
                  <children xsi:type="literals:CharacterLiteral" value="62"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="out.write("/>
                    <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.23/@variable"/>
                    </children>
                    <children xsi:type="references:StringReference" value=");"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="out.write(&quot;\n&quot;);"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.11/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// &lt;param > for java_archive</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.23/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="&lt;param name=&quot;java_archive&quot;"/>
                  <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                    <arguments xsi:type="references:StringReference" value="value"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.12/@variable"/>
                  </children>
                  <children xsi:type="literals:CharacterLiteral" value="62"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="out.write("/>
                    <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.23/@variable"/>
                    </children>
                    <children xsi:type="references:StringReference" value=");"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="out.write(&quot;\n&quot;);"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.12/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.23/@variable">
              <comments>// &lt;param > for type</comments>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="&lt;param name=&quot;type&quot;"/>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="value"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="application/x-java-"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.1/@variable"/>
                  <children xsi:type="references:StringReference" value=";"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ConditionalExpression">
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.13/@variable"/>
                          <children xsi:type="literals:NullLiteral"/>
                        </expression>
                      </child>
                      <expressionIf xsi:type="references:StringReference" value=""/>
                      <expressionElse xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="version="/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.13/@variable"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expressionElse>
                    </expression>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </children>
              <children xsi:type="literals:CharacterLiteral" value="62"/>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="out.write("/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.23/@variable"/>
                </children>
                <children xsi:type="references:StringReference" value=");"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="out.write(&quot;\n&quot;);"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>/*&#xA;             * generate a &lt;param> for each &lt;jsp:param> in the plugin body&#xA;             */</comments>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
                  <arguments xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences target="//@classifiers.0/@members.33/@members.31/@statements.0"/>
                    </typeReference>
                    <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                  </arguments>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
              </next>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
              </next>
            </children>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>/*&#xA;             * Netscape style plugin part&#xA;             */</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="out.write("/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:StringReference" value="&lt;comment>"/>
                </children>
                <children xsi:type="references:StringReference" value=");"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="out.write(&quot;\n&quot;);"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.23/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="&lt;EMBED"/>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="type"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="application/x-java-"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.1/@variable"/>
                  <children xsi:type="references:StringReference" value=";"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ConditionalExpression">
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.13/@variable"/>
                          <children xsi:type="literals:NullLiteral"/>
                        </expression>
                      </child>
                      <expressionIf xsi:type="references:StringReference" value=""/>
                      <expressionElse xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="version="/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.13/@variable"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expressionElse>
                    </expression>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </children>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="name"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.3/@variable"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.28/@variable">
              <comments>// s1 and s2 are the same as before.</comments>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="hspace"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.6/@variable"/>
              </children>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="vspace"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.7/@variable"/>
              </children>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="align"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.8/@variable"/>
              </children>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="pluginspage"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.10/@variable"/>
              </children>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="java_code"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.2/@variable"/>
              </children>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="java_codebase"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.11/@variable"/>
              </children>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.30">
                <arguments xsi:type="references:StringReference" value="java_archive"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.12/@variable"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="out.write("/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.23/@variable"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.24/@variable"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.26/@variable"/>
                <children xsi:type="references:StringReference" value=" + "/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@statements.28/@variable"/>
                </children>
                <children xsi:type="references:StringReference" value=");"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>/*&#xA;             * Generate a 'attr = &quot;value&quot;' for each &lt;jsp:param> in plugin body&#xA;             */</comments>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
                  <arguments xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences target="//@classifiers.0/@members.33/@members.31/@statements.0"/>
                    </typeReference>
                    <arguments xsi:type="literals:BooleanLiteral"/>
                  </arguments>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
              </next>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
              </next>
            </children>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="out.write("/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:StringReference" value="/>"/>
                </children>
                <children xsi:type="references:StringReference" value=");"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="out.write(&quot;\n&quot;);"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="out.write("/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:StringReference" value="&lt;noembed>"/>
                </children>
                <children xsi:type="references:StringReference" value=");"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="out.write(&quot;\n&quot;);"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>/*&#xA;             * Fallback&#xA;             */</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="out.write(&quot;\n&quot;);"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
              </next>
            </children>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="out.write("/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:StringReference" value="&lt;/noembed>"/>
                </children>
                <children xsi:type="references:StringReference" value=");"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="out.write(&quot;\n&quot;);"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="out.write("/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:StringReference" value="&lt;/comment>"/>
                </children>
                <children xsi:type="references:StringReference" value=");"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="out.write(&quot;\n&quot;);"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="out.write("/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:StringReference" value="&lt;/object>"/>
                </children>
                <children xsi:type="references:StringReference" value=");"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="out.write(&quot;\n&quot;);"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.31/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <comments>// Don't visit body of this tag - we already did earlier.</comments>
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$NamedAttribute.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Condition">
          <comments>// Use plugin to generate more efficient code if there is one.</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.44">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0"/>
              </expression>
            </statements>
            <statements xsi:type="statements:Return"/>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.63"/>
            </next>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="handlerInfo">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.47"/>
            </typeReference>
            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.43">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="baseVar">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <comments>// Create variable names</comments>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.54">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.22"/>
                </next>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.32"/>
                </next>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.23"/>
                </next>
              </arguments>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tagEvalVar">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="_jspx_eval_"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.2/@variable"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tagHandlerVar">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="_jspx_th_"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.2/@variable"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tagPushBodyCountVar">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="_jspx_push_body_count_"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.2/@variable"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="outSave">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <comments>// If the tag contains no scripting element, generate its codes</comments>
                <comments>// to a method.</comments>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="literals:NullLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="ci">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$ChildInfo.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.36"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="tagMethod">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <comments>// The tag handler and its body code can reside in a separate</comments>
                    <comments>// method if it is scriptless and does not have any scripting</comments>
                    <comments>// variable defined.</comments>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="_jspx_meth_"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.2/@variable"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <comments>// Generate a call to this method</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="if ("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.8/@statement/@statements.0/@variable"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value="("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=", "/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value="_jspx_page_context"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=", "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value="))"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:ConditionalExpression">
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.12"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <relationOperators xsi:type="operators:GreaterThan"/>
                      </expression>
                    </child>
                    <expressionIf xsi:type="references:StringReference" value="return true;"/>
                    <expressionElse xsi:type="references:StringReference" value="return;"/>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.6/@variable">
                  <comments>// Set up new buffer for the method</comments>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9"/>
              </expression>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="genBuffer">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.48">
                    <comments>/*&#xA;                 * For fragments, their bodies will be generated in fragment&#xA;                 * helper classes, and the Java line adjustments will be done&#xA;                 * there, hence they are set to null here to avoid double&#xA;                 * adjustments.&#xA;                 */</comments>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences target="//@classifiers.0/@members.48"/>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0"/>
                  <arguments xsi:type="expressions:ConditionalExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.50"/>
                      </next>
                    </child>
                    <expressionIf xsi:type="literals:NullLiteral"/>
                    <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
                      </next>
                    </expressionElse>
                  </arguments>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.10">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../util/ArrayList.class.xmi#//@classifiers.0/@members.18"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.8/@statement/@statements.12/@variable"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.8/@statement/@statements.12/@variable">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.6"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.12"/>
                <operator xsi:type="operators:PlusPlus"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <comments>// Generate code for method declaration</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="private boolean "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.8/@statement/@statements.0/@variable"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value="("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value="javax.servlet.jsp.tagext.JspTag "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=", "/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value="PageContext _jspx_page_context"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=", int[] "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=")"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="        throws Throwable {"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <comments>// Initilaize local variables used in this method.</comments>
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="PageContext pageContext = _jspx_page_context;"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.8"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="JspWriter out = _jspx_page_context.getOut();"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.7/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ChildInfo.class.xmi#//@classifiers.0/@members.8"/>
              </next>
            </children>
            <children xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.7/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ChildInfo.class.xmi#//@classifiers.0/@members.18"/>
                </next>
              </child>
            </children>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.47">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.4/@variable"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.50"/>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.45">
                <comments>/*&#xA;                 * Classic tag handler: Generate code for start element, body,&#xA;                 * and end element&#xA;                 */</comments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.4/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.3/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.5/@variable"/>
              </expression>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="tmpParent">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <comments>// visit body</comments>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.4/@variable"/>
              </expression>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="isSimpleTagParentSave">
                <typeReference xsi:type="types:Boolean"/>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.3"/>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.3"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral"/>
              </expression>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="tmpPushBodyCountVar">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="literals:NullLiteral"/>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.9/@elseStatement/@statements.5/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.5/@variable"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.48"/>
                </next>
              </condition>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="tmpIsSimpleTagHandler">
                <typeReference xsi:type="types:Boolean"/>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.6"/>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.6"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.9/@elseStatement/@statements.1/@variable"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.3"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.9/@elseStatement/@statements.3/@variable"/>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.9/@elseStatement/@statements.5/@variable"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.48"/>
                </next>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.6"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.9/@elseStatement/@statements.7/@variable"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.46">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.4/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.3/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.5/@variable"/>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <comments>// Generate end of method</comments>
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="return false;"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.12"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:GreaterThan"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="}"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.12"/>
                <operator xsi:type="operators:MinusMinus"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                  <comments>// restore previous writer</comments>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.6/@variable"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.7/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ChildInfo.class.xmi#//@classifiers.0/@members.8"/>
              </next>
            </children>
            <children xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.33/@statements.7/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ChildInfo.class.xmi#//@classifiers.0/@members.18"/>
                </next>
              </child>
            </children>
          </condition>
        </statements>
      </members>
      <members xsi:type="members:Field" name="SINGLE_QUOTE">
        <initialValue xsi:type="references:StringReference" value="'"/>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <annotationsAndModifiers xsi:type="modifiers:Static"/>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </members>
      <members xsi:type="members:Field" name="DOUBLE_QUOTE">
        <initialValue xsi:type="references:StringReference" value="\&quot;"/>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <annotationsAndModifiers xsi:type="modifiers:Static"/>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$UninterpretedTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>/*&#xA;             * Write begin tag&#xA;             */</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="out.write(&quot;&lt;"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.22"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="attrs">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../../../org/xml/sax/Attributes.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.26"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="attrsLen">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="expressions:ConditionalExpression">
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.3/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </expression>
              </child>
              <expressionIf xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.3/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../org/xml/sax/Attributes.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </expressionElse>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=" "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.3/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../org/xml/sax/Attributes.class.xmi#//@classifiers.0/@members.3"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.5/@init"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value="="/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.35"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.3/@variable">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.64"/>
                        <arguments xsi:type="references:StringReference" value="&quot;"/>
                        <arguments xsi:type="references:StringReference" value="&amp;quot;"/>
                      </next>
                      <target xsi:type="members:InterfaceMethod" href="../../../../../org/xml/sax/Attributes.class.xmi#//@classifiers.0/@members.5"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.5/@init"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.35"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.5/@init"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.4/@variable"/>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.5/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.3/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.24"/>
              </next>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.4/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:ConditionalExpression">
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.3/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </expression>
              </child>
              <expressionIf xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.3/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../org/xml/sax/Attributes.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </expressionElse>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="jspAttrs">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$UninterpretedTag.class.xmi#//@classifiers.0/@members.4"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=" "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.3/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../org/xml/sax/Attributes.class.xmi#//@classifiers.0/@members.3"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.9/@init"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value="="/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value="\&quot;&quot; + "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.18">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.8/@variable">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.9/@init"/>
                          </arraySelectors>
                        </arguments>
                        <arguments xsi:type="literals:BooleanLiteral"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:ReflectiveClassReference"/>
                          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=" + &quot;\&quot;"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.8/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.25"/>
                </next>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.9/@init"/>
                </arraySelectors>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.35"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.3/@variable">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.64"/>
                            <arguments xsi:type="references:StringReference" value="&quot;"/>
                            <arguments xsi:type="references:StringReference" value="&amp;quot;"/>
                          </next>
                          <target xsi:type="members:InterfaceMethod" href="../../../../../org/xml/sax/Attributes.class.xmi#//@classifiers.0/@members.5"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.9/@init"/>
                        </next>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.35"/>
                    </next>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.9/@init"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.4/@variable"/>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@statements.9/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=">&quot;);"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall">
                <comments>// Visit tag body</comments>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@parameters.0"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <comments>/*&#xA;                 * Write end tag&#xA;                 */</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="out.write(&quot;&lt;/"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.22"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=">&quot;);"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
              </next>
            </children>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value="/>&quot;);"/>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.36/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspElement.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="map">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <comments>// Compute attribute value string for XML-style and named</comments>
                <comments>// attributes</comments>
                <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="attrs">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspElement.class.xmi#//@classifiers.0/@members.6"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="attrStr">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="literals:NullLiteral"/>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.3/@statement/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.61">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.22"/>
                        </next>
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.3/@init"/>
                        </arraySelectors>
                      </arguments>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.24"/>
                </next>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.3/@init"/>
                </arraySelectors>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.3/@statement/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.18">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.2/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.3/@init"/>
                        </arraySelectors>
                      </arguments>
                      <arguments xsi:type="literals:BooleanLiteral"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:ReflectiveClassReference"/>
                        <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </value>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="s">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value=" + &quot; "/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.13"/>
                    </next>
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.3/@init"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="references:StringReference" value="=\&quot;&quot; + "/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.3/@statement/@statements.0/@variable"/>
                  <children xsi:type="references:StringReference" value=" + &quot;\&quot;&quot;"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.13"/>
                    </next>
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.3/@init"/>
                    </arraySelectors>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.3/@statement/@statements.2/@variable"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.3/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.2/@variable">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </children>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.3/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="elemName">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <comments>// Write begin tag, using XML-style 'name' attribute as the</comments>
                <comments>// element name</comments>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.18">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspElement.class.xmi#//@classifiers.0/@members.8"/>
                </next>
              </arguments>
              <arguments xsi:type="literals:BooleanLiteral"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:ReflectiveClassReference"/>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </arguments>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="out.write(&quot;&lt;&quot;"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value=" + "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.4/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="enumeration">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <comments>// Write remaining attributes</comments>
                <target xsi:type="classifiers:Interface" href="../../../../util/Enumeration.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.20"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:WhileLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="attrName">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.7/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../util/Enumeration.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </child>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.8/@statement/@statements.0/@variable"/>
                      </next>
                    </child>
                  </arguments>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.7/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../util/Enumeration.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="hasBody">
            <typeReference xsi:type="types:Boolean">
              <comments>// Does the &lt;jsp:element> have nested tags other than</comments>
              <comments>// &lt;jsp:attribute></comments>
            </typeReference>
            <initialValue xsi:type="literals:BooleanLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="subelements">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="subelem">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.10/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.9"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.11/@statement/@statements.0/@init"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.9/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="literals:BooleanLiteral" value="true"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:Break"/>
                  </statement>
                  <condition xsi:type="expressions:UnaryExpression">
                    <operators xsi:type="operators:Negate"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:InstanceOfExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <namespaces>Node</namespaces>
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$NamedAttribute.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.11/@statement/@statements.0/@statement/@statements.0/@variable"/>
                      </expression>
                    </child>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.11/@statement/@statements.0/@init"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.10/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.8"/>
                  </next>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.11/@statement/@statements.0/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.10/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=" + &quot;>&quot;);"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@parameters.0">
                <comments>// Smap should not include the body</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall">
                <comments>// Visit tag body</comments>
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@parameters.0"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <comments>// Write end tag</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="out.write(&quot;&lt;/&quot;"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value=" + "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.4/@variable"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=" + &quot;>&quot;);"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@statements.9/@variable"/>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=" + &quot;/>&quot;);"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.37/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$TemplateText.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="text">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.34"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="textSize">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.22"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return"/>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.1/@variable"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@parameters.0">
                <comments>// Special case small text strings</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="lineInc">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </variable>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="ch">
                    <typeReference xsi:type="types:Char"/>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.23"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.3/@statement/@statements.2/@init"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="out.write("/>
                        <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.18">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.3/@statement/@statements.2/@statement/@statements.0/@variable"/>
                        </children>
                        <children xsi:type="references:StringReference" value=");"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$TemplateText.class.xmi#//@classifiers.0/@members.7"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.3/@statement/@statements.1/@variable"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.3/@statement/@statements.2/@init"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:GreaterThan"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.3/@statement/@statements.1/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.3/@statement/@statements.2/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:CharacterLiteral" value="10"/>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.3/@statement/@statements.2/@init"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.1/@variable"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.3/@statement/@statements.2/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Return"/>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.1/@variable"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
            <relationOperators xsi:type="operators:LessThanOrEqual"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="caOut">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <comments>// Generate Strings as char arrays, for performance</comments>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences target="//@classifiers.0/@members.48"/>
                      </typeReference>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.4/@statement/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.6"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.4/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.16"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../util/HashMap.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.4/@statement/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.6"/>
                    </value>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="charArrayName">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.16">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../util/HashMap.class.xmi#//@classifiers.0/@members.27"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.0/@variable"/>
                    </next>
                  </child>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.4/@statement/@statements.2/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="_jspx_char_array_"/>
                      <children xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.15"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.16">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../util/HashMap.class.xmi#//@classifiers.0/@members.31"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.0/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.4/@statement/@statements.2/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.4/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:StringReference" value="static char[] "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.4/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.4/@statement/@statements.2/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.4/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=" = "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.4/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.0/@variable"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.4/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=".toCharArray();"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.4/@statement/@statements.2/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="out.write("/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.4/@statement/@statements.2/@variable"/>
                    <children xsi:type="references:StringReference" value=");"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Return"/>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/jasper/Options.class.xmi#//@classifiers.0/@members.25"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.65"/>
            </next>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.15"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="sb">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="out.write(&quot;"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="initLength">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.7/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.6"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="count">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.9"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="srcLine">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </variable>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <comments>// relative to starting srouce line</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="ch">
                <typeReference xsi:type="types:Char"/>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.23"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.11/@init"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:PrefixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.9/@variable"/>
                <operator xsi:type="operators:MinusMinus"/>
              </expression>
            </statements>
            <statements xsi:type="statements:Switch">
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.7/@variable">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                        <arguments xsi:type="literals:CharacterLiteral" value="34"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                      <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Break"/>
                <condition xsi:type="literals:CharacterLiteral" value="34"/>
              </cases>
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.7/@variable">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                        <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                      <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Break"/>
                <condition xsi:type="literals:CharacterLiteral" value="92"/>
              </cases>
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.7/@variable">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                        <arguments xsi:type="literals:CharacterLiteral" value="114"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                      <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Break"/>
                <condition xsi:type="literals:CharacterLiteral" value="13"/>
              </cases>
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.7/@variable">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                        <arguments xsi:type="literals:CharacterLiteral" value="110"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                      <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.10/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.7/@variable">
                        <comments>// Generate an out.write() when see a '\n' in template</comments>
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                          <arguments xsi:type="references:StringReference" value="&quot;);"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.7/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
                            </next>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.15"/>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.11/@init"/>
                        <children xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.22"/>
                            </next>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <additiveOperators xsi:type="operators:Subtraction"/>
                        </children>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.7/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.10"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.8/@variable"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.9/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.9"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                    <children xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.9/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      <relationOperators xsi:type="operators:LessThan"/>
                    </children>
                  </condition>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@parameters.0">
                    <comments>// add a Smap for this line</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$TemplateText.class.xmi#//@classifiers.0/@members.7"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.10/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Break"/>
                <condition xsi:type="literals:CharacterLiteral" value="10"/>
              </cases>
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.7/@variable">
                    <comments>// Not sure we need this</comments>
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                        <arguments xsi:type="literals:CharacterLiteral" value="116"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                      <arguments xsi:type="literals:CharacterLiteral" value="92"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Break"/>
                <condition xsi:type="literals:CharacterLiteral" value="9"/>
              </cases>
              <cases xsi:type="statements:DefaultSwitchCase">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.7/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.11/@statement/@statements.0/@variable"/>
                    </next>
                  </expression>
                </statements>
              </cases>
              <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.11/@statement/@statements.0/@variable"/>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.11/@init"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.22"/>
              </next>
            </children>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.11/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.7/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                  <arguments xsi:type="references:StringReference" value="&quot;);"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.7/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.7/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.6"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@statements.8/@variable"/>
            <relationOperators xsi:type="operators:GreaterThan"/>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.38/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspBody.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.5"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=".setJspBody("/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.60">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.39/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.5"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=");"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.6"/>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.39/@parameters.0"/>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.39/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
              </next>
            </children>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$InvokeAction.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// Copy virtual page scope of tag file to page scope of invoking</comments>
            <comments>// page</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="((org.apache.jasper.runtime.JspContextWrapper) this.jspContext).syncBeforeInvoke();"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="varReaderAttr">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="varReader"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="varAttr">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="var"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="_jspx_sout = new java.io.StringWriter();"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalOrExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@statements.3/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="_jspx_sout = null;"/>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// Invoke fragment, unless fragment is null</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="if ("/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                    <arguments xsi:type="references:StringReference" value="fragment"/>
                  </next>
                </arguments>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=" != null) {"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                    <arguments xsi:type="references:StringReference" value="fragment"/>
                  </next>
                </arguments>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=".invoke(_jspx_sout);"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// Store varReader in appropriate scope</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="scopeName">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                    <arguments xsi:type="references:StringReference" value="scope"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="_jspx_page_context.setAttribute("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@statements.2/@variable"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=", new java.io.StringReader(_jspx_sout.toString())"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@statements.2/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@statements.3/@variable"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=", _jspx_sout.toString()"/>
                    </next>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=", "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.59">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@statements.13/@statement/@statements.0/@variable"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@statements.13/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=");"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalOrExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@statements.3/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// Restore EL context</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="jspContext.getELContext().putContext(JspContext.class,getJspContext());"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.40/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$DoBodyAction.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// Copy virtual page scope of tag file to page scope of invoking</comments>
            <comments>// page</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="((org.apache.jasper.runtime.JspContextWrapper) this.jspContext).syncBeforeInvoke();"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="varReaderAttr">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <comments>// Invoke body</comments>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="varReader"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="varAttr">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                <arguments xsi:type="references:StringReference" value="var"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="_jspx_sout = new java.io.StringWriter();"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalOrExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@statements.3/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="_jspx_sout = null;"/>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="if (getJspBody() != null)"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="getJspBody().invoke(_jspx_sout);"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// Store varReader in appropriate scope</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="scopeName">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.29"/>
                    <arguments xsi:type="references:StringReference" value="scope"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="_jspx_page_context.setAttribute("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@statements.2/@variable"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=", new java.io.StringReader(_jspx_sout.toString())"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@statements.2/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@statements.3/@variable"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=", _jspx_sout.toString()"/>
                    </next>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=", "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.59">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@statements.9/@statement/@statements.0/@variable"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@statements.9/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=");"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalOrExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@statements.3/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// Restore EL context</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="jspContext.getELContext().putContext(JspContext.class,getJspContext());"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.41/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="visit">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$AttributeGenerator.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tag">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.42/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$AttributeGenerator.class.xmi#//@classifiers.0/@members.5"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="attrs">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.42/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.35"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.55">
                        <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.43">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.42/@statements.0/@variable"/>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.42/@statements.1/@variable">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.42/@statements.2/@init"/>
                          </arraySelectors>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.42/@statements.0/@variable"/>
                        <arguments xsi:type="literals:NullLiteral"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Break"/>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.42/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.42/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$AttributeGenerator.class.xmi#//@classifiers.0/@members.4"/>
                      </next>
                    </arguments>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.13"/>
                </next>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.42/@statements.2/@init"/>
                </arraySelectors>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.42/@statements.1/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.42/@statements.2/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.42/@statements.1/@variable">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </children>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.42/@statements.2/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getTagHandlerInfo">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0/@members.47"/>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="handlerInfosByShortName">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.32"/>
                    </next>
                  </arguments>
                </next>
              </child>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.32"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@statements.0/@variable"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@statements.0/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="handlerInfo">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.47"/>
            </typeReference>
            <initialValue xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.47"/>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.23"/>
                    </next>
                  </arguments>
                </next>
              </child>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@statements.2/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences target="//@classifiers.0/@members.47"/>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@parameters.0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.44"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.23"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@statements.2/@variable"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@statements.2/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.43/@statements.2/@variable"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="generateTagPlugin">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.44/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.67"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.44/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.67"/>
              </next>
            </children>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.44/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.44/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.69"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.44/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.69"/>
              </next>
            </children>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="generateCustomStart">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="handlerInfo">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.47"/>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagHandlerVar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagEvalVar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagPushBodyCountVar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tagHandlerClass">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.1">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47/@members.6"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="//  "/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.22"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.48">
            <comments>// Declare AT_BEGIN scripting variables</comments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
            </arguments>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.49">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
            </arguments>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tagHandlerClassName">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.56"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@statements.0/@variable"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@statements.6/@variable"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:StringReference" value=" "/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.2"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:StringReference" value=" = "/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value="("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@statements.6/@variable"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=") "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.40"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=".get("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@statements.6/@variable"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=".class);"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
            <children xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.49"/>
                  </next>
                </expression>
              </child>
            </children>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value="new "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@statements.6/@variable"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value="();"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="org.apache.jasper.runtime.AnnotationHelper.postConstruct("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=", "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.2"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=");"/>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.57">
            <comments>// includes setting the context</comments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.1"/>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// JspIdConsumer (after context has been set)</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.2"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=".setJspId(&quot;"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.19"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value="&quot;);"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.49"/>
            </next>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="int[] "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.4"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=" = new int[] { 0 };"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="try {"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.48"/>
            </next>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="int "/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.3"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:StringReference" value=" = "/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.2"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=".doStartTag();"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.51">
                <comments>// Synchronize AT_BEGIN scripting variables</comments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
                </arguments>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.47"/>
              </next>
            </child>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="if ("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.3"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=" != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.48">
                <comments>// Declare NESTED scripting variables</comments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
                </arguments>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.49">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
                </arguments>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:StringReference" value="if ("/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.3"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=" != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <comments>// Assume EVAL_BODY_BUFFERED</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="out = _jspx_page_context.pushBody();"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.4"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                          <arguments xsi:type="references:StringReference" value="[0]++;"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.48"/>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                            <arguments xsi:type="references:StringReference" value="[0]++;"/>
                          </next>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
                      <children xsi:type="literals:NullLiteral"/>
                    </condition>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.2"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=".setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.2"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=".doInitBody();"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="}"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.51">
                    <comments>// Synchronize AT_BEGIN and NESTED scripting variables</comments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.51">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.47"/>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.51">
                    <comments>// Synchronize NESTED scripting variables</comments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="do {"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.46"/>
                </next>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.71"/>
              </next>
            </child>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.45/@parameters.0">
            <comments>// Map the Java lines that handles start of custom tags to the</comments>
            <comments>// JSP line for this tag</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="generateCustomEnd">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagHandlerVar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagEvalVar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagPushBodyCountVar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:StringReference" value="int evalDoAfterBody = "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.1"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=".doAfterBody();"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.51">
                    <comments>// Synchronize AT_BEGIN and NESTED scripting variables</comments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.51">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="break;"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="} while (true);"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.46"/>
                </next>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.50">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
                </arguments>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:StringReference" value="if ("/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.2"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=" != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="out = _jspx_page_context.popBody();"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.3"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                          <arguments xsi:type="references:StringReference" value="[0]--;"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.48"/>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                            <arguments xsi:type="references:StringReference" value="[0]--;"/>
                          </next>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
                      <children xsi:type="literals:NullLiteral"/>
                    </condition>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="}"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.47"/>
                </next>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <comments>// EVAL_BODY</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="}"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.71"/>
              </next>
            </child>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="if ("/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.1"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=".doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.40"/>
                        </next>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=".reuse("/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.1"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=");"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                <children xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Negate"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.49"/>
                      </next>
                    </expression>
                  </child>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.1"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=".release();"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:StringReference" value="org.apache.jasper.runtime.AnnotationHelper.preDestroy("/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=", "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.1"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=");"/>
                    </next>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.48"/>
              </next>
            </child>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="throw new SkipPageException();"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalOrExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.8"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.7"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:ConditionalExpression">
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.12"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <relationOperators xsi:type="operators:GreaterThan"/>
                      </expression>
                    </child>
                    <expressionIf xsi:type="references:StringReference" value="return true;"/>
                    <expressionElse xsi:type="references:StringReference" value="return;"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.51">
            <comments>// Synchronize AT_BEGIN scripting variables</comments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
            </arguments>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// TryCatchFinally</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <comments>// try</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="} catch (Throwable _jspx_exception) {"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="while ("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.3"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value="[0]-- > 0)"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="out = _jspx_page_context.popBody();"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.1"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=".doCatch(_jspx_exception);"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="} finally {"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.1"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=".doFinally();"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.48"/>
            </next>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.40"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=".reuse("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.1"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=");"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.1"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=".release();"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="org.apache.jasper.runtime.AnnotationHelper.preDestroy("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=", "/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.1"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=");"/>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="}"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.48"/>
            </next>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.48">
            <comments>// Declare and synchronize AT_END scripting variables (must do this</comments>
            <comments>// outside the try/catch/finally block)</comments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.2"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
            </arguments>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.51">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.2"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
            </arguments>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.50">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.46/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
            </arguments>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="generateCustomDoTag">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="handlerInfo">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.47"/>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagHandlerVar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tagHandlerClass">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.1">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47/@members.6"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="//  "/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.22"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.48">
            <comments>// Declare AT_BEGIN scripting variables</comments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
            </arguments>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.49">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
            </arguments>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tagHandlerClassName">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.56"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@statements.0/@variable"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@statements.6/@variable"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:StringReference" value=" "/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.2"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:StringReference" value=" = "/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:StringReference" value="new "/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@statements.6/@variable"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value="();"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// Resource injection</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="org.apache.jasper.runtime.AnnotationHelper.postConstruct("/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:StringReference" value=", "/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.2"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=");"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.57">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.1"/>
            <arguments xsi:type="literals:BooleanLiteral" value="true"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// JspIdConsumer (after context has been set)</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.2"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=".setJspId(&quot;"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.19"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value="&quot;);"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.49"/>
            </next>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// Set the body</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <comments>/*&#xA;                 * Encapsulate body of custom tag invocation in JspFragment and&#xA;                 * pass it to tag handler's setJspBody(), unless tag body is&#xA;                 * empty&#xA;                 */</comments>
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.2"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=".setJspBody("/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.60">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.2"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=");"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.71"/>
                  </next>
                </child>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.25">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0"/>
            </children>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="tmpTagHandlerVar">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <comments>/*&#xA;                 * Body of tag is the body of the &lt;jsp:body> element. The visit&#xA;                 * method for that element is going to encapsulate that&#xA;                 * element's body in a JspFragment and pass it to the tag&#xA;                 * handler's setJspBody()&#xA;                 */</comments>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.5"/>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.5"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.2"/>
              </expression>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="tmpIsSimpleTagHandler">
                <typeReference xsi:type="types:Boolean"/>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.6"/>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.6"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral" value="true"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.5"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@statements.21/@elseStatement/@statements.0/@variable"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.6"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@statements.21/@elseStatement/@statements.2/@variable"/>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.2"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=".doTag();"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.50">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
            </arguments>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.51">
            <comments>// Synchronize AT_BEGIN scripting variables</comments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
            </arguments>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.48">
            <comments>// Declare and synchronize AT_END scripting variables</comments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.2"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
            </arguments>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.51">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.2"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
            </arguments>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// Resource injection</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="org.apache.jasper.runtime.AnnotationHelper.preDestroy("/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:StringReference" value=", "/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.2"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=");"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.47/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="declareScriptingVars">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="scope">
          <typeReference xsi:type="types:Int"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="vec">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../util/Vector.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.59"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@parameters.1"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="elem">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.22"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@init"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="varInfo">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <initialValue xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.0/@variable"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.1/@statement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.9"/>
                                </next>
                              </arguments>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                              <arguments xsi:type="references:StringReference" value=" "/>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.1/@statement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.8"/>
                                </next>
                              </arguments>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                              <arguments xsi:type="references:StringReference" value=" = null;"/>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.1/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.10"/>
                        </next>
                      </condition>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:InstanceOfExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.0/@variable"/>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="tagVarInfo">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <initialValue xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.0/@variable"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="varName">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.1/@elseStatement/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.6"/>
                              </next>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.1/@elseStatement/@statements.1/@statement/@statements.0/@variable"/>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagData.class.xmi#//@classifiers.0/@members.8"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.1/@elseStatement/@statements.0/@variable">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.7"/>
                                        </next>
                                      </arguments>
                                    </next>
                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.38"/>
                                  </next>
                                </value>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:Equal"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.1/@elseStatement/@statements.1/@statement/@statements.0/@variable"/>
                            <children xsi:type="literals:NullLiteral"/>
                          </condition>
                          <elseStatement xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:Continue">
                                <comments>// alias</comments>
                              </statements>
                            </statement>
                            <condition xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:NotEqual"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.1/@elseStatement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.7"/>
                                </next>
                              </children>
                              <children xsi:type="literals:NullLiteral"/>
                            </condition>
                          </elseStatement>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.1/@elseStatement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.8"/>
                                </next>
                              </arguments>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                              <arguments xsi:type="references:StringReference" value=" "/>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.1/@elseStatement/@statements.1/@statement/@statements.0/@variable"/>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                              <arguments xsi:type="references:StringReference" value=" = null;"/>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@statement/@statements.1/@elseStatement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.9"/>
                        </next>
                      </condition>
                    </statements>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@init"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.14"/>
                  </next>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.1/@statement/@statements.0/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.48/@statements.0/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="saveScriptingVars">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="scope">
          <typeReference xsi:type="types:Int"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/*&#xA;         * This method is called as part of the custom tag's start element.&#xA;         * &#xA;         * If the given custom tag has a custom nesting level greater than 0,&#xA;         * save the current values of its scripting variables to temporary&#xA;         * variables, so those values may be restored in the tag's end element.&#xA;         * This way, the scripting variables may be synchronized by the given&#xA;         * tag without affecting their original values.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return"/>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.60"/>
              </next>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tagVarInfos">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.52"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="varInfos">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.53"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return"/>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.2/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.1/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </expression>
            </children>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Continue"/>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.11"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@statement/@statements.0/@init"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@parameters.1"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:Condition">
                  <comments>// If the scripting variable has been declared, skip codes</comments>
                  <comments>// for saving and restoring it.</comments>
                  <statement xsi:type="statements:Continue"/>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.17"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.2/@variable">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@statement/@statements.0/@init"/>
                          </arraySelectors>
                        </arguments>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.59"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@parameters.1"/>
                    </next>
                  </condition>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="varName">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.8"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@statement/@statements.0/@init"/>
                      </arraySelectors>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="tmpVarName">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="_jspx_"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@statement/@statements.0/@statement/@statements.2/@variable"/>
                      <children xsi:type="references:StringReference" value="_"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.60"/>
                        </next>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@statement/@statements.0/@statement/@statements.3/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=" = "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@statement/@statements.0/@statement/@statements.2/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=";"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@statement/@statements.0/@init"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.2/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@statement/@statements.0/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.2/@variable">
              <next xsi:type="references:IdentifierReference"/>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:GreaterThan"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Continue"/>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.10"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@elseStatement/@statements.0/@init"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@parameters.1"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:Condition">
                  <comments>// If the scripting variable has been declared, skip codes</comments>
                  <comments>// for saving and restoring it.</comments>
                  <statement xsi:type="statements:Continue"/>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.17"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.1/@variable">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@elseStatement/@statements.0/@init"/>
                          </arraySelectors>
                        </arguments>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.59"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@parameters.1"/>
                    </next>
                  </condition>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="varName">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.6"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@elseStatement/@statements.0/@init"/>
                      </arraySelectors>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@elseStatement/@statements.0/@statement/@statements.2/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagData.class.xmi#//@classifiers.0/@members.8"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.1/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.7"/>
                                </next>
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@elseStatement/@statements.0/@init"/>
                                </arraySelectors>
                              </arguments>
                            </next>
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.38"/>
                          </next>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@elseStatement/@statements.0/@statement/@statements.2/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Continue">
                        <comments>// alias</comments>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@elseStatement/@statements.0/@init"/>
                        </arraySelectors>
                      </children>
                      <children xsi:type="literals:NullLiteral"/>
                    </condition>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="tmpVarName">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="_jspx_"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@elseStatement/@statements.0/@statement/@statements.2/@variable"/>
                      <children xsi:type="references:StringReference" value="_"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.60"/>
                        </next>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@elseStatement/@statements.0/@statement/@statements.4/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=" = "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@elseStatement/@statements.0/@statement/@statements.2/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=";"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@elseStatement/@statements.0/@init"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.1/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.49/@statements.4/@elseStatement/@statements.0/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
          </elseStatement>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="restoreScriptingVars">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="scope">
          <typeReference xsi:type="types:Int"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/*&#xA;         * This method is called as part of the custom tag's end element.&#xA;         * &#xA;         * If the given custom tag has a custom nesting level greater than 0,&#xA;         * restore its scripting variables to their original values that were&#xA;         * saved in the tag's start element.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return"/>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.60"/>
              </next>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tagVarInfos">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.52"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="varInfos">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.53"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return"/>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.2/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.1/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </expression>
            </children>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Continue"/>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.11"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@statement/@statements.0/@init"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@parameters.1"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:Condition">
                  <comments>// If the scripting variable has been declared, skip codes</comments>
                  <comments>// for saving and restoring it.</comments>
                  <statement xsi:type="statements:Continue"/>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.17"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.2/@variable">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@statement/@statements.0/@init"/>
                          </arraySelectors>
                        </arguments>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.59"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@parameters.1"/>
                    </next>
                  </condition>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="varName">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.8"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@statement/@statements.0/@init"/>
                      </arraySelectors>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="tmpVarName">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="_jspx_"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@statement/@statements.0/@statement/@statements.2/@variable"/>
                      <children xsi:type="references:StringReference" value="_"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.60"/>
                        </next>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@statement/@statements.0/@statement/@statements.2/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=" = "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@statement/@statements.0/@statement/@statements.3/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=";"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@statement/@statements.0/@init"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.2/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@statement/@statements.0/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.2/@variable">
              <next xsi:type="references:IdentifierReference"/>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:GreaterThan"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Continue"/>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.10"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@elseStatement/@statements.0/@init"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@parameters.1"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:Condition">
                  <comments>// If the scripting variable has been declared, skip codes</comments>
                  <comments>// for saving and restoring it.</comments>
                  <statement xsi:type="statements:Continue"/>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.17"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.1/@variable">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@elseStatement/@statements.0/@init"/>
                          </arraySelectors>
                        </arguments>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.59"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@parameters.1"/>
                    </next>
                  </condition>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="varName">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.6"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@elseStatement/@statements.0/@init"/>
                      </arraySelectors>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@elseStatement/@statements.0/@statement/@statements.2/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagData.class.xmi#//@classifiers.0/@members.8"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.1/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.7"/>
                                </next>
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@elseStatement/@statements.0/@init"/>
                                </arraySelectors>
                              </arguments>
                            </next>
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.38"/>
                          </next>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@elseStatement/@statements.0/@statement/@statements.2/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Continue">
                        <comments>// alias</comments>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@elseStatement/@statements.0/@init"/>
                        </arraySelectors>
                      </children>
                      <children xsi:type="literals:NullLiteral"/>
                    </condition>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="tmpVarName">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="_jspx_"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@elseStatement/@statements.0/@statement/@statements.2/@variable"/>
                      <children xsi:type="references:StringReference" value="_"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.60"/>
                        </next>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@elseStatement/@statements.0/@statement/@statements.2/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=" = "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@elseStatement/@statements.0/@statement/@statements.4/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=";"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@elseStatement/@statements.0/@init"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.1/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.50/@statements.4/@elseStatement/@statements.0/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
          </elseStatement>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="syncScriptingVars">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="scope">
          <typeReference xsi:type="types:Int"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/*&#xA;         * Synchronizes the scripting variables of the given custom tag for the&#xA;         * given scope.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tagVarInfos">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.52"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="varInfos">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.53"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return"/>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.1/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.0/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </expression>
            </children>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.1/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.8"/>
                            </next>
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@statement/@statements.0/@init"/>
                            </arraySelectors>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                          <arguments xsi:type="references:StringReference" value=" = ("/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.1/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.9"/>
                            </next>
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@statement/@statements.0/@init"/>
                            </arraySelectors>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                          <arguments xsi:type="references:StringReference" value=") _jspx_page_context.findAttribute("/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.1/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.8"/>
                              </next>
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@statement/@statements.0/@init"/>
                              </arraySelectors>
                            </arguments>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                          <arguments xsi:type="references:StringReference" value=");"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.11"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@statement/@statements.0/@init"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@parameters.1"/>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@statement/@statements.0/@init"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.1/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@statement/@statements.0/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.1/@variable">
              <next xsi:type="references:IdentifierReference"/>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:GreaterThan"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="name">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.6"/>
                          </next>
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@elseStatement/@statements.0/@init"/>
                          </arraySelectors>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@elseStatement/@statements.0/@statement/@statements.0/@statement/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@parameters.0">
                              <next xsi:type="references:MethodCall">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagData.class.xmi#//@classifiers.0/@members.8"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.0/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.7"/>
                                    </next>
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@elseStatement/@statements.0/@init"/>
                                    </arraySelectors>
                                  </arguments>
                                </next>
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.38"/>
                              </next>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@elseStatement/@statements.0/@statement/@statements.0/@statement/@statements.0/@variable"/>
                        <children xsi:type="literals:NullLiteral"/>
                      </condition>
                      <elseStatement xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:Continue">
                            <comments>// alias</comments>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:NotEqual"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.7"/>
                            </next>
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@elseStatement/@statements.0/@init"/>
                            </arraySelectors>
                          </children>
                          <children xsi:type="literals:NullLiteral"/>
                        </condition>
                      </elseStatement>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@elseStatement/@statements.0/@statement/@statements.0/@statement/@statements.0/@variable"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                          <arguments xsi:type="references:StringReference" value=" = ("/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.8"/>
                            </next>
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@elseStatement/@statements.0/@init"/>
                            </arraySelectors>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                          <arguments xsi:type="references:StringReference" value=") _jspx_page_context.findAttribute("/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@elseStatement/@statements.0/@statement/@statements.0/@statement/@statements.0/@variable"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                          <arguments xsi:type="references:StringReference" value=");"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.10"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@elseStatement/@statements.0/@init"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@parameters.1"/>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@elseStatement/@statements.0/@init"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.0/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.51/@statements.3/@elseStatement/@statements.0/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
          </elseStatement>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getJspContextVar">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:StringReference" value="this.getJspContext()"/>
            </statements>
          </statement>
          <condition xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.8"/>
            <self xsi:type="literals:This"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:StringReference" value="_jspx_page_context"/>
            </statements>
          </elseStatement>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getExpressionFactoryVar">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="createTagVarName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="fullName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="prefix">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="shortName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/*&#xA;         * Creates a tag variable name by concatenating the given prefix and&#xA;         * shortName and endcoded to make the resultant string a valid Java&#xA;         * Identifier.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="varName">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </variable>
        </statements>
        <statements xsi:type="statements:SynchronizedBlock">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@parameters.1"/>
                <children xsi:type="references:StringReference" value="_"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@parameters.2"/>
                <children xsi:type="references:StringReference" value="_"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="i">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../lang/Integer.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/Integer.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@parameters.0"/>
                      </next>
                    </child>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@statements.0/@variable"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@statements.1/@statements.1/@statement/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/Integer.class.xmi#//@classifiers.0/@members.27"/>
                      </next>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@parameters.0"/>
                    <arguments xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../lang/Integer.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@statements.1/@statements.1/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/Integer.class.xmi#//@classifiers.0/@members.27"/>
                          </next>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@parameters.0"/>
                </next>
              </children>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@parameters.0"/>
                    <arguments xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../lang/Integer.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@statements.0/@variable"/>
                    <children xsi:type="references:StringReference" value="0"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.1"/>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.48"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.54/@statements.0/@variable"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="evaluateAttribute">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="handlerInfo">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.47"/>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="attr">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagHandlerVar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="attrValue">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.21"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable">
                          <comments>// XXX - no need to generate temporary variable here</comments>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.62">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.22"/>
                            </next>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.3"/>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.2">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.61"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.13"/>
                        </next>
                      </arguments>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.61">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.22"/>
                            </next>
                          </arguments>
                        </value>
                      </expression>
                    </statements>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.24"/>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="literals:NullLiteral"/>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="localName">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.14"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="m">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/reflect/Method.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="literals:NullLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="c">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="literals:NullLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.4/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.27"/>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <comments>// XXX assert(c.length > 0)</comments>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.3/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.0">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47/@members.4">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.2/@variable"/>
                  </next>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ErrorDispatcher.class.xmi#//@classifiers.0/@members.8"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.2"/>
                      <arguments xsi:type="references:StringReference" value="jsp.error.unable.to_find_method"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.13"/>
                        </next>
                      </arguments>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.3/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.4/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.3/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../lang/reflect/Method.class.xmi#//@classifiers.0/@members.28"/>
                  </next>
                </value>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <comments>// Do nothing</comments>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.23"/>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.58">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.4/@variable">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          </arraySelectors>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.2/@variable"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.0">
                          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47/@members.5">
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.2/@variable"/>
                          </next>
                        </arguments>
                        <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:UnaryExpression">
                    <operators xsi:type="operators:Negate"/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.2">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.61"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.13"/>
                          </next>
                        </arguments>
                      </next>
                    </child>
                  </children>
                  <children xsi:type="expressions:UnaryExpression">
                    <operators xsi:type="operators:Negate"/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.27"/>
                      </next>
                    </child>
                  </children>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.24"/>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="sb">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <comments>// results buffer</comments>
                        <target xsi:type="classifiers:Class" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="64"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="tai">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.16"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                    <comments>// generate elContext reference</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.52"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                      <arguments xsi:type="references:StringReference" value=".getELContext()"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="elContext">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.10"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                          <arguments xsi:type="references:StringReference" value="new org.apache.jasper.el.ELContextWrapper("/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.4/@variable"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                          <arguments xsi:type="literals:CharacterLiteral" value="44"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                            <next xsi:type="references:MethodCall">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ELNode$Nodes.class.xmi#//@classifiers.0/@members.9"/>
                              </next>
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.28"/>
                            </next>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                          <arguments xsi:type="literals:CharacterLiteral" value="41"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.4/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
                          </next>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.28"/>
                        </next>
                      </children>
                      <children xsi:type="literals:NullLiteral"/>
                    </children>
                    <children xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ELNode$Nodes.class.xmi#//@classifiers.0/@members.9"/>
                          </next>
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.28"/>
                        </next>
                      </children>
                      <children xsi:type="literals:NullLiteral"/>
                    </children>
                  </condition>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                    <comments>// reset buffer</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.10"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                    <comments>// create our mark</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.2">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Mark.class.xmi#//@classifiers.0/@members.20"/>
                          </next>
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.35"/>
                        </next>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                      <arguments xsi:type="references:StringReference" value=" '"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                      <arguments xsi:type="literals:CharacterLiteral" value="39"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="mark">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                    <comments>// reset buffer</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.10"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <comments>// depending on type</comments>
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                          <arguments xsi:type="references:StringReference" value="new org.apache.jasper.el.JspValueExpression("/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.11/@variable"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                          <arguments xsi:type="literals:CharacterLiteral" value="44"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.53"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                          <arguments xsi:type="references:StringReference" value=".createValueExpression("/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                            <comments>// optimize</comments>
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.4/@variable"/>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                              <arguments xsi:type="literals:CharacterLiteral" value="44"/>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:NotEqual"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.28"/>
                          </next>
                        </children>
                        <children xsi:type="literals:NullLiteral"/>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                          <arguments xsi:type="literals:CharacterLiteral" value="44"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.54"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.19"/>
                                </next>
                              </arguments>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                          <arguments xsi:type="references:StringReference" value="))"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="evaluate">
                        <typeReference xsi:type="types:Boolean">
                          <comments>// should the expression be evaluated before passing to</comments>
                          <comments>// the setter?</comments>
                        </typeReference>
                        <initialValue xsi:type="literals:BooleanLiteral"/>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <comments>// JSP.2.3.2</comments>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.13/@statement/@statements.10/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="literals:BooleanLiteral" value="true"/>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.16"/>
                        </next>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <comments>// JSP.2.3.3</comments>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.13/@statement/@statements.10/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="literals:BooleanLiteral"/>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.17"/>
                        </next>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <comments>// JSP.2.3.5</comments>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.13/@statement/@statements.10/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:UnaryExpression">
                              <operators xsi:type="operators:Negate"/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.61"/>
                                  <arguments xsi:type="references:StringReference" value="#{"/>
                                </next>
                              </child>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:ConditionalAndExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.17"/>
                          </next>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.16"/>
                          </next>
                        </children>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                              <arguments xsi:type="references:StringReference" value=".getValue("/>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                              <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.52"/>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                              <arguments xsi:type="references:StringReference" value=".getELContext()"/>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                              <arguments xsi:type="references:StringReference" value=")"/>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.13/@statement/@statements.10/@variable"/>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
                          </next>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.17"/>
                      </next>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ConditionalAndExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.1/@variable"/>
                            <children xsi:type="literals:NullLiteral"/>
                          </expression>
                        </children>
                        <children xsi:type="references:IdentifierReference">
                          <next xsi:type="references:ReflectiveClassReference">
                            <next xsi:type="references:MethodCall">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.1/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.15"/>
                                  </next>
                                </arguments>
                              </next>
                              <target xsi:type="members:ClassMethod" href="../../../../lang/Class.class.xmi#//@classifiers.0/@members.44"/>
                            </next>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../javax/el/ValueExpression.class.xmi#//@classifiers.0"/>
                        </children>
                      </expression>
                    </children>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                            <arguments xsi:type="references:StringReference" value="new org.apache.jasper.el.JspMethodExpression("/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                            <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.11/@variable"/>
                            </arguments>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                            <arguments xsi:type="literals:CharacterLiteral" value="44"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                            <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.53"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                            <arguments xsi:type="references:StringReference" value=".createMethodExpression("/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.4/@variable"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                            <arguments xsi:type="literals:CharacterLiteral" value="44"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                            <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                            </arguments>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                            <arguments xsi:type="literals:CharacterLiteral" value="44"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.54"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.19"/>
                                  </next>
                                </arguments>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                            <arguments xsi:type="literals:CharacterLiteral" value="44"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                            <arguments xsi:type="references:StringReference" value="new Class[] {"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="p">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <arrayDimensionsBefore/>
                          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.20"/>
                            </next>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:ForLoop">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.54"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.13/@elseStatement/@statement/@statements.12/@variable">
                                      <arraySelectors>
                                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.13/@elseStatement/@statement/@statements.13/@init"/>
                                      </arraySelectors>
                                    </arguments>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                                </arguments>
                              </next>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                                <arguments xsi:type="literals:CharacterLiteral" value="44"/>
                              </next>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:RelationExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.13/@elseStatement/@statement/@statements.13/@init"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.13/@elseStatement/@statement/@statements.12/@variable">
                            <next xsi:type="references:IdentifierReference"/>
                          </children>
                          <relationOperators xsi:type="operators:LessThan"/>
                        </condition>
                        <init xsi:type="variables:LocalVariable" name="i">
                          <typeReference xsi:type="types:Int"/>
                          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        </init>
                        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.13/@elseStatement/@statement/@statements.13/@init"/>
                          <operator xsi:type="operators:PlusPlus"/>
                        </updates>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.10"/>
                                <arguments xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.6"/>
                                    </next>
                                  </children>
                                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                  <additiveOperators xsi:type="operators:Subtraction"/>
                                </arguments>
                              </next>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:RelationExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.13/@elseStatement/@statement/@statements.12/@variable">
                            <next xsi:type="references:IdentifierReference"/>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          <relationOperators xsi:type="operators:GreaterThan"/>
                        </condition>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                            <arguments xsi:type="references:StringReference" value="}))"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
                            </next>
                          </value>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:ConditionalOrExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.18"/>
                        </next>
                      </children>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ConditionalAndExpression">
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:NotEqual"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.1/@variable"/>
                              <children xsi:type="literals:NullLiteral"/>
                            </expression>
                          </children>
                          <children xsi:type="references:IdentifierReference">
                            <next xsi:type="references:ReflectiveClassReference">
                              <next xsi:type="references:MethodCall">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.1/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.15"/>
                                    </next>
                                  </arguments>
                                </next>
                                <target xsi:type="members:ClassMethod" href="../../../../lang/Class.class.xmi#//@classifiers.0/@members.44"/>
                              </next>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../javax/el/MethodExpression.class.xmi#//@classifiers.0"/>
                          </children>
                        </expression>
                      </children>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="replaceESC">
                          <typeReference xsi:type="types:Boolean">
                            <comments>// run attrValue through the expression interpreter</comments>
                          </typeReference>
                          <initialValue xsi:type="expressions:RelationExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.45"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0/@members.28"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0"/>
                                </arguments>
                              </next>
                            </children>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                            <relationOperators xsi:type="operators:GreaterThan"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="mapName">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="expressions:ConditionalExpression">
                            <child xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:EqualityExpression">
                                <equalityOperators xsi:type="operators:NotEqual"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.28"/>
                                  </next>
                                </children>
                                <children xsi:type="literals:NullLiteral"/>
                              </expression>
                            </child>
                            <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                              <next xsi:type="references:MethodCall">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ELNode$Nodes.class.xmi#//@classifiers.0/@members.9"/>
                                </next>
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.28"/>
                              </next>
                            </expressionIf>
                            <expressionElse xsi:type="literals:NullLiteral"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.24"/>
                              <arguments xsi:type="references:SelfReference">
                                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.8"/>
                                <self xsi:type="literals:This"/>
                              </arguments>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.4/@variable">
                                <arraySelectors>
                                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                </arraySelectors>
                              </arguments>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.13/@elseStatement/@elseStatement/@statements.1/@variable"/>
                              <arguments xsi:type="literals:BooleanLiteral"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <comments>// XXX hack: Replace ESC with '$'</comments>
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:StringReference" value="("/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                                <children xsi:type="references:StringReference" value=").replace("/>
                                <children xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0/@members.29"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/Constants.class.xmi#//@classifiers.0"/>
                                </children>
                                <children xsi:type="references:StringReference" value=", '$')"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </value>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.6/@elseStatement/@elseStatement/@statement/@statements.13/@elseStatement/@elseStatement/@statements.0/@variable"/>
                      </statements>
                    </elseStatement>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.25"/>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.58">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.4/@variable">
                        <arraySelectors>
                          <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        </arraySelectors>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.2/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@parameters.0">
                        <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47/@members.5">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.2/@variable"/>
                        </next>
                      </arguments>
                      <arguments xsi:type="literals:BooleanLiteral"/>
                    </value>
                  </expression>
                </statements>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.55/@statements.0/@variable"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="generateAliasMap">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagHandlerVar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/**&#xA;         * Generate code to create a map for the alias variables&#xA;         * &#xA;         * @return the name of the map&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tagVars">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.52"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="aliasMapVar">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="literals:NullLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="aliasSeen">
            <typeReference xsi:type="types:Boolean"/>
            <initialValue xsi:type="literals:BooleanLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="nameFrom">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.3/@init"/>
                  </arraySelectors>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="aliasedName">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.28"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.3/@statement/@statements.0/@variable"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Continue"/>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.3/@statement/@statements.1/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="references:StringReference" value="java.util.HashMap "/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.1/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@parameters.1"/>
                          <children xsi:type="references:StringReference" value="_aliasMap"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.1/@variable"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                          <arguments xsi:type="references:StringReference" value=" = new java.util.HashMap();"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.2/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="literals:BooleanLiteral" value="true"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:UnaryExpression">
                    <operators xsi:type="operators:Negate"/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.2/@variable"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.1/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=".put("/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.6"/>
                          </next>
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.3/@init"/>
                          </arraySelectors>
                        </arguments>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=", "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.3/@statement/@statements.1/@statement/@statements.0/@variable"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=");"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.3/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.3/@init"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference"/>
            </children>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.3/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.56/@statements.1/@variable"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="generateSetters">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagHandlerVar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="handlerInfo">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.47"/>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="simpleTag">
          <typeReference xsi:type="types:Boolean"/>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:Condition">
          <comments>// Set context</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="aliasMapVar">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <comments>// Generate alias map</comments>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="literals:NullLiteral"/>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.56">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.0"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.1"/>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.43"/>
                </next>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.1"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=".setJspContext(_jspx_page_context);"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=".setJspContext(_jspx_page_context, "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=");"/>
                    </next>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.3"/>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.1"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                  <arguments xsi:type="references:StringReference" value=".setPageContext(_jspx_page_context);"/>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// Set parent</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.1"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value=".setParent("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value="new javax.servlet.jsp.tagext.TagAdapter("/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                  <arguments xsi:type="references:StringReference" value="(javax.servlet.jsp.tagext.SimpleTag) this ));"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.8"/>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.1"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:StringReference" value=".setParent("/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                            <arguments xsi:type="references:StringReference" value="new javax.servlet.jsp.tagext.TagAdapter("/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                            <arguments xsi:type="references:StringReference" value="(javax.servlet.jsp.tagext.SimpleTag) "/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                            <arguments xsi:type="references:StringReference" value="));"/>
                          </next>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.3"/>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                            <arguments xsi:type="references:StringReference" value="(javax.servlet.jsp.tagext.Tag) "/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                            <arguments xsi:type="references:StringReference" value=");"/>
                          </next>
                        </expression>
                      </statements>
                    </elseStatement>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                        <arguments xsi:type="references:StringReference" value="null);"/>
                      </next>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
            </statement>
            <condition xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.3"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <comments>// The setParent() method need not be called if the value being</comments>
                <comments>// passed is null, since SimpleTag instances are not reused</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.1"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:StringReference" value=".setParent("/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                        <arguments xsi:type="references:StringReference" value=");"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
            </elseStatement>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="attrs">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <comments>// need to handle deferred values and methods</comments>
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.35"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="attrValue">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.55">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.2"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.2/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@init"/>
                    </arraySelectors>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.1"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="m">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Mark.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.35"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="// "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@statement/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Mark.class.xmi#//@classifiers.0/@members.21"/>
                      </next>
                    </children>
                    <children xsi:type="references:StringReference" value="("/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@statement/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Mark.class.xmi#//@classifiers.0/@members.16"/>
                      </next>
                    </children>
                    <children xsi:type="references:StringReference" value=","/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@statement/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Mark.class.xmi#//@classifiers.0/@members.17"/>
                      </next>
                    </children>
                    <children xsi:type="references:StringReference" value=") "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.16"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@init"/>
                      </arraySelectors>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.1"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value="."/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value="setDynamicAttribute("/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="uri">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.15"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@init"/>
                      </arraySelectors>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                          <arguments xsi:type="references:StringReference" value="null"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="references:StringReference" value="">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@statement/@statements.3/@statement/@statements.3/@variable"/>
                      </next>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@statement/@statements.3/@statement/@statements.3/@variable"/>
                        <children xsi:type="literals:NullLiteral"/>
                      </expression>
                    </children>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:StringReference" value="&quot;"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.2/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.15"/>
                              </next>
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@init"/>
                              </arraySelectors>
                            </children>
                            <children xsi:type="references:StringReference" value="&quot;"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value=", &quot;"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.14"/>
                        </next>
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@init"/>
                        </arraySelectors>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value="&quot;, "/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@statement/@statements.0/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=");"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.27"/>
                </next>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@init"/>
                </arraySelectors>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.1"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value="."/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@parameters.2">
                        <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47/@members.4">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/reflect/Method.class.xmi#//@classifiers.0/@members.23"/>
                          </next>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.2/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspAttribute.class.xmi#//@classifiers.0/@members.14"/>
                            </next>
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@init"/>
                            </arraySelectors>
                          </arguments>
                        </next>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:StringReference" value="("/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@statement/@statements.0/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:StringReference" value=");"/>
                    </next>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.2/@variable">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </children>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.57/@statements.3/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="convertString">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="c">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="s">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="attrName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="propEditorClass">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="isNamedAttribute">
          <typeReference xsi:type="types:Boolean"/>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/*&#xA;         * @param c The target class to which to coerce the given string @param&#xA;         * s The string value @param attrName The name of the attribute whose&#xA;         * value is being supplied @param propEditorClass The property editor&#xA;         * for the given attribute @param isNamedAttribute true if the given&#xA;         * attribute is a named attribute (that is, specified using the&#xA;         * jsp:attribute standard action), and false otherwise&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="quoted">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="className">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.56"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="("/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@statements.2/@statement/@statements.0/@variable"/>
                <children xsi:type="references:StringReference" value=")org.apache.jasper.runtime.JspRuntimeLibrary.getValueFromBeanInfoPropertyEditor("/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@statements.2/@statement/@statements.0/@variable"/>
                <children xsi:type="references:StringReference" value=".class, &quot;"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.2"/>
                <children xsi:type="references:StringReference" value="&quot;, "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@statements.0/@variable"/>
                <children xsi:type="references:StringReference" value=", "/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.56"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.3"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                </children>
                <children xsi:type="references:StringReference" value=".class)"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.3"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@statements.0/@variable"/>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:ReflectiveClassReference"/>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.28"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                  </returnValue>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                <children xsi:type="references:PrimitiveTypeReference">
                  <next xsi:type="references:ReflectiveClassReference"/>
                  <primitiveType xsi:type="types:Boolean"/>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.29"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                    </returnValue>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:ReflectiveClassReference"/>
                    <target xsi:type="classifiers:Class" href="../../../../lang/Boolean.class.xmi#//@classifiers.0"/>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.30"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                      </returnValue>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                    <children xsi:type="references:PrimitiveTypeReference">
                      <next xsi:type="references:ReflectiveClassReference"/>
                      <primitiveType xsi:type="types:Byte"/>
                    </children>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Return">
                        <returnValue xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.31"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                        </returnValue>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                      <children xsi:type="references:IdentifierReference">
                        <next xsi:type="references:ReflectiveClassReference"/>
                        <target xsi:type="classifiers:Class" href="../../../../lang/Byte.class.xmi#//@classifiers.0"/>
                      </children>
                    </condition>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:Return">
                          <returnValue xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.32"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                          </returnValue>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                        <children xsi:type="references:PrimitiveTypeReference">
                          <next xsi:type="references:ReflectiveClassReference"/>
                          <primitiveType xsi:type="types:Char"/>
                        </children>
                      </condition>
                      <elseStatement xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:Return">
                            <returnValue xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.33"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                            </returnValue>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                          <children xsi:type="references:IdentifierReference">
                            <next xsi:type="references:ReflectiveClassReference"/>
                            <target xsi:type="classifiers:Class" href="../../../../lang/Character.class.xmi#//@classifiers.0"/>
                          </children>
                        </condition>
                        <elseStatement xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:Return">
                              <returnValue xsi:type="references:IdentifierReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.34"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                              </returnValue>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:Equal"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                            <children xsi:type="references:PrimitiveTypeReference">
                              <next xsi:type="references:ReflectiveClassReference"/>
                              <primitiveType xsi:type="types:Double"/>
                            </children>
                          </condition>
                          <elseStatement xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:Return">
                                <returnValue xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.35"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                                </returnValue>
                              </statements>
                            </statement>
                            <condition xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:Equal"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                              <children xsi:type="references:IdentifierReference">
                                <next xsi:type="references:ReflectiveClassReference"/>
                                <target xsi:type="classifiers:Class" href="../../../../lang/Double.class.xmi#//@classifiers.0"/>
                              </children>
                            </condition>
                            <elseStatement xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:Return">
                                  <returnValue xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.36"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                                  </returnValue>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:EqualityExpression">
                                <equalityOperators xsi:type="operators:Equal"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                                <children xsi:type="references:PrimitiveTypeReference">
                                  <next xsi:type="references:ReflectiveClassReference"/>
                                  <primitiveType xsi:type="types:Float"/>
                                </children>
                              </condition>
                              <elseStatement xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:Return">
                                    <returnValue xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.37"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                                    </returnValue>
                                  </statements>
                                </statement>
                                <condition xsi:type="expressions:EqualityExpression">
                                  <equalityOperators xsi:type="operators:Equal"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                                  <children xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:ReflectiveClassReference"/>
                                    <target xsi:type="classifiers:Class" href="../../../../lang/Float.class.xmi#//@classifiers.0"/>
                                  </children>
                                </condition>
                                <elseStatement xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:Return">
                                      <returnValue xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.38"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                                      </returnValue>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="expressions:EqualityExpression">
                                    <equalityOperators xsi:type="operators:Equal"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                                    <children xsi:type="references:PrimitiveTypeReference">
                                      <next xsi:type="references:ReflectiveClassReference"/>
                                      <primitiveType xsi:type="types:Int"/>
                                    </children>
                                  </condition>
                                  <elseStatement xsi:type="statements:Condition">
                                    <statement xsi:type="statements:Block">
                                      <statements xsi:type="statements:Return">
                                        <returnValue xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.39"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                                        </returnValue>
                                      </statements>
                                    </statement>
                                    <condition xsi:type="expressions:EqualityExpression">
                                      <equalityOperators xsi:type="operators:Equal"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                                      <children xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:ReflectiveClassReference"/>
                                        <target xsi:type="classifiers:Class" href="../../../../lang/Integer.class.xmi#//@classifiers.0"/>
                                      </children>
                                    </condition>
                                    <elseStatement xsi:type="statements:Condition">
                                      <statement xsi:type="statements:Block">
                                        <statements xsi:type="statements:Return">
                                          <returnValue xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.40"/>
                                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                                          </returnValue>
                                        </statements>
                                      </statement>
                                      <condition xsi:type="expressions:EqualityExpression">
                                        <equalityOperators xsi:type="operators:Equal"/>
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                                        <children xsi:type="references:PrimitiveTypeReference">
                                          <next xsi:type="references:ReflectiveClassReference"/>
                                          <primitiveType xsi:type="types:Short"/>
                                        </children>
                                      </condition>
                                      <elseStatement xsi:type="statements:Condition">
                                        <statement xsi:type="statements:Block">
                                          <statements xsi:type="statements:Return">
                                            <returnValue xsi:type="references:IdentifierReference">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.41"/>
                                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                                              </next>
                                              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                                            </returnValue>
                                          </statements>
                                        </statement>
                                        <condition xsi:type="expressions:EqualityExpression">
                                          <equalityOperators xsi:type="operators:Equal"/>
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                                          <children xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:ReflectiveClassReference"/>
                                            <target xsi:type="classifiers:Class" href="../../../../lang/Short.class.xmi#//@classifiers.0"/>
                                          </children>
                                        </condition>
                                        <elseStatement xsi:type="statements:Condition">
                                          <statement xsi:type="statements:Block">
                                            <statements xsi:type="statements:Return">
                                              <returnValue xsi:type="references:IdentifierReference">
                                                <next xsi:type="references:MethodCall">
                                                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.42"/>
                                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                                                </next>
                                                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                                              </returnValue>
                                            </statements>
                                          </statement>
                                          <condition xsi:type="expressions:EqualityExpression">
                                            <equalityOperators xsi:type="operators:Equal"/>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                                            <children xsi:type="references:PrimitiveTypeReference">
                                              <next xsi:type="references:ReflectiveClassReference"/>
                                              <primitiveType xsi:type="types:Long"/>
                                            </children>
                                          </condition>
                                          <elseStatement xsi:type="statements:Condition">
                                            <statement xsi:type="statements:Block">
                                              <statements xsi:type="statements:Return">
                                                <returnValue xsi:type="references:IdentifierReference">
                                                  <next xsi:type="references:MethodCall">
                                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.43"/>
                                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.1"/>
                                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.4"/>
                                                  </next>
                                                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                                                </returnValue>
                                              </statements>
                                            </statement>
                                            <condition xsi:type="expressions:EqualityExpression">
                                              <equalityOperators xsi:type="operators:Equal"/>
                                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                                              <children xsi:type="references:IdentifierReference">
                                                <next xsi:type="references:ReflectiveClassReference"/>
                                                <target xsi:type="classifiers:Class" href="../../../../lang/Long.class.xmi#//@classifiers.0"/>
                                              </children>
                                            </condition>
                                            <elseStatement xsi:type="statements:Condition">
                                              <statement xsi:type="statements:Block">
                                                <statements xsi:type="statements:Return">
                                                  <returnValue xsi:type="expressions:AdditiveExpression">
                                                    <children xsi:type="references:StringReference" value="new String("/>
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@statements.0/@variable"/>
                                                    <children xsi:type="references:StringReference" value=")"/>
                                                    <additiveOperators xsi:type="operators:Addition"/>
                                                    <additiveOperators xsi:type="operators:Addition"/>
                                                  </returnValue>
                                                </statements>
                                              </statement>
                                              <condition xsi:type="expressions:EqualityExpression">
                                                <equalityOperators xsi:type="operators:Equal"/>
                                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                                                <children xsi:type="references:IdentifierReference">
                                                  <next xsi:type="references:ReflectiveClassReference"/>
                                                  <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
                                                </children>
                                              </condition>
                                              <elseStatement xsi:type="statements:Block">
                                                <statements xsi:type="statements:LocalVariableStatement">
                                                  <variable name="className">
                                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                                      <classifierReferences>
                                                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                                                      </classifierReferences>
                                                    </typeReference>
                                                    <initialValue xsi:type="references:IdentifierReference">
                                                      <next xsi:type="references:MethodCall">
                                                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.56"/>
                                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.0"/>
                                                      </next>
                                                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                                                    </initialValue>
                                                  </variable>
                                                </statements>
                                                <statements xsi:type="statements:Return">
                                                  <returnValue xsi:type="expressions:AdditiveExpression">
                                                    <children xsi:type="references:StringReference" value="("/>
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                                                    <children xsi:type="references:StringReference" value=")org.apache.jasper.runtime.JspRuntimeLibrary.getValueFromPropertyEditorManager("/>
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@statements.2/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                                                    <children xsi:type="references:StringReference" value=".class, &quot;"/>
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@parameters.2"/>
                                                    <children xsi:type="references:StringReference" value="&quot;, "/>
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.58/@statements.0/@variable"/>
                                                    <children xsi:type="references:StringReference" value=")"/>
                                                    <additiveOperators xsi:type="operators:Addition"/>
                                                    <additiveOperators xsi:type="operators:Addition"/>
                                                    <additiveOperators xsi:type="operators:Addition"/>
                                                    <additiveOperators xsi:type="operators:Addition"/>
                                                    <additiveOperators xsi:type="operators:Addition"/>
                                                    <additiveOperators xsi:type="operators:Addition"/>
                                                    <additiveOperators xsi:type="operators:Addition"/>
                                                    <additiveOperators xsi:type="operators:Addition"/>
                                                  </returnValue>
                                                </statements>
                                              </elseStatement>
                                            </elseStatement>
                                          </elseStatement>
                                        </elseStatement>
                                      </elseStatement>
                                    </elseStatement>
                                  </elseStatement>
                                </elseStatement>
                              </elseStatement>
                            </elseStatement>
                          </elseStatement>
                        </elseStatement>
                      </elseStatement>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getScopeConstant">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="scope">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/*&#xA;         * Converts the scope string representation, whose possible values are&#xA;         * &quot;page&quot;, &quot;request&quot;, &quot;session&quot;, and &quot;application&quot;, to the corresponding&#xA;         * scope constant.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="scopeName">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:StringReference" value="PageContext.PAGE_SCOPE"/>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// Default to page</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.59/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:StringReference" value="PageContext.REQUEST_SCOPE"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:StringReference" value="request">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.59/@parameters.0"/>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.59/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:StringReference" value="PageContext.SESSION_SCOPE"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:StringReference" value="session">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.59/@parameters.0"/>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.59/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:StringReference" value="PageContext.APPLICATION_SCOPE"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:StringReference" value="application">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.59/@parameters.0"/>
                </next>
              </condition>
            </elseStatement>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.59/@statements.0/@variable"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="generateJspFragment">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagHandlerVar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/**&#xA;         * Generates anonymous JspFragment inner class which is passed as an&#xA;         * argument to SimpleTag.setJspBody().&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="fragment">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <comments>// XXX - A possible optimization here would be to check to see</comments>
              <comments>// if the only child of the parent node is TemplateText. If so,</comments>
              <comments>// we know there won't be any parameters, etc, so we can</comments>
              <comments>// generate a low-overhead JspFragment that just echoes its</comments>
              <comments>// body. The implementation of this fragment can come from</comments>
              <comments>// the org.apache.jasper.runtime package as a support class.</comments>
              <namespaces>FragmentHelperClass</namespaces>
              <classifierReferences target="//@classifiers.0/@members.49/@members.0"/>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.11">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.9">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.60/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.60/@parameters.1"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.12"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="outSave">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9"/>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.60/@statements.0/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.0/@members.3">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.6"/>
              </next>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tmpParent">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:StringReference" value="_jspx_parent"/>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="isSimpleTagParentSave">
            <typeReference xsi:type="types:Boolean"/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.3"/>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.3"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:BooleanLiteral" value="true"/>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="tmpIsFragment">
            <typeReference xsi:type="types:Boolean"/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.7"/>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.7"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:BooleanLiteral" value="true"/>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="pushBodyCountVarSave">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4">
                  <comments>// Use a fixed name for push body count, to simplify code gen</comments>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:StringReference" value="_jspx_push_body_count"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.60/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.60/@statements.1/@variable"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.2"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.60/@statements.3/@variable"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.3"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.60/@statements.5/@variable"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.7"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.60/@statements.7/@variable"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.60/@statements.9/@variable"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.11">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.10">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.60/@statements.0/@variable"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.12"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <comments>// XXX - Need to change pageContext to jspContext if</comments>
            <comments>// we're not in a place where pageContext is defined (e.g.</comments>
            <comments>// in a fragment or in a tag file.</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="new "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.11">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.6"/>
                </children>
                <children xsi:type="references:StringReference" value="( "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.60/@statements.0/@variable">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.0/@members.4"/>
                </children>
                <children xsi:type="references:StringReference" value=", _jspx_page_context, "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.60/@parameters.1"/>
                <children xsi:type="references:StringReference" value=", "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.4"/>
                <children xsi:type="references:StringReference" value=")"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="generateNamedAttributeValue">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$NamedAttribute.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Generate the code required to obtain the runtime value of the given&#xA;         * named attribute.&#xA;         * &#xA;         * @return The name of the temporary variable the result is stored in.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="varName">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$NamedAttribute.class.xmi#//@classifiers.0/@members.14"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="body">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <comments>// If the only body element for this named attribute node is</comments>
              <comments>// template text, we need not generate an extra call to</comments>
              <comments>// pushBody and popBody. Maybe we can further optimize</comments>
              <comments>// here by getting rid of the temporary variable, but in</comments>
              <comments>// reality it looks like javac does this for us.</comments>
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="templateTextOptimization">
                <typeReference xsi:type="types:Boolean"/>
                <initialValue xsi:type="literals:BooleanLiteral"/>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="bodyElement">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.9"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@statements.2/@statement/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="literals:BooleanLiteral" value="true"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:StringReference" value="String "/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@statements.0/@variable"/>
                            <children xsi:type="references:StringReference" value=" = "/>
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                              <arguments xsi:type="instantiations:NewConstructorCall">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <arguments xsi:type="expressions:NestedExpression">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.34"/>
                                  </next>
                                  <expression xsi:type="expressions:CastExpression">
                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                      <namespaces>Node</namespaces>
                                      <classifierReferences>
                                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$TemplateText.class.xmi#//@classifiers.0"/>
                                      </classifierReferences>
                                    </typeReference>
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable"/>
                                  </expression>
                                </arguments>
                              </arguments>
                            </children>
                            <children xsi:type="references:StringReference" value=";"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:InstanceOfExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <namespaces>Node</namespaces>
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$TemplateText.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable"/>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.8"/>
                  </next>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </condition>
            </statements>
            <statements xsi:type="statements:Condition">
              <comments>// XXX - Another possible optimization would be for</comments>
              <comments>// lone EL expressions (no need to pushBody here either).</comments>
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="out = _jspx_page_context.pushBody();"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0/@members.2"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@parameters.0"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="String "/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@statements.0/@variable"/>
                        <children xsi:type="references:StringReference" value=" = "/>
                        <children xsi:type="references:StringReference" value="((javax.servlet.jsp.tagext.BodyContent)"/>
                        <children xsi:type="references:StringReference" value="out).getString();"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:StringReference" value="out = _jspx_page_context.popBody();"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@statements.2/@statement/@statements.0/@variable"/>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@statements.1/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
                <comments>// Empty body must be treated as &quot;&quot;</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="String "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@statements.0/@variable"/>
                    <children xsi:type="references:StringReference" value=" = &quot;&quot;;"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.61/@statements.0/@variable"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="generateNamedAttributeJspFragment">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$NamedAttribute.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagHandlerVar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Similar to generateNamedAttributeValue, but create a JspFragment&#xA;         * instead.&#xA;         * &#xA;         * @param n&#xA;         *            The parent node of the named attribute&#xA;         * @param tagHandlerVar&#xA;         *            The variable the tag handler is stored in, so the fragment&#xA;         *            knows its parent tag.&#xA;         * @return The name of the temporary variable the fragment is stored in.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="varName">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.62/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$NamedAttribute.class.xmi#//@classifiers.0/@members.14"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="javax.servlet.jsp.tagext.JspFragment "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.62/@statements.0/@variable"/>
                <children xsi:type="references:StringReference" value=" = "/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.33/@members.60">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.62/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.62/@parameters.1"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="references:StringReference" value=";"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@members.62/@statements.0/@variable"/>
        </statements>
      </members>
      <extends xsi:type="types:NamespaceClassifierReference">
        <namespaces>Node</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </extends>
    </members>
    <members xsi:type="members:ClassMethod" name="generateLocalVariables">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="n">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ci">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$ChildInfo.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:NestedExpression">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0/@members.36"/>
                </next>
                <expression xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <namespaces>Node</namespaces>
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.1"/>
                </expression>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.1"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:NestedExpression">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$JspBody.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                  <expression xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <namespaces>Node</namespaces>
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspBody.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.1"/>
                  </expression>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:InstanceOfExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Node</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$JspBody.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.1"/>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:NestedExpression">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$NamedAttribute.class.xmi#//@classifiers.0/@members.12"/>
                    </next>
                    <expression xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <namespaces>Node</namespaces>
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$NamedAttribute.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.1"/>
                    </expression>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:InstanceOfExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>Node</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$NamedAttribute.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.1"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <comments>// err.getString(</comments>
              <comments>// &quot;jsp.error.internal.unexpected_node_type&quot; ) );</comments>
              <statements xsi:type="statements:Throw">
                <comments>// Cannot access err since this method is static, but at</comments>
                <comments>// least flag an error.</comments>
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:StringReference" value="Unexpected Node Type"/>
                </throwable>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="HttpSession session = _jspx_page_context.getSession();"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="ServletContext application = _jspx_page_context.getServletContext();"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ChildInfo.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="HttpServletRequest request = (HttpServletRequest)_jspx_page_context.getRequest();"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ChildInfo.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ChildInfo.class.xmi#//@classifiers.0/@members.12"/>
            </next>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ChildInfo.class.xmi#//@classifiers.0/@members.16"/>
            </next>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ChildInfo.class.xmi#//@classifiers.0/@members.14"/>
            </next>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="HttpServletResponse response = (HttpServletResponse)_jspx_page_context.getResponse();"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$ChildInfo.class.xmi#//@classifiers.0/@members.12"/>
          </next>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="genCommonPostamble">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Common part of postamble, shared by both servlets and tag files.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ForLoop">
        <comments>// Append any methods that were generated in the buffer.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="methodBuffer">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.48"/>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.48"/>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../util/ArrayList.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.0/@init"/>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.8">
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.21"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.0/@statement/@statements.0/@variable">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.7"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.0/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../util/ArrayList.class.xmi#//@classifiers.0/@members.8"/>
            </next>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.0/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Append the helper class</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.11"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.13">
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.21"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.12"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.7"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Append char array declarations</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.21"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.7"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// Close the class definition</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="}"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="generatePostamble">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="page">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>Node</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Generates the ending part of the static portion of the servlet.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="} catch (Throwable t) {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="if (!(t instanceof SkipPageException)){"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="out = _jspx_out;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="if (out != null &amp;&amp; out.getBufferSize() != 0)"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="try { out.clearBuffer(); } catch (java.io.IOException e) {}"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="}"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="} finally {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="_jspxFactory.releasePageContext(_jspx_page_context);"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="}"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// Close the service method</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="}"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.35">
          <comments>// Generated methods, helper classes, etc.</comments>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:Constructor" name="Generator">
      <comments>/**&#xA;     * Constructor.&#xA;     */</comments>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../util/ArrayList.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Compiler.class.xmi#//@classifiers.0/@members.19"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Compiler.class.xmi#//@classifiers.0/@members.21"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.49"/>
            </typeReference>
            <arguments xsi:type="references:StringReference" value="Helper"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Compiler.class.xmi#//@classifiers.0/@members.20"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>/*&#xA;         * Temporary hack. If a JSP page uses the &quot;extends&quot; attribute of the&#xA;         * page directive, the _jspInit() method of the generated servlet class&#xA;         * will not be called (it is only called for those generated servlets&#xA;         * that extend HttpJspBase, the default), causing the tag handler pools&#xA;         * not to be initialized and resulting in a NPE. The JSP spec needs to&#xA;         * clarify whether containers can override init() and destroy(). For&#xA;         * now, we just disable tag pooling for pages that use &quot;extends&quot;.&#xA;         */</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/jasper/Options.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.65"/>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.87"/>
              <arguments xsi:type="literals:BooleanLiteral"/>
            </next>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/PageInfo.class.xmi#//@classifiers.0/@members.52"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../org/apache/jasper/Options.class.xmi#//@classifiers.0/@members.3"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.65"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../util/Vector.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="compiler">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Compiler.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:ClassMethod" name="generate">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="compiler">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Compiler.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="page">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>Node</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The main entry for Generator.&#xA;     * &#xA;     * @param out&#xA;     *            The servlet output writer&#xA;     * @param compiler&#xA;     *            The compiler&#xA;     * @param page&#xA;     *            The input page&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="gen">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0"/>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.21">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.2"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="tagInfo">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JasperTagInfo.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JasperTagInfo.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.57"/>
                    </next>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.39">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.2/@statement/@statements.0/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.2"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return"/>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.59"/>
                </next>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.31">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.2"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.8"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.2">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
                  <next xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences target="//@classifiers.0/@members.33"/>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.56"/>
                        </next>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.36"/>
                        </next>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.2/@statement/@statements.0/@variable"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.40">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.2/@statement/@statements.0/@variable"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.56"/>
            </next>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.2"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.31">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.2"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.8"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.2">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
                  <next xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences target="//@classifiers.0/@members.33"/>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.56"/>
                        </next>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.36"/>
                        </next>
                      </next>
                    </arguments>
                    <arguments xsi:type="literals:NullLiteral"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@statements.0/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.36">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38/@parameters.2"/>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="generateTagHandlerPreamble">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tagInfo">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JasperTagInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tag">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>Node</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/*&#xA;     * Generates tag handler preamble.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="className">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Generate package declaration</comments>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagInfo.class.xmi#//@classifiers.0/@members.26"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lastIndex">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.47"/>
              <arguments xsi:type="literals:CharacterLiteral" value="46"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="pkgName">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.56"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.1/@variable"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.25">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.2/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.55"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.1/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.1/@variable"/>
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Subtraction"/>
            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.26">
          <comments>// Generate imports</comments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// Generate class declaration</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
            <arguments xsi:type="references:StringReference" value="public final class "/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="    extends javax.servlet.jsp.tagext.SimpleTagSupport"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
            <arguments xsi:type="references:StringReference" value="    implements org.apache.jasper.runtime.JspSourceDependent"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                <arguments xsi:type="references:StringReference" value=","/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                <arguments xsi:type="references:StringReference" value="               javax.servlet.jsp.tagext.DynamicAttributes"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JasperTagInfo.class.xmi#//@classifiers.0/@members.3"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:StringReference" value=" {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.20">
          <comments>/*&#xA;         * Class body begins here&#xA;         */</comments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.27">
          <comments>// Static initializations here</comments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="private JspContext jspContext;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// Declare writer used for storing result of fragment/body invocation</comments>
          <comments>// if 'varReader' or 'var' attribute is specified</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="private java.io.Writer _jspx_sout;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.28">
          <comments>// Class variable declarations</comments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagInfo.class.xmi#//@classifiers.0/@members.19"/>
            </next>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.42">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.41">
          <comments>// Tag-handler specific declarations</comments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.43"/>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JasperTagInfo.class.xmi#//@classifiers.0/@members.3"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29">
          <comments>// Methods here</comments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// Now the doTag() method</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="public void doTag() throws JspException, java.io.IOException {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="}"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="}"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Return"/>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.59"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>/*&#xA;         * According to the spec, 'pageContext' must not be made available as an&#xA;         * implicit object in tag files. Declare _jspx_page_context, so we can&#xA;         * share the code generator with JSPs.&#xA;         */</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="PageContext _jspx_page_context = (PageContext)jspContext;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// Declare implicit objects.</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="HttpServletRequest request = "/>
              <children xsi:type="references:StringReference" value="(HttpServletRequest) _jspx_page_context.getRequest();"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="HttpServletResponse response = "/>
              <children xsi:type="references:StringReference" value="(HttpServletResponse) _jspx_page_context.getResponse();"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="HttpSession session = _jspx_page_context.getSession();"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="ServletContext application = _jspx_page_context.getServletContext();"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="ServletConfig config = _jspx_page_context.getServletConfig();"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="JspWriter out = jspContext.getOut();"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="_jspInit(config);"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// set current JspContext on ELContext</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="jspContext.getELContext().putContext(JspContext.class,jspContext);"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="try {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="generateTagHandlerPostamble">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tagInfo">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// Have to catch Throwable because a classic tag handler</comments>
          <comments>// helper method is declared to throw Throwable.</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="} catch( Throwable t ) {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="if( t instanceof SkipPageException )"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="    throw (SkipPageException) t;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="if( t instanceof java.io.IOException )"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="    throw (java.io.IOException) t;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="if( t instanceof IllegalStateException )"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="    throw (IllegalStateException) t;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="if( t instanceof JspException )"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="    throw (JspException) t;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="throw new JspException(t);"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="} finally {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="attrInfos">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// handle restoring VariableMapper</comments>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagInfo.class.xmi#//@classifiers.0/@members.20"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:StringReference" value="_el_variablemapper.setVariable("/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.15/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.14"/>
                        </next>
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.16/@init"/>
                        </arraySelectors>
                      </arguments>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:StringReference" value=",_el_ve"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.19"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.16/@init"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:StringReference" value=");"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.15/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.21"/>
                </next>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.16/@init"/>
                </arraySelectors>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.15/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.22"/>
                </next>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.16/@init"/>
                </arraySelectors>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.16/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.15/@variable">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.16/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// restore nested JspContext on ELContext</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="jspContext.getELContext().putContext(JspContext.class,super.getJspContext());"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="((org.apache.jasper.runtime.JspContextWrapper) jspContext).syncEndTagFile();"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="_jspDestroy();"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/Vector.class.xmi#//@classifiers.0/@members.15"/>
              </next>
            </child>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="}"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>// Close the doTag method</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="}"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.35">
          <comments>// Generated methods, helper classes, etc.</comments>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="generateTagHandlerAttributes">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tagInfo">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Generates declarations for tag handler attributes, and defines the getter&#xA;     * and setter methods for each.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="private java.util.HashMap _jspx_dynamic_attrs = new java.util.HashMap();"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagInfo.class.xmi#//@classifiers.0/@members.35"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="attrInfos">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Declare attributes</comments>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagInfo.class.xmi#//@classifiers.0/@members.20"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                <arguments xsi:type="references:StringReference" value="private "/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:StringReference" value="javax.servlet.jsp.tagext.JspFragment "/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.19"/>
              </next>
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.2/@init"/>
              </arraySelectors>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.55"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.15"/>
                          </next>
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.2/@init"/>
                          </arraySelectors>
                        </arguments>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:StringReference" value=" "/>
                  </next>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.14"/>
                  </next>
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.2/@init"/>
                  </arraySelectors>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                <arguments xsi:type="references:StringReference" value=";"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Define attribute getter and setter methods</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <comments>// getter method</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:StringReference" value="public "/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:StringReference" value="javax.servlet.jsp.tagext.JspFragment "/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.19"/>
                  </next>
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
                  </arraySelectors>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.55"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.15"/>
                              </next>
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
                              </arraySelectors>
                            </arguments>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:StringReference" value=" "/>
                      </next>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.14"/>
                        </next>
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
                        </arraySelectors>
                      </arguments>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:StringReference" value=" {"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:StringReference" value="return this."/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.14"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
                      </arraySelectors>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:StringReference" value=";"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                    <arguments xsi:type="references:StringReference" value="}"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <comments>// setter method</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:StringReference" value="public void "/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.46">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.14"/>
                        </next>
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
                        </arraySelectors>
                      </arguments>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:StringReference" value="(javax.servlet.jsp.tagext.JspFragment "/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.19"/>
                  </next>
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
                  </arraySelectors>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:StringReference" value="("/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0/@members.55"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.15"/>
                              </next>
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
                              </arraySelectors>
                            </arguments>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JspUtil.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:StringReference" value=" "/>
                      </next>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.14"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
                      </arraySelectors>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:StringReference" value=") {"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:StringReference" value="this."/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.14"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
                      </arraySelectors>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:StringReference" value=" = "/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.14"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
                      </arraySelectors>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:StringReference" value=";"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <comments>// Tag files should also set jspContext attributes</comments>
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="references:StringReference" value="jspContext.setAttribute(&quot;"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.14"/>
                          </next>
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
                          </arraySelectors>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:StringReference" value="&quot;, "/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.14"/>
                          </next>
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
                          </arraySelectors>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                        <arguments xsi:type="references:StringReference" value=");"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/JspCompilationContext.class.xmi#//@classifiers.0/@members.56"/>
                  </next>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                    <arguments xsi:type="references:StringReference" value="}"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.4/@statement/@statements.0/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="generateSetJspContext">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tagInfo">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/*&#xA;     * Generate setter for JspContext so we can create a wrapper and store both&#xA;     * the original and the wrapper. We need the wrapper to mask the page&#xA;     * context from the tag file and simulate a fresh page context. We need the&#xA;     * original to do things like sync AT_BEGIN and AT_END scripting variables.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="nestedSeen">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="literals:BooleanLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="atBeginSeen">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="literals:BooleanLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="atEndSeen">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="literals:BooleanLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="aliasSeen">
          <typeReference xsi:type="types:Boolean">
            <comments>// Determine if there are any aliases</comments>
          </typeReference>
          <initialValue xsi:type="literals:BooleanLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tagVars">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagInfo.class.xmi#//@classifiers.0/@members.34"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.4/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.5/@init"/>
                  </arraySelectors>
                </children>
                <children xsi:type="literals:NullLiteral"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.4/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.6"/>
                  </next>
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.5/@init"/>
                  </arraySelectors>
                </children>
                <children xsi:type="literals:NullLiteral"/>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.5/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.4/@variable">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.5/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="public void setJspContext(JspContext ctx, java.util.Map aliasMap) {"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@variable"/>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="public void setJspContext(JspContext ctx) {"/>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="super.setJspContext(ctx);"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="java.util.ArrayList _jspx_nested = null;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="java.util.ArrayList _jspx_at_begin = null;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="java.util.ArrayList _jspx_at_end = null;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Switch">
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                        <arguments xsi:type="references:StringReference" value="_jspx_nested = new java.util.ArrayList();"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral" value="true"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Negate"/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.0/@variable"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:StringReference" value="_jspx_nested.add("/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                        <arguments xsi:type="references:StringReference" value="_jspx_at_begin = new java.util.ArrayList();"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral" value="true"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Negate"/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.1/@variable"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:StringReference" value="_jspx_at_begin.add("/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                        <arguments xsi:type="references:StringReference" value="_jspx_at_end = new java.util.ArrayList();"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.2/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral" value="true"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Negate"/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.2/@variable"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:StringReference" value="_jspx_at_end.add("/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0/@members.2"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/VariableInfo.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.4/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.10"/>
              </next>
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.12/@init"/>
              </arraySelectors>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <comments>// switch</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.4/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagVariableInfo.class.xmi#//@classifiers.0/@members.6"/>
                    </next>
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.12/@init"/>
                    </arraySelectors>
                  </arguments>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                <arguments xsi:type="references:StringReference" value=");"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.12/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.4/@variable">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.12/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="this.jspContext = new org.apache.jasper.runtime.JspContextWrapper(ctx, _jspx_nested, _jspx_at_begin, _jspx_at_end, aliasMap);"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.3/@variable"/>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="this.jspContext = new org.apache.jasper.runtime.JspContextWrapper(ctx, _jspx_nested, _jspx_at_begin, _jspx_at_end, null);"/>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="}"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="public JspContext getJspContext() {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="return this.jspContext;"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="}"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="generateSetDynamicAttribute">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/*&#xA;     * Generates implementation of&#xA;     * javax.servlet.jsp.tagext.DynamicAttributes.setDynamicAttribute() method,&#xA;     * which saves each dynamic attribute that is passed in so that a scoped&#xA;     * variable can later be created for it.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="public void setDynamicAttribute(String uri, String localName, Object value) throws JspException {"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <comments>/*&#xA;         * According to the spec, only dynamic attributes with no uri are to be&#xA;         * present in the Map; all other dynamic attributes are ignored.&#xA;         */</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="if (uri == null)"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="_jspx_dynamic_attrs.put(localName, value);"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:StringReference" value="}"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="generatePageScopedVariables">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tagInfo">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/JasperTagInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/*&#xA;     * Creates a page-scoped variable for each declared tag attribute. Also, if&#xA;     * the tag accepts dynamic attributes, a page-scoped variable is made&#xA;     * available for each dynamic attribute that was passed in.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="attrInfos">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// &quot;normal&quot; attributes</comments>
              <target xsi:type="classifiers:Class" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagInfo.class.xmi#//@classifiers.0/@members.20"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="variableMapperVar">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="literals:BooleanLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="attrName">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.14"/>
                </next>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.2/@init"/>
                </arraySelectors>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// handle assigning deferred vars to VariableMapper, storing</comments>
            <comments>// previous values under '_el_ve[i]' for later re-assignment</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <comments>// we need to scope the modified VariableMapper for consistency and performance</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                        <arguments xsi:type="references:StringReference" value="javax.el.VariableMapper _el_variablemapper = jspContext.getELContext().getVariableMapper();"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral" value="true"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Negate"/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.1/@variable"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:StringReference" value="javax.el.ValueExpression _el_ve"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.19"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.2/@init"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:StringReference" value=" = _el_variablemapper.setVariable("/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.2/@statement/@statements.0/@variable"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.18"/>
                    <arguments xsi:type="literals:CharacterLiteral" value="44"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:StringReference" value=".createValueExpression("/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.2/@statement/@statements.0/@variable"/>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:StringReference" value=",javax.el.MethodExpression.class)"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.21"/>
                  </next>
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.2/@init"/>
                  </arraySelectors>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.2/@statement/@statements.0/@variable"/>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:StringReference" value=");"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.22"/>
                </next>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.2/@init"/>
                </arraySelectors>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../javax/servlet/jsp/tagext/TagAttributeInfo.class.xmi#//@classifiers.0/@members.21"/>
                </next>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.2/@init"/>
                </arraySelectors>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="if( "/>
                      <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.2/@statement/@statements.0/@variable"/>
                      </children>
                      <children xsi:type="references:StringReference" value=" != null ) "/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:StringReference" value="_jspx_page_context.setAttribute("/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.16">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.2/@statement/@statements.0/@variable"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:StringReference" value=", "/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.45">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.2/@statement/@statements.0/@variable"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:StringReference" value=");"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                  </next>
                </expression>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.0/@variable">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Expose the Map containing dynamic attributes as a page-scoped var</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                <arguments xsi:type="references:StringReference" value="_jspx_page_context.setAttribute(&quot;"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JasperTagInfo.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:StringReference" value="&quot;, _jspx_dynamic_attrs);"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/JasperTagInfo.class.xmi#//@classifiers.0/@members.3"/>
          </next>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="toGetterMethod">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="attrName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/*&#xA;     * Generates the getter method for the given attribute name.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="attrChars">
          <typeReference xsi:type="types:Char"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.73"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.0/@variable">
            <arraySelectors>
              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../lang/Character.class.xmi#//@classifiers.0/@members.130"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.0/@variable">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </arraySelectors>
              </arguments>
            </next>
            <target xsi:type="classifiers:Class" href="../../../../lang/Character.class.xmi#//@classifiers.0"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:AdditiveExpression">
          <children xsi:type="references:StringReference" value="get"/>
          <children xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.0/@variable"/>
          </children>
          <children xsi:type="references:StringReference" value="()"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="toSetterMethodName">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="attrName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/*&#xA;     * Generates the setter method name for the given attribute name.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="attrChars">
          <typeReference xsi:type="types:Char"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.73"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.0/@variable">
            <arraySelectors>
              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../lang/Character.class.xmi#//@classifiers.0/@members.130"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.0/@variable">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </arraySelectors>
              </arguments>
            </next>
            <target xsi:type="classifiers:Class" href="../../../../lang/Character.class.xmi#//@classifiers.0"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:AdditiveExpression">
          <children xsi:type="references:StringReference" value="set"/>
          <children xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@statements.0/@variable"/>
          </children>
          <additiveOperators xsi:type="operators:Addition"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="classifiers:Class" name="TagHandlerInfo">
      <members xsi:type="members:Field" name="methodMaps">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="propertyEditorMaps">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="tagHandlerClass">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Constructor" name="TagHandlerInfo">
        <comments>/**&#xA;         * Constructor.&#xA;         * &#xA;         * @param n&#xA;         *            The custom tag whose tag handler class is to be&#xA;         *            introspected&#xA;         * @param tagHandlerClass&#xA;         *            Tag handler class&#xA;         * @param err&#xA;         *            Error dispatcher&#xA;         */</comments>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.2"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@parameters.1"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:TryBlock">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="tagClassInfo">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../beans/BeanInfo.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../beans/Introspector.class.xmi#//@classifiers.0/@members.28"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@parameters.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../beans/Introspector.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="pd">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../beans/PropertyDescriptor.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../beans/BeanInfo.class.xmi#//@classifiers.0/@members.7"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <comments>/*&#xA;                     * FIXME: should probably be checking for things like&#xA;                     * pageContext, bodyContent, and parent here -akv&#xA;                     */</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../beans/FeatureDescriptor.class.xmi#//@classifiers.0/@members.9"/>
                          </next>
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.2/@init"/>
                          </arraySelectors>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../beans/PropertyDescriptor.class.xmi#//@classifiers.0/@members.17"/>
                          </next>
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.2/@init"/>
                          </arraySelectors>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../beans/PropertyDescriptor.class.xmi#//@classifiers.0/@members.17"/>
                    </next>
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.2/@init"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.1">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../beans/FeatureDescriptor.class.xmi#//@classifiers.0/@members.9"/>
                        </next>
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.2/@init"/>
                        </arraySelectors>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../beans/PropertyDescriptor.class.xmi#//@classifiers.0/@members.27"/>
                        </next>
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.2/@init"/>
                        </arraySelectors>
                      </arguments>
                    </next>
                  </expression>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../beans/PropertyDescriptor.class.xmi#//@classifiers.0/@members.27"/>
                    </next>
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.2/@init"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.2/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.1/@variable">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@statements.2/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <catcheBlocks>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@parameters.2">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ErrorDispatcher.class.xmi#//@classifiers.0/@members.10"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@parameters.0"/>
                  <arguments xsi:type="references:StringReference" value="jsp.error.introspect.taghandler"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@parameters.1">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/Class.class.xmi#//@classifiers.0/@members.44"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.3/@statements.3/@catcheBlocks.0/@parameter"/>
                </next>
              </expression>
            </statements>
            <parameter name="ie">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../beans/IntrospectionException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </parameter>
          </catcheBlocks>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagHandlerClass">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="err">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ErrorDispatcher.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
      </members>
      <members xsi:type="members:ClassMethod" name="getSetterMethod">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/reflect/Method.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="attrName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * XXX&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/reflect/Method.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.4/@parameters.0"/>
              </next>
            </child>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getPropertyEditorClass">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="attrName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * XXX&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.5/@parameters.0"/>
              </next>
            </child>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getTagHandlerClass">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * XXX&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@members.2"/>
        </statements>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Class storing the result of introspecting a custom tag handler.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="classifiers:Class" name="GenBuffer">
      <members xsi:type="members:Field" name="node">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>/*&#xA;         * For a CustomTag, the codes that are generated at the beginning of the&#xA;         * tag may not be in the same buffer as those for the body of the tag.&#xA;         * Two fields are used here to keep this straight. For codes that do not&#xA;         * corresponds to any JSP lines, they should be null.&#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="body">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>Node</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="charWriter">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>io</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../io/CharArrayWriter.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      </members>
      <members xsi:type="members:Constructor" name="GenBuffer">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="instantiations:ExplicitConstructorCall">
            <arguments xsi:type="literals:NullLiteral"/>
            <arguments xsi:type="literals:NullLiteral"/>
            <callTarget xsi:type="literals:This"/>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:Constructor" name="GenBuffer">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.0"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.5/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.1"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.5/@parameters.1"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.12"/>
                  <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.1"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.2"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>java</namespaces>
                <namespaces>io</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../io/CharArrayWriter.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.3"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <namespaces>java</namespaces>
                  <namespaces>io</namespaces>
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../io/PrintWriter.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.2"/>
              </arguments>
            </value>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="b">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>Node</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
      </members>
      <members xsi:type="members:ClassMethod" name="getOut">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.3"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="toString">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.2">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../io/CharArrayWriter.class.xmi#//@classifiers.0/@members.14"/>
            </next>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="adjustJavaLines">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="offset">
          <typeReference xsi:type="types:Int"/>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Adjust the Java Lines. This is necessary because the Java lines&#xA;         * stored with the nodes are relative the beginning of this buffer and&#xA;         * need to be adjusted when this buffer is inserted into the source.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.9">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.8/@parameters.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.0"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:TryBlock">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
                    <arguments xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <namespaces>Node</namespaces>
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Visitor.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <anonymousClass>
                        <members xsi:type="members:ClassMethod" name="doVisit">
                          <typeReference xsi:type="types:Void"/>
                          <parameters xsi:type="parameters:OrdinaryParameter" name="n">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                          </parameters>
                          <annotationsAndModifiers xsi:type="modifiers:Public"/>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.9">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.8/@statements.1/@statement/@statements.0/@statements.0/@expression/@next/@arguments.0/@anonymousClass/@members.0/@parameters.0"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.8/@parameters.0"/>
                            </expression>
                          </statements>
                        </members>
                        <members xsi:type="members:ClassMethod" name="visit">
                          <typeReference xsi:type="types:Void"/>
                          <parameters xsi:type="parameters:OrdinaryParameter" name="n">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <namespaces>Node</namespaces>
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$CustomTag.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                          </parameters>
                          <exceptions>
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </exceptions>
                          <annotationsAndModifiers xsi:type="modifiers:Public"/>
                          <statements xsi:type="statements:LocalVariableStatement">
                            <variable name="b">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <namespaces>Node</namespaces>
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.8/@statements.1/@statement/@statements.0/@statements.0/@expression/@next/@arguments.0/@anonymousClass/@members.1/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
                                </next>
                              </initialValue>
                            </variable>
                          </statements>
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.8/@statements.1/@statement/@statements.0/@statements.0/@expression/@next/@arguments.0/@anonymousClass/@members.1/@statements.0/@variable">
                                  <comments>// Don't adjust lines for the nested tags that</comments>
                                  <comments>// are also generated in buffers, because the</comments>
                                  <comments>// adjustments will be done elsewhere.</comments>
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.7"/>
                                    <arguments xsi:type="references:SelfReference">
                                      <self xsi:type="literals:This"/>
                                    </arguments>
                                  </next>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="expressions:ConditionalAndExpression">
                              <children xsi:type="expressions:EqualityExpression">
                                <equalityOperators xsi:type="operators:NotEqual"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.8/@statements.1/@statement/@statements.0/@statements.0/@expression/@next/@arguments.0/@anonymousClass/@members.1/@statements.0/@variable"/>
                                <children xsi:type="literals:NullLiteral"/>
                              </children>
                              <children xsi:type="expressions:UnaryExpression">
                                <operators xsi:type="operators:Negate"/>
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.8/@statements.1/@statement/@statements.0/@statements.0/@expression/@next/@arguments.0/@anonymousClass/@members.1/@statements.0/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node$Nodes.class.xmi#//@classifiers.0/@members.11"/>
                                  </next>
                                </child>
                              </children>
                            </condition>
                          </statements>
                        </members>
                      </anonymousClass>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <catcheBlocks>
                <parameter name="ex">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameter>
              </catcheBlocks>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.1"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="adjustJavaLine">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="offset">
          <typeReference xsi:type="types:Int"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <annotationsAndModifiers xsi:type="modifiers:Static"/>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.9/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.38"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.9/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.37"/>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.9/@parameters.1"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.9/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.40"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.9/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.39"/>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.9/@parameters.1"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@members.9/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.37"/>
              </next>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:GreaterThan"/>
          </condition>
        </statements>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * A class for generating codes to a buffer. Included here are some support&#xA;     * for tracking source to Java lines mapping.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="classifiers:Class" name="FragmentHelperClass">
      <members xsi:type="classifiers:Class" name="Fragment">
        <members xsi:type="members:Field" name="genBuffer">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.48"/>
          </typeReference>
          <annotationsAndModifiers xsi:type="modifiers:Private"/>
        </members>
        <members xsi:type="members:Field" name="id">
          <typeReference xsi:type="types:Int"/>
          <annotationsAndModifiers xsi:type="modifiers:Private"/>
        </members>
        <members xsi:type="members:Constructor" name="Fragment">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.0/@members.1"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.0/@members.2/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.0/@members.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.48"/>
                </typeReference>
                <arguments xsi:type="literals:NullLiteral"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.0/@members.2/@parameters.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.32"/>
                  </next>
                </arguments>
              </value>
            </expression>
          </statements>
          <parameters xsi:type="parameters:OrdinaryParameter" name="id">
            <typeReference xsi:type="types:Int"/>
          </parameters>
          <parameters xsi:type="parameters:OrdinaryParameter" name="node">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameters>
          <annotationsAndModifiers xsi:type="modifiers:Public"/>
        </members>
        <members xsi:type="members:ClassMethod" name="getGenBuffer">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.48"/>
          </typeReference>
          <annotationsAndModifiers xsi:type="modifiers:Public"/>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.0/@members.0"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
        </members>
        <members xsi:type="members:ClassMethod" name="getId">
          <typeReference xsi:type="types:Int"/>
          <annotationsAndModifiers xsi:type="modifiers:Public"/>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.0/@members.1"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
        </members>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <annotationsAndModifiers xsi:type="modifiers:Static"/>
      </members>
      <members xsi:type="members:Field" name="used">
        <initialValue xsi:type="literals:BooleanLiteral"/>
        <typeReference xsi:type="types:Boolean"/>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>// True if the helper class should be generated.</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="fragments">
        <initialValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../util/ArrayList.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </initialValue>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../util/ArrayList.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="className">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="classBuffer">
        <initialValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.48"/>
          </typeReference>
        </initialValue>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0/@members.48"/>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>// Buffer for entire helper class</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Constructor" name="FragmentHelperClass">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.3"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.5/@parameters.0"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="className">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
      </members>
      <members xsi:type="members:ClassMethod" name="getClassName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.3"/>
            <self xsi:type="literals:This"/>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="isUsed">
        <typeReference xsi:type="types:Boolean"/>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.1"/>
            <self xsi:type="literals:This"/>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="generatePreamble">
        <typeReference xsi:type="types:Void"/>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="out">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.4">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.6"/>
              </next>
              <self xsi:type="literals:This"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <comments>// Note: cannot be static, as we need to reference things like</comments>
            <comments>// _jspx_meth_*</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="private class "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.3"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="    extends "/>
                <children xsi:type="references:StringReference" value="org.apache.jasper.runtime.JspFragmentHelper"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="{"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="private javax.servlet.jsp.tagext.JspTag _jspx_parent;"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="private int[] _jspx_push_body_count;"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.14"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="public "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.3"/>
                <children xsi:type="references:StringReference" value="( int discriminator, JspContext jspContext, "/>
                <children xsi:type="references:StringReference" value="javax.servlet.jsp.tagext.JspTag _jspx_parent, "/>
                <children xsi:type="references:StringReference" value="int[] _jspx_push_body_count ) {"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="super( discriminator, jspContext, _jspx_parent );"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="this._jspx_parent = _jspx_parent;"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="this._jspx_push_body_count = _jspx_push_body_count;"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.8/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="openFragment">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0/@members.49/@members.0"/>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="tagHandlerVar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="methodNesting">
          <typeReference xsi:type="types:Int"/>
        </parameters>
        <exceptions>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/JasperException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </exceptions>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="result">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.49/@members.0"/>
            </typeReference>
            <initialValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.49/@members.0"/>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.2">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../util/ArrayList.class.xmi#//@classifiers.0/@members.8"/>
                </next>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@parameters.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.2">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../util/ArrayList.class.xmi#//@classifiers.0/@members.18"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.0/@variable"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:BooleanLiteral" value="true"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/Node.class.xmi#//@classifiers.0/@members.44"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.3"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="out">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.0/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.0/@members.3">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.6"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.4/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.4/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// XXX - Returns boolean because if a tag is invoked from</comments>
          <comments>// within this fragment, the Generator sometimes might</comments>
          <comments>// generate code like &quot;return true&quot;. This is ignored for now,</comments>
          <comments>// meaning only the fragment is skipped. The JSR-152</comments>
          <comments>// expert group is currently discussing what to do in this case.</comments>
          <comments>// See comment in closeFragment()</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.4/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="public boolean invoke"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@parameters.2"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:GreaterThan"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.4/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:StringReference" value="public void invoke"/>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.4/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.13"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.0/@variable">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.0/@members.4"/>
                </children>
                <children xsi:type="references:StringReference" value="( "/>
                <children xsi:type="references:StringReference" value="JspWriter out ) "/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.4/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.4/@variable">
            <comments>// Note: Throwable required because methods like _jspx_meth_*</comments>
            <comments>// throw Throwable.</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="throws Throwable"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.4/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.4/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="{"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.4/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.4/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.9/@statements.0/@variable"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="closeFragment">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="fragment">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.49/@members.0"/>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="methodNesting">
          <typeReference xsi:type="types:Int"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="out">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.10/@parameters.0">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.0/@members.3">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.6"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// XXX - See comment in openFragment()</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.10/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="return false;"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.10/@parameters.1"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:GreaterThan"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.10/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="return;"/>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.10/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.10/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="generatePostamble">
        <typeReference xsi:type="types:Void"/>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="out">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.4">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.6"/>
              </next>
              <self xsi:type="literals:This"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <comments>// Generate all fragment methods:</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="fragment">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.49/@members.0"/>
                </typeReference>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences target="//@classifiers.0/@members.49/@members.0"/>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.2">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../util/ArrayList.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.1/@init"/>
                    </next>
                  </child>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.1/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.0/@members.3">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.8">
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.9"/>
                        </next>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </next>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.21"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.1/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.0/@members.3">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.7"/>
                    </next>
                  </arguments>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.1/@init"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.2">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/ArrayList.class.xmi#//@classifiers.0/@members.8"/>
              </next>
            </children>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.1/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <comments>// Generate postamble:</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="public void invoke( java.io.Writer writer )"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="throws JspException"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="{"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="JspWriter out = null;"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="if( writer != null ) {"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="out = this.jspContext.pushBody(writer);"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="} else {"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="out = this.jspContext.getOut();"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="try {"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="this.jspContext.getELContext().putContext(JspContext.class,this.jspContext);"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="switch( this.discriminator ) {"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="case "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.23/@init"/>
                    <children xsi:type="references:StringReference" value=":"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="invoke"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.23/@init"/>
                    <children xsi:type="references:StringReference" value="( out );"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
                  <arguments xsi:type="references:StringReference" value="break;"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.23/@init"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.2">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/ArrayList.class.xmi#//@classifiers.0/@members.8"/>
              </next>
            </children>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.23/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <comments>// switch</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <comments>// try</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="catch( Throwable e ) {"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="if (e instanceof SkipPageException)"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="    throw (SkipPageException) e;"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="throw new JspException( e );"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <comments>// catch</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="finally {"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="if( writer != null ) {"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="this.jspContext.popBody();"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <comments>// finally</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <comments>// invoke method</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:StringReference" value="}"/>
            </next>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.11/@statements.0/@variable">
            <comments>// helper class</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../org/apache/jasper/compiler/ServletWriter.class.xmi#//@classifiers.0/@members.11"/>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="toString">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.4">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.7"/>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="adjustJavaLines">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="offset">
          <typeReference xsi:type="types:Int"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="fragment">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.49/@members.0"/>
                </typeReference>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences target="//@classifiers.0/@members.49/@members.0"/>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.2">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../util/ArrayList.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.13/@statements.0/@init"/>
                    </next>
                  </child>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.13/@statements.0/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49/@members.0/@members.3">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48/@members.8">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.13/@parameters.0"/>
                  </next>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.13/@statements.0/@init"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.2">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../util/ArrayList.class.xmi#//@classifiers.0/@members.8"/>
              </next>
            </children>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
          <init xsi:type="variables:LocalVariable" name="i">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@members.13/@statements.0/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Keeps track of the generated Fragment Helper Class&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
  </classifiers>
</containers:CompilationUnit>
