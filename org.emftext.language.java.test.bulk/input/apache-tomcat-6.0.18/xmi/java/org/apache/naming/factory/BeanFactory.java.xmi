<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../java.ecore#/16" name="BeanFactory.java">
  <comments>/*&#xA; * Licensed to the Apache Software Foundation (ASF) under one or more&#xA; * contributor license agreements.  See the NOTICE file distributed with&#xA; * this work for additional information regarding copyright ownership.&#xA; * The ASF licenses this file to You under the Apache License, Version 2.0&#xA; * (the &quot;License&quot;); you may not use this file except in compliance with&#xA; * the License.  You may obtain a copy of the License at&#xA; * &#xA; *      http://www.apache.org/licenses/LICENSE-2.0&#xA; * &#xA; * Unless required by applicable law or agreed to in writing, software&#xA; * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xA; * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; * See the License for the specific language governing permissions and&#xA; * limitations under the License.&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>naming</namespaces>
  <namespaces>factory</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../util/Enumeration.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>naming</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../javax/naming/Name.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>naming</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../javax/naming/Context.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>naming</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>naming</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/naming/Reference.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>naming</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/naming/RefAddr.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>naming</namespaces>
    <namespaces>spi</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../javax/naming/spi/ObjectFactory.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>naming</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../org/apache/naming/ResourceRef.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>beans</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../beans/Introspector.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>beans</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../beans/BeanInfo.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>beans</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../beans/PropertyDescriptor.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>lang</namespaces>
    <namespaces>reflect</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../lang/reflect/Method.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="BeanFactory">
    <members xsi:type="members:ClassMethod" name="getObjectInstance">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="obj">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../javax/naming/Name.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="nameCtx">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../javax/naming/Context.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="environment">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// ----------------------------------------------------------- Constructors</comments>
        <comments>// -------------------------------------------------------------- Constants</comments>
        <comments>// ----------------------------------------------------- Instance Variables</comments>
        <comments>// --------------------------------------------------------- Public Methods</comments>
        <comments>// -------------------------------------------------- ObjectFactory Methods</comments>
        <comments>/**&#xA;     * Create a new Bean instance.&#xA;     * &#xA;     * @param obj The reference object describing the Bean&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="ref">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/naming/Reference.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/naming/Reference.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="beanClassName">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/naming/Reference.class.xmi#//@classifiers.0/@members.9"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="beanClass">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="literals:NullLiteral"/>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="tcl">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../lang/Thread.class.xmi#//@classifiers.0/@members.76"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../../lang/Thread.class.xmi#//@classifiers.0/@members.33"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../lang/Thread.class.xmi#//@classifiers.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:TryBlock">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.2/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.3/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/ClassLoader.class.xmi#//@classifiers.0/@members.24"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.1/@variable"/>
                        </next>
                      </value>
                    </expression>
                  </statements>
                  <catcheBlocks>
                    <parameter name="e">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../lang/ClassNotFoundException.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                    </parameter>
                  </catcheBlocks>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.3/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:TryBlock">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.2/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/Class.class.xmi#//@classifiers.0/@members.32"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.1/@variable"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
                      </value>
                    </expression>
                  </statements>
                  <catcheBlocks>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.4/@elseStatement/@statements.0/@catcheBlocks.0/@parameter">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../lang/Throwable.class.xmi#//@classifiers.0/@members.14"/>
                        </next>
                      </expression>
                    </statements>
                    <parameter name="e">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../lang/ClassNotFoundException.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                    </parameter>
                  </catcheBlocks>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Throw">
                  <throwable xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Class not found: "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.1/@variable"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </throwable>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.2/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="bi">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../beans/BeanInfo.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../beans/Introspector.class.xmi#//@classifiers.0/@members.28"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.2/@variable"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../beans/Introspector.class.xmi#//@classifiers.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="pda">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../beans/PropertyDescriptor.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.6/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../beans/BeanInfo.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="bean">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../lang/Class.class.xmi#//@classifiers.0/@members.35"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../util/Enumeration.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/naming/Reference.class.xmi#//@classifiers.0/@members.14"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:WhileLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="ra">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/naming/RefAddr.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../javax/naming/RefAddr.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.9/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../util/Enumeration.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                      </child>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="propName">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/naming/RefAddr.class.xmi#//@classifiers.0/@members.3"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Continue"/>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../org/apache/naming/factory/Constants.class.xmi#//@classifiers.0/@members.11"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../org/apache/naming/factory/Constants.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:StringReference" value="scope"/>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:StringReference" value="auth"/>
                      </next>
                    </children>
                  </condition>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="value">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../javax/naming/RefAddr.class.xmi#//@classifiers.0/@members.4"/>
                        </next>
                      </child>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="valueArray">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../lang/Object.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="i">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="propType">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../lang/Class.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.7/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../beans/PropertyDescriptor.class.xmi#//@classifiers.0/@members.12"/>
                              </next>
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.5/@variable"/>
                              </arraySelectors>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.4/@variable">
                                  <arraySelectors>
                                    <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                  </arraySelectors>
                                </child>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.3/@variable"/>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:ReflectiveClassReference"/>
                                <target xsi:type="classifiers:Class" href="../../../../lang/String.class.xmi#//@classifiers.0"/>
                              </arguments>
                            </next>
                          </condition>
                          <elseStatement xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="expressions:AssignmentExpression">
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.4/@variable">
                                    <arraySelectors>
                                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                    </arraySelectors>
                                  </child>
                                  <assignmentOperator xsi:type="operators:Assignment"/>
                                  <value xsi:type="instantiations:NewConstructorCall">
                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                      <classifierReferences>
                                        <target xsi:type="classifiers:Class" href="../../../../lang/Character.class.xmi#//@classifiers.0"/>
                                      </classifierReferences>
                                    </typeReference>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.3/@variable">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.23"/>
                                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                      </next>
                                    </arguments>
                                  </value>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="expressions:ConditionalOrExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:ReflectiveClassReference"/>
                                    <target xsi:type="classifiers:Class" href="../../../../lang/Character.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                  <arguments xsi:type="references:PrimitiveTypeReference">
                                    <next xsi:type="references:ReflectiveClassReference"/>
                                    <primitiveType xsi:type="types:Char"/>
                                  </arguments>
                                </next>
                              </children>
                            </condition>
                            <elseStatement xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.4/@variable">
                                      <arraySelectors>
                                        <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                      </arraySelectors>
                                    </child>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="instantiations:NewConstructorCall">
                                      <typeReference xsi:type="types:NamespaceClassifierReference">
                                        <classifierReferences>
                                          <target xsi:type="classifiers:Class" href="../../../../lang/Byte.class.xmi#//@classifiers.0"/>
                                        </classifierReferences>
                                      </typeReference>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.3/@variable"/>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:ConditionalOrExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:ReflectiveClassReference"/>
                                      <target xsi:type="classifiers:Class" href="../../../../lang/Byte.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                    <arguments xsi:type="references:PrimitiveTypeReference">
                                      <next xsi:type="references:ReflectiveClassReference"/>
                                      <primitiveType xsi:type="types:Byte"/>
                                    </arguments>
                                  </next>
                                </children>
                              </condition>
                              <elseStatement xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="expressions:AssignmentExpression">
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.4/@variable">
                                        <arraySelectors>
                                          <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                        </arraySelectors>
                                      </child>
                                      <assignmentOperator xsi:type="operators:Assignment"/>
                                      <value xsi:type="instantiations:NewConstructorCall">
                                        <typeReference xsi:type="types:NamespaceClassifierReference">
                                          <classifierReferences>
                                            <target xsi:type="classifiers:Class" href="../../../../lang/Short.class.xmi#//@classifiers.0"/>
                                          </classifierReferences>
                                        </typeReference>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.3/@variable"/>
                                      </value>
                                    </expression>
                                  </statements>
                                </statement>
                                <condition xsi:type="expressions:ConditionalOrExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:ReflectiveClassReference"/>
                                        <target xsi:type="classifiers:Class" href="../../../../lang/Short.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </children>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                      <arguments xsi:type="references:PrimitiveTypeReference">
                                        <next xsi:type="references:ReflectiveClassReference"/>
                                        <primitiveType xsi:type="types:Short"/>
                                      </arguments>
                                    </next>
                                  </children>
                                </condition>
                                <elseStatement xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="expressions:AssignmentExpression">
                                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.4/@variable">
                                          <arraySelectors>
                                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                          </arraySelectors>
                                        </child>
                                        <assignmentOperator xsi:type="operators:Assignment"/>
                                        <value xsi:type="instantiations:NewConstructorCall">
                                          <typeReference xsi:type="types:NamespaceClassifierReference">
                                            <classifierReferences>
                                              <target xsi:type="classifiers:Class" href="../../../../lang/Integer.class.xmi#//@classifiers.0"/>
                                            </classifierReferences>
                                          </typeReference>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.3/@variable"/>
                                        </value>
                                      </expression>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="expressions:ConditionalOrExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:ReflectiveClassReference"/>
                                          <target xsi:type="classifiers:Class" href="../../../../lang/Integer.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                      </next>
                                    </children>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                        <arguments xsi:type="references:PrimitiveTypeReference">
                                          <next xsi:type="references:ReflectiveClassReference"/>
                                          <primitiveType xsi:type="types:Int"/>
                                        </arguments>
                                      </next>
                                    </children>
                                  </condition>
                                  <elseStatement xsi:type="statements:Condition">
                                    <statement xsi:type="statements:Block">
                                      <statements xsi:type="statements:ExpressionStatement">
                                        <expression xsi:type="expressions:AssignmentExpression">
                                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.4/@variable">
                                            <arraySelectors>
                                              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                            </arraySelectors>
                                          </child>
                                          <assignmentOperator xsi:type="operators:Assignment"/>
                                          <value xsi:type="instantiations:NewConstructorCall">
                                            <typeReference xsi:type="types:NamespaceClassifierReference">
                                              <classifierReferences>
                                                <target xsi:type="classifiers:Class" href="../../../../lang/Long.class.xmi#//@classifiers.0"/>
                                              </classifierReferences>
                                            </typeReference>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.3/@variable"/>
                                          </value>
                                        </expression>
                                      </statements>
                                    </statement>
                                    <condition xsi:type="expressions:ConditionalOrExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                          <arguments xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:ReflectiveClassReference"/>
                                            <target xsi:type="classifiers:Class" href="../../../../lang/Long.class.xmi#//@classifiers.0"/>
                                          </arguments>
                                        </next>
                                      </children>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                          <arguments xsi:type="references:PrimitiveTypeReference">
                                            <next xsi:type="references:ReflectiveClassReference"/>
                                            <primitiveType xsi:type="types:Long"/>
                                          </arguments>
                                        </next>
                                      </children>
                                    </condition>
                                    <elseStatement xsi:type="statements:Condition">
                                      <statement xsi:type="statements:Block">
                                        <statements xsi:type="statements:ExpressionStatement">
                                          <expression xsi:type="expressions:AssignmentExpression">
                                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.4/@variable">
                                              <arraySelectors>
                                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                              </arraySelectors>
                                            </child>
                                            <assignmentOperator xsi:type="operators:Assignment"/>
                                            <value xsi:type="instantiations:NewConstructorCall">
                                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                                <classifierReferences>
                                                  <target xsi:type="classifiers:Class" href="../../../../lang/Float.class.xmi#//@classifiers.0"/>
                                                </classifierReferences>
                                              </typeReference>
                                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.3/@variable"/>
                                            </value>
                                          </expression>
                                        </statements>
                                      </statement>
                                      <condition xsi:type="expressions:ConditionalOrExpression">
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                            <arguments xsi:type="references:IdentifierReference">
                                              <next xsi:type="references:ReflectiveClassReference"/>
                                              <target xsi:type="classifiers:Class" href="../../../../lang/Float.class.xmi#//@classifiers.0"/>
                                            </arguments>
                                          </next>
                                        </children>
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                            <arguments xsi:type="references:PrimitiveTypeReference">
                                              <next xsi:type="references:ReflectiveClassReference"/>
                                              <primitiveType xsi:type="types:Float"/>
                                            </arguments>
                                          </next>
                                        </children>
                                      </condition>
                                      <elseStatement xsi:type="statements:Condition">
                                        <statement xsi:type="statements:Block">
                                          <statements xsi:type="statements:ExpressionStatement">
                                            <expression xsi:type="expressions:AssignmentExpression">
                                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.4/@variable">
                                                <arraySelectors>
                                                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                                </arraySelectors>
                                              </child>
                                              <assignmentOperator xsi:type="operators:Assignment"/>
                                              <value xsi:type="instantiations:NewConstructorCall">
                                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                                  <classifierReferences>
                                                    <target xsi:type="classifiers:Class" href="../../../../lang/Double.class.xmi#//@classifiers.0"/>
                                                  </classifierReferences>
                                                </typeReference>
                                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.3/@variable"/>
                                              </value>
                                            </expression>
                                          </statements>
                                        </statement>
                                        <condition xsi:type="expressions:ConditionalOrExpression">
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                              <arguments xsi:type="references:IdentifierReference">
                                                <next xsi:type="references:ReflectiveClassReference"/>
                                                <target xsi:type="classifiers:Class" href="../../../../lang/Double.class.xmi#//@classifiers.0"/>
                                              </arguments>
                                            </next>
                                          </children>
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                              <arguments xsi:type="references:PrimitiveTypeReference">
                                                <next xsi:type="references:ReflectiveClassReference"/>
                                                <primitiveType xsi:type="types:Double"/>
                                              </arguments>
                                            </next>
                                          </children>
                                        </condition>
                                        <elseStatement xsi:type="statements:Condition">
                                          <statement xsi:type="statements:Block">
                                            <statements xsi:type="statements:ExpressionStatement">
                                              <expression xsi:type="expressions:AssignmentExpression">
                                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.4/@variable">
                                                  <arraySelectors>
                                                    <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                                  </arraySelectors>
                                                </child>
                                                <assignmentOperator xsi:type="operators:Assignment"/>
                                                <value xsi:type="instantiations:NewConstructorCall">
                                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                                    <classifierReferences>
                                                      <target xsi:type="classifiers:Class" href="../../../../lang/Boolean.class.xmi#//@classifiers.0"/>
                                                    </classifierReferences>
                                                  </typeReference>
                                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.3/@variable"/>
                                                </value>
                                              </expression>
                                            </statements>
                                          </statement>
                                          <condition xsi:type="expressions:ConditionalOrExpression">
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                                <arguments xsi:type="references:IdentifierReference">
                                                  <next xsi:type="references:ReflectiveClassReference"/>
                                                  <target xsi:type="classifiers:Class" href="../../../../lang/Boolean.class.xmi#//@classifiers.0"/>
                                                </arguments>
                                              </next>
                                            </children>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="../../../../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                                <arguments xsi:type="references:PrimitiveTypeReference">
                                                  <next xsi:type="references:ReflectiveClassReference"/>
                                                  <primitiveType xsi:type="types:Boolean"/>
                                                </arguments>
                                              </next>
                                            </children>
                                          </condition>
                                          <elseStatement xsi:type="statements:Block">
                                            <statements xsi:type="statements:Throw">
                                              <throwable xsi:type="instantiations:NewConstructorCall">
                                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                                  <classifierReferences>
                                                    <target xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
                                                  </classifierReferences>
                                                </typeReference>
                                                <arguments xsi:type="expressions:AdditiveExpression">
                                                  <children xsi:type="references:StringReference" value="String conversion for property type '"/>
                                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable">
                                                    <next xsi:type="references:MethodCall">
                                                      <target xsi:type="members:ClassMethod" href="../../../../lang/Class.class.xmi#//@classifiers.0/@members.44"/>
                                                    </next>
                                                  </children>
                                                  <children xsi:type="references:StringReference" value="' not available"/>
                                                  <additiveOperators xsi:type="operators:Addition"/>
                                                  <additiveOperators xsi:type="operators:Addition"/>
                                                </arguments>
                                              </throwable>
                                            </statements>
                                          </elseStatement>
                                        </elseStatement>
                                      </elseStatement>
                                    </elseStatement>
                                  </elseStatement>
                                </elseStatement>
                              </elseStatement>
                            </elseStatement>
                          </elseStatement>
                        </statements>
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="setProp">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../lang/reflect/Method.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.7/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../beans/PropertyDescriptor.class.xmi#//@classifiers.0/@members.17"/>
                              </next>
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.5/@variable"/>
                              </arraySelectors>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.2/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../lang/reflect/Method.class.xmi#//@classifiers.0/@members.36"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.8/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.4/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.6/@statement/@statements.0/@statement/@statements.2/@variable"/>
                            <children xsi:type="literals:NullLiteral"/>
                          </condition>
                          <elseStatement xsi:type="statements:Block">
                            <statements xsi:type="statements:Throw">
                              <throwable xsi:type="instantiations:NewConstructorCall">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <arguments xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="references:StringReference" value="Write not allowed for property: "/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.1/@variable"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                </arguments>
                              </throwable>
                            </statements>
                          </elseStatement>
                        </statements>
                        <statements xsi:type="statements:Break"/>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.7/@variable">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.1/@variable"/>
                          </next>
                          <target xsi:type="members:ClassMethod" href="../../../../beans/FeatureDescriptor.class.xmi#//@classifiers.0/@members.9"/>
                        </next>
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.5/@variable"/>
                        </arraySelectors>
                      </condition>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.5/@variable"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.7/@variable">
                      <next xsi:type="references:IdentifierReference"/>
                    </children>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="expressions:ExpressionList">
                    <expressions xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.5/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </expressions>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.5/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Throw">
                      <throwable xsi:type="instantiations:NewConstructorCall">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:StringReference" value="No set method found for property: "/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.1/@variable"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                      </throwable>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.10/@statement/@statements.5/@variable"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.7/@variable">
                      <next xsi:type="references:IdentifierReference"/>
                    </children>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.9/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../util/Enumeration.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </condition>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@statements.8/@variable"/>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="ne">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.0/@parameter">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/Throwable.class.xmi#//@classifiers.0/@members.9"/>
                      </next>
                    </arguments>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.0/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0/@members.17"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.0/@parameter"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.0/@statements.0/@variable"/>
              </statements>
              <parameter name="ie">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <namespaces>java</namespaces>
                  <namespaces>beans</namespaces>
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../beans/IntrospectionException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
            <catcheBlocks>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="ne">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.1/@parameter">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/Throwable.class.xmi#//@classifiers.0/@members.9"/>
                      </next>
                    </arguments>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.1/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0/@members.17"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.1/@parameter"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.1/@statements.0/@variable"/>
              </statements>
              <parameter name="iae">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <namespaces>java</namespaces>
                  <namespaces>lang</namespaces>
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/IllegalAccessException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
            <catcheBlocks>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="ne">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.2/@parameter">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/Throwable.class.xmi#//@classifiers.0/@members.9"/>
                      </next>
                    </arguments>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.2/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0/@members.17"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.2/@parameter"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.2/@statements.0/@variable"/>
              </statements>
              <parameter name="ie2">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <namespaces>java</namespaces>
                  <namespaces>lang</namespaces>
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/InstantiationException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
            <catcheBlocks>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="ne">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.3/@parameter">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../lang/Throwable.class.xmi#//@classifiers.0/@members.9"/>
                      </next>
                    </arguments>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.3/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/naming/NamingException.class.xmi#//@classifiers.0/@members.17"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.3/@parameter"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.0/@statement/@statements.0/@catcheBlocks.3/@statements.0/@variable"/>
              </statements>
              <parameter name="ite">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <namespaces>java</namespaces>
                  <namespaces>lang</namespaces>
                  <namespaces>reflect</namespaces>
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../lang/reflect/InvocationTargetException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../org/apache/naming/ResourceRef.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.0"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Object factory for any Resource conforming to the JavaBean spec.&#xA; * &#xA; * &lt;p>This factory can be configured in a &lt;code>&amp;lt;DefaultContext&amp;gt;&lt;/code>&#xA; * or &lt;code>&amp;lt;Context&amp;gt;&lt;/code> element in your &lt;code>conf/server.xml&lt;/code>&#xA; * configuration file.  An example of factory configuration is:&lt;/p>&#xA; * &lt;pre>&#xA; * &amp;lt;Resource name=&quot;jdbc/myDataSource&quot; auth=&quot;SERVLET&quot;&#xA; *   type=&quot;oracle.jdbc.pool.OracleConnectionCacheImpl&quot;/&amp;gt;&#xA; * &amp;lt;ResourceParams name=&quot;jdbc/myDataSource&quot;&amp;gt;&#xA; *   &amp;lt;parameter&amp;gt;&#xA; *     &amp;lt;name&amp;gt;factory&amp;lt;/name&amp;gt;&#xA; *     &amp;lt;value&amp;gt;org.apache.naming.factory.BeanFactory&amp;lt;/value&amp;gt;&#xA; *   &amp;lt;/parameter&amp;gt;&#xA; *   &amp;lt;parameter&amp;gt;&#xA; *     &amp;lt;name&amp;gt;driverType&amp;lt;/name&amp;gt;&#xA; *     &amp;lt;value&amp;gt;thin&amp;lt;/value&amp;gt;&#xA; *   &amp;lt;/parameter&amp;gt;&#xA; *   &amp;lt;parameter&amp;gt;&#xA; *     &amp;lt;name&amp;gt;serverName&amp;lt;/name&amp;gt;&#xA; *     &amp;lt;value&amp;gt;hue&amp;lt;/value&amp;gt;&#xA; *   &amp;lt;/parameter&amp;gt;&#xA; *   &amp;lt;parameter&amp;gt;&#xA; *     &amp;lt;name&amp;gt;networkProtocol&amp;lt;/name&amp;gt;&#xA; *     &amp;lt;value&amp;gt;tcp&amp;lt;/value&amp;gt;&#xA; *   &amp;lt;/parameter&amp;gt; &#xA; *   &amp;lt;parameter&amp;gt;&#xA; *     &amp;lt;name&amp;gt;databaseName&amp;lt;/name&amp;gt;&#xA; *     &amp;lt;value&amp;gt;XXXX&amp;lt;/value&amp;gt;&#xA; *   &amp;lt;/parameter&amp;gt;&#xA; *   &amp;lt;parameter&amp;gt;&#xA; *     &amp;lt;name&amp;gt;portNumber&amp;lt;/name&amp;gt;&#xA; *     &amp;lt;value&amp;gt;NNNN&amp;lt;/value&amp;gt;&#xA; *   &amp;lt;/parameter&amp;gt;&#xA; *   &amp;lt;parameter&amp;gt;&#xA; *     &amp;lt;name&amp;gt;user&amp;lt;/name&amp;gt;&#xA; *     &amp;lt;value&amp;gt;XXXX&amp;lt;/value&amp;gt;&#xA; *   &amp;lt;/parameter&amp;gt;&#xA; *   &amp;lt;parameter&amp;gt;&#xA; *     &amp;lt;name&amp;gt;password&amp;lt;/name&amp;gt;&#xA; *     &amp;lt;value&amp;gt;XXXX&amp;lt;/value&amp;gt;&#xA; *   &amp;lt;/parameter&amp;gt;&#xA; *   &amp;lt;parameter&amp;gt;&#xA; *     &amp;lt;name&amp;gt;maxLimit&amp;lt;/name&amp;gt;&#xA; *     &amp;lt;value&amp;gt;5&amp;lt;/value&amp;gt;&#xA; *   &amp;lt;/parameter&amp;gt;&#xA; * &amp;lt;/ResourceParams&amp;gt;&#xA; * &lt;/pre>&#xA; *&#xA; * @author &lt;a href=&quot;mailto:aner at ncstech.com&quot;>Aner Perez&lt;/a>&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../../../javax/naming/spi/ObjectFactory.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
