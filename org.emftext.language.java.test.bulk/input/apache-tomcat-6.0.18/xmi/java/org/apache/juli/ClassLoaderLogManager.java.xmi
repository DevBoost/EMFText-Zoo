<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:generics="http://www.emftext.org/java/generics" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../java.ecore#/5 http://www.emftext.org/java/generics ../../../../java.ecore#/6 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../java.ecore#/17" name="ClassLoaderLogManager.java">
  <comments>/*&#xA; * Licensed to the Apache Software Foundation (ASF) under one or more&#xA; * contributor license agreements.  See the NOTICE file distributed with&#xA; * this work for additional information regarding copyright ownership.&#xA; * The ASF licenses this file to You under the Apache License, Version 2.0&#xA; * (the &quot;License&quot;); you may not use this file except in compliance with&#xA; * the License.  You may obtain a copy of the License at&#xA; * &#xA; *      http://www.apache.org/licenses/LICENSE-2.0&#xA; * &#xA; * Unless required by applicable law or agreed to in writing, software&#xA; * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xA; * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; * See the License for the specific language governing permissions and&#xA; * limitations under the License.&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>juli</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../io/File.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../io/FileInputStream.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../io/InputStream.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>net</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../net/URLClassLoader.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../security/AccessControlException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../security/AccessController.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../security/PrivilegedAction.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/Collections.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../util/Enumeration.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/HashMap.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../util/Iterator.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../util/Map.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/Properties.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/StringTokenizer.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/WeakHashMap.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <namespaces>logging</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/logging/Handler.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <namespaces>logging</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/logging/Level.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <namespaces>logging</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/logging/LogManager.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <namespaces>logging</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="ClassLoaderLogManager">
    <members xsi:type="members:Field" name="classLoaderLoggers">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.14"/>
              </typeReference>
            </typeArguments>
            <target xsi:type="classifiers:Class" href="../../../util/WeakHashMap.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <typeArguments xsi:type="generics:QualifiedTypeArgument">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </typeArguments>
          <typeArguments xsi:type="generics:QualifiedTypeArgument">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.14"/>
            </typeReference>
          </typeArguments>
          <target xsi:type="classifiers:Interface" href="../../../util/Map.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// -------------------------------------------------------------- Variables</comments>
        <comments>/**&#xA;     * Map containing the classloader information, keyed per classloader. A&#xA;     * weak hashmap is used to ensure no classloader reference is leaked from &#xA;     * application redeployment.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="prefix">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <target xsi:type="classifiers:Class" href="../../../lang/ThreadLocal.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <typeArguments xsi:type="generics:QualifiedTypeArgument">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </typeArguments>
          <target xsi:type="classifiers:Class" href="../../../lang/ThreadLocal.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * This prefix is used to allow using prefixes for the properties names&#xA;     * of handlers and their subcomponents.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="addLogger">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="logger">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// --------------------------------------------------------- Public Methods</comments>
        <comments>/**&#xA;     * Add the specified logger to the classloader local configuration.&#xA;     * &#xA;     * @param logger The logger to be added&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="loggerName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../util/logging/Logger.class.xmi#//@classifiers.0/@members.61"/>
            </next>
          </initialValue>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="classLoader">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../lang/Thread.class.xmi#//@classifiers.0/@members.76"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../lang/Thread.class.xmi#//@classifiers.0/@members.33"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../lang/Thread.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="info">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.14"/>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.8">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.1/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.2/@variable">
          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.2"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable"/>
            </next>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.2/@variable">
          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.5"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
            </next>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="levelString">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable"/>
              <children xsi:type="references:StringReference" value=".level"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </initialValue>
          <annotationsAndModifiers xsi:type="modifiers:Final">
            <comments>// Apply initial level for new logger</comments>
          </annotationsAndModifiers>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../security/AccessController.class.xmi#//@classifiers.0/@members.1"/>
                  <arguments xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="../../../security/PrivilegedAction.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <anonymousClass>
                      <members xsi:type="members:ClassMethod" name="run">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../lang/Object.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <annotationsAndModifiers xsi:type="modifiers:Public"/>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../util/logging/Logger.class.xmi#//@classifiers.0/@members.58"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../util/logging/Level.class.xmi#//@classifiers.0/@members.23"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.5/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.71"/>
                                    </next>
                                  </arguments>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../util/logging/Level.class.xmi#//@classifiers.0"/>
                              </arguments>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Return">
                          <returnValue xsi:type="literals:NullLiteral"/>
                        </statements>
                      </members>
                    </anonymousClass>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../../security/AccessController.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
            <catcheBlocks>
              <comments>// Leave level set to null</comments>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.5/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="dotIndex">
          <typeReference xsi:type="types:Int">
            <comments>// If any parent loggers have levels definied, make sure they are</comments>
            <comments>// instantiated</comments>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.47"/>
              <arguments xsi:type="literals:CharacterLiteral" value="46"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="parentName">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.56"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.7/@variable"/>
                </next>
              </initialValue>
              <annotationsAndModifiers xsi:type="modifiers:Final"/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../util/logging/Logger.class.xmi#//@classifiers.0/@members.22"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.8/@statement/@statements.0/@variable"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.8/@statement/@statements.0/@variable"/>
                  <children xsi:type="references:StringReference" value=".level"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </children>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.7/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.48"/>
                  <arguments xsi:type="literals:CharacterLiteral" value="46"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.7/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.7/@variable"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="node">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.13">
              <comments>// Find associated node</comments>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.2/@variable">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.0">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.13/@members.5">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable"/>
              </next>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.9/@variable">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.0"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="parentLogger">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Set parent logger</comments>
              <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.9/@variable">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.13/@members.6"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.11">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.11/@variable"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.11/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.9/@variable">
          <comments>// Tell children we are their new parent</comments>
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.13/@members.7">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="handlers">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Add associated handlers, if any are defined using the .handlers property.</comments>
              <comments>// In this case, handlers of the parent logger(s) will not be used</comments>
              <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable"/>
              <children xsi:type="references:StringReference" value=".handlers"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/logging/Logger.class.xmi#//@classifiers.0/@members.65"/>
                <arguments xsi:type="literals:BooleanLiteral"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="tok">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../util/StringTokenizer.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../util/StringTokenizer.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.14/@variable"/>
                <arguments xsi:type="references:StringReference" value=","/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="handlerName">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="expressions:NestedExpression">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.15/@statement/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.71"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../util/StringTokenizer.class.xmi#//@classifiers.0/@members.18"/>
                      </next>
                    </expression>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="handler">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../util/logging/Handler.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="literals:NullLiteral"/>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="current">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.1/@variable"/>
                </variable>
              </statements>
              <statements xsi:type="statements:WhileLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.2/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences target="//@classifiers.0/@members.14"/>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.4"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.15/@statement/@statements.2/@statement/@statements.2/@variable"/>
                          </next>
                        </child>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.15/@statement/@statements.2/@statement/@statements.1/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:CastExpression">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../util/logging/Handler.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.2/@variable">
                              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.2">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.4"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.15/@statement/@statements.2/@statement/@statements.0/@variable"/>
                                </next>
                              </next>
                            </child>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:Break"/>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:NotEqual"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.15/@statement/@statements.2/@statement/@statements.1/@variable"/>
                          <children xsi:type="literals:NullLiteral"/>
                        </condition>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.2/@variable"/>
                      <children xsi:type="literals:NullLiteral"/>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.15/@statement/@statements.2/@statement/@statements.2/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.15/@statement/@statements.2/@statement/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0/@members.63"/>
                        </next>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.15/@statement/@statements.2/@statement/@statements.2/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../util/logging/Logger.class.xmi#//@classifiers.0/@members.62"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.15/@statement/@statements.2/@statement/@statements.1/@variable"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.15/@statement/@statements.2/@statement/@statements.1/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.15/@statement/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/StringTokenizer.class.xmi#//@classifiers.0/@members.17"/>
              </next>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.14/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="useParentHandlersString">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Parse useParentHandlers to set if the logger should delegate to its parent.</comments>
              <comments>// Unlike java.util.logging, the default is to not delegate if a list of handlers</comments>
              <comments>// has been specified for the logger.</comments>
              <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable"/>
              <children xsi:type="references:StringReference" value=".useParentHandlers"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/logging/Logger.class.xmi#//@classifiers.0/@members.65"/>
                <arguments xsi:type="literals:BooleanLiteral" value="true"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../lang/Boolean.class.xmi#//@classifiers.0/@members.8"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../lang/Boolean.class.xmi#//@classifiers.0/@members.10"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.16/@variable"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../../lang/Boolean.class.xmi#//@classifiers.0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getLogger">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get the logger associated with the specified name inside &#xA;     * the classloader local configuration. If this returns null,&#xA;     * and the call originated for Logger.getLogger, a new&#xA;     * logger with the specified name will be instantiated and&#xA;     * added using addLogger.&#xA;     * &#xA;     * @param name The name of the logger to retrieve&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="classLoader">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../lang/Thread.class.xmi#//@classifiers.0/@members.76"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../lang/Thread.class.xmi#//@classifiers.0/@members.33"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../lang/Thread.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.8">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0"/>
              </next>
            </next>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.0/@variable"/>
          </child>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getLoggerNames">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <typeArguments xsi:type="generics:QualifiedTypeArgument">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </typeArguments>
          <target xsi:type="classifiers:Interface" href="../../../util/Enumeration.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get an enumeration of the logger names currently defined in the &#xA;     * classloader local configuration.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="classLoader">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../lang/Thread.class.xmi#//@classifiers.0/@members.76"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../lang/Thread.class.xmi#//@classifiers.0/@members.33"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../lang/Thread.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../util/Collections.class.xmi#//@classifiers.0/@members.70"/>
            <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.8">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </next>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.0/@variable"/>
            </arguments>
          </next>
          <target xsi:type="classifiers:Class" href="../../../util/Collections.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getProperty">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get the value of the specified property in the classloader local&#xA;     * configuration.&#xA;     * &#xA;     * @param name The property name&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="classLoader">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../lang/Thread.class.xmi#//@classifiers.0/@members.76"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../lang/Thread.class.xmi#//@classifiers.0/@members.33"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../lang/Thread.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="prefix">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../lang/ThreadLocal.class.xmi#//@classifiers.0/@members.6"/>
                </next>
              </next>
              <self xsi:type="literals:This"/>
            </child>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="info">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.14"/>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.8">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.0/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="result">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.3/@variable">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/Properties.class.xmi#//@classifiers.0/@members.15"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
              </next>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// If the property was not found, and the current classloader had no </comments>
        <comments>// configuration (property list is empty), look for the parent classloader</comments>
        <comments>// properties.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="current">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0/@members.63"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.3/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences target="//@classifiers.0/@members.14"/>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.4"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.5/@statement/@statements.0/@variable"/>
                      </next>
                    </child>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.3/@variable">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.3">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../util/Properties.class.xmi#//@classifiers.0/@members.15"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
                          </next>
                        </next>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Break"/>
                    </statement>
                    <condition xsi:type="expressions:ConditionalOrExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:NotEqual"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@variable"/>
                          <children xsi:type="literals:NullLiteral"/>
                        </expression>
                      </children>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:UnaryExpression">
                          <operators xsi:type="operators:Negate"/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.3/@variable">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.3">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../util/Hashtable.class.xmi#//@classifiers.0/@members.19"/>
                              </next>
                            </next>
                          </child>
                        </expression>
                      </children>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.3/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.5/@statement/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.5/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0/@members.63"/>
                    </next>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.5/@statement/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:SelfReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../util/logging/LogManager.class.xmi#//@classifiers.0/@members.30"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
                    </next>
                    <self xsi:type="literals:Super"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.3">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/Hashtable.class.xmi#//@classifiers.0/@members.19"/>
                </next>
              </next>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Simple property replacement (mostly for folder names)</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@variable"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="readConfiguration">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../lang/SecurityException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="../../../util/logging/LogManager.class.xmi#//@classifiers.0/@members.38"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.9">
          <arguments xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../lang/Thread.class.xmi#//@classifiers.0/@members.76"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../lang/Thread.class.xmi#//@classifiers.0/@members.33"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../lang/Thread.class.xmi#//@classifiers.0"/>
          </arguments>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="readConfiguration">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="is">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../io/InputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../lang/SecurityException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="../../../util/logging/LogManager.class.xmi#//@classifiers.0/@members.38"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="../../../util/logging/LogManager.class.xmi#//@classifiers.0/@members.26"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.10">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../lang/Thread.class.xmi#//@classifiers.0/@members.76"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../lang/Thread.class.xmi#//@classifiers.0/@members.33"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../lang/Thread.class.xmi#//@classifiers.0"/>
          </arguments>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getClassLoaderInfo">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0/@members.14"/>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="classLoader">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// ------------------------------------------------------ Protected Methods</comments>
        <comments>/**&#xA;     * Retrieve the configuration associated with the specified classloader. If&#xA;     * it does not exist, it will be created.&#xA;     * &#xA;     * @param classLoader The classloader for which we will retrieve or build the &#xA;     *                    configuration&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0/@members.64"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="info">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.14"/>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.14"/>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
              </next>
            </child>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="classLoaderParam">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
              <annotationsAndModifiers xsi:type="modifiers:Final"/>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../security/AccessController.class.xmi#//@classifiers.0/@members.1"/>
                <arguments xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Interface" href="../../../security/PrivilegedAction.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <anonymousClass>
                    <members xsi:type="members:ClassMethod" name="run">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../lang/Object.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <annotationsAndModifiers xsi:type="modifiers:Public"/>
                      <statements xsi:type="statements:TryBlock">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.9">
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@statement/@statements.0/@variable"/>
                          </expression>
                        </statements>
                        <catcheBlocks>
                          <comments>// Ignore</comments>
                          <parameter name="e">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../io/IOException.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                          </parameter>
                        </catcheBlocks>
                      </statements>
                      <statements xsi:type="statements:Return">
                        <returnValue xsi:type="literals:NullLiteral"/>
                      </statements>
                    </members>
                  </anonymousClass>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../../security/AccessController.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.14"/>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.4"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                  </next>
                </child>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.1/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="readConfiguration">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="classLoader">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Read configuration for the specified classloader.&#xA;     * &#xA;     * @param classLoader &#xA;     * @throws IOException Errot&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="is">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../io/InputStream.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <comments>// Special case for URL classloaders which are used in containers: </comments>
        <comments>// only look in the local repositories to avoid redefining loggers 20 times</comments>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0/@members.61"/>
                    <arguments xsi:type="references:StringReference" value="logging.properties"/>
                  </next>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:InstanceOfExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../net/URLClassLoader.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="expressions:NestedExpression">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../net/URLClassLoader.class.xmi#//@classifiers.0/@members.11"/>
                    <arguments xsi:type="references:StringReference" value="logging.properties"/>
                  </next>
                  <expression xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../net/URLClassLoader.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
                  </expression>
                </children>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </children>
          </condition>
        </statements>
        <catcheBlocks>
          <comments>// No permission to configure logging in context</comments>
          <comments>// Ignore and carry on</comments>
          <parameter name="ace">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../security/AccessControlException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="configFileStr">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../lang/System.class.xmi#//@classifiers.0/@members.25"/>
                  <arguments xsi:type="references:StringReference" value="java.util.logging.config.file"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../lang/System.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:TryBlock">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../io/FileInputStream.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.2/@statement/@statements.0/@variable"/>
                      </arguments>
                    </value>
                  </expression>
                </statements>
                <catcheBlocks>
                  <comments>// Ignore</comments>
                  <parameter name="e">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../io/IOException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </parameter>
                </catcheBlocks>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.2/@statement/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// Try the default JVM configuration</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="defaultFile">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../io/File.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../io/File.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../io/File.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../lang/System.class.xmi#//@classifiers.0/@members.25"/>
                          <arguments xsi:type="references:StringReference" value="java.home"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../lang/System.class.xmi#//@classifiers.0"/>
                      </arguments>
                      <arguments xsi:type="references:StringReference" value="lib"/>
                    </arguments>
                    <arguments xsi:type="references:StringReference" value="logging.properties"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:TryBlock">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../io/FileInputStream.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.2/@statement/@statements.2/@statement/@statements.0/@variable"/>
                    </value>
                  </expression>
                </statements>
                <catcheBlocks>
                  <comments>// Critical problem, do something ...</comments>
                  <parameter name="e">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../io/IOException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </parameter>
                </catcheBlocks>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0/@members.64"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="localRootLogger">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.15"/>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="current">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// Retrieve the root logger of the parent classloader instead</comments>
                  <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0/@members.63"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="info">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.14"/>
              </typeReference>
              <initialValue xsi:type="literals:NullLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@statement/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.8">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@statement/@statements.0/@variable"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@statement/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0/@members.63"/>
                    </next>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@statement/@statements.1/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.3/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../util/logging/Logger.class.xmi#//@classifiers.0/@members.70"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@statement/@statements.1/@variable">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.0">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.0"/>
                      </next>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@statement/@statements.1/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="info">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.14"/>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.14"/>
            </typeReference>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.13"/>
              </typeReference>
              <arguments xsi:type="literals:NullLiteral"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.3/@variable"/>
            </arguments>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.5"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.5/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.10">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.2">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.3/@variable"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="readConfiguration">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="is">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../io/InputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="classLoader">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Load specified configuration.&#xA;     * &#xA;     * @param is InputStream to the properties file&#xA;     * @param classLoader for which the configuration will be loaded&#xA;     * @throws IOException If something wrong happens during loading&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="info">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.14"/>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.14"/>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
              </next>
            </child>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@variable">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/Properties.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
              </next>
            </next>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <comments>// Report error</comments>
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                  <arguments xsi:type="references:StringReference" value="Configuration error"/>
                </next>
                <target xsi:type="members:Field" href="../../../lang/System.class.xmi#//@classifiers.0/@members.2"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.1/@catcheBlocks.0/@parameter">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../lang/Throwable.class.xmi#//@classifiers.0/@members.14"/>
              </next>
            </expression>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../io/IOException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <finallyBlock>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../io/InputStream.class.xmi#//@classifiers.0/@members.8"/>
                </next>
              </expression>
            </statements>
            <catcheBlocks>
              <parameter name="t">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../lang/Throwable.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </finallyBlock>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rootHandlers">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Create handlers for the root logger of this classloader</comments>
              <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@variable">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/Properties.class.xmi#//@classifiers.0/@members.15"/>
                <arguments xsi:type="references:StringReference" value=".handlers"/>
              </next>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="handlers">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@variable">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/Properties.class.xmi#//@classifiers.0/@members.15"/>
                <arguments xsi:type="references:StringReference" value="handlers"/>
              </next>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="localRootLogger">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@variable">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.0">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.0"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="tok">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../util/StringTokenizer.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../util/StringTokenizer.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.3/@variable"/>
                <arguments xsi:type="references:StringReference" value=","/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="handlerName">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="expressions:NestedExpression">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.71"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../util/StringTokenizer.class.xmi#//@classifiers.0/@members.18"/>
                      </next>
                    </expression>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="handlerClassName">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.0/@variable"/>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="prefix">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:StringReference" value=""/>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Continue"/>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.22"/>
                    </next>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <relationOperators xsi:type="operators:LessThanOrEqual"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <comments>// Parse and remove a prefix (prefix start with a digit, such as </comments>
                <comments>// &quot;10WebappFooHanlder.&quot;)</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="pos">
                      <typeReference xsi:type="types:Int"/>
                      <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.45"/>
                          <arguments xsi:type="literals:CharacterLiteral" value="46"/>
                        </next>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.2/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.1/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.56"/>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.4/@statement/@statements.0/@variable"/>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </arguments>
                            </next>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.1/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.1/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.55"/>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.4/@statement/@statements.0/@variable"/>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </arguments>
                            </next>
                          </value>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.4/@statement/@statements.0/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../lang/Character.class.xmi#//@classifiers.0/@members.108"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.23"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </next>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../lang/Character.class.xmi#//@classifiers.0"/>
                </condition>
              </statements>
              <statements xsi:type="statements:TryBlock">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../lang/ThreadLocal.class.xmi#//@classifiers.0/@members.7"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.2/@variable"/>
                      </next>
                    </next>
                    <self xsi:type="literals:This"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="handler">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../util/logging/Handler.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../util/logging/Handler.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../lang/Class.class.xmi#//@classifiers.0/@members.35"/>
                          </next>
                          <target xsi:type="members:ClassMethod" href="../../../lang/ClassLoader.class.xmi#//@classifiers.0/@members.24"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.1/@variable"/>
                        </next>
                      </child>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../lang/ThreadLocal.class.xmi#//@classifiers.0/@members.7"/>
                        <arguments xsi:type="literals:NullLiteral"/>
                      </next>
                    </next>
                    <self xsi:type="literals:This">
                      <comments>// The specification strongly implies all configuration should be done </comments>
                      <comments>// during the creation of the handler object.</comments>
                      <comments>// This includes setting level, filter, formatter and encoding.</comments>
                    </self>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.2">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.5"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.0/@variable"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.5/@statements.1/@variable"/>
                      </next>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.4/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../util/logging/Logger.class.xmi#//@classifiers.0/@members.62"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.5/@statements.1/@variable"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.2/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
                <catcheBlocks>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <comments>// Report error</comments>
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                          <arguments xsi:type="references:StringReference" value="Handler error"/>
                        </next>
                        <target xsi:type="members:Field" href="../../../lang/System.class.xmi#//@classifiers.0/@members.2"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../lang/System.class.xmi#//@classifiers.0"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.5/@catcheBlocks.0/@parameter">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../lang/Throwable.class.xmi#//@classifiers.0/@members.14"/>
                      </next>
                    </expression>
                  </statements>
                  <parameter name="e">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../lang/Exception.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </parameter>
                </catcheBlocks>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.5/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/StringTokenizer.class.xmi#//@classifiers.0/@members.17"/>
              </next>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.3/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="doSetParentLogger">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="logger">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Set parent child relationship between the two specified loggers.&#xA;     * &#xA;     * @param logger&#xA;     * @param parent&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../security/AccessController.class.xmi#//@classifiers.0/@members.1"/>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../security/PrivilegedAction.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <anonymousClass>
                <members xsi:type="members:ClassMethod" name="run">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <annotationsAndModifiers xsi:type="modifiers:Public"/>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../util/logging/Logger.class.xmi#//@classifiers.0/@members.70"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.1"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="literals:NullLiteral"/>
                  </statements>
                </members>
              </anonymousClass>
            </arguments>
          </next>
          <target xsi:type="classifiers:Class" href="../../../security/AccessController.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="replace">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="str">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * System property replacement in the given string.&#xA;     * &#xA;     * @param str The original string&#xA;     * @return the modified string&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="result">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pos_start">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.49"/>
              <arguments xsi:type="references:StringReference" value="${"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="pos_end">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.45"/>
                  <arguments xsi:type="literals:CharacterLiteral" value="125"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="propName">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.56"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.1/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.2/@statement/@statements.0/@variable"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="replacement">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../lang/System.class.xmi#//@classifiers.0/@members.25"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../lang/System.class.xmi#//@classifiers.0"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.0/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.56"/>
                                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.1/@variable"/>
                              </next>
                            </children>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.2/@statement/@statements.1/@statement/@statements.1/@variable"/>
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.55"/>
                                  <arguments xsi:type="expressions:AdditiveExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.2/@statement/@statements.0/@variable"/>
                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                    <additiveOperators xsi:type="operators:Addition"/>
                                  </arguments>
                                </next>
                              </arguments>
                            </children>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </value>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.1/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      <relationOperators xsi:type="operators:GreaterThan"/>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.0/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.2/@statement/@statements.1/@statement/@statements.1/@variable"/>
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.55"/>
                                  <arguments xsi:type="expressions:AdditiveExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.2/@statement/@statements.0/@variable"/>
                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                    <additiveOperators xsi:type="operators:Addition"/>
                                  </arguments>
                                </next>
                              </arguments>
                            </children>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </value>
                        </expression>
                      </statements>
                    </elseStatement>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.2/@statement/@statements.1/@statement/@statements.1/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.2/@statement/@statements.0/@variable"/>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Subtraction"/>
                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.1/@variable"/>
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Subtraction"/>
            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="classifiers:Class" name="LogNode">
      <members xsi:type="members:Field" name="logger">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </members>
      <members xsi:type="members:Field" name="children">
        <initialValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <typeArguments xsi:type="generics:QualifiedTypeArgument">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </typeArguments>
              <typeArguments xsi:type="generics:QualifiedTypeArgument">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.13"/>
                </typeReference>
              </typeArguments>
              <target xsi:type="classifiers:Class" href="../../../util/HashMap.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </initialValue>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.13"/>
              </typeReference>
            </typeArguments>
            <target xsi:type="classifiers:Interface" href="../../../util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Protected"/>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </members>
      <members xsi:type="members:Field" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0/@members.13"/>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Protected"/>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </members>
      <members xsi:type="members:Constructor" name="LogNode">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.2"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.3/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.3/@parameters.1"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.13"/>
          </typeReference>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="logger">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </parameters>
      </members>
      <members xsi:type="members:Constructor" name="LogNode">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="instantiations:ExplicitConstructorCall">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.4/@parameters.0"/>
            <arguments xsi:type="literals:NullLiteral"/>
            <callTarget xsi:type="literals:This"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.13"/>
          </typeReference>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </parameters>
      </members>
      <members xsi:type="members:ClassMethod" name="findNode">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0/@members.13"/>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="name">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="currentNode">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.13"/>
            </typeReference>
            <initialValue xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:SelfReference">
                <self xsi:type="literals:This"/>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.0">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@parameters.0"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../util/logging/Logger.class.xmi#//@classifiers.0/@members.61"/>
            </next>
          </condition>
        </statements>
        <statements xsi:type="statements:WhileLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="dotIndex">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.45"/>
                    <arguments xsi:type="literals:CharacterLiteral" value="46"/>
                  </next>
                </initialValue>
                <annotationsAndModifiers xsi:type="modifiers:Final"/>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="nextName">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <annotationsAndModifiers xsi:type="modifiers:Final"/>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.2/@statement/@statements.1/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@parameters.0"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@parameters.0"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:NullLiteral"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.2/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.2/@statement/@statements.1/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.56"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.2/@statement/@statements.0/@variable"/>
                      </next>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@parameters.0"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../lang/String.class.xmi#//@classifiers.0/@members.55"/>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.2/@statement/@statements.0/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                      </next>
                    </value>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="childNode">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.13"/>
                </typeReference>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences target="//@classifiers.0/@members.13"/>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.4"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.2/@statement/@statements.1/@variable"/>
                      </next>
                    </next>
                  </child>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.2/@statement/@statements.3/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences target="//@classifiers.0/@members.13"/>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.0/@variable"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.5"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.2/@statement/@statements.1/@variable"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.2/@statement/@statements.3/@variable"/>
                      </next>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.2/@statement/@statements.3/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.2/@statement/@statements.3/@variable"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@parameters.0"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.5/@statements.0/@variable"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="findParentLogger">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="logger">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="literals:NullLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="node">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.13"/>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.2"/>
          </variable>
        </statements>
        <statements xsi:type="statements:WhileLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.6/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.6/@statements.1/@variable">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.0"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.6/@statements.1/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.6/@statements.1/@variable">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.2"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.6/@statements.1/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.6/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.6/@statements.0/@variable"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setParentLogger">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </parameters>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="childNode">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.13"/>
                </typeReference>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences target="//@classifiers.0/@members.13"/>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.7/@statements.0/@init">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </child>
                </initialValue>
                <annotationsAndModifiers xsi:type="modifiers:Final"/>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.7/@statements.0/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.13/@members.7">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.7/@parameters.0"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.7/@statements.0/@statement/@statements.0/@variable">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.0"/>
                </children>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.11">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.7/@statements.0/@statement/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.0"/>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.7/@parameters.0"/>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.7/@statements.0/@init">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </condition>
          <init xsi:type="variables:LocalVariable" name="iter">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../util/Iterator.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@members.1">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../util/Collection.class.xmi#//@classifiers.0/@members.3"/>
                </next>
                <target xsi:type="members:InterfaceMethod" href="../../../util/Map.class.xmi#//@classifiers.0/@members.10"/>
              </next>
            </initialValue>
            <annotationsAndModifiers xsi:type="modifiers:Final"/>
          </init>
        </statements>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// ---------------------------------------------------- LogNode Inner Class</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="classifiers:Class" name="ClassLoaderLogInfo">
      <members xsi:type="members:Field" name="rootNode">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0/@members.13"/>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </members>
      <members xsi:type="members:Field" name="loggers">
        <initialValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <typeArguments xsi:type="generics:QualifiedTypeArgument">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </typeArguments>
              <typeArguments xsi:type="generics:QualifiedTypeArgument">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </typeArguments>
              <target xsi:type="classifiers:Class" href="../../../util/HashMap.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </initialValue>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <target xsi:type="classifiers:Interface" href="../../../util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </members>
      <members xsi:type="members:Field" name="handlers">
        <initialValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <typeArguments xsi:type="generics:QualifiedTypeArgument">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </typeArguments>
              <typeArguments xsi:type="generics:QualifiedTypeArgument">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../util/logging/Handler.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </typeArguments>
              <target xsi:type="classifiers:Class" href="../../../util/HashMap.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </initialValue>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../util/logging/Handler.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <target xsi:type="classifiers:Interface" href="../../../util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </members>
      <members xsi:type="members:Field" name="props">
        <initialValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../util/Properties.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </initialValue>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../util/Properties.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </members>
      <members xsi:type="members:Constructor" name="ClassLoaderLogInfo">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@members.4/@parameters.0"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="rootNode">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.13"/>
          </typeReference>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </parameters>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// -------------------------------------------- ClassLoaderInfo Inner Class</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="classifiers:Class" name="RootLogger">
      <members xsi:type="members:Constructor" name="RootLogger">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="instantiations:ExplicitConstructorCall">
            <arguments xsi:type="references:StringReference" value=""/>
            <arguments xsi:type="literals:NullLiteral"/>
            <callTarget xsi:type="literals:Super"/>
          </expression>
        </statements>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// ------------------------------------------------- RootLogger Inner Class</comments>
        <comments>/**&#xA;     * This class is needed to instantiate the root of each per classloader &#xA;     * hierarchy.&#xA;     */</comments>
      </annotationsAndModifiers>
      <extends xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../util/logging/Logger.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </extends>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Per classloader LogManager implementation.&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="../../../util/logging/LogManager.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
