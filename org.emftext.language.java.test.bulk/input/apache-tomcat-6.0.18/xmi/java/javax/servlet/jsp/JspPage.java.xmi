<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/types ../../../../java.ecore#/16" name="JspPage.java">
  <comments>/*&#xA;* Licensed to the Apache Software Foundation (ASF) under one or more&#xA;* contributor license agreements.  See the NOTICE file distributed with&#xA;* this work for additional information regarding copyright ownership.&#xA;* The ASF licenses this file to You under the Apache License, Version 2.0&#xA;* (the &quot;License&quot;); you may not use this file except in compliance with&#xA;* the License.  You may obtain a copy of the License at&#xA;*&#xA;*     http://www.apache.org/licenses/LICENSE-2.0&#xA;*&#xA;* Unless required by applicable law or agreed to in writing, software&#xA;* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xA;* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;* See the License for the specific language governing permissions and&#xA;* limitations under the License.&#xA;*/</comments>
  <namespaces>javax</namespaces>
  <namespaces>servlet</namespaces>
  <namespaces>jsp</namespaces>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>servlet</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="JspPage">
    <members xsi:type="members:InterfaceMethod" name="jspInit">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The jspInit() method is invoked when the JSP page is initialized. It&#xA;     * is the responsibility of the JSP implementation (and of the class&#xA;     * mentioned by the extends attribute, if present) that at this point&#xA;     * invocations to the getServletConfig() method will return the desired&#xA;     * value.&#xA;     *&#xA;     * A JSP page can override this method by including a definition for it&#xA;     * in a declaration element.&#xA;     *&#xA;     * A JSP page should redefine the init() method from Servlet.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="jspDestroy">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The jspDestroy() method is invoked when the JSP page is about to be&#xA;     * destroyed.&#xA;     * &#xA;     * A JSP page can override this method by including a definition for it&#xA;     * in a declaration element.&#xA;     *&#xA;     * A JSP page should redefine the destroy() method from Servlet.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The JspPage interface describes the generic interaction that a JSP Page&#xA; * Implementation class must satisfy; pages that use the HTTP protocol&#xA; * are described by the HttpJspPage interface.&#xA; *&#xA; * &lt;p>&lt;B>Two plus One Methods&lt;/B>&#xA; * &lt;p>&#xA; * The interface defines a protocol with 3 methods; only two of&#xA; * them: jspInit() and jspDestroy() are part of this interface as&#xA; * the signature of the third method: _jspService() depends on&#xA; * the specific protocol used and cannot be expressed in a generic&#xA; * way in Java.&#xA; * &lt;p>&#xA; * A class implementing this interface is responsible for invoking&#xA; * the above methods at the appropriate time based on the&#xA; * corresponding Servlet-based method invocations.&#xA; * &lt;p>&#xA; * The jspInit() and jspDestroy() methods can be defined by a JSP&#xA; * author, but the _jspService() method is defined automatically&#xA; * by the JSP processor based on the contents of the JSP page.&#xA; *&#xA; * &lt;p>&lt;B>_jspService()&lt;/B>&#xA; * &lt;p>&#xA; * The _jspService()method corresponds to the body of the JSP page. This&#xA; * method is defined automatically by the JSP container and should never&#xA; * be defined by the JSP page author.&#xA; * &lt;p>&#xA; * If a superclass is specified using the extends attribute, that&#xA; * superclass may choose to perform some actions in its service() method&#xA; * before or after calling the _jspService() method.  See using the extends&#xA; * attribute in the JSP_Engine chapter of the JSP specification.&#xA; * &lt;p>&#xA; * The specific signature depends on the protocol supported by the JSP page.&#xA; *&#xA; * &lt;pre>&#xA; * public void _jspService(&lt;em>ServletRequestSubtype&lt;/em> request,&#xA; *                             &lt;em>ServletResponseSubtype&lt;/em> response)&#xA; *        throws ServletException, IOException;&#xA; * &lt;/pre>&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../../javax/servlet/Servlet.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
