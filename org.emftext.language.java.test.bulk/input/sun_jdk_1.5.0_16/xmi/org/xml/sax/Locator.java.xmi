<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/types ../../../java.ecore#/16" name="Locator.java">
  <comments>// SAX locator interface for document events.</comments>
  <comments>// http://www.saxproject.org</comments>
  <comments>// No warranty; no copyright -- use this as you will.</comments>
  <comments>// $Id: Locator.java,v 1.1.24.1 2004/05/01 08:34:40 jsuttor Exp $</comments>
  <namespaces>org</namespaces>
  <namespaces>xml</namespaces>
  <namespaces>sax</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="Locator">
    <members xsi:type="members:InterfaceMethod" name="getPublicId">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Return the public identifier for the current document event.&#xA;     *&#xA;     * &lt;p>The return value is the public identifier of the document&#xA;     * entity or of the external parsed entity in which the markup&#xA;     * triggering the event appears.&lt;/p>&#xA;     *&#xA;     * @return A string containing the public identifier, or&#xA;     *         null if none is available.&#xA;     * @see #getSystemId&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getSystemId">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Return the system identifier for the current document event.&#xA;     *&#xA;     * &lt;p>The return value is the system identifier of the document&#xA;     * entity or of the external parsed entity in which the markup&#xA;     * triggering the event appears.&lt;/p>&#xA;     *&#xA;     * &lt;p>If the system identifier is a URL, the parser must resolve it&#xA;     * fully before passing it to the application.  For example, a file&#xA;     * name must always be provided as a &lt;em>file:...&lt;/em> URL, and other&#xA;     * kinds of relative URI are also resolved against their bases.&lt;/p>&#xA;     *&#xA;     * @return A string containing the system identifier, or null&#xA;     *         if none is available.&#xA;     * @see #getPublicId&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getLineNumber">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Return the line number where the current document event ends.&#xA;     * Lines are delimited by line ends, which are defined in&#xA;     * the XML specification.&#xA;     *&#xA;     * &lt;p>&lt;strong>Warning:&lt;/strong> The return value from the method&#xA;     * is intended only as an approximation for the sake of diagnostics;&#xA;     * it is not intended to provide sufficient information&#xA;     * to edit the character content of the original XML document.&#xA;     * In some cases, these &quot;line&quot; numbers match what would be displayed&#xA;     * as columns, and in others they may not match the source text&#xA;     * due to internal entity expansion.  &lt;/p>&#xA;     *&#xA;     * &lt;p>The return value is an approximation of the line number&#xA;     * in the document entity or external parsed entity where the&#xA;     * markup triggering the event appears.&lt;/p>&#xA;     *&#xA;     * &lt;p>If possible, the SAX driver should provide the line position &#xA;     * of the first character after the text associated with the document &#xA;     * event.  The first line is line 1.&lt;/p>&#xA;     *&#xA;     * @return The line number, or -1 if none is available.&#xA;     * @see #getColumnNumber&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getColumnNumber">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Return the column number where the current document event ends.&#xA;     * This is one-based number of Java &lt;code>char&lt;/code> values since&#xA;     * the last line end.&#xA;     *&#xA;     * &lt;p>&lt;strong>Warning:&lt;/strong> The return value from the method&#xA;     * is intended only as an approximation for the sake of diagnostics;&#xA;     * it is not intended to provide sufficient information&#xA;     * to edit the character content of the original XML document.&#xA;     * For example, when lines contain combining character sequences, wide&#xA;     * characters, surrogate pairs, or bi-directional text, the value may&#xA;     * not correspond to the column in a text editor's display. &lt;/p>&#xA;     *&#xA;     * &lt;p>The return value is an approximation of the column number&#xA;     * in the document entity or external parsed entity where the&#xA;     * markup triggering the event appears.&lt;/p>&#xA;     *&#xA;     * &lt;p>If possible, the SAX driver should provide the line position &#xA;     * of the first character after the text associated with the document &#xA;     * event.  The first column in each line is column 1.&lt;/p>&#xA;     *&#xA;     * @return The column number, or -1 if none is available.&#xA;     * @see #getLineNumber&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Interface for associating a SAX event with a document location.&#xA; *&#xA; * &lt;blockquote>&#xA; * &lt;em>This module, both source code and documentation, is in the&#xA; * Public Domain, and comes with &lt;strong>NO WARRANTY&lt;/strong>.&lt;/em>&#xA; * See &lt;a href='http://www.saxproject.org'>http://www.saxproject.org&lt;/a>&#xA; * for further information.&#xA; * &lt;/blockquote>&#xA; *&#xA; * &lt;p>If a SAX parser provides location information to the SAX&#xA; * application, it does so by implementing this interface and then&#xA; * passing an instance to the application using the content&#xA; * handler's {@link org.xml.sax.ContentHandler#setDocumentLocator&#xA; * setDocumentLocator} method.  The application can use the&#xA; * object to obtain the location of any other SAX event&#xA; * in the XML source document.&lt;/p>&#xA; *&#xA; * &lt;p>Note that the results returned by the object will be valid only&#xA; * during the scope of each callback method: the application&#xA; * will receive unpredictable results if it attempts to use the&#xA; * locator at any other time, or after parsing completes.&lt;/p>&#xA; *&#xA; * &lt;p>SAX parsers are not required to supply a locator, but they are&#xA; * very strongly encouraged to do so.  If the parser supplies a&#xA; * locator, it must do so before reporting any other document events.&#xA; * If no locator has been set by the time the application receives&#xA; * the {@link org.xml.sax.ContentHandler#startDocument startDocument}&#xA; * event, the application should assume that a locator is not &#xA; * available.&lt;/p>&#xA; *&#xA; * @since SAX 1.0&#xA; * @author David Megginson&#xA; * @version 2.0.1 (sax2r2)&#xA; * @see org.xml.sax.ContentHandler#setDocumentLocator &#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
