<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="EntityResolver.java">
  <comments>// SAX entity resolver.</comments>
  <comments>// http://www.saxproject.org</comments>
  <comments>// No warranty; no copyright -- use this as you will.</comments>
  <comments>// $Id: EntityResolver.java,v 1.1.24.1 2004/05/01 08:34:39 jsuttor Exp $</comments>
  <namespaces>org</namespaces>
  <namespaces>xml</namespaces>
  <namespaces>sax</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../java/io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="EntityResolver">
    <members xsi:type="members:InterfaceMethod" name="resolveEntity">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="InputSource.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="publicId">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="systemId">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="SAXException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Allow the application to resolve external entities.&#xA;     *&#xA;     * &lt;p>The parser will call this method before opening any external&#xA;     * entity except the top-level document entity.  Such entities include&#xA;     * the external DTD subset and external parameter entities referenced&#xA;     * within the DTD (in either case, only if the parser reads external&#xA;     * parameter entities), and external general entities referenced&#xA;     * within the document element (if the parser reads external general&#xA;     * entities).  The application may request that the parser locate&#xA;     * the entity itself, that it use an alternative URI, or that it&#xA;     * use data provided by the application (as a character or byte&#xA;     * input stream).&lt;/p>&#xA;     *&#xA;     * &lt;p>Application writers can use this method to redirect external&#xA;     * system identifiers to secure and/or local URIs, to look up&#xA;     * public identifiers in a catalogue, or to read an entity from a&#xA;     * database or other input source (including, for example, a dialog&#xA;     * box).  Neither XML nor SAX specifies a preferred policy for using&#xA;     * public or system IDs to resolve resources.  However, SAX specifies&#xA;     * how to interpret any InputSource returned by this method, and that&#xA;     * if none is returned, then the system ID will be dereferenced as&#xA;     * a URL.  &lt;/p>&#xA;     *&#xA;     * &lt;p>If the system identifier is a URL, the SAX parser must&#xA;     * resolve it fully before reporting it to the application.&lt;/p>&#xA;     *&#xA;     * @param publicId The public identifier of the external entity&#xA;     *        being referenced, or null if none was supplied.&#xA;     * @param systemId The system identifier of the external entity&#xA;     *        being referenced.&#xA;     * @return An InputSource object describing the new input source,&#xA;     *         or null to request that the parser open a regular&#xA;     *         URI connection to the system identifier.&#xA;     * @exception org.xml.sax.SAXException Any SAX exception, possibly&#xA;     *            wrapping another exception.&#xA;     * @exception java.io.IOException A Java-specific IO exception,&#xA;     *            possibly the result of creating a new InputStream&#xA;     *            or Reader for the InputSource.&#xA;     * @see org.xml.sax.InputSource&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Basic interface for resolving entities.&#xA; *&#xA; * &lt;blockquote>&#xA; * &lt;em>This module, both source code and documentation, is in the&#xA; * Public Domain, and comes with &lt;strong>NO WARRANTY&lt;/strong>.&lt;/em>&#xA; * See &lt;a href='http://www.saxproject.org'>http://www.saxproject.org&lt;/a>&#xA; * for further information.&#xA; * &lt;/blockquote>&#xA; *&#xA; * &lt;p>If a SAX application needs to implement customized handling&#xA; * for external entities, it must implement this interface and&#xA; * register an instance with the SAX driver using the&#xA; * {@link org.xml.sax.XMLReader#setEntityResolver setEntityResolver}&#xA; * method.&lt;/p>&#xA; *&#xA; * &lt;p>The XML reader will then allow the application to intercept any&#xA; * external entities (including the external DTD subset and external&#xA; * parameter entities, if any) before including them.&lt;/p>&#xA; *&#xA; * &lt;p>Many SAX applications will not need to implement this interface,&#xA; * but it will be especially useful for applications that build&#xA; * XML documents from databases or other specialised input sources,&#xA; * or for applications that use URI types other than URLs.&lt;/p>&#xA; *&#xA; * &lt;p>The following resolver would provide the application&#xA; * with a special character stream for the entity with the system&#xA; * identifier &quot;http://www.myhost.com/today&quot;:&lt;/p>&#xA; *&#xA; * &lt;pre>&#xA; * import org.xml.sax.EntityResolver;&#xA; * import org.xml.sax.InputSource;&#xA; *&#xA; * public class MyResolver implements EntityResolver {&#xA; *   public InputSource resolveEntity (String publicId, String systemId)&#xA; *   {&#xA; *     if (systemId.equals(&quot;http://www.myhost.com/today&quot;)) {&#xA; *              // return a special input source&#xA; *       MyReader reader = new MyReader();&#xA; *       return new InputSource(reader);&#xA; *     } else {&#xA; *              // use the default behaviour&#xA; *       return null;&#xA; *     }&#xA; *   }&#xA; * }&#xA; * &lt;/pre>&#xA; *&#xA; * &lt;p>The application can also use this interface to redirect system&#xA; * identifiers to local URIs or to look up replacements in a catalog&#xA; * (possibly by using the public identifier).&lt;/p>&#xA; *&#xA; * @since SAX 1.0&#xA; * @author David Megginson&#xA; * @version 2.0.1 (sax2r2)&#xA; * @see org.xml.sax.XMLReader#setEntityResolver&#xA; * @see org.xml.sax.InputSource&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
