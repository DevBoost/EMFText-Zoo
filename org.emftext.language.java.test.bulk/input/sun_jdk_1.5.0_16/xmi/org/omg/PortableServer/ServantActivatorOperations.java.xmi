<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="ServantActivatorOperations.java">
  <namespaces>org</namespaces>
  <namespaces>omg</namespaces>
  <namespaces>PortableServer</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="ServantActivatorOperations">
    <members xsi:type="members:InterfaceMethod" name="incarnate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <comments>/**&#xA;&#x9; * This operation is invoked by the POA whenever the &#xA;&#x9; * POA receives a request for an object that is not &#xA;&#x9; * currently active, assuming the POA has the &#xA;&#x9; * USE_SERVANT_MANAGER and RETAIN policies.&#xA;&#x9; * @param oid object Id associated with the object on &#xA;&#x9; *            the request was made.&#xA;&#x9; * @param adapter object reference for the POA in which&#xA;&#x9; *                the object is being activated.&#xA;&#x9; * @return Servant corresponding to oid is created or &#xA;&#x9; *         located by the user supplied servant manager.&#xA;&#x9; * @exception ForwardRequest to indicate to the ORB &#xA;&#x9; *            that it is responsible for delivering &#xA;&#x9; *            the current request and subsequent &#xA;&#x9; *            requests to the object denoted in the &#xA;&#x9; *            forward_reference member of the exception.&#xA;&#x9; */</comments>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>PortableServer</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Servant.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oid">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="adapter">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>PortableServer</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="POA.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>PortableServer</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ForwardRequest.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="etherealize">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;&#x9; * This operation is invoked whenever a servant for &#xA;&#x9; * an object is deactivated, assuming the POA has &#xA;&#x9; * the USE_SERVANT_MANAGER and RETAIN policies.&#xA;&#x9; * @param oid object Id associated with the object &#xA;&#x9; *            being deactivated.&#xA;&#x9; * @param adapter object reference for the POA in which&#xA;&#x9; *                the object was active.&#xA;&#x9; * @param serv contains reference to the servant&#xA;&#x9; *        associated with the object being deactivated.&#xA;&#x9; * @param cleanup_in_progress if TRUE indicates that&#xA;&#x9; *        destroy or deactivate is called with &#xA;&#x9; *        etherealize_objects param of TRUE.  FALSE&#xA;&#x9; *        indicates that etherealize was called due to&#xA;&#x9; *        other reasons.&#xA;&#x9; * @param remaining_activations indicates whether the&#xA;&#x9; *        Servant Manager can destroy a servant.  If&#xA;&#x9; *        set to TRUE, the Servant Manager should wait&#xA;&#x9; *        until all invocations in progress have&#xA;&#x9; *        completed.&#xA;&#x9; */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oid">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="adapter">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>PortableServer</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="POA.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="serv">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>PortableServer</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Servant.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="cleanup_in_progress">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="remaining_activations">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xD;&#xA;* org/omg/PortableServer/ServantActivatorOperations.java .&#xD;&#xA;* Generated by the IDL-to-Java compiler (portable), version &quot;3.2&quot;&#xD;&#xA;* from ../../../../src/share/classes/org/omg/PortableServer/poa.idl&#xD;&#xA;* Wednesday, May 28, 2008 8:37:35 AM GMT&#xD;&#xA;*/</comments>
      <comments>/**&#xA;&#x9; * When the POA has the RETAIN policy it uses servant &#xA;&#x9; * managers that are ServantActivators. &#xA;&#x9; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <namespaces>org</namespaces>
      <namespaces>omg</namespaces>
      <namespaces>PortableServer</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="ServantManagerOperations.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
