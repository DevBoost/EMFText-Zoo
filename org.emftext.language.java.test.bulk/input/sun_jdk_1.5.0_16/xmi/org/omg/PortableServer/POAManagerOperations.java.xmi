<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="POAManagerOperations.java">
  <namespaces>org</namespaces>
  <namespaces>omg</namespaces>
  <namespaces>PortableServer</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="POAManagerOperations">
    <members xsi:type="members:InterfaceMethod" name="activate">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;&#x9; * This operation changes the state of the POA manager &#xA;&#x9; * to active, causing associated POAs to start processing&#xA;&#x9; * requests.&#xA;&#x9; * @exception AdapterInactive is raised if the operation is&#xA;&#x9; *            invoked on the POAManager in inactive state.&#xA;&#x9; */</comments>
      </typeReference>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>PortableServer</namespaces>
        <namespaces>POAManagerPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="POAManagerPackage/AdapterInactive.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="hold_requests">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;&#x9; * This operation changes the state of the POA manager &#xA;&#x9; * to holding, causing associated POAs to queue incoming&#xA;&#x9; * requests.&#xA;&#x9; * @param wait_for_completion if FALSE, the operation &#xA;&#x9; *            returns immediately after changing state.  &#xA;&#x9; *            If TRUE, it waits for all active requests &#xA;&#x9; *            to complete. &#xA;&#x9; * @exception AdapterInactive is raised if the operation is&#xA;&#x9; *            invoked on the POAManager in inactive state.&#xA;&#x9; */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="wait_for_completion">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>PortableServer</namespaces>
        <namespaces>POAManagerPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="POAManagerPackage/AdapterInactive.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="discard_requests">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;&#x9; * This operation changes the state of the POA manager &#xA;&#x9; * to discarding. This causes associated POAs to discard&#xA;&#x9; * incoming requests.&#xA;&#x9; * @param wait_for_completion if FALSE, the operation &#xA;&#x9; *            returns immediately after changing state.  &#xA;&#x9; *            If TRUE, it waits for all active requests &#xA;&#x9; *            to complete. &#xA;&#x9; * @exception AdapterInactive is raised if the operation is&#xA;&#x9; *            invoked on the POAManager in inactive state.&#xA;&#x9; */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="wait_for_completion">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>PortableServer</namespaces>
        <namespaces>POAManagerPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="POAManagerPackage/AdapterInactive.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="deactivate">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;&#x9; * This operation changes the state of the POA manager &#xA;&#x9; * to inactive, causing associated POAs to reject the&#xA;&#x9; * requests that have not begun executing as well as&#xA;&#x9; * as any new requests.&#xA;&#x9; * @param etherealize_objects a flag to indicate whether&#xA;&#x9; *        to invoke the etherealize operation of the&#xA;&#x9; *        associated servant manager for all active &#xA;&#x9; *        objects.&#xA;&#x9; * @param wait_for_completion if FALSE, the operation &#xA;&#x9; *            returns immediately after changing state.  &#xA;&#x9; *            If TRUE, it waits for all active requests &#xA;&#x9; *            to complete. &#xA;&#x9; * @exception AdapterInactive is raised if the operation is&#xA;&#x9; *            invoked on the POAManager in inactive state.&#xA;&#x9; */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="etherealize_objects">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="wait_for_completion">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>PortableServer</namespaces>
        <namespaces>POAManagerPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="POAManagerPackage/AdapterInactive.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="get_state">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <comments>/**&#xA;&#x9; * This operation returns the state of the POA manager.&#xA;&#x9; */</comments>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>PortableServer</namespaces>
        <namespaces>POAManagerPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="POAManagerPackage/State.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xD;&#xA;* org/omg/PortableServer/POAManagerOperations.java .&#xD;&#xA;* Generated by the IDL-to-Java compiler (portable), version &quot;3.2&quot;&#xD;&#xA;* from ../../../../src/share/classes/org/omg/PortableServer/poa.idl&#xD;&#xA;* Wednesday, May 28, 2008 8:37:34 AM GMT&#xD;&#xA;*/</comments>
      <comments>/**&#xA;&#x9; * Each POA object has an associated POAManager object. &#xA;&#x9; * A POA manager may be associated with one or more &#xA;&#x9; * POA objects. A POA manager encapsulates the processing &#xA;&#x9; * state of the POAs it is associated with.&#xA;&#x9; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
