<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="ServantLocatorOperations.java">
  <namespaces>org</namespaces>
  <namespaces>omg</namespaces>
  <namespaces>PortableServer</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="ServantLocatorOperations">
    <members xsi:type="members:InterfaceMethod" name="preinvoke">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <comments>/**&#xA;&#x9; * This operations is used to get a servant that will be&#xA;&#x9; * used to process the request that caused preinvoke to&#xA;&#x9; * be called.&#xA;&#x9; * @param oid the object id associated with object on&#xA;&#x9; *            which the request was made. &#xA;&#x9; * @param adapter the reference for POA in which the&#xA;&#x9; *                object is being activated.&#xA;&#x9; * @param operation the operation name.&#xA;&#x9; * @param the_cookie  an opaque value that can be set&#xA;&#x9; *                    by the servant manager to be used&#xA;&#x9; *                    during postinvoke.&#xA;&#x9; * @return Servant used to process incoming request.&#xA;&#x9; * @exception ForwardRequest to indicate to the ORB &#xA;&#x9; *            that it is responsible for delivering &#xA;&#x9; *            the current request and subsequent &#xA;&#x9; *            requests to the object denoted in the &#xA;&#x9; *            forward_reference member of the exception.&#xA;&#x9; */</comments>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>PortableServer</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Servant.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oid">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="adapter">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>PortableServer</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="POA.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="operation">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="the_cookie">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>PortableServer</namespaces>
          <namespaces>ServantLocatorPackage</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="ServantLocatorPackage/CookieHolder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>PortableServer</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ForwardRequest.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="postinvoke">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;&#x9; * This operation is invoked whenener a servant completes&#xA;&#x9; * a request.&#xA;&#x9; * @param oid the object id ssociated with object on which&#xA;&#x9; *            the request was made.&#xA;&#x9; * @param adapter the reference for POA in which the&#xA;&#x9; *                object was active.&#xA;&#x9; * @param the_cookie  an opaque value that contains&#xA;&#x9; *                    the data set by preinvoke.&#xA;&#x9; * @param the_servant reference to the servant that is&#xA;&#x9; *                    associated with the object.&#xA;&#x9; */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oid">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="adapter">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>PortableServer</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="POA.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="operation">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="the_cookie">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>lang</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="the_servant">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>PortableServer</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Servant.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xD;&#xA;* org/omg/PortableServer/ServantLocatorOperations.java .&#xD;&#xA;* Generated by the IDL-to-Java compiler (portable), version &quot;3.2&quot;&#xD;&#xA;* from ../../../../src/share/classes/org/omg/PortableServer/poa.idl&#xD;&#xA;* Wednesday, May 28, 2008 8:37:35 AM GMT&#xD;&#xA;*/</comments>
      <comments>/**&#xA;&#x9; * When the POA has the NON_RETAIN policy it uses servant &#xA;&#x9; * managers that are ServantLocators. Because the POA &#xA;&#x9; * knows that the servant returned by this servant &#xA;&#x9; * manager will be used only for a single request, &#xA;&#x9; * it can supply extra information to the servant &#xA;&#x9; * manager's operations and the servant manager's pair &#xA;&#x9; * of operations may be able to cooperate to do &#xA;&#x9; * something different than a ServantActivator. &#xA;&#x9; * When the POA uses the ServantLocator interface, &#xA;&#x9; * immediately after performing the operation invocation &#xA;&#x9; * on the servant returned by preinvoke, the POA will &#xA;&#x9; * invoke postinvoke on the servant manager, passing the &#xA;&#x9; * ObjectId value and the Servant value as parameters &#xA;&#x9; * (among others). This feature may be used to force &#xA;&#x9; * every request for objects associated with a POA to &#xA;&#x9; * be mediated by the servant manager.&#xA;&#x9; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <namespaces>org</namespaces>
      <namespaces>omg</namespaces>
      <namespaces>PortableServer</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="ServantManagerOperations.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
