<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/types ../../../java.ecore#/16" name="DynAnyFactory.java">
  <namespaces>org</namespaces>
  <namespaces>omg</namespaces>
  <namespaces>DynamicAny</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="DynAnyFactory">
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xD;&#xA;* org/omg/DynamicAny/DynAnyFactory.java .&#xD;&#xA;* Generated by the IDL-to-Java compiler (portable), version &quot;3.2&quot;&#xD;&#xA;* from ../../../../src/share/classes/org/omg/DynamicAny/DynamicAny.idl&#xD;&#xA;* Wednesday, May 28, 2008 8:37:44 AM GMT&#xD;&#xA;*/</comments>
      <comments>/**&#xA;    * DynAny objects can be created by invoking operations on the DynAnyFactory object.&#xA;    * Generally there are only two ways to create a DynAny object:&#xA;    * &lt;UL>&#xA;    * &lt;LI>invoking an operation on an existing DynAny object&#xA;    * &lt;LI>invoking an operation on a DynAnyFactory object&#xA;    * &lt;/UL>&#xA;    * A constructed DynAny object supports operations that enable the creation of new DynAny&#xA;    * objects encapsulating access to the value of some constituent.&#xA;    * DynAny objects also support the copy operation for creating new DynAny objects.&#xA;    * A reference to the DynAnyFactory object is obtained by calling ORB.resolve_initial_references()&#xA;    * with the identifier parameter set to the string constant &quot;DynAnyFactory&quot;.&#xA;    * &lt;P>Dynamic interpretation of an any usually involves creating a DynAny object using create_dyn_any()&#xA;    * as the first step. Depending on the type of the any, the resulting DynAny object reference can be narrowed&#xA;    * to a DynFixed, DynStruct, DynSequence, DynArray, DynUnion, DynEnum, or DynValue object reference.&#xA;    * &lt;P>Dynamic creation of an any involves creating a DynAny object using create_dyn_any_from_type_code(),&#xA;    * passing the TypeCode associated with the value to be created. The returned reference is narrowed to one of&#xA;    * the complex types, such as DynStruct, if appropriate. Then, the value can be initialized by means of&#xA;    * invoking operations on the resulting object. Finally, the to_any operation can be invoked&#xA;    * to create an any value from the constructed DynAny.&#xA;    */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="DynAnyFactoryOperations.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
    <extends xsi:type="types:NamespaceClassifierReference">
      <namespaces>org</namespaces>
      <namespaces>omg</namespaces>
      <namespaces>CORBA</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../CORBA/Object.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
    <extends xsi:type="types:NamespaceClassifierReference">
      <namespaces>org</namespaces>
      <namespaces>omg</namespaces>
      <namespaces>CORBA</namespaces>
      <namespaces>portable</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../CORBA/portable/IDLEntity.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
