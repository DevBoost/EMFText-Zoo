<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="NamingContextOperations.java">
  <namespaces>org</namespaces>
  <namespaces>omg</namespaces>
  <namespaces>CosNaming</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="NamingContextOperations">
    <members xsi:type="members:InterfaceMethod" name="bind">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA; * Creates a binding of a name and an object in the naming context.&#xA; * Naming contexts that are bound using bind do not participate in name&#xA; * resolution when compound names are passed to be resolved. &#xA; * &#xA; * @param n Name of the object &lt;p>&#xA; * &#xA; * @param obj The Object to bind with the given name&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.NotFound Indicates&#xA; * the name does not identify a binding.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.CannotProceed &#xA; * Indicates that the implementation has given up for some reason.&#xA; * The client, however, may be able to continue the operation&#xA; * at the returned naming context.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.InvalidName &#xA; * Indicates that the name is invalid. &lt;p>&#xA; *&#xA; * @exception org.omg.CosNaming.NamingContextPackage.AlreadyBound &#xA; * Indicates an object is already bound to the specified name.&lt;p> &#xA; */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="n">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CosNaming</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="NameComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="obj">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CORBA</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../CORBA/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/NotFound.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/CannotProceed.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/InvalidName.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/AlreadyBound.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="bind_context">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA; * Names an object that is a naming context. Naming contexts that&#xA; * are bound using bind_context() participate in name resolution &#xA; * when compound names are passed to be resolved.&#xA; * &#xA; * @param n Name of the object &lt;p>&#xA; * &#xA; * @param nc NamingContect object to bind with the given name &lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.NotFound Indicates the name does not identify a binding.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.CannotProceed Indicates that the implementation has&#xA; * given up for some reason. The client, however, may be able to &#xA; * continue the operation at the returned naming context.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.InvalidName Indicates that the name is invalid. &lt;p>&#xA; *&#xA; * @exception org.omg.CosNaming.NamingContextPackage.AlreadyBound Indicates an object is already &#xA; * bound to the specified name.&lt;p>&#xA; */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="n">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CosNaming</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="NameComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="nc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CosNaming</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="NamingContext.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/NotFound.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/CannotProceed.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/InvalidName.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/AlreadyBound.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="rebind">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA; * Creates a binding of a name and an object in the naming context&#xA; * even if the name is already bound in the context. Naming contexts &#xA; * that are bound using rebind do not participate in name resolution &#xA; * when compound names are passed to be resolved.&#xA; * &#xA; * @param  n Name of the object &lt;p>&#xA; * &#xA; * @parm obj The Object to rebind with the given name &lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.NotFound Indicates the name does not identify a binding.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.CannotProceed Indicates that the implementation has&#xA; * given up for some reason. The client, however, may be able to &#xA; * continue the operation at the returned naming context.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.InvalidName Indicates that the name is invalid. &lt;p>&#xA; */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="n">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CosNaming</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="NameComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="obj">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CORBA</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../CORBA/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/NotFound.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/CannotProceed.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/InvalidName.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="rebind_context">
      <typeReference xsi:type="types:Void">
        <comments>/** &#xA; * Creates a binding of a name and a naming context in the naming&#xA; * context even if the name is already bound in the context. Naming &#xA; * contexts that are bound using rebind_context() participate in name &#xA; * resolution when compound names are passed to be resolved.&#xA; * &#xA; * @param n Name of the object &lt;p>&#xA; * &#xA; * @param nc NamingContect object to rebind with the given name &lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.NotFound Indicates the name does not identify a binding.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.CannotProceed Indicates that the implementation has&#xA; * given up for some reason. The client, however, may be able to &#xA; * continue the operation at the returned naming context.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.InvalidName Indicates that the name is invalid. &lt;p>&#xA; */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="n">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CosNaming</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="NameComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="nc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CosNaming</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="NamingContext.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/NotFound.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/CannotProceed.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/InvalidName.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="resolve">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <comments>/** &#xA; * The resolve operation is the process of retrieving an object&#xA; * bound to a name in a given context. The given name must exactly &#xA; * match the bound name. The naming service does not return the type &#xA; * of the object. Clients are responsible for &quot;narrowing&quot; the object &#xA; * to the appropriate type. That is, clients typically cast the returned &#xA; * object from Object to a more specialized interface.&#xA; * &#xA; * @param n Name of the object &lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.NotFound Indicates the name does not identify a binding.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.CannotProceed Indicates that the implementation has&#xA; * given up for some reason. The client, however, may be able to &#xA; * continue the operation at the returned naming context.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.InvalidName Indicates that the name is invalid. &lt;p>&#xA; */</comments>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CORBA</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../CORBA/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="n">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CosNaming</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="NameComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/NotFound.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/CannotProceed.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/InvalidName.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="unbind">
      <typeReference xsi:type="types:Void">
        <comments>/** &#xA; * The unbind operation removes a name binding from a context.&#xA; * &#xA; * @param n Name of the object &lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.NotFound Indicates the name does not identify a binding.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.CannotProceed Indicates that the implementation has&#xA; * given up for some reason. The client, however, may be able to &#xA; * continue the operation at the returned naming context.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.InvalidName Indicates that the name is invalid. &lt;p>&#xA; */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="n">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CosNaming</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="NameComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/NotFound.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/CannotProceed.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/InvalidName.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="list">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA; * The list operation allows a client to iterate through a set of&#xA; * bindings in a naming context. &lt;p>&#xA; * &#xA; * The list operation returns at most the requested number of&#xA; * bindings in BindingList bl. &#xA; * &lt;ul>&#xA; * &lt;li>If the naming context contains additional &#xA; * bindings, the list operation returns a BindingIterator with the &#xA; * additional bindings. &#xA; * &lt;li>If the naming context does not contain additional &#xA; * bindings, the binding iterator is a nil object reference.&#xA; * &lt;/ul>&#xA; * &#xA; * @param how_many the maximum number of bindings to return &lt;p>&#xA; * &#xA; * @param bl the returned list of bindings &lt;p>&#xA; * &#xA; * @param bi the returned binding iterator &lt;p>&#xA; */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="how_many">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bl">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CosNaming</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="BindingListHolder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bi">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CosNaming</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="BindingIteratorHolder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="new_context">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <comments>/**&#xA; * This operation returns a naming context implemented by the same&#xA; * naming server as the context on which the operation was invoked. &#xA; * The new context is not bound to any name.&#xA; */</comments>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="NamingContext.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="bind_new_context">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <comments>/**&#xA; * This operation creates a new context and binds it to the name&#xA; * supplied as an argument. The newly-created context is implemented &#xA; * by the same naming server as the context in which it was bound (that &#xA; * is, the naming server that implements the context denoted by the &#xA; * name argument excluding the last component).&#xA; * &#xA; * @param n Name of the object &lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.NotFound Indicates the name does not identify a binding.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.AlreadyBound Indicates an object is already &#xA; * bound to the specified name.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.CannotProceed Indicates that the implementation has&#xA; * given up for some reason. The client, however, may be able to &#xA; * continue the operation at the returned naming context.&lt;p>&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.InvalidName Indicates that the name is invalid. &lt;p>&#xA; */</comments>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="NamingContext.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="n">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CosNaming</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="NameComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/NotFound.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/AlreadyBound.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/CannotProceed.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/InvalidName.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="destroy">
      <typeReference xsi:type="types:Void">
        <comments>/** &#xA; * The destroy operation deletes a naming context. If the naming &#xA; * context contains bindings, the NotEmpty exception is raised.&#xA; * &#xA; * @exception org.omg.CosNaming.NamingContextPackage.NotEmpty Indicates that the Naming Context contains bindings.&#xA; */</comments>
      </typeReference>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CosNaming</namespaces>
        <namespaces>NamingContextPackage</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="NamingContextPackage/NotEmpty.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xD;&#xA;* org/omg/CosNaming/NamingContextOperations.java .&#xD;&#xA;* Generated by the IDL-to-Java compiler (portable), version &quot;3.2&quot;&#xD;&#xA;* from ../../../../src/share/classes/org/omg/CosNaming/nameservice.idl&#xD;&#xA;* Wednesday, May 28, 2008 8:37:42 AM GMT&#xD;&#xA;*/</comments>
      <comments>/** &#xA; * A naming context is an object that contains a set of name bindings in &#xA; * which each name is unique. Different names can be bound to an object &#xA; * in the same or different contexts at the same time. &lt;p>&#xA; * &#xA; * See &lt;a href=&quot;http://www.omg.org/technology/documents/formal/naming_service.htm&quot;>&#xA; * CORBA COS &#xA; * Naming Specification.&lt;/a>&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
