<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16" name="_IDLTypeStub.java">
  <comments>/*&#xA; * @(#)_IDLTypeStub.java&#x9;1.13 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>omg</namespaces>
  <namespaces>CORBA</namespaces>
  <classifiers xsi:type="classifiers:Class" name="_IDLTypeStub">
    <members xsi:type="members:Constructor" name="_IDLTypeStub">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * Constructs a default &lt;code>_IDLTypeStub&lt;/code> object.&#xA;   * NOTE:  If the default constructor is used, the&#xA;   *        object is useless until the method &lt;code>_set_delegate&lt;/code>&#xA;   *        has been called.&#xA;   */</comments>
        <comments>// NOTE: This constructor is not required according to the spec. Only JCK expects it now.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="_IDLTypeStub">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="portable/ObjectImpl.class.xmi#//@classifiers.0/@members.3"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.0"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="delegate">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CORBA</namespaces>
          <namespaces>portable</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="portable/Delegate.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * Constructs an &lt;code>_IDLTypeStub&lt;/code> object initialized&#xA;   * with the given &lt;code>Delegate&lt;/code> object.&#xA;   *&#xA;   * @param delegate a Delegate object&#xA;   */</comments>
        <comments>// NOTE: This constructor is not required according to the spec. We keep it as a convenience method.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="type">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CORBA</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="TypeCode.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="_in">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>org</namespaces>
            <namespaces>omg</namespaces>
            <namespaces>CORBA</namespaces>
            <namespaces>portable</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="portable/InputStream.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="_out">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>org</namespaces>
              <namespaces>omg</namespaces>
              <namespaces>CORBA</namespaces>
              <namespaces>portable</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="portable/OutputStream.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="portable/ObjectImpl.class.xmi#//@classifiers.0/@members.22"/>
              <arguments xsi:type="references:StringReference" value="_get_type"/>
              <arguments xsi:type="literals:BooleanLiteral" value="true"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="portable/ObjectImpl.class.xmi#//@classifiers.0/@members.23"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.1/@statements.0/@variable"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="__result">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>org</namespaces>
              <namespaces>omg</namespaces>
              <namespaces>CORBA</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="TypeCode.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="portable/InputStream.class.xmi#//@classifiers.0/@members.28"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.1/@statements.2/@variable"/>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.1/@catcheBlocks.0/@parameter">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="portable/ApplicationException.class.xmi#//@classifiers.0/@members.4"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="_id">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.1/@catcheBlocks.0/@parameter">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="portable/ApplicationException.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>org</namespaces>
                <namespaces>omg</namespaces>
                <namespaces>CORBA</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="MARSHAL.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.1/@catcheBlocks.0/@statements.1/@variable"/>
            </throwable>
          </statements>
          <parameter name="_ex">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>org</namespaces>
              <namespaces>omg</namespaces>
              <namespaces>CORBA</namespaces>
              <namespaces>portable</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="portable/ApplicationException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <catcheBlocks>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.2"/>
          </statements>
          <parameter name="_rm">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>org</namespaces>
              <namespaces>omg</namespaces>
              <namespaces>CORBA</namespaces>
              <namespaces>portable</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="portable/RemarshalException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="portable/ObjectImpl.class.xmi#//@classifiers.0/@members.24"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable"/>
            </expression>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="def_kind">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CORBA</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="DefinitionKind.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// type</comments>
        <comments>// read interface</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="_in">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>org</namespaces>
            <namespaces>omg</namespaces>
            <namespaces>CORBA</namespaces>
            <namespaces>portable</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="portable/InputStream.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="_out">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>org</namespaces>
              <namespaces>omg</namespaces>
              <namespaces>CORBA</namespaces>
              <namespaces>portable</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="portable/OutputStream.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="portable/ObjectImpl.class.xmi#//@classifiers.0/@members.22"/>
              <arguments xsi:type="references:StringReference" value="_get_def_kind"/>
              <arguments xsi:type="literals:BooleanLiteral" value="true"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.0/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="portable/ObjectImpl.class.xmi#//@classifiers.0/@members.23"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@statements.0/@variable"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="__result">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>org</namespaces>
              <namespaces>omg</namespaces>
              <namespaces>CORBA</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="DefinitionKind.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="DefinitionKindHelper.class.xmi#//@classifiers.0/@members.7"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.0/@variable"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="DefinitionKindHelper.class.xmi#//@classifiers.0"/>
                  </next>
                </next>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@statements.2/@variable"/>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@catcheBlocks.0/@parameter">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="portable/ApplicationException.class.xmi#//@classifiers.0/@members.4"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="_id">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@catcheBlocks.0/@parameter">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="portable/ApplicationException.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>org</namespaces>
                <namespaces>omg</namespaces>
                <namespaces>CORBA</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="MARSHAL.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@catcheBlocks.0/@statements.1/@variable"/>
            </throwable>
          </statements>
          <parameter name="_ex">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>org</namespaces>
              <namespaces>omg</namespaces>
              <namespaces>CORBA</namespaces>
              <namespaces>portable</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="portable/ApplicationException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <catcheBlocks>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.3"/>
          </statements>
          <parameter name="_rm">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>org</namespaces>
              <namespaces>omg</namespaces>
              <namespaces>CORBA</namespaces>
              <namespaces>portable</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="portable/RemarshalException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="portable/ObjectImpl.class.xmi#//@classifiers.0/@members.24"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.0/@variable"/>
            </expression>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="destroy">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// def_kind</comments>
        <comments>// write interface</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="_in">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>org</namespaces>
            <namespaces>omg</namespaces>
            <namespaces>CORBA</namespaces>
            <namespaces>portable</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="portable/InputStream.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="_out">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>org</namespaces>
              <namespaces>omg</namespaces>
              <namespaces>CORBA</namespaces>
              <namespaces>portable</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="portable/OutputStream.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="portable/ObjectImpl.class.xmi#//@classifiers.0/@members.22"/>
              <arguments xsi:type="references:StringReference" value="destroy"/>
              <arguments xsi:type="literals:BooleanLiteral" value="true"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.0/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="portable/ObjectImpl.class.xmi#//@classifiers.0/@members.23"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.1/@statements.0/@variable"/>
            </value>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.1/@catcheBlocks.0/@parameter">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="portable/ApplicationException.class.xmi#//@classifiers.0/@members.4"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="_id">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.1/@catcheBlocks.0/@parameter">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="portable/ApplicationException.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>org</namespaces>
                <namespaces>omg</namespaces>
                <namespaces>CORBA</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="MARSHAL.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.1/@catcheBlocks.0/@statements.1/@variable"/>
            </throwable>
          </statements>
          <parameter name="_ex">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>org</namespaces>
              <namespaces>omg</namespaces>
              <namespaces>CORBA</namespaces>
              <namespaces>portable</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="portable/ApplicationException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.4"/>
          </statements>
          <parameter name="_rm">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>org</namespaces>
              <namespaces>omg</namespaces>
              <namespaces>CORBA</namespaces>
              <namespaces>portable</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="portable/RemarshalException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="portable/ObjectImpl.class.xmi#//@classifiers.0/@members.24"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.0/@variable"/>
            </expression>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:Field" name="__ids">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="references:StringReference" value="IDL:omg.org/CORBA/IDLType:1.0"/>
          <initialValues xsi:type="references:StringReference" value="IDL:omg.org/CORBA/IRObject:1.0"/>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// destroy</comments>
        <comments>// Type-specific CORBA::Object operations</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:ClassMethod" name="_ids">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../java/lang/Object.class.xmi#//@classifiers.0/@members.5"/>
            </next>
          </child>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="readObject">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>io</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/io/ObjectInputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="str">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../java/io/ObjectInputStream.class.xmi#//@classifiers.0/@members.46"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="obj">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>org</namespaces>
              <namespaces>omg</namespaces>
              <namespaces>CORBA</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="Object.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="ORB.class.xmi#//@classifiers.0/@members.20"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@statements.0/@variable"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="ORB.class.xmi#//@classifiers.0/@members.8"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="ORB.class.xmi#//@classifiers.0"/>
                  </next>
                </next>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="delegate">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>org</namespaces>
              <namespaces>omg</namespaces>
              <namespaces>CORBA</namespaces>
              <namespaces>portable</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="portable/Delegate.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="expressions:NestedExpression">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="portable/ObjectImpl.class.xmi#//@classifiers.0/@members.2"/>
              </next>
              <expression xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <namespaces>org</namespaces>
                  <namespaces>omg</namespaces>
                  <namespaces>CORBA</namespaces>
                  <namespaces>portable</namespaces>
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="portable/ObjectImpl.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@statements.1/@variable"/>
              </expression>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="portable/ObjectImpl.class.xmi#//@classifiers.0/@members.3"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@statements.2/@variable"/>
          </expression>
        </statements>
        <catcheBlocks>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>io</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../java/io/IOException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="writeObject">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>io</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/io/ObjectOutputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="str">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="ORB.class.xmi#//@classifiers.0/@members.19"/>
                        <arguments xsi:type="references:SelfReference">
                          <self xsi:type="literals:This"/>
                        </arguments>
                      </next>
                      <target xsi:type="members:ClassMethod" href="ORB.class.xmi#//@classifiers.0/@members.8"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="ORB.class.xmi#//@classifiers.0"/>
                  </next>
                </next>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../java/io/ObjectOutputStream.class.xmi#//@classifiers.0/@members.43"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@statements.0/@variable"/>
            </next>
          </expression>
        </statements>
        <catcheBlocks>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>io</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../java/io/IOException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA;* The Stub for &lt;tt>IDLType&lt;/tt>.  For more information on &#xA;* Stub files, see &lt;a href=&quot;doc-files/generatedfiles.html#stub&quot;>&#xA;* &quot;Generated Files: Stubs&quot;&lt;/a>.&lt;P>&#xA;* org/omg/CORBA/_IDLTypeStub.java&#xA;* Generated by the IDL-to-Java compiler (portable), version &quot;3.0&quot;&#xA;* from ir.idl.&#xA;* 03 June 1999 11:33:44 o'clock GMT+00:00&#xA;*/</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <namespaces>org</namespaces>
      <namespaces>omg</namespaces>
      <namespaces>CORBA</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="IDLType.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <extends xsi:type="types:NamespaceClassifierReference">
      <namespaces>org</namespaces>
      <namespaces>omg</namespaces>
      <namespaces>CORBA</namespaces>
      <namespaces>portable</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="portable/ObjectImpl.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
