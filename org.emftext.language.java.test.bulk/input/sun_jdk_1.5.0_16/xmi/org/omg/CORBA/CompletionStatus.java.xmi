<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16" name="CompletionStatus.java">
  <comments>/*&#xA; * @(#)CompletionStatus.java&#x9;1.22 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>omg</namespaces>
  <namespaces>CORBA</namespaces>
  <classifiers xsi:type="classifiers:Class" name="CompletionStatus">
    <members xsi:type="members:Field" name="_COMPLETED_YES">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * The constant indicating that a method completed running&#xA; * before a &lt;code>SystemException&lt;/code> was thrown.&#xA; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <additionalFields name="_COMPLETED_NO">
        <comments>/**&#xA; * The constant indicating that a method had not completed running&#xA; * when a &lt;code>SystemException&lt;/code> was thrown.&#xA; */</comments>
        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      </additionalFields>
      <additionalFields name="_COMPLETED_MAYBE">
        <comments>/**&#xA; * The constant indicating that it is unknown whether a method had&#xA; * completed running when a &lt;code>SystemException&lt;/code> was thrown.&#xA; */</comments>
        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      </additionalFields>
    </members>
    <members xsi:type="members:Field" name="COMPLETED_YES">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * An instance of &lt;code>CompletionStatus&lt;/code> initialized with&#xA; * the constant &lt;code>_COMPLETED_YES&lt;/code>.&#xA; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="COMPLETED_NO">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@additionalFields.0"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * An instance of &lt;code>CompletionStatus&lt;/code> initialized with&#xA; * the constant &lt;code>_COMPLETED_NO&lt;/code>.&#xA; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="COMPLETED_MAYBE">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@additionalFields.1"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * An instance of &lt;code>CompletionStatus&lt;/code> initialized with&#xA; * the constant &lt;code>_COMPLETED_MAYBE&lt;/code>.&#xA; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:ClassMethod" name="value">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * Retrieves the value of this &lt;code>CompletionStatus&lt;/code> object.&#xA; *&#xA; * @return  one of the possible &lt;code>CompletionStatus&lt;/code> values:&#xA; *          &lt;code>_COMPLETED_YES&lt;/code>, &lt;code>_COMPLETED_NO&lt;/code>, or&#xA; *          &lt;code>_COMPLETED_MAYBE&lt;/code>&#xA; *&#xA; */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="from_int">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="i">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * Creates a &lt;code>CompletionStatus&lt;/code> object from the given &lt;code>int&lt;/code>.&#xA; *&#xA; * @param i  one of &lt;code>_COMPLETED_YES&lt;/code>, &lt;code>_COMPLETED_NO&lt;/code>, or&#xA; *          &lt;code>_COMPLETED_MAYBE&lt;/code>&#xA; *&#xA; * @return  one of the possible &lt;code>CompletionStatus&lt;/code> objects &#xA; *          with values:&#xA; *          &lt;code>_COMPLETED_YES&lt;/code>, &lt;code>_COMPLETED_NO&lt;/code>, or&#xA; *          &lt;code>_COMPLETED_MAYBE&lt;/code>&#xA; *&#xA; * @exception org.omg.CORBA.BAD_PARAM  if the argument given is not one of the&#xA; *            &lt;code>int&lt;/code> constants defined in &lt;code>CompletionStatus&lt;/code>&#xA; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@additionalFields.0"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@additionalFields.1"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>org</namespaces>
                <namespaces>omg</namespaces>
                <namespaces>CORBA</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="BAD_PARAM.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
      </statements>
    </members>
    <members xsi:type="members:Constructor" name="CompletionStatus">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="_value">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA; * Creates a &lt;code>CompletionStatus&lt;/code> object from the given &lt;code>int&lt;/code>.&#xA; *&#xA; * @param _value  one of &lt;code>_COMPLETED_YES&lt;/code>, &lt;code>_COMPLETED_NO&lt;/code>, or&#xA; *          &lt;code>_COMPLETED_MAYBE&lt;/code>&#xA; *&#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="_value">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * An object that indicates whether a method had completed running&#xA; * when a &lt;code>SystemException&lt;/code> was thrown.&#xA; * &lt;P>&#xA; * The class &lt;code>CompletionStatus&lt;/code>&#xA; * contains three &lt;code>CompletionStatus&lt;/code> instances, which are constants&#xA; * representing each&#xA; * possible completion status: &lt;code>COMPLETED_MAYBE&lt;/code>,&#xA; * &lt;code>COMPLETED_NO&lt;/code>, and &lt;code>COMPLETED_YES&lt;/code>.&#xA; * It also contains&#xA; * three &lt;code>int&lt;/code> members, each a constant corresponding to one of&#xA; * the &lt;code>CompletionStatus&lt;/code> instances.  These &lt;code>int&lt;/code>&#xA; * members make it possible to use a &lt;code>switch&lt;/code> statement.&#xA; * &lt;P>&#xA; * The class also contains two methods:&#xA; * &lt;UL>&#xA; * &lt;LI>&lt;code>public int &lt;bold>value&lt;/bold>()&lt;/code> -- which accesses the&#xA; * &lt;code>value&lt;/code> field of a &lt;code>CompletionStatus&lt;/code> object&#xA; * &lt;LI>&lt;code>public static CompletionStatus&#xA; * &lt;bold>from_int&lt;/bold>(int i)&lt;/code> --&#xA; * for creating an instance from one of the &lt;code>int&lt;/code> members&#xA; * &lt;/UL>&#xA; * @version %I, %G&#xA; * @see     org.omg.CORBA.SystemException&#xA; * @since   JDK1.2&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Final"/>
    <implements xsi:type="types:NamespaceClassifierReference">
      <namespaces>org</namespaces>
      <namespaces>omg</namespaces>
      <namespaces>CORBA</namespaces>
      <namespaces>portable</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="portable/IDLEntity.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
