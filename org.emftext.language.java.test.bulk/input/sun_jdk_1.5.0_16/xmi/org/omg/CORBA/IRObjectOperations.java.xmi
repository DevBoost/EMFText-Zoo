<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/types ../../../java.ecore#/16" name="IRObjectOperations.java">
  <comments>/*&#xA; * @(#)IRObjectOperations.java&#x9;1.13 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>omg</namespaces>
  <namespaces>CORBA</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="IRObjectOperations">
    <members xsi:type="members:InterfaceMethod" name="def_kind">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <comments>// read interface</comments>
        <comments>/**&#xA;     * Returns the &lt;code>DefinitionKind&lt;/code> corresponding to this Interface Repository object.&#xA;     * @return the &lt;code>DefinitionKind&lt;/code> corresponding to this Interface Repository object.&#xA;     */</comments>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CORBA</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="DefinitionKind.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="destroy">
      <typeReference xsi:type="types:Void">
        <comments>// write interface</comments>
        <comments>/**&#xA;     * Destroys this object. If the object is a Container,&#xA;     * this method is applied to all its contents. If the object contains an IDLType&#xA;     * attribute for an anonymous type, that IDLType is destroyed.&#xA;     * If the object is currently contained in some other object, it is removed.&#xA;     * If the method is invoked on a &lt;code>Repository&lt;/code> or on a &lt;code>PrimitiveDef&lt;/code>&#xA;     * then the &lt;code>BAD_INV_ORDER&lt;/code> exception is raised with minor value 2.&#xA;     * An attempt to destroy an object that would leave the repository in an&#xA;     * incoherent state causes &lt;code>BAD_INV_ORDER&lt;/code> exception to be raised&#xA;     * with the minor code 1.&#xA;     * @exception BAD_INV_ORDER if this method is invoked on a repository or&#xA;     *            &lt;code>PrimitiveDef&lt;/code>, or if an attempt to destroy an&#xA;     *            object would leave the repository in an incoherent state&#xA;     */</comments>
      </typeReference>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA;* The interface for &lt;tt>IRObject&lt;/tt>.  For more information on &#xA;* Operations interfaces, see &lt;a href=&quot;doc-files/generatedfiles.html#operations&quot;>&#xA;* &quot;Generated Files: Operations files&quot;&lt;/a>.&#xA;*/</comments>
      <comments>/*&#xA; tempout/org/omg/CORBA/IRObjectOperations.java&#xA; Generated by the IBM IDL-to-Java compiler, version 1.0&#xA; from ../../Lib/ir.idl&#xA; Thursday, February 25, 1999 2:11:21 o'clock PM PST&#xA;*/</comments>
      <comments>/**&#xA; * This is the Operations interface for the mapping from &lt;tt>IRObject&lt;/tt>.&#xA; * Several interfaces are used as base interfaces for objects in &#xA; * the Interface Repository (IR). These base interfaces are not instantiable.&#xA; * A common set of operations is used to locate objects within the &#xA; * Interface Repository. Some of these operations are defined in &#xA; * the IRObject. All IR objects inherit from the IRObject interface, &#xA; * which provides an operation for identifying the actual type of &#xA; * the object. (The IDL base interface IRObject represents the most &#xA; * generic interface from which all other Interface Repository interfaces &#xA; * are derived, even the Repository itself.) All java implementations of &#xA; * IR objects must implement the IRObjectOperations interface.&#xA; * @see IDLTypeOperations&#xA; * @see IDLType&#xA; * @see IRObject&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
