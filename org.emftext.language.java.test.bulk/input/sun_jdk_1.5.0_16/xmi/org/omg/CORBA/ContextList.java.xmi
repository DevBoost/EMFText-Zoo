<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="ContextList.java">
  <comments>/*&#xA; * @(#)ContextList.java&#x9;1.24 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>omg</namespaces>
  <namespaces>CORBA</namespaces>
  <classifiers xsi:type="classifiers:Class" name="ContextList">
    <members xsi:type="members:InterfaceMethod" name="count">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the number of &lt;code>String&lt;/code> objects in this&#xA;     * &lt;code>ContextList&lt;/code> object.&#xA;     *&#xA;     * @return&#x9;&#x9;&#x9;an &lt;code>int&lt;/code> representing the number of&#xA;     * &lt;code>String&lt;/code>s in this &lt;code>ContextList&lt;/code> object&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="add">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ctx">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Adds a &lt;code>String&lt;/code> object to this &lt;code>ContextList&lt;/code>&#xA;     * object.&#xA;     *&#xA;     * @param ctx&#x9;&#x9;the &lt;code>String&lt;/code> object to be added&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="item">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="index">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CORBA</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Bounds.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the &lt;code>String&lt;/code> object at the given index.&#xA;     *&#xA;     * @param index&#x9;&#x9;the index of the string desired, with 0 being the&#xA;     index of the first string&#xA;     * @return&#x9;&#x9;&#x9;the string at the given index&#xA;     * @exception org.omg.CORBA.Bounds  if the index is greater than&#xA;     *&#x9;&#x9;&#x9;&#x9;or equal to the number of strings in this&#xA;     *                &lt;code>ContextList&lt;/code> object&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="remove">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="index">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CORBA</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Bounds.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Removes the &lt;code>String&lt;/code> object at the given index. Note that&#xA;     * the indices of all strings following the one removed are&#xA;     * shifted down by one.&#xA;     *&#xA;     * @param index&#x9;the index of the &lt;code>String&lt;/code> object to be removed,&#xA;     *                with 0 designating the first string&#xA;     * @exception org.omg.CORBA.Bounds  if the index is greater than&#xA;     *&#x9;&#x9;&#x9;&#x9;or equal to the number of &lt;code>String&lt;/code> objects in&#xA;     *                this &lt;code>ContextList&lt;/code> object&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * An object containing a modifiable list of &lt;code>String&lt;/code> objects&#xA; * that represent property names.&#xA; * This class is used in &lt;code>Request&lt;/code> operations to&#xA; * describe the contexts that need to be resolved and sent with the&#xA; * invocation.  (A context is resolved by giving a property name&#xA; * and getting back the value associated with it.)  This is done&#xA; * by calling the &lt;code>Context&lt;/code> method&#xA; * &lt;code>get_values&lt;/code> and supplying a string from a&#xA; * &lt;code>ContextList&lt;/code> object as the third parameter.&#xA; * The method &lt;code>get_values&lt;/code> returns an &lt;code>NVList&lt;/code>&#xA; * object containing the &lt;code>NamedValue&lt;/code> objects that hold&#xA; * the value(s) identified by the given string.&#xA; * &lt;P>&#xA; * A &lt;code>ContextList&lt;/code> object is created by the ORB, as&#xA; * illustrated here:&#xA; * &lt;PRE>&#xA; *   ORB orb = ORB.init(args, null);&#xA; *   org.omg.CORBA.ContextList ctxList = orb.create_context_list();&#xA; * &lt;/PRE>&#xA; * The variable &lt;code>ctxList&lt;/code> represents an empty&#xA; * &lt;code>ContextList&lt;/code> object.  Strings are added to&#xA; * the list with the method &lt;code>add&lt;/code>, accessed&#xA; * with the method &lt;code>item&lt;/code>, and removed with the&#xA; * method &lt;code>remove&lt;/code>.&#xA; *&#xA; * @see Context&#xA; * @version 1.2, 09/09/97&#xA; * @since   JDK1.2&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
  </classifiers>
</containers:CompilationUnit>
