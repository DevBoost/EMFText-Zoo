<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/types ../../../java.ecore#/16" name="ClientRequestInfo.java">
  <namespaces>org</namespaces>
  <namespaces>omg</namespaces>
  <namespaces>PortableInterceptor</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="ClientRequestInfo">
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xD;&#xA;* org/omg/PortableInterceptor/ClientRequestInfo.java .&#xD;&#xA;* Generated by the IDL-to-Java compiler (portable), version &quot;3.2&quot;&#xD;&#xA;* from ../../../../src/share/classes/org/omg/PortableInterceptor/Interceptors.idl&#xD;&#xA;* Wednesday, May 28, 2008 8:37:40 AM GMT&#xD;&#xA;*/</comments>
      <comments>/**&#xA;   * Request Information, accessible to client-side request interceptors.&#xA;   * &lt;p>&#xA;   * Some attributes and operations on &lt;code>ClientRequestInfo&lt;/code> are &#xA;   * not valid at all interception points.  The following table shows the &#xA;   * validity of each attribute or operation.  If it is not valid, attempting &#xA;   * to access it will result in a &lt;code>BAD_INV_ORDER&lt;/code> being thrown&#xA;   * with a standard minor code of 14.&#xA;   * &lt;p>&#xA;   *&#xA;   * &lt;table border=1 summary=&quot;Shows the validity of each attribute or operation&quot;>&#xA;   *  &lt;thead>&#xA;   *    &lt;tr>&#xA;   *      &lt;th>&amp;nbsp;&lt;/th>&#xA;   *      &lt;th id=&quot;send_req&quot;>send_request&lt;/th>&#xA;   *      &lt;th id=&quot;send_poll&quot;>send_poll&lt;/th>&#xA;   *      &lt;th id=&quot;rec_reply&quot;>receive_reply&lt;/th>&#xA;   *      &lt;th id=&quot;rec_ex&quot;>receive_exception&lt;/th>&#xA;   *      &lt;th id=&quot;rec_oth&quot;>receive_other&lt;/th>&#xA;   *    &lt;/tr>&#xA;   *  &lt;/thead>&#xA;   *  &lt;tbody>&#xA;   *&#xA;   *  &lt;tr>&#xA;   *     &lt;td id=&quot;ri&quot; colspan=6>&lt;i>Inherited from RequestInfo:&lt;/i>&lt;/td>&#xA;   *  &lt;/tr>&#xA;   * &#xA;   *  &lt;tr>&lt;th id=&quot;req_id&quot;>&lt;p align=&quot;left&quot;>request_id&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri req_id send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri req_id send_poll&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri req_id rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri req_id rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri req_id rec_oth&quot;>yes&lt;/td>&lt;/tr>&#xA;   * &#xA;   *  &lt;tr>&lt;th id=&quot;op&quot;>&lt;p align=&quot;left&quot;>operation&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri op send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri op send_poll&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri op rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri op rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri op rec_oth&quot;>yes&lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;arg&quot;>&lt;p align=&quot;left&quot;>arguments&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri arg send_req&quot;>yes&lt;sub>1&lt;/sub>&lt;/td>&#xA;   *  &lt;td headers=&quot;ri arg send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri arg rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri arg rec_ex&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri arg rec_oth&quot;>no &lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;exc&quot;>&lt;p align=&quot;left&quot;>exceptions&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri exc send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri exc send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri exc rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri exc rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri exc rec_oth&quot;>yes&lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;con&quot;>&lt;p align=&quot;left&quot;>contexts&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri con send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri con send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri con rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri con rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri con rec_oth&quot;>yes&lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;op_con&quot;>&lt;p align=&quot;left&quot;>operation_context&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri op_con send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri op_con send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri op_con rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri op_con rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri op_con rec_oth&quot;>yes&lt;/td>&#xA;   *  &lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;result&quot;>&lt;p align=&quot;left&quot;>result&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri result send_req&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri result send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri result rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri result rec_ex&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri result rec_oth&quot;>no &lt;/td>&#xA;   *  &lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;res_exp&quot;>&lt;p align=&quot;left&quot;>response_expected&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri res_exp send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri res_exp send_poll&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri res_exp rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri res_exp rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri res_exp rec_oth&quot;>yes&lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;sync_sco&quot;>&lt;p align=&quot;left&quot;>sync_scope&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri sync_sco send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri sync_sco send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri sync_sco rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri sync_sco rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri sync_sco rec_oth&quot;>yes&lt;/td>&#xA;   *  &lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;rep_stat&quot;>&lt;p align=&quot;left&quot;>reply_status&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri rep_stat send_req&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri rep_stat send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri rep_stat rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri rep_stat rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri rep_stat rec_oth&quot;>yes&lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;for_ref&quot;>&lt;p align=&quot;left&quot;>forward_reference&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri for_ref send_req&quot;>no &lt;/td>&#xA;   *  &lt;td headers=&quot;ri for_ref send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri for_ref rec_reply&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri for_ref rec_ex&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri for_ref rec_oth&quot;>yes&lt;sub>2&lt;/sub>&#xA;   *  &lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;get_slot&quot;>&lt;p align=&quot;left&quot;>get_slot&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri get_slot send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri get_slot send_poll&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri get_slot rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri get_slot rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri get_slot rec_oth&quot;>yes&lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;grsc&quot;>&lt;p align=&quot;left&quot;>get_request_service_context&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri grsc send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri grsc send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri grsc rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri grsc rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri grsc rec_oth&quot;>yes&lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;gpsc&quot;>&lt;p align=&quot;left&quot;>get_reply_service_context&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;ri gpsc send_req&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri gpsc send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;ri gpsc rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri gpsc rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;ri gpsc rec_oth&quot;>yes&lt;/td>&#xA;   *  &lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&#xA;   *    &lt;td id=&quot;cri&quot; colspan=6>&lt;i>ClientRequestInfo-specific:&lt;/i>&lt;/td>&#xA;   *  &lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;target&quot;>&lt;p align=&quot;left&quot;>target&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;cri target send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri target send_poll&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri target rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri target rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri target rec_oth&quot;>yes&lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;eftarget&quot;>&lt;p align=&quot;left&quot;>effective_target&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;cri eftarget send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri eftarget send_poll&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri eftarget rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri eftarget rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri eftarget rec_oth&quot;>yes&lt;/td>&#xA;   *  &lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;efprof&quot;>&lt;p align=&quot;left&quot;>effective_profile&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;cri efprof send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri efprof send_poll&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri efprof rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri efprof rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri efprof rec_oth&quot;>yes&lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;rxp&quot;>&lt;p align=&quot;left&quot;>received_exception&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;cri rxp send_req&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;cri rxp send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;cri rxp rec_reply&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;cri rxp rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri rxp rec_oth&quot;>no &lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;rei&quot;>&lt;p align=&quot;left&quot;>received_exception_id&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;cri rei send_req&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;cri rei send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;cri rei rec_reply&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;cri rei rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri rei rec_oth&quot;>no &lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;gec&quot;>&lt;p align=&quot;left&quot;>get_effective_component&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;cri gec send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri gec send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;cri gec rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri gec rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri gec rec_oth&quot;>yes&lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;gecs&quot;>&lt;p align=&quot;left&quot;>get_effective_components&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;cri gecs send_req&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri gecs send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;cri gecs rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri gecs rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri gecs rec_oth&quot;>yes&lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;grpcy&quot;>&lt;p align=&quot;left&quot;>get_request_policy&lt;/p>&lt;/th>&#xA;   *  &lt;td headers=&quot;cri grpcy send_req&quot;>yes&lt;/td>&#xA;   *  &lt;td headers=&quot;cri grpcy send_poll&quot;>no &lt;/td> &#xA;   *  &lt;td headers=&quot;cri grpcy rec_reply&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri grpcy rec_ex&quot;>yes&lt;/td> &#xA;   *  &lt;td headers=&quot;cri grpcy rec_oth&quot;>yes&lt;/td>&lt;/tr>&#xA;   *&#xA;   *  &lt;tr>&lt;th id=&quot;arsc&quot;>&lt;p align=&quot;left&quot;>add_request_service_context&lt;/p>&lt;/th>&#xA;   *    &lt;td headers=&quot;cri arsc send_req&quot;>yes&lt;/td> &#xA;   *    &lt;td headers=&quot;cri arsc send_poll&quot;>no &lt;/td> &#xA;   *    &lt;td headers=&quot;cri arsc rec_reply&quot;>no &lt;/td> &#xA;   *    &lt;td headers=&quot;cri arsc rec_ex&quot;>no &lt;/td> &#xA;   *    &lt;td headers=&quot;cri arsc rec_oth&quot;>no &lt;/td>&lt;/tr>&#xA;   *&#xA;   *   &lt;/tbody>&#xA;   * &lt;/table>&#xA;   *&#xA;   * &lt;ol>&#xA;   *   &lt;li>When &lt;code>ClientRequestInfo&lt;/code> is passed to &#xA;   *       &lt;code>send_request&lt;/code>, there is an entry in the list for every &#xA;   *       argument, whether in, inout, or out.  But only the in and inout &#xA;   *       arguments will be available.&lt;/li>&#xA;   *   &lt;li>If the &lt;code>reply_status&lt;/code> atribute is not &#xA;   *       &lt;code>LOCATION_FORWARD&lt;/code>, accessing this attribute will &#xA;   *       throw &lt;code>BAD_INV_ORDER&lt;/code> with a standard minor code of &#xA;   *       14.&lt;/li>&#xA;   * &lt;/ol>&#xA;   *&#xA;   * @see ClientRequestInterceptor&#xA;   */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="ClientRequestInfoOperations.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
    <extends xsi:type="types:NamespaceClassifierReference">
      <namespaces>org</namespaces>
      <namespaces>omg</namespaces>
      <namespaces>PortableInterceptor</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="RequestInfo.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
    <extends xsi:type="types:NamespaceClassifierReference">
      <namespaces>org</namespaces>
      <namespaces>omg</namespaces>
      <namespaces>CORBA</namespaces>
      <namespaces>portable</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../CORBA/portable/IDLEntity.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
