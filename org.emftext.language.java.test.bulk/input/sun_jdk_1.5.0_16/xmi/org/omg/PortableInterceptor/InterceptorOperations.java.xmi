<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/types ../../../java.ecore#/16" name="InterceptorOperations.java">
  <namespaces>org</namespaces>
  <namespaces>omg</namespaces>
  <namespaces>PortableInterceptor</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="InterceptorOperations">
    <members xsi:type="members:InterfaceMethod" name="name">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Returns the name of the interceptor.&#xA;     * &lt;p>&#xA;     * Each Interceptor may have a name that may be used administratively &#xA;     * to order the lists of Interceptors. Only one Interceptor of a given &#xA;     * name can be registered with the ORB for each Interceptor type. An &#xA;     * Interceptor may be anonymous, i.e., have an empty string as the name &#xA;     * attribute. Any number of anonymous Interceptors may be registered with &#xA;     * the ORB.&#xA;     *&#xA;     * @return the name of the interceptor.&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="destroy">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Provides an opportunity to destroy this interceptor.&#xA;     * The destroy method is called during &lt;code>ORB.destroy&lt;/code>. When an &#xA;     * application calls &lt;code>ORB.destroy&lt;/code>, the ORB:&#xA;     * &lt;ol>&#xA;     *   &lt;li>waits for all requests in progress to complete&lt;/li>&#xA;     *   &lt;li>calls the &lt;code>Interceptor.destroy&lt;/code> operation for each &#xA;     *       interceptor&lt;/li>&#xA;     *   &lt;li>completes destruction of the ORB&lt;/li>&#xA;     * &lt;/ol>&#xA;     * Method invocations from within &lt;code>Interceptor.destroy&lt;/code> on &#xA;     * object references for objects implemented on the ORB being destroyed &#xA;     * result in undefined behavior. However, method invocations on objects &#xA;     * implemented on an ORB other than the one being destroyed are &#xA;     * permitted. (This means that the ORB being destroyed is still capable &#xA;     * of acting as a client, but not as a server.) &#xA;     */</comments>
      </typeReference>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xD;&#xA;* org/omg/PortableInterceptor/InterceptorOperations.java .&#xD;&#xA;* Generated by the IDL-to-Java compiler (portable), version &quot;3.2&quot;&#xD;&#xA;* from ../../../../src/share/classes/org/omg/PortableInterceptor/Interceptors.idl&#xD;&#xA;* Wednesday, May 28, 2008 8:37:40 AM GMT&#xD;&#xA;*/</comments>
      <comments>/**&#xA;   * All Portable Interceptors implement Interceptor.&#xA;   */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
