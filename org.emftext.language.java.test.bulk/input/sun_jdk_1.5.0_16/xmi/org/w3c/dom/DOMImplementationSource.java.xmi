<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="DOMImplementationSource.java">
  <comments>/*&#xA; * Copyright (c) 2004 World Wide Web Consortium,&#xA; *&#xA; * (Massachusetts Institute of Technology, European Research Consortium for&#xA; * Informatics and Mathematics, Keio University). All Rights Reserved. This&#xA; * work is distributed under the W3C(r) Software License [1] in the hope that&#xA; * it will be useful, but WITHOUT ANY WARRANTY; without even the implied&#xA; * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&#xA; *&#xA; * [1] http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>w3c</namespaces>
  <namespaces>dom</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="DOMImplementationSource">
    <members xsi:type="members:InterfaceMethod" name="getDOMImplementation">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="DOMImplementation.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="features">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     *  A method to request the first DOM implementation that supports the &#xA;     * specified features. &#xA;     * @param features  A string that specifies which features and versions &#xA;     *   are required. This is a space separated list in which each feature &#xA;     *   is specified by its name optionally followed by a space and a &#xA;     *   version number.  This method returns the first item of the list &#xA;     *   returned by &lt;code>getDOMImplementationList&lt;/code>.  As an example, &#xA;     *   the string &lt;code>&quot;XML 3.0 Traversal +Events 2.0&quot;&lt;/code> will &#xA;     *   request a DOM implementation that supports the module &quot;XML&quot; for its &#xA;     *   3.0 version, a module that support of the &quot;Traversal&quot; module for &#xA;     *   any version, and the module &quot;Events&quot; for its 2.0 version. The &#xA;     *   module &quot;Events&quot; must be accessible using the method &#xA;     *   &lt;code>Node.getFeature()&lt;/code> and &#xA;     *   &lt;code>DOMImplementation.getFeature()&lt;/code>. &#xA;     * @return The first DOM implementation that support the desired &#xA;     *   features, or &lt;code>null&lt;/code> if this source has none.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getDOMImplementationList">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="DOMImplementationList.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="features">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * A method to request a list of DOM implementations that support the &#xA;     * specified features and versions, as specified in .&#xA;     * @param features A string that specifies which features and versions &#xA;     *   are required. This is a space separated list in which each feature &#xA;     *   is specified by its name optionally followed by a space and a &#xA;     *   version number. This is something like: &quot;XML 3.0 Traversal +Events &#xA;     *   2.0&quot;&#xA;     * @return A list of DOM implementations that support the desired &#xA;     *   features.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This interface permits a DOM implementer to supply one or more &#xA; * implementations, based upon requested features and versions, as specified &#xA; * in . Each implemented &lt;code>DOMImplementationSource&lt;/code> object is &#xA; * listed in the binding-specific list of available sources so that its &#xA; * &lt;code>DOMImplementation&lt;/code> objects are made available.&#xA; * &lt;p>See also the &lt;a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification&lt;/a>.&#xA; * @since DOM Level 3&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
