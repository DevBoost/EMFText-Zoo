<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/types ../../../java.ecore#/16" name="DocumentFragment.java">
  <comments>/*&#xA; * Copyright (c) 2004 World Wide Web Consortium,&#xA; *&#xA; * (Massachusetts Institute of Technology, European Research Consortium for&#xA; * Informatics and Mathematics, Keio University). All Rights Reserved. This&#xA; * work is distributed under the W3C(r) Software License [1] in the hope that&#xA; * it will be useful, but WITHOUT ANY WARRANTY; without even the implied&#xA; * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&#xA; *&#xA; * [1] http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>w3c</namespaces>
  <namespaces>dom</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="DocumentFragment">
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;code>DocumentFragment&lt;/code> is a &quot;lightweight&quot; or &quot;minimal&quot; &#xA; * &lt;code>Document&lt;/code> object. It is very common to want to be able to &#xA; * extract a portion of a document's tree or to create a new fragment of a &#xA; * document. Imagine implementing a user command like cut or rearranging a &#xA; * document by moving fragments around. It is desirable to have an object &#xA; * which can hold such fragments and it is quite natural to use a Node for &#xA; * this purpose. While it is true that a &lt;code>Document&lt;/code> object could &#xA; * fulfill this role, a &lt;code>Document&lt;/code> object can potentially be a &#xA; * heavyweight object, depending on the underlying implementation. What is &#xA; * really needed for this is a very lightweight object. &#xA; * &lt;code>DocumentFragment&lt;/code> is such an object.&#xA; * &lt;p>Furthermore, various operations -- such as inserting nodes as children &#xA; * of another &lt;code>Node&lt;/code> -- may take &lt;code>DocumentFragment&lt;/code> &#xA; * objects as arguments; this results in all the child nodes of the &#xA; * &lt;code>DocumentFragment&lt;/code> being moved to the child list of this node.&#xA; * &lt;p>The children of a &lt;code>DocumentFragment&lt;/code> node are zero or more &#xA; * nodes representing the tops of any sub-trees defining the structure of &#xA; * the document. &lt;code>DocumentFragment&lt;/code> nodes do not need to be &#xA; * well-formed XML documents (although they do need to follow the rules &#xA; * imposed upon well-formed XML parsed entities, which can have multiple top &#xA; * nodes). For example, a &lt;code>DocumentFragment&lt;/code> might have only one &#xA; * child and that child node could be a &lt;code>Text&lt;/code> node. Such a &#xA; * structure model represents neither an HTML document nor a well-formed XML &#xA; * document.&#xA; * &lt;p>When a &lt;code>DocumentFragment&lt;/code> is inserted into a &#xA; * &lt;code>Document&lt;/code> (or indeed any other &lt;code>Node&lt;/code> that may &#xA; * take children) the children of the &lt;code>DocumentFragment&lt;/code> and not &#xA; * the &lt;code>DocumentFragment&lt;/code> itself are inserted into the &#xA; * &lt;code>Node&lt;/code>. This makes the &lt;code>DocumentFragment&lt;/code> very &#xA; * useful when the user wishes to create nodes that are siblings; the &#xA; * &lt;code>DocumentFragment&lt;/code> acts as the parent of these nodes so that &#xA; * the user can use the standard methods from the &lt;code>Node&lt;/code> &#xA; * interface, such as &lt;code>Node.insertBefore&lt;/code> and &#xA; * &lt;code>Node.appendChild&lt;/code>.&#xA; * &lt;p>See also the &lt;a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification&lt;/a>.&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="Node.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
