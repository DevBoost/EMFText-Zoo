<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="CharacterData.java">
  <comments>/*&#xA; * Copyright (c) 2004 World Wide Web Consortium,&#xA; *&#xA; * (Massachusetts Institute of Technology, European Research Consortium for&#xA; * Informatics and Mathematics, Keio University). All Rights Reserved. This&#xA; * work is distributed under the W3C(r) Software License [1] in the hope that&#xA; * it will be useful, but WITHOUT ANY WARRANTY; without even the implied&#xA; * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&#xA; *&#xA; * [1] http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>w3c</namespaces>
  <namespaces>dom</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="CharacterData">
    <members xsi:type="members:InterfaceMethod" name="getData">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The character data of the node that implements this interface. The DOM &#xA;     * implementation may not put arbitrary limits on the amount of data &#xA;     * that may be stored in a &lt;code>CharacterData&lt;/code> node. However, &#xA;     * implementation limits may mean that the entirety of a node's data may &#xA;     * not fit into a single &lt;code>DOMString&lt;/code>. In such cases, the user &#xA;     * may call &lt;code>substringData&lt;/code> to retrieve the data in &#xA;     * appropriately sized pieces.&#xA;     * @exception DOMException&#xA;     *   DOMSTRING_SIZE_ERR: Raised when it would return more characters than &#xA;     *   fit in a &lt;code>DOMString&lt;/code> variable on the implementation &#xA;     *   platform.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setData">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="data">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The character data of the node that implements this interface. The DOM &#xA;     * implementation may not put arbitrary limits on the amount of data &#xA;     * that may be stored in a &lt;code>CharacterData&lt;/code> node. However, &#xA;     * implementation limits may mean that the entirety of a node's data may &#xA;     * not fit into a single &lt;code>DOMString&lt;/code>. In such cases, the user &#xA;     * may call &lt;code>substringData&lt;/code> to retrieve the data in &#xA;     * appropriately sized pieces.&#xA;     * @exception DOMException&#xA;     *   NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getLength">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The number of 16-bit units that are available through &lt;code>data&lt;/code> &#xA;     * and the &lt;code>substringData&lt;/code> method below. This may have the &#xA;     * value zero, i.e., &lt;code>CharacterData&lt;/code> nodes may be empty.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="substringData">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="offset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="count">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Extracts a range of data from the node.&#xA;     * @param offset Start offset of substring to extract.&#xA;     * @param count The number of 16-bit units to extract.&#xA;     * @return The specified substring. If the sum of &lt;code>offset&lt;/code> and &#xA;     *   &lt;code>count&lt;/code> exceeds the &lt;code>length&lt;/code>, then all 16-bit &#xA;     *   units to the end of the data are returned.&#xA;     * @exception DOMException&#xA;     *   INDEX_SIZE_ERR: Raised if the specified &lt;code>offset&lt;/code> is &#xA;     *   negative or greater than the number of 16-bit units in &#xA;     *   &lt;code>data&lt;/code>, or if the specified &lt;code>count&lt;/code> is &#xA;     *   negative.&#xA;     *   &lt;br>DOMSTRING_SIZE_ERR: Raised if the specified range of text does &#xA;     *   not fit into a &lt;code>DOMString&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="appendData">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="arg">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Append the string to the end of the character data of the node. Upon &#xA;     * success, &lt;code>data&lt;/code> provides access to the concatenation of &#xA;     * &lt;code>data&lt;/code> and the &lt;code>DOMString&lt;/code> specified.&#xA;     * @param arg The &lt;code>DOMString&lt;/code> to append.&#xA;     * @exception DOMException&#xA;     *   NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="insertData">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="offset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="arg">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Insert a string at the specified 16-bit unit offset.&#xA;     * @param offset The character offset at which to insert.&#xA;     * @param arg The &lt;code>DOMString&lt;/code> to insert.&#xA;     * @exception DOMException&#xA;     *   INDEX_SIZE_ERR: Raised if the specified &lt;code>offset&lt;/code> is &#xA;     *   negative or greater than the number of 16-bit units in &#xA;     *   &lt;code>data&lt;/code>.&#xA;     *   &lt;br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="deleteData">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="offset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="count">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Remove a range of 16-bit units from the node. Upon success, &#xA;     * &lt;code>data&lt;/code> and &lt;code>length&lt;/code> reflect the change.&#xA;     * @param offset The offset from which to start removing.&#xA;     * @param count The number of 16-bit units to delete. If the sum of &#xA;     *   &lt;code>offset&lt;/code> and &lt;code>count&lt;/code> exceeds &#xA;     *   &lt;code>length&lt;/code> then all 16-bit units from &lt;code>offset&lt;/code> &#xA;     *   to the end of the data are deleted.&#xA;     * @exception DOMException&#xA;     *   INDEX_SIZE_ERR: Raised if the specified &lt;code>offset&lt;/code> is &#xA;     *   negative or greater than the number of 16-bit units in &#xA;     *   &lt;code>data&lt;/code>, or if the specified &lt;code>count&lt;/code> is &#xA;     *   negative.&#xA;     *   &lt;br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="replaceData">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="offset">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="count">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="arg">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Replace the characters starting at the specified 16-bit unit offset &#xA;     * with the specified string.&#xA;     * @param offset The offset from which to start replacing.&#xA;     * @param count The number of 16-bit units to replace. If the sum of &#xA;     *   &lt;code>offset&lt;/code> and &lt;code>count&lt;/code> exceeds &#xA;     *   &lt;code>length&lt;/code>, then all 16-bit units to the end of the data &#xA;     *   are replaced; (i.e., the effect is the same as a &lt;code>remove&lt;/code>&#xA;     *    method call with the same range, followed by an &lt;code>append&lt;/code>&#xA;     *    method invocation).&#xA;     * @param arg The &lt;code>DOMString&lt;/code> with which the range must be &#xA;     *   replaced.&#xA;     * @exception DOMException&#xA;     *   INDEX_SIZE_ERR: Raised if the specified &lt;code>offset&lt;/code> is &#xA;     *   negative or greater than the number of 16-bit units in &#xA;     *   &lt;code>data&lt;/code>, or if the specified &lt;code>count&lt;/code> is &#xA;     *   negative.&#xA;     *   &lt;br>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The &lt;code>CharacterData&lt;/code> interface extends Node with a set of &#xA; * attributes and methods for accessing character data in the DOM. For &#xA; * clarity this set is defined here rather than on each object that uses &#xA; * these attributes and methods. No DOM objects correspond directly to &#xA; * &lt;code>CharacterData&lt;/code>, though &lt;code>Text&lt;/code> and others do &#xA; * inherit the interface from it. All &lt;code>offsets&lt;/code> in this interface &#xA; * start from &lt;code>0&lt;/code>.&#xA; * &lt;p>As explained in the &lt;code>DOMString&lt;/code> interface, text strings in &#xA; * the DOM are represented in UTF-16, i.e. as a sequence of 16-bit units. In &#xA; * the following, the term 16-bit units is used whenever necessary to &#xA; * indicate that indexing on CharacterData is done in 16-bit units.&#xA; * &lt;p>See also the &lt;a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification&lt;/a>.&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="Node.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
