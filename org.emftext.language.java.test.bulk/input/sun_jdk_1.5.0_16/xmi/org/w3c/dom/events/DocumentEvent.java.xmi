<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../java.ecore#/16" name="DocumentEvent.java">
  <comments>/*&#xA; * Copyright (c) 2000 World Wide Web Consortium,&#xA; * (Massachusetts Institute of Technology, Institut National de&#xA; * Recherche en Informatique et en Automatique, Keio University). All&#xA; * Rights Reserved. This program is distributed under the W3C's Software&#xA; * Intellectual Property License. This program is distributed in the&#xA; * hope that it will be useful, but WITHOUT ANY WARRANTY; without even&#xA; * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR&#xA; * PURPOSE.&#xA; * See W3C License http://www.w3.org/Consortium/Legal/ for more details.&#xA; */</comments>
  <namespaces>org</namespaces>
  <namespaces>w3c</namespaces>
  <namespaces>dom</namespaces>
  <namespaces>events</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Class" href="../DOMException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="DocumentEvent">
    <members xsi:type="members:InterfaceMethod" name="createEvent">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="Event.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="eventType">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &#xA;     * @param eventTypeThe &lt;code>eventType&lt;/code> parameter specifies the &#xA;     *   type of &lt;code>Event&lt;/code> interface to be created. If the &#xA;     *   &lt;code>Event&lt;/code> interface specified is supported by the &#xA;     *   implementation this method will return a new &lt;code>Event&lt;/code> of &#xA;     *   the interface type requested. If the &lt;code>Event&lt;/code> is to be &#xA;     *   dispatched via the &lt;code>dispatchEvent&lt;/code> method the &#xA;     *   appropriate event init method must be called after creation in &#xA;     *   order to initialize the &lt;code>Event&lt;/code>'s values. As an example, &#xA;     *   a user wishing to synthesize some kind of &lt;code>UIEvent&lt;/code> &#xA;     *   would call &lt;code>createEvent&lt;/code> with the parameter &quot;UIEvents&quot;. &#xA;     *   The &lt;code>initUIEvent&lt;/code> method could then be called on the &#xA;     *   newly created &lt;code>UIEvent&lt;/code> to set the specific type of &#xA;     *   UIEvent to be dispatched and set its context information.The &#xA;     *   &lt;code>createEvent&lt;/code> method is used in creating &#xA;     *   &lt;code>Event&lt;/code>s when it is either inconvenient or unnecessary &#xA;     *   for the user to create an &lt;code>Event&lt;/code> themselves. In cases &#xA;     *   where the implementation provided &lt;code>Event&lt;/code> is &#xA;     *   insufficient, users may supply their own &lt;code>Event&lt;/code> &#xA;     *   implementations for use with the &lt;code>dispatchEvent&lt;/code> method.&#xA;     * @return The newly created &lt;code>Event&lt;/code>&#xA;     * @exception DOMException&#xA;     *   NOT_SUPPORTED_ERR: Raised if the implementation does not support the &#xA;     *   type of &lt;code>Event&lt;/code> interface requested&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; *  The &lt;code>DocumentEvent&lt;/code> interface provides a mechanism by which the &#xA; * user can create an Event of a type supported by the implementation. It is &#xA; * expected that the &lt;code>DocumentEvent&lt;/code> interface will be &#xA; * implemented on the same object which implements the &lt;code>Document&lt;/code> &#xA; * interface in an implementation which supports the Event model. &#xA; * &lt;p>See also the &lt;a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113'>Document Object Model (DOM) Level 2 Events Specification&lt;/a>.&#xA; * @since DOM Level 2&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
