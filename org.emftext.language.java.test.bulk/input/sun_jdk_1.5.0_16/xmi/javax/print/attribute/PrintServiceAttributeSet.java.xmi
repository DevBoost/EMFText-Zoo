<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="PrintServiceAttributeSet.java">
  <comments>/*&#xA; * @(#)PrintServiceAttributeSet.java&#x9;1.5 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>print</namespaces>
  <namespaces>attribute</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="PrintServiceAttributeSet">
    <members xsi:type="members:InterfaceMethod" name="add">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="attribute">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="Attribute.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Adds the specified attribute value to this attribute set if it is not &#xA;     * already present, first removing any existing value in the same  &#xA;     * attribute category as the specified attribute value (optional&#xA;     * operation).&#xA;     *&#xA;     * @param  attribute  Attribute value to be added to this attribute set.&#xA;     *&#xA;     * @return  &lt;tt>true&lt;/tt> if this attribute set changed as a result of&#xA;     *          the call, i.e., the given attribute value was not already a &#xA;     *          member of this attribute set. &#xA;     * &#xA;     * @throws  UnmodifiableSetException&#xA;     *     (unchecked exception) Thrown if this attribute set does not &#xA;     *     support the &lt;CODE>add()&lt;/CODE> operation.&#xA;     * @throws  ClassCastException&#xA;     *     (unchecked exception) Thrown if the &lt;CODE>attribute&lt;/CODE> is  &#xA;     *     not an instance of interface&#xA;     *     {@link PrintServiceAttribute PrintServiceAttribute}. &#xA;     * @throws  NullPointerException&#xA;     *    (unchecked exception) Thrown if the &lt;CODE>attribute&lt;/CODE> is null. &#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="addAll">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="attributes">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="AttributeSet.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Adds all of the elements in the specified set to this attribute.&#xA;     * The outcome is  the same as if the&#xA;     * {@link #add(Attribute) &lt;CODE>add(Attribute)&lt;/CODE>} &#xA;     * operation had been applied to this attribute set successively with&#xA;     * each element from the specified set. If none of the categories in the&#xA;     * specified set  are the same as any categories in this attribute set, &#xA;     * the &lt;tt>addAll()&lt;/tt> operation effectively modifies this attribute&#xA;     * set so that its value is the &lt;i>union&lt;/i> of the two sets. &#xA;     * &lt;P>&#xA;     * The behavior of the &lt;CODE>addAll()&lt;/CODE> operation is unspecified if  &#xA;     * the specified set is modified while the operation is in progress.&#xA;     * &lt;P>&#xA;     * If the &lt;CODE>addAll()&lt;/CODE> operation throws an exception, the effect&#xA;     * on this attribute set's state is implementation dependent; elements  &#xA;     * from the specified set before the point of the exception may or &#xA;     * may not have been added to this attribute set. &#xA;     *&#xA;     * @param  attributes  whose elements are to be added to this attribute &#xA;     *            set.&#xA;     *&#xA;     * @return  &lt;tt>true&lt;/tt> if this attribute set changed as a result of&#xA;     *          the call.&#xA;     * &#xA;     * @throws  UnmodifiableSetException&#xA;     *     (Unchecked exception) Thrown if this attribute set does not&#xA;     *     support the &lt;tt>addAll()&lt;/tt> method. &#xA;     * @throws  ClassCastException&#xA;     *     (Unchecked exception) Thrown if some element in the specified &#xA;     *     set is not an instance of interface {@link PrintServiceAttribute &#xA;     *     PrintServiceAttribute}.&#xA;     * @throws  NullPointerException&#xA;     *     (Unchecked exception) Thrown if the specified  set is null. &#xA;     *&#xA;     * @see #add(Attribute)&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Interface PrintServiceAttributeSet specifies the interface for a set of  &#xA; * print job attributes, i.e. printing attributes that implement interface&#xA; * {@link &#xA; * PrintServiceAttribute PrintServiceAttribute}. In the Print Service API, &#xA; * the Print Service instance uses a PrintServiceAttributeSet to report the &#xA; * status of the print service. &#xA; * &lt;P>&#xA; * A PrintServiceAttributeSet is just an {@link AttributeSet AttributeSet}  &#xA; * whose constructors and mutating operations guarantee an additional&#xA; * invariant, &#xA; * namely that all attribute values in the PrintServiceAttributeSet must be &#xA; * instances of interface {@link PrintServiceAttribute PrintServiceAttribute}.&#xA; * The {@link #add(Attribute) &lt;CODE>add(Attribute)&lt;/CODE>}, and&#xA; * {@link #addAll(AttributeSet) &lt;CODE>addAll(AttributeSet)&lt;/CODE>} operations&#xA; * are respecified below to guarantee this additional invariant. &#xA; * &lt;P>&#xA; *&#xA; * @author  Alan Kaminsky&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="AttributeSet.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
