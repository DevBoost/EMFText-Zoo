<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:generics="http://www.emftext.org/java/generics" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../java.ecore#/5 http://www.emftext.org/java/generics ../../../../java.ecore#/6 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../java.ecore#/16" name="JobStateReason.java">
  <comments>/*&#xA; * @(#)JobStateReason.java&#x9;1.8 04/05/05&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>print</namespaces>
  <namespaces>attribute</namespaces>
  <namespaces>standard</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>print</namespaces>
    <namespaces>attribute</namespaces>
    <classifier xsi:type="classifiers:Class" href="../EnumSyntax.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>print</namespaces>
    <namespaces>attribute</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../Attribute.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="JobStateReason">
    <members xsi:type="members:Field" name="serialVersionUID">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalLongLiteral" decimalValue="8765894420449009168"/>
      </initialValue>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_INCOMING">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The printer has created the Print Job, but the printer has not finished &#xA;     * accessing or accepting all the print data yet. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_DATA_INSUFFICIENT">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The printer has created the Print Job, but the printer is expecting &#xA;     * additional print data before it can move the job into the PROCESSING &#xA;     * state. If a printer starts processing before it has received all data, &#xA;     * the printer removes the JOB_DATA_INSUFFICIENT reason, but the &#xA;     * JOB_INCOMING reason remains. If a printer starts processing after it &#xA;     * has received all data, the printer removes the JOB_DATA_INSUFFICIENT &#xA;     * and JOB_INCOMING reasons at the same time. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DOCUMENT_ACCESS_ERROR">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The Printer could not access one or more documents passed by reference &#xA;     * (i.e., the print data representation object is a URL). This reason is &#xA;     * intended to cover any file access problem,including file does not exist &#xA;     * and access denied because of an access control problem. Whether the &#xA;     * printer aborts the job and moves the job to the ABORTED job state or &#xA;     * prints all documents that are accessible and moves the job to the &#xA;     * COMPLETED job state and adds the COMPLETED_WITH_ERRORS reason to the &#xA;     * job's {@link JobStateReasons JobStateReasons} attribute depends on &#xA;     * implementation and/or site policy. This value should be supported if &#xA;     * the printer supports doc flavors with URL print data representation&#xA;     * objects. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SUBMISSION_INTERRUPTED">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job was not completely submitted for some unforeseen reason. &#xA;     * Possibilities include (1) the printer has crashed before the job was &#xA;     * fully submitted by the client, (2) the printer or the document transfer &#xA;     * method has crashed in some non-recoverable way before the document data &#xA;     * was entirely transferred to the printer, (3) the client crashed before &#xA;     * the job was fully submitted. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_OUTGOING">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The printer is transmitting the job to the output device. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_HOLD_UNTIL_SPECIFIED">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The value of the job's {@link JobHoldUntil JobHoldUntil} attribute was &#xA;     * specified with a date-time that is still in the future. The job must &#xA;     * not be a candidate for processing until this reason is removed and&#xA;     * there are &#xA;     * no other reasons to hold the job. This value should be supported if the &#xA;     * {@link JobHoldUntil JobHoldUntil} job template attribute is supported. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="RESOURCES_ARE_NOT_READY">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * At least one of the resources needed by the job, such as media, fonts, &#xA;     * resource objects, etc., is not ready on any of the physical printers&#xA;     * for which the job is a candidate. This condition may be detected&#xA;     * when the job is accepted, or subsequently while the job is pending&#xA;     * or processing, depending on implementation. &#xA;     * The job may remain in its current state or &#xA;     * be moved to the PENDING_HELD state, depending on implementation and/or &#xA;     * job scheduling policy. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="PRINTER_STOPPED_PARTLY">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The value of the printer's {@link PrinterStateReasons &#xA;     * PrinterStateReasons} attribute contains a {@link PrinterStateReason &#xA;     * PrinterStateReason} value of STOPPED_PARTLY. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="PRINTER_STOPPED">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The value of the printer's {@link PrinterState PrinterState} attribute&#xA;     * ia STOPPED. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_INTERPRETING">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job is in the PROCESSING state, but more specifically, the printer&#xA;     * ia interpreting the document data. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_QUEUED">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job is in the PROCESSING state, but more specifically, the printer &#xA;     * has queued the document data. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_TRANSFORMING">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job is in the PROCESSING state, but more specifically, the printer&#xA;     * is interpreting document data and producing another electronic &#xA;     * representation. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_QUEUED_FOR_MARKER">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="12"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job is in the PENDING_HELD, PENDING, or PROCESSING state, but more &#xA;     * specifically, the printer has completed enough processing of the document &#xA;     * to be able to start marking and the job is waiting for the marker. &#xA;     * Systems that require human intervention to release jobs put the job into &#xA;     * the PENDING_HELD job state. Systems that automatically select a job to &#xA;     * use the marker put the job into the PENDING job state or keep the job &#xA;     * in the PROCESSING job state while waiting for the marker, depending on &#xA;     * implementation. All implementations put the job into (or back into) the &#xA;     * PROCESSING state when marking does begin. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_PRINTING">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="13"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The output device is marking media. This value is useful for printers &#xA;     * which spend a great deal of time processing (1) when no marking is &#xA;     * happening and then want to show that marking is now happening or (2) when &#xA;     * the job is in the process of being canceled or aborted while the job &#xA;     * remains in the PROCESSING state, but the marking has not yet stopped so &#xA;     * that impression or sheet counts are still increasing for the job. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_CANCELED_BY_USER">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="14"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job was canceled by the owner of the job, i.e., by a user whose &#xA;     * authenticated identity is the same as the value of the originating user &#xA;     * that created the Print Job, or by some other authorized end-user, such as &#xA;     * a member of the job owner's security group. This value should be &#xA;     * supported. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_CANCELED_BY_OPERATOR">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="15"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job was canceled by the operator, i.e., by a user who has been &#xA;     * authenticated as having operator privileges (whether local or remote). If &#xA;     * the security policy is to allow anyone to cancel anyone's job, then this &#xA;     * value may be used when the job is canceled by someone other than the &#xA;     * owner of the job. For such a security policy, in effect, everyone is an &#xA;     * operator as far as canceling jobs is concerned. This value should be &#xA;     * supported if the implementation permits canceling by someone other than &#xA;     * the owner of the job. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_CANCELED_AT_DEVICE">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job was canceled by an unidentified local user, i.e., a user at a &#xA;     * console at the device. This value should be supported if the &#xA;     * implementation supports canceling jobs at the console. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ABORTED_BY_SYSTEM">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="17"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job was aborted by the system. Either the job (1) is in the process &#xA;     * of being aborted, (2) has been aborted by the system and placed in the &#xA;     * ABORTED state, or (3) has been aborted by the system and placed in the &#xA;     * PENDING_HELD state, so that a user or operator can manually try the job &#xA;     * again. This value should be supported. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="UNSUPPORTED_COMPRESSION">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="18"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job was aborted by the system because the printer determined while &#xA;     * attempting to decompress the document's data that the compression is &#xA;     * actually not among those supported by the printer. This value must be &#xA;     * supported, since {@link Compression Compression} is a required doc &#xA;     * description attribute. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="COMPRESSION_ERROR">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="19"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job was aborted by the system because the printer encountered an &#xA;     * error in the document data while decompressing it. If the printer posts &#xA;     * this reason, the document data has already passed any tests that would &#xA;     * have led to the UNSUPPORTED_COMPRESSION job state reason. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="UNSUPPORTED_DOCUMENT_FORMAT">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="20"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job was aborted by the system because the document data's document &#xA;     * format (doc flavor) is not among those supported by the printer. If the &#xA;     * client specifies a doc flavor with a MIME type of &#xA;     * &lt;CODE>&quot;application/octet-stream&quot;&lt;/CODE>, the printer may abort the job if &#xA;     * the printer cannot determine the document data's actual format through &#xA;     * auto-sensing (even if the printer supports the document format if &#xA;     * specified explicitly). This value must be supported, since a doc flavor &#xA;     * is required to be specified for each doc. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DOCUMENT_FORMAT_ERROR">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="21"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job was aborted by the system because the printer encountered an &#xA;     * error in the document data while processing it. If the printer posts this &#xA;     * reason, the document data has already passed any tests that would have &#xA;     * led to the UNSUPPORTED_DOCUMENT_FORMAT job state reason. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="PROCESSING_TO_STOP_POINT">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="22"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The requester has canceled the job or the printer has aborted the job, &#xA;     * but the printer is still performing some actions on the job until a &#xA;     * specified stop point occurs or job termination/cleanup is completed. &#xA;     * &lt;P>&#xA;     * If the implementation requires some measurable time to cancel the job in &#xA;     * the PROCESSING or PROCESSING_STOPPED job states, the printer must use &#xA;     * this reason to indicate that the printer is still performing some actions &#xA;     * on the job while the job remains in the PROCESSING or PROCESSING_STOPPED &#xA;     * state. After all the job's job description attributes have stopped &#xA;     * incrementing, the printer moves the job from the PROCESSING state to the &#xA;     * CANCELED or ABORTED job states. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SERVICE_OFF_LINE">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="23"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The printer is off-line and accepting no jobs. All PENDING jobs are put &#xA;     * into the PENDING_HELD state. This situation could be true if the &#xA;     * service's or document transform's input is impaired or broken. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_COMPLETED_SUCCESSFULLY">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job completed successfully. This value should be supported. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_COMPLETED_WITH_WARNINGS">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="25"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job completed with warnings. This value should be supported if the &#xA;     * implementation detects warnings. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_COMPLETED_WITH_ERRORS">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="26"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job completed with errors (and possibly warnings too). This value &#xA;     * should be supported if the implementation detects errors. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JOB_RESTARTABLE">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="27"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This job is retained and is currently able to be restarted. If &#xA;     * JOB_RESTARTABLE is contained in the job's {@link JobStateReasons &#xA;     * JobStateReasons} attribute, then the printer must accept a request to &#xA;     * restart that job. This value should be supported if restarting jobs is &#xA;     * supported. &lt;I>[The capability for restarting jobs is not in the Java &#xA;     * Print Service API at present.]&lt;/I> &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="QUEUED_IN_DEVICE">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="28"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The job has been forwarded to a device or print system that is unable to &#xA;     * send back status. The printer sets the job's {@link JobState JobState} &#xA;     * attribute to COMPLETED and adds the QUEUED_IN_DEVICE reason to the job's &#xA;     * {@link JobStateReasons JobStateReasons} attribute to indicate that the &#xA;     * printer has no additional information about the job and never will have &#xA;     * any better information. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Constructor" name="JobStateReason">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Construct a new job state reason enumeration value with the given&#xA;     * integer  value. &#xA;     *&#xA;     * @param  value  Integer value.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="myStringTable">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="references:StringReference" value="job-incoming"/>
          <initialValues xsi:type="references:StringReference" value="job-data-insufficient"/>
          <initialValues xsi:type="references:StringReference" value="document-access-error"/>
          <initialValues xsi:type="references:StringReference" value="submission-interrupted"/>
          <initialValues xsi:type="references:StringReference" value="job-outgoing"/>
          <initialValues xsi:type="references:StringReference" value="job-hold-until-specified"/>
          <initialValues xsi:type="references:StringReference" value="resources-are-not-ready"/>
          <initialValues xsi:type="references:StringReference" value="printer-stopped-partly"/>
          <initialValues xsi:type="references:StringReference" value="printer-stopped"/>
          <initialValues xsi:type="references:StringReference" value="job-interpreting"/>
          <initialValues xsi:type="references:StringReference" value="job-queued"/>
          <initialValues xsi:type="references:StringReference" value="job-transforming"/>
          <initialValues xsi:type="references:StringReference" value="job-queued-for-marker"/>
          <initialValues xsi:type="references:StringReference" value="job-printing"/>
          <initialValues xsi:type="references:StringReference" value="job-canceled-by-user"/>
          <initialValues xsi:type="references:StringReference" value="job-canceled-by-operator"/>
          <initialValues xsi:type="references:StringReference" value="job-canceled-at-device"/>
          <initialValues xsi:type="references:StringReference" value="aborted-by-system"/>
          <initialValues xsi:type="references:StringReference" value="unsupported-compression"/>
          <initialValues xsi:type="references:StringReference" value="compression-error"/>
          <initialValues xsi:type="references:StringReference" value="unsupported-document-format"/>
          <initialValues xsi:type="references:StringReference" value="document-format-error"/>
          <initialValues xsi:type="references:StringReference" value="processing-to-stop-point"/>
          <initialValues xsi:type="references:StringReference" value="service-off-line"/>
          <initialValues xsi:type="references:StringReference" value="job-completed-successfully"/>
          <initialValues xsi:type="references:StringReference" value="job-completed-with-warnings"/>
          <initialValues xsi:type="references:StringReference" value="job-completed-with-errors"/>
          <initialValues xsi:type="references:StringReference" value="job-restartable"/>
          <initialValues xsi:type="references:StringReference" value="queued-in-device"/>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="myEnumValueTable">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:ClassMethod" name="getStringTable">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Returns the string table for class JobStateReason.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.5"/>
            </next>
          </child>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getEnumValueTable">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../EnumSyntax.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Returns the enumeration value table for class JobStateReason.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../EnumSyntax.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../EnumSyntax.class.xmi#//@classifiers.0/@members.4"/>
            </next>
          </child>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getCategory">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <typeArguments xsi:type="generics:ExtendsTypeArgument">
            <extendTypes xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../Attribute.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </extendTypes>
          </typeArguments>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/Class.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get the printing attribute class which is to be used as the &quot;category&quot; &#xA;     * for this printing attribute value.&#xA;     * &lt;P>&#xA;     * For class JobStateReason and any vendor-defined subclasses, the&#xA;     * category  is class JobStateReason itself. &#xA;     *&#xA;     * @return  Printing attribute class (category), an instance of class&#xA;     *          {@link java.lang.Class java.lang.Class}.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0">
          <next xsi:type="references:ReflectiveClassReference"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getName">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get the name of the category of which this attribute value is an &#xA;     * instance. &#xA;     * &lt;P>&#xA;     * For class JobStateReason and any vendor-defined subclasses, the  &#xA;     * category name is &lt;CODE>&quot;job-state-reason&quot;&lt;/CODE>. &#xA;     *&#xA;     * @return  Attribute category name.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:StringReference" value="job-state-reason"/>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Class JobStateReason is a printing attribute class, an enumeration, that &#xA; * provides additional information about the job's current state, i.e., &#xA; * information that augments the value of the job's {@link JobState JobState} &#xA; * attribute. Class JobStateReason defines standard job state reason values. A &#xA; * Print Service implementation only needs to report those job state &#xA; * reasons which are appropriate for the particular implementation; it does not &#xA; * have to report every defined job state reason. &#xA; * &lt;P>&#xA; * Instances of JobStateReason do not appear in a Print Job's attribute set &#xA; * directly. Rather, a {@link JobStateReasons JobStateReasons} attribute appears &#xA; * in the Print Job's attribute set. The {@link JobStateReasons JobStateReasons} &#xA; * attribute contains zero, one, or more than one JobStateReason objects which &#xA; * pertain to the Print Job's status. The printer adds a JobStateReason object &#xA; * to the Print Job's {@link JobStateReasons JobStateReasons} attribute when the &#xA; * corresponding condition becomes true of the Print Job, and the printer &#xA; * removes the JobStateReason object again when the corresponding condition &#xA; * becomes false, regardless of whether the Print Job's overall {@link JobState &#xA; * JobState} also changed. &#xA; * &lt;P>&#xA; * &lt;B>IPP Compatibility:&lt;/B> The category name returned by &#xA; * &lt;CODE>getName()&lt;/CODE> is the IPP attribute name.  The enumeration's &#xA; * integer value is the IPP enum value.  The &lt;code>toString()&lt;/code> method &#xA; * returns the IPP string representation of the attribute value.&#xA; * &lt;P>&#xA; *&#xA; * @author  Alan Kaminsky&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../Attribute.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="../EnumSyntax.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
