<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:generics="http://www.emftext.org/java/generics" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../java.ecore#/5 http://www.emftext.org/java/generics ../../../../java.ecore#/6 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../java.ecore#/16" name="Finishings.java">
  <comments>/*&#xA; * @(#)Finishings.java&#x9;1.10 04/05/05&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>print</namespaces>
  <namespaces>attribute</namespaces>
  <namespaces>standard</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>print</namespaces>
    <namespaces>attribute</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../Attribute.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>print</namespaces>
    <namespaces>attribute</namespaces>
    <classifier xsi:type="classifiers:Class" href="../EnumSyntax.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>print</namespaces>
    <namespaces>attribute</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../DocAttribute.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>print</namespaces>
    <namespaces>attribute</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../PrintRequestAttribute.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>print</namespaces>
    <namespaces>attribute</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../PrintJobAttribute.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="Finishings">
    <members xsi:type="members:Field" name="serialVersionUID">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalLongLiteral" decimalValue="627840419548391754"/>
      </initialValue>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NONE">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Perform no binding.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STAPLE">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with one or more staples. The exact number and &#xA;     * placement of the staples is site-defined. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="COVER">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This value is specified when it is desired to select a non-printed (or &#xA;     * pre-printed) cover for the document. This does not supplant the &#xA;     * specification of a printed cover (on cover stock medium) by the  &#xA;     * document  itself. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="BIND">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This value indicates that a binding is to be applied to the document;&#xA;     * the type and placement of the binding is site-defined. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SADDLE_STITCH">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with one or more staples (wire stitches) along the &#xA;     * middle fold. The exact number and placement of the staples and the  &#xA;     * middle fold is implementation- and/or site-defined. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="EDGE_STITCH">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with one or more staples (wire stitches) along one &#xA;     * edge. The exact number and placement of the staples is implementation- &#xA;     * and/or site- defined. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STAPLE_TOP_LEFT">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="20"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with one or more staples in the top left corner. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STAPLE_BOTTOM_LEFT">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="21"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with one or more staples in the bottom left&#xA;     * corner. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STAPLE_TOP_RIGHT">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="22"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with one or more staples in the top right corner. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STAPLE_BOTTOM_RIGHT">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="23"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with one or more staples in the bottom right&#xA;     * corner. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="EDGE_STITCH_LEFT">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with one or more staples (wire stitches) along the &#xA;     * left edge. The exact number and placement of the staples is &#xA;     * implementation- and/or site-defined. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="EDGE_STITCH_TOP">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="25"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with one or more staples (wire stitches) along the &#xA;     * top edge. The exact number and placement of the staples is &#xA;     * implementation- and/or site-defined. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="EDGE_STITCH_RIGHT">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="26"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with one or more staples (wire stitches) along the &#xA;     * right edge. The exact number and placement of the staples is &#xA;     * implementation- and/or site-defined. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="EDGE_STITCH_BOTTOM">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="27"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with one or more staples (wire stitches) along the &#xA;     * bottom edge. The exact number and placement of the staples is &#xA;     * implementation- and/or site-defined. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STAPLE_DUAL_LEFT">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="28"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with two staples (wire stitches) along the left  &#xA;     * edge assuming a portrait document (see above). &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STAPLE_DUAL_TOP">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="29"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with two staples (wire stitches) along the top &#xA;     * edge assuming a portrait document (see above). &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STAPLE_DUAL_RIGHT">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="30"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with two staples (wire stitches) along the right &#xA;     * edge assuming a portrait document (see above). &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STAPLE_DUAL_BOTTOM">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="31"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Bind the document(s) with two staples (wire stitches) along the bottom &#xA;     * edge assuming a portrait document (see above). &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Constructor" name="Finishings">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Construct a new finishings binding enumeration value with the given &#xA;     * integer value. &#xA;     *&#xA;     * @param  value  Integer value.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="myStringTable">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="references:StringReference" value="none"/>
          <initialValues xsi:type="references:StringReference" value="staple"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="references:StringReference" value="cover"/>
          <initialValues xsi:type="references:StringReference" value="bind"/>
          <initialValues xsi:type="references:StringReference" value="saddle-stitch"/>
          <initialValues xsi:type="references:StringReference" value="edge-stitch"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral">
            <comments>// The next ten enum values are reserved.</comments>
          </initialValues>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="references:StringReference" value="staple-top-left"/>
          <initialValues xsi:type="references:StringReference" value="staple-bottom-left"/>
          <initialValues xsi:type="references:StringReference" value="staple-top-right"/>
          <initialValues xsi:type="references:StringReference" value="staple-bottom-right"/>
          <initialValues xsi:type="references:StringReference" value="edge-stitch-left"/>
          <initialValues xsi:type="references:StringReference" value="edge-stitch-top"/>
          <initialValues xsi:type="references:StringReference" value="edge-stitch-right"/>
          <initialValues xsi:type="references:StringReference" value="edge-stitch-bottom"/>
          <initialValues xsi:type="references:StringReference" value="staple-dual-left"/>
          <initialValues xsi:type="references:StringReference" value="staple-dual-top"/>
          <initialValues xsi:type="references:StringReference" value="staple-dual-right"/>
          <initialValues xsi:type="references:StringReference" value="staple-dual-bottom"/>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="myEnumValueTable">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral">
            <comments>// The next ten enum values are reserved.</comments>
          </initialValues>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:ClassMethod" name="getStringTable">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Returns the string table for class Finishings.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.5"/>
            </next>
          </child>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getEnumValueTable">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../EnumSyntax.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Returns the enumeration value table for class Finishings.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../EnumSyntax.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../EnumSyntax.class.xmi#//@classifiers.0/@members.4"/>
            </next>
          </child>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getOffset">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Returns the lowest integer value used by class Finishings.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getCategory">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <typeArguments xsi:type="generics:ExtendsTypeArgument">
            <extendTypes xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../Attribute.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </extendTypes>
          </typeArguments>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/Class.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get the printing attribute class which is to be used as the &quot;category&quot; &#xA;     * for this printing attribute value.&#xA;     * &lt;P>&#xA;     * For class Finishings and any vendor-defined subclasses, the &#xA;     * category is class Finishings itself. &#xA;     *&#xA;     * @return  Printing attribute class (category), an instance of class&#xA;     *          {@link java.lang.Class java.lang.Class}.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0">
          <next xsi:type="references:ReflectiveClassReference"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getName">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get the name of the category of which this attribute value is an &#xA;     * instance. &#xA;     * &lt;P>&#xA;     * For class Finishings and any vendor-defined subclasses, the &#xA;     * category name is &lt;CODE>&quot;finishings&quot;&lt;/CODE>. &#xA;     *&#xA;     * @return  Attribute category name.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:StringReference" value="finishings"/>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Class Finishings is a printing attribute class, an enumeration, that &#xA; * identifies whether the printer applies a finishing operation of some kind  &#xA; * of binding to each copy of each printed document in the job. For multidoc  &#xA; * print jobs (jobs with multiple documents), the&#xA; * {@link MultipleDocumentHandling &#xA; * MultipleDocumentHandling} attribute determines what constitutes a &quot;copy&quot;  &#xA; * for purposes of finishing. &#xA; * &lt;P>&#xA; * Standard Finishings values are:&#xA; * &lt;TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100% SUMMARY=&quot;layout&quot;>&#xA; * &lt;TR>&#xA; * &lt;TD WIDTH=10%>&#xA; * &amp;nbsp;&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #NONE &lt;CODE>NONE&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #STAPLE &lt;CODE>STAPLE&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=36%>&#xA; * {@link #EDGE_STITCH &lt;CODE>EDGE_STITCH&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;/TR>&#xA; * &lt;TR>&#xA; * &lt;TD>&#xA; * &amp;nbsp;&#xA; * &lt;/TD>&#xA; * &lt;TD>&#xA; * {@link #BIND &lt;CODE>BIND&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD>&#xA; * {@link #SADDLE_STITCH &lt;CODE>SADDLE_STITCH&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD>&#xA; * {@link #COVER &lt;CODE>COVER&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD>&#xA; * &amp;nbsp;&#xA; * &lt;/TD>&#xA; * &lt;/TR>&#xA; * &lt;/TABLE>&#xA; * &lt;P>&#xA; * The following Finishings values are more specific; they indicate a &#xA; * corner or an edge as if the document were a portrait document: &#xA; * &lt;TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100% SUMMARY=&quot;layout&quot;>&#xA; * &lt;TR>&#xA; * &lt;TD WIDTH=10%>&#xA; * &amp;nbsp;&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #STAPLE_TOP_LEFT &lt;CODE>STAPLE_TOP_LEFT&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #EDGE_STITCH_LEFT &lt;CODE>EDGE_STITCH_LEFT&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #STAPLE_DUAL_LEFT &lt;CODE>STAPLE_DUAL_LEFT&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=9%>&#xA; * &amp;nbsp;&#xA; * &lt;/TD>&#xA; * &lt;/TR>&#xA; * &lt;TR>&#xA; * &lt;TD WIDTH=10%>&#xA; * &amp;nbsp;&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #STAPLE_BOTTOM_LEFT &lt;CODE>STAPLE_BOTTOM_LEFT&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #EDGE_STITCH_TOP &lt;CODE>EDGE_STITCH_TOP&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #STAPLE_DUAL_TOP &lt;CODE>STAPLE_DUAL_TOP&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=9%>&#xA; * &amp;nbsp;&#xA; * &lt;/TD>&#xA; * &lt;/TR>&#xA; * &lt;TR>&#xA; * &lt;TD WIDTH=10%>&#xA; * &amp;nbsp;&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #STAPLE_TOP_RIGHT &lt;CODE>STAPLE_TOP_RIGHT&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #EDGE_STITCH_RIGHT &lt;CODE>EDGE_STITCH_RIGHT&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #STAPLE_DUAL_RIGHT &lt;CODE>STAPLE_DUAL_RIGHT&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=9%>&#xA; * &amp;nbsp;&#xA; * &lt;/TD>&#xA; * &lt;/TR>&#xA; * &lt;TR>&#xA; * &lt;TD WIDTH=10%>&#xA; * &amp;nbsp;&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #STAPLE_BOTTOM_RIGHT &lt;CODE>STAPLE_BOTTOM_RIGHT&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #EDGE_STITCH_BOTTOM &lt;CODE>EDGE_STITCH_BOTTOM&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=27%>&#xA; * {@link #STAPLE_DUAL_BOTTOM &lt;CODE>STAPLE_DUAL_BOTTOM&lt;/CODE>}&#xA; * &lt;/TD>&#xA; * &lt;TD WIDTH=9%>&#xA; * &amp;nbsp;&#xA; * &lt;/TD>&#xA; * &lt;/TR>&#xA; * &lt;/TABLE>&#xA; * &lt;P>&#xA; * The &lt;CODE>STAPLE_&lt;I>XXX&lt;/I>&lt;/CODE> values are specified with respect to the &#xA; * document as if the document were a portrait document. If the document is &#xA; * actually a landscape or a reverse-landscape document, the client supplies the &#xA; * appropriate transformed value. For example, to position a staple in the upper &#xA; * left hand corner of a landscape document when held for reading, the client &#xA; * supplies the &lt;CODE>STAPLE_BOTTOM_LEFT&lt;/CODE> value (since landscape is &#xA; * defined as a +90 degree rotation from portrait, i.e., anti-clockwise). On the &#xA; * other hand, to position a staple in the upper left hand corner of a &#xA; * reverse-landscape document when held for reading, the client supplies the &#xA; * &lt;CODE>STAPLE_TOP_RIGHT&lt;/CODE> value (since reverse-landscape is defined as a &#xA; * -90 degree rotation from portrait, i.e., clockwise). &#xA; * &lt;P>&#xA; * The angle (vertical, horizontal, angled) of each staple with respect to the &#xA; * document depends on the implementation which may in turn depend on the value &#xA; * of the attribute.&#xA; * &lt;P>&#xA; * The effect of a Finishings attribute on a multidoc print job (a job &#xA; * with multiple documents) depends on whether all the docs have the same &#xA; * binding specified or whether different docs have different bindings &#xA; * specified, and on the (perhaps defaulted) value of the {@link &#xA; * MultipleDocumentHandling MultipleDocumentHandling} attribute. &#xA; * &lt;UL>&#xA; * &lt;LI>&#xA; * If all the docs have the same binding specified, then any value of {@link &#xA; * MultipleDocumentHandling MultipleDocumentHandling} makes sense, and the &#xA; * printer's processing depends on the {@link MultipleDocumentHandling &#xA; * MultipleDocumentHandling} value: &#xA; * &lt;UL>&#xA; * &lt;LI>&#xA; * SINGLE_DOCUMENT -- All the input docs will be bound together as one output &#xA; * document with the specified binding. &#xA; * &lt;P>&#xA; * &lt;LI>&#xA; * SINGLE_DOCUMENT_NEW_SHEET -- All the input docs will be bound together as one &#xA; * output document with the specified binding, and the first impression of each &#xA; * input doc will always start on a new media sheet. &#xA; * &lt;P>&#xA; * &lt;LI>&#xA; * SEPARATE_DOCUMENTS_UNCOLLATED_COPIES -- Each input doc will be bound &#xA; * separately with the specified binding. &#xA; * &lt;P>&#xA; * &lt;LI>&#xA; * SEPARATE_DOCUMENTS_COLLATED_COPIES -- Each input doc will be bound separately &#xA; * with the specified binding. &#xA; * &lt;/UL> &#xA; * &lt;P>&#xA; * &lt;LI>&#xA; * If different docs have different bindings specified, then only two values of &#xA; * {@link MultipleDocumentHandling MultipleDocumentHandling} make sense, and the &#xA; * printer reports an error when the job is submitted if any other value is &#xA; * specified: &#xA; * &lt;UL>&#xA; * &lt;LI>&#xA; * SEPARATE_DOCUMENTS_UNCOLLATED_COPIES -- Each input doc will be bound &#xA; * separately with its own specified binding. &#xA; * &lt;P>&#xA; * &lt;LI>&#xA; * SEPARATE_DOCUMENTS_COLLATED_COPIES -- Each input doc will be bound separately &#xA; * with its own specified binding. &#xA; * &lt;/UL>&#xA; * &lt;/UL>&#xA; * &lt;P>&#xA; * &lt;B>IPP Compatibility:&lt;/B> Class Finishings encapsulates some of the &#xA; * IPP enum values that can be included in an IPP &quot;finishings&quot; attribute, which &#xA; * is a set of enums. The category name returned by &#xA; * &lt;CODE>getName()&lt;/CODE> is the IPP attribute name.  The enumeration's &#xA; * integer value is the IPP enum value.  The &lt;code>toString()&lt;/code> method &#xA; * returns the IPP string representation of the attribute value.&#xA; * In IPP Finishings is a multi-value attribute, this API currently allows&#xA; * only one binding to be specified.&#xA; *  &#xA; * @author  Alan Kaminsky&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../DocAttribute.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../PrintRequestAttribute.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../PrintJobAttribute.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="../EnumSyntax.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
