<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="AccessibleHyperlink.java">
  <comments>/*&#xA; * @(#)AccessibleHyperlink.java&#x9;1.13 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>accessibility</namespaces>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
    <namespaces>text</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="AccessibleHyperlink">
    <members xsi:type="members:InterfaceMethod" name="isValid">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Since the document a link is associated with may have&#xA;&#x9; * changed, this method returns whether or not this Link is still valid&#xA;&#x9; * (with respect to the document it references).&#xA;&#x9; *&#xA;&#x9; * @return a flag indicating whether this link is still valid with&#xA;&#x9; *         respect to the AccessibleHypertext it belongs to&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAccessibleActionCount">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns the number of accessible actions available in this Link&#xA;&#x9; * If there are more than one, the first one is NOT considered the&#xA;         * &quot;default&quot; action of this LINK object (e.g. in an HTML imagemap).&#xA;&#x9; * In general, links will have only one AccessibleAction in them.&#xA;&#x9; *&#xA;&#x9; * @return the zero-based number of Actions in this object&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="doAccessibleAction">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="i">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Performs the specified Action on the object&#xA;&#x9; *&#xA;&#x9; * @param i zero-based index of actions&#xA;&#x9; * @return true if the action was performed; otherwise false.&#xA;&#x9; * @see #getAccessibleActionCount&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAccessibleActionDescription">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="i">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns a String description of this particular&#xA;&#x9; * link action.  This should be a text string&#xA;&#x9; * associated with anchoring text, this should be the&#xA;&#x9; * anchor text.  E.g. from HTML:&#xA;&#x9; *   &amp;lt;a HREF=&quot;http://www.sun.com/access&quot;&amp;gt;Accessibility&amp;lt;/a&amp;gt;&#xA;&#x9; * this method would return &quot;Accessibility&quot;.&#xA;&#x9; *&#xA;&#x9; * Similarly, from this HTML:&#xA;&#x9; *   &amp;lt;a HREF=&quot;#top&quot;&amp;gt;&amp;lt;img src=&quot;top-hat.gif&quot; alt=&quot;top hat&quot;&amp;gt;&amp;lt;/a&amp;gt;&#xA;&#x9; * this method would return &quot;top hat&quot;&#xA;&#x9; *&#xA;         * @param i zero-based index of the actions&#xA;         * @return a String description of the action&#xA;&#x9; * @see #getAccessibleActionCount&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAccessibleActionObject">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="i">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns an object that represents the link action,&#xA;&#x9; * as appropriate for that link.  E.g. from HTML:&#xA;&#x9; *   &amp;lt;a HREF=&quot;http://www.sun.com/access&quot;&amp;gt;Accessibility&amp;lt;/a&amp;gt;&#xA;&#x9; * this method would return a&#xA;&#x9; * java.net.URL(&quot;http://www.sun.com/access.html&quot;);&#xA;&#x9; *&#xA;         * @param i zero-based index of the actions&#xA;         * @return an Object representing the hypertext link itself&#xA;&#x9; * @see #getAccessibleActionCount&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAccessibleActionAnchor">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="i">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns an object that represents the link anchor,&#xA;&#x9; * as appropriate for that link.  E.g. from HTML:&#xA;&#x9; *   &amp;lt;a href=&quot;http://www.sun.com/access&quot;&amp;gt;Accessibility&amp;lt;/a&amp;gt;&#xA;&#x9; * this method would return a String containing the text:&#xA;&#x9; * &quot;Accessibility&quot;.&#xA;&#x9; *&#xA;&#x9; * Similarly, from this HTML:&#xA;&#x9; *   &amp;lt;a HREF=&quot;#top&quot;&amp;gt;&amp;lt;img src=&quot;top-hat.gif&quot; alt=&quot;top hat&quot;&amp;gt;&amp;lt;/a&amp;gt;&#xA;&#x9; * this might return the object ImageIcon(&quot;top-hat.gif&quot;, &quot;top hat&quot;);&#xA;&#x9; *&#xA;         * @param i zero-based index of the actions&#xA;         * @return an Object representing the hypertext anchor&#xA;&#x9; * @see #getAccessibleActionCount&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getStartIndex">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Gets the index with the hypertext document at which this&#xA;&#x9; * link begins&#xA;&#x9; *&#xA;&#x9; * @return index of start of link&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getEndIndex">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Gets the index with the hypertext document at which this&#xA;&#x9; * link ends&#xA;&#x9; *&#xA;&#x9; * @return index of end of link&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Encapsulation of a link, or set of links (e.g. client side imagemap)&#xA; * in a Hypertext document&#xA; *&#xA; * @see Accessible&#xA; * @see Accessible#getAccessibleContext&#xA; * @see AccessibleContext&#xA; * @see AccessibleText&#xA; * @see AccessibleContext#getAccessibleText&#xA; *&#xA; * @version 1.13, 12/19/03&#xA; * @author&#x9;Peter Korn&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="AccessibleAction.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
