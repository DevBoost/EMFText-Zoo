<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="AccessibleKeyBinding.java">
  <comments>/*&#xA; * @(#)AccessibleKeyBinding.java&#x9;1.4 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>accessibility</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="AccessibleKeyBinding">
    <members xsi:type="members:InterfaceMethod" name="getAccessibleKeyBindingCount">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the number of key bindings for this object&#xA;     *&#xA;     * @return the zero-based number of key bindings for this object&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAccessibleKeyBinding">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>java</namespaces>
        <namespaces>lang</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="i">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a key binding for this object.  The value returned is an&#xA;     * java.lang.Object which must be cast to appropriate type depending&#xA;     * on the underlying implementation of the key.  For example, if the&#xA;     * Object returned is a javax.swing.KeyStroke, the user of this&#xA;     * method should do the following:&#xA;     * &lt;nf>&lt;code>&#xA;     * Component c = &lt;get the component that has the key bindings>&#xA;     * AccessibleContext ac = c.getAccessibleContext();&#xA;     * AccessibleKeyBinding akb = ac.getAccessibleKeyBinding();&#xA;     * for (int i = 0; i &lt; akb.getAccessibleKeyBindingCount(); i++) {&#xA;     *     Object o = akb.getAccessibleKeyBinding(i);&#xA;     *     if (o instanceof javax.swing.KeyStroke) {&#xA;     *         javax.swing.KeyStroke keyStroke = (javax.swing.KeyStroke)o;&#xA;     *         &lt;do something with the key binding>&#xA;     *     }&#xA;     * }&#xA;     * &lt;/code>&lt;/nf>&#xA;     *&#xA;     * @param i zero-based index of the key bindings&#xA;     * @return a javax.lang.Object which specifies the key binding&#xA;     * @see #getAccessibleKeyBindingCount&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The AccessibleKeyBinding interface should be supported by any object&#xA; * that has a keyboard bindings such as a keyboard mnemonic and/or keyboard&#xA; * shortcut which can be used to select the object.  This interface provides&#xA; * the standard mechanism for an assistive technology to determine the&#xA; * key bindings which exist for this object.&#xA; * Any object that has such key bindings should support this&#xA; * interface.  Applications can determine if an object supports the&#xA; * AccessibleKeyBinding interface by first obtaining its AccessibleContext&#xA; * (see @link Accessible} and then calling the&#xA; * {@link AccessibleContext#getAccessibleKeyBinding} method.  If the return&#xA; * value is not null, the object supports this interface.&#xA; *&#xA; * @see Accessible&#xA; * @see Accessible#getAccessibleContext&#xA; * @see AccessibleContext&#xA; * @see AccessibleContext#getAccessibleKeyBinding&#xA; *&#xA; * @version     1.4 12/19/03&#xA; * @author&#x9;Lynn Monsanto&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
