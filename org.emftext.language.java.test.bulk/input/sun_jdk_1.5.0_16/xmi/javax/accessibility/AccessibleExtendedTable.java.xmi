<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="AccessibleExtendedTable.java">
  <comments>/*&#xA; * @(#)AccessibleExtendedTable.java&#x9;1.5 03/12/19 &#xA;  *&#xA;  * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA;  * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA;  *&#xA;  */</comments>
  <namespaces>javax</namespaces>
  <namespaces>accessibility</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="AccessibleExtendedTable">
    <members xsi:type="members:InterfaceMethod" name="getAccessibleRow">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="index">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;      * Returns the row number of an index in the table.&#xA;      *&#xA;      * @param index the zero-based index in the table.  The index is&#xA;      * the table cell offset from row == 0 and column == 0.&#xA;      * @return the zero-based row of the table if one exists;&#xA;      * otherwise -1.&#xA;      */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAccessibleColumn">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="index">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;      * Returns the column number of an index in the table.&#xA;      *&#xA;      * @param index the zero-based index in the table.  The index is&#xA;      * the table cell offset from row == 0 and column == 0.&#xA;      * @return the zero-based column of the table if one exists;&#xA;      * otherwise -1.&#xA;      */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAccessibleIndex">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="r">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/*&#xA;      * Returns the index at a row and column in the table.&#xA;      *&#xA;      * @param r zero-based row of the table&#xA;      * @param c zero-based column of the table&#xA;      * @return the zero-based index in the table if one exists;&#xA;      * otherwise -1.  The index is  the table cell offset from&#xA;      * row == 0 and column == 0.&#xA;      */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA;  * Class AccessibleExtendedTable provides extended information about&#xA;  * a user-interface component that presents data in a two-dimensional&#xA;  * table format.&#xA;  * Applications can determine if an object supports the&#xA;  * AccessibleExtendedTable interface by first obtaining its&#xA;  * AccessibleContext and then calling the&#xA;  * {@link AccessibleContext#getAccessibleTable} method.&#xA;  * If the return value is not null and the type of the return value is&#xA;  * AccessibleExtendedTable, the object supports this interface.&#xA;  *&#xA;  * @version     1.5 12/19/03&#xA;  * @author      Lynn Monsanto&#xA;  */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="AccessibleTable.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
