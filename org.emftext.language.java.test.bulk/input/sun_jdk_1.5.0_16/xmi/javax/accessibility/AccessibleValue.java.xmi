<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="AccessibleValue.java">
  <comments>/*&#xA; * @(#)AccessibleValue.java&#x9;1.15 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>accessibility</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="AccessibleValue">
    <members xsi:type="members:InterfaceMethod" name="getCurrentAccessibleValue">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/lang/Number.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get the value of this object as a Number.  If the value has not been&#xA;     * set, the return value will be null.&#xA;     *&#xA;     * @return value of the object&#xA;     * @see #setCurrentAccessibleValue&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setCurrentAccessibleValue">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="n">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/Number.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set the value of this object as a Number.&#xA;     *&#xA;     * @return True if the value was set; else False&#xA;     * @see #getCurrentAccessibleValue&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getMinimumAccessibleValue">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/lang/Number.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>//    /**</comments>
        <comments>//     * Get the description of the value of this object.</comments>
        <comments>//     *</comments>
        <comments>//     * @return description of the value of the object</comments>
        <comments>//     */</comments>
        <comments>//    public String getAccessibleValueDescription();</comments>
        <comments>/**&#xA;     * Get the minimum value of this object as a Number.&#xA;     *&#xA;     * @return Minimum value of the object; null if this object does not &#xA;     * have a minimum value&#xA;     * @see #getMaximumAccessibleValue&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getMaximumAccessibleValue">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/lang/Number.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Get the maximum value of this object as a Number.&#xA;     *&#xA;     * @return Maximum value of the object; null if this object does not &#xA;     * have a maximum value&#xA;     * @see #getMinimumAccessibleValue&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The AccessibleValue interface should be supported by any object &#xA; * that supports a numerical value (e.g., a scroll bar).  This interface &#xA; * provides the standard mechanism for an assistive technology to determine &#xA; * and set the numerical value as well as get the minimum and maximum values.&#xA; * Applications can determine&#xA; * if an object supports the AccessibleValue interface by first&#xA; * obtaining its AccessibleContext (see&#xA; * {@link Accessible}) and then calling the&#xA; * {@link AccessibleContext#getAccessibleValue} method.&#xA; * If the return value is not null, the object supports this interface.&#xA; *&#xA; * @see Accessible&#xA; * @see Accessible#getAccessibleContext&#xA; * @see AccessibleContext&#xA; * @see AccessibleContext#getAccessibleValue&#xA; *&#xA; * @version     1.9 10/12/99 15:41:54&#xA; * @author&#x9;Peter Korn&#xA; * @author      Hans Muller&#xA; * @author      Willie Walker&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
