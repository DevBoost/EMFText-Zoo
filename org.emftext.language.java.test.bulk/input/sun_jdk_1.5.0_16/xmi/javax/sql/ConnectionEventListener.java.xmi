<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="ConnectionEventListener.java">
  <comments>/*&#xA; * @(#)ConnectionEventListener.java&#x9;1.9 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>sql</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="ConnectionEventListener">
    <members xsi:type="members:InterfaceMethod" name="connectionClosed">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Notifies this &lt;code>ConnectionEventListener&lt;/code> that&#xA;   * the application has called the method &lt;code>close&lt;/code> on its&#xA;   * representation of a pooled connection.&#xA;   *&#xA;   * @param event an event object describing the source of &#xA;   * the event&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="event">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="ConnectionEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="connectionErrorOccurred">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Notifies this &lt;code>ConnectionEventListener&lt;/code> that&#xA;   * a fatal error has occurred and the pooled connection can&#xA;   * no longer be used.  The driver makes this notification just&#xA;   * before it throws the application the &lt;code>SQLException&lt;/code>&#xA;   * contained in the given &lt;code>ConnectionEvent&lt;/code> object.&#xA;   *&#xA;   * @param event an event object describing the source of &#xA;   * the event and containing the &lt;code>SQLException&lt;/code> that the&#xA;   * driver is about to throw&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="event">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="ConnectionEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/** &#xA; * &lt;P>&#xA; * An object that registers to be notified of events generated by a &#xA; * &lt;code>PooledConnection&lt;/code> object.&#xA; * &lt;P>&#xA; * The &lt;code>ConnectionEventListener&lt;/code> interface is implemented by a&#xA; * connection pooling component.  A connection pooling component will&#xA; * usually be provided by a JDBC driver vendor or another system software&#xA; * vendor.  A JDBC driver notifies a &lt;code>ConnectionEventListener&lt;/code>&#xA; * object when an application is finished using a pooled connection with&#xA; * which the listener has registered.  The notification &#xA; * occurs after the application calls the method &lt;code>close&lt;/code> on&#xA; * its representation of a &lt;code>PooledConnection&lt;/code> object.  A &#xA; * &lt;code>ConnectionEventListener&lt;/code> is also notified when a&#xA; * connection error occurs due to the fact that the &lt;code>PooledConnection&lt;/code>&#xA; * is unfit for future use---the server has crashed, for example. &#xA; * The listener is notified by the JDBC driver just before the driver throws an&#xA; * &lt;code>SQLException&lt;/code> to the application using the &#xA; * &lt;code>PooledConnection&lt;/code> object.&#xA; *&#xA; * @since 1.4&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <namespaces>java</namespaces>
      <namespaces>util</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../java/util/EventListener.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
