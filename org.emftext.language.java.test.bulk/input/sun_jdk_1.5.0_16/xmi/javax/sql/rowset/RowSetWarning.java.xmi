<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16" name="RowSetWarning.java">
  <comments>/*&#xA; * @(#)RowSetWarning.java&#x9;1.5 04/03/11&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>sql</namespaces>
  <namespaces>rowset</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>sql</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="RowSetWarning">
    <members xsi:type="members:Field" name="rwarning">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * RowSetWarning object handle.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="RowSetWarning">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.0"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="reason">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a &lt;code>RowSetWarning&lt;/code> object&#xA;     * with the given value for the reason; SQLState defaults to null,&#xA;     * and vendorCode defaults to 0.&#xA;     *&#xA;     * @param reason a &lt;code>String&lt;/code> object giving a description &#xA;     *        of the warning; if the &lt;code>String&lt;/code> is &lt;code>null&lt;/code>, &#xA;     *        this constructor behaves like the default (zero parameter) &#xA;     *        &lt;code>RowSetWarning&lt;/code> constructor&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="RowSetWarning">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a default &lt;code>RowSetWarning&lt;/code> object. The reason&#xA;     * defaults to &lt;code>null&lt;/code>, SQLState defaults to null and vendorCode&#xA;     * defaults to 0.     &#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="RowSetWarning">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.1"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="reason">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>lang</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="SQLState">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>lang</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a &lt;code>RowSetWarning&lt;/code> object initialized with the &#xA;     * given values for the reason and SQLState. The vendor code defaults to 0. &#xA;     *&#xA;     * If the &lt;code>reason&lt;/code> or &lt;code>SQLState&lt;/code> parameters are &lt;code>null&lt;/code>,&#xA;     * this constructor behaves like the default (zero parameter) &#xA;     * &lt;code>RowSetWarning&lt;/code> constructor.&#xA;     *&#xA;     * @param reason a &lt;code>String&lt;/code> giving a description of the&#xA;     *        warning; &#xA;     * @param SQLState an XOPEN code identifying the warning; if a non standard&#xA;     *        XOPEN &lt;i>SQLState&lt;/i> is supplied, no exception is thrown.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="RowSetWarning">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.2"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="reason">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>lang</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="SQLState">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>lang</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="vendorCode">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a fully specified &lt;code>RowSetWarning&lt;/code> object initialized&#xA;     * with the given values for the reason, SQLState and vendorCode.&#xA;     *&#xA;     * If the &lt;code>reason&lt;/code>, or the  &lt;code>SQLState&lt;/code>&#xA;     * parameters are &lt;code>null&lt;/code>, this constructor behaves like the default &#xA;     * (zero parameter) &lt;code>RowSetWarning&lt;/code> constructor.&#xA;     * &#xA;     * @param reason a &lt;code>String&lt;/code> giving a description of the&#xA;     *        warning; &#xA;     * @param SQLState an XOPEN code identifying the warning; if a non standard&#xA;     *        XPOEN &lt;i>SQLState&lt;/i> is supplied, no exception is thrown.  &#xA;     * @param vendorCode a database vendor-specific warning code&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="getNextWarning">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Retrieves the warning chained to this &lt;code>RowSetWarning&lt;/code>&#xA;     * object.&#xA;     *&#xA;     * @return the &lt;code>RowSetWarning&lt;/code> object chained to this one; if no&#xA;     *         &lt;code>RowSetWarning&lt;/code> object is chained to this one, &#xA;     *         &lt;code>null&lt;/code> is returned (default value)&#xA;     * @see #setNextWarning&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setNextWarning">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="warning">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets &lt;i>warning&lt;/i> as the next warning, that is, the warning chained &#xA;     * to this &lt;code>RowSetWarning&lt;/code> object.&#xA;     *&#xA;     * @param warning the &lt;code>RowSetWarning&lt;/code> object to be set as the&#xA;     *     next warning; if the &lt;code>RowSetWarning&lt;/code> is null, this &#xA;     *     represents the finish point in the warning chain&#xA;     * @see #getNextWarning&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:Field" name="serialVersionUID">
      <initialValue xsi:type="literals:DecimalLongLiteral" decimalValue="6678332766434564774"/>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * An extension of &lt;code>SQLException&lt;/code> that provides information &#xA; * about database warnings set on &lt;code>RowSet&lt;/code> objects.&#xA; * Warnings are silently chained to the object whose method call&#xA; * caused it to be reported.&#xA; * This class complements the &lt;code>SQLWarning&lt;/code> class.&#xA; * &lt;P>&#xA; * Rowset warnings may be retrieved from &lt;code>JdbcRowSet&lt;/code>,&#xA; * &lt;code>CachedRowSet&lt;/code>&lt;sup>&lt;font size=-2>TM&lt;/font>&lt;/sup>,&#xA; * &lt;code>WebRowSet&lt;/code>, &lt;code>FilteredRowSet&lt;/code>, or &lt;code>JoinRowSet&lt;/code> &#xA; * implementations. To retrieve the first warning reported on any &#xA; * &lt;code>RowSet&lt;/code>&#xA; * implementation,  use the method &lt;code>getRowSetWarnings&lt;/code> defined&#xA; * in the &lt;code>JdbcRowSet&lt;/code> interface or the &lt;code>CachedRowSet&lt;/code>&#xA; * interface. To retrieve a warning chained to the first warning, use the &#xA; * &lt;code>RowSetWarning&lt;/code> method&#xA; * &lt;code>getNextWarning&lt;/code>. To retrieve subsequent warnings, call&#xA; * &lt;code>getNextWarning&lt;/code> on each &lt;code>RowSetWarning&lt;/code> object that is&#xA; * returned.&#xA; * &lt;P>&#xA; * The inherited methods &lt;code>getMessage&lt;/code>, &lt;code>getSQLState&lt;/code>,&#xA; * and &lt;code>getErrorCode&lt;/code> retrieve information contained in a &#xA; * &lt;code>RowSetWarning&lt;/code> object.&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="../../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
