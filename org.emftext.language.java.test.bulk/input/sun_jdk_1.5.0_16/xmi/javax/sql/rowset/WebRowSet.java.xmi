<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/types ../../../java.ecore#/16" name="WebRowSet.java">
  <comments>/*&#xA; * @(#)WebRowSet.java&#x9;1.5 04/03/11&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>sql</namespaces>
  <namespaces>rowset</namespaces>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>sql</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>sql</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>naming</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>math</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>org</namespaces>
    <namespaces>xml</namespaces>
    <namespaces>sax</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="WebRowSet">
    <members xsi:type="members:InterfaceMethod" name="readXml">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="reader">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>io</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/io/Reader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;    * Reads a &lt;code>WebRowSet&lt;/code> object in its XML format from the given &#xA;    * &lt;code>Reader&lt;/code> object.&#xA;    * &#xA;    * @param reader the &lt;code>java.io.Reader&lt;/code> stream from which this&#xA;    *        &lt;code>WebRowSet&lt;/code> object will be populated&#xA;&#xA;    * @throws SQLException if a database access error occurs    &#xA;    */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="readXml">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="iStream">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>io</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/io/InputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Reads a stream based XML input to populate this &lt;code>WebRowSet&lt;/code>&#xA;     * object.&#xA;     *&#xA;     * @param iStream the &lt;code>java.io.InputStream&lt;/code> from which this&#xA;     *        &lt;code>WebRowSet&lt;/code> object will be populated&#xA;     * @throws SQLException if a data source access error occurs&#xA;     * @throws IOException if an IO exception occurs&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="writeXml">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="rs">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../java/sql/ResultSet.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="writer">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>io</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/io/Writer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;    * Populates this &lt;code>WebRowSet&lt;/code> object with&#xA;    * the contents of the given &lt;code>ResultSet&lt;/code> object and writes its&#xA;    * data, properties, and metadata&#xA;    * to the given &lt;code>Writer&lt;/code> object in XML format.&#xA;    * &lt;p>&#xA;    * NOTE: The &lt;code>WebRowSet&lt;/code> cursor may be moved to write out the&#xA;    * contents to the XML data source. If implemented in this way, the cursor &lt;b>must&lt;/b>&#xA;    * be returned to its position just prior to the &lt;code>writeXml()&lt;/code> call.&#xA;    *&#xA;    * @param rs the &lt;code>ResultSet&lt;/code> object with which to populate this&#xA;    *        &lt;code>WebRowSet&lt;/code> object&#xA;    * @param writer the &lt;code>java.io.Writer&lt;/code> object to write to.&#xA;    * @throws SQLException if an error occurs writing out the rowset&#xA;    *          contents in XML format&#xA;    */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="writeXml">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="rs">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../java/sql/ResultSet.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oStream">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>io</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/io/OutputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;    * Populates this &lt;code>WebRowSet&lt;/code> object with&#xA;    * the contents of the given &lt;code>ResultSet&lt;/code> object and writes its&#xA;    * data, properties, and metadata&#xA;    * to the given &lt;code>OutputStream&lt;/code> object in XML format.&#xA;    * &lt;p>&#xA;    * NOTE: The &lt;code>WebRowSet&lt;/code> cursor may be moved to write out the&#xA;    * contents to the XML data source. If implemented in this way, the cursor &lt;b>must&lt;/b>&#xA;    * be returned to its position just prior to the &lt;code>writeXml()&lt;/code> call.     &#xA;    *&#xA;    * @param rs the &lt;code>ResultSet&lt;/code> object with which to populate this&#xA;    *        &lt;code>WebRowSet&lt;/code> object&#xA;    * @param oStream the &lt;code>java.io.OutputStream&lt;/code> to write to&#xA;    * @throws SQLException if a data source access error occurs&#xA;    * @throws IOException if a IO exception occurs&#xA;    */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="writeXml">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="writer">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>io</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/io/Writer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;    * Writes the data, properties, and metadata for this &lt;code>WebRowSet&lt;/code> object &#xA;    * to the given &lt;code>Writer&lt;/code> object in XML format.&#xA;    *&#xA;    * @param writer the &lt;code>java.io.Writer&lt;/code> stream to write to&#xA;    * @throws SQLException if an error occurs writing out the rowset&#xA;    *          contents to XML&#xA;    */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="writeXml">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oStream">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>io</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/io/OutputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Writes the data, properties, and metadata for this &lt;code>WebRowSet&lt;/code> object &#xA;     * to the given &lt;code>OutputStream&lt;/code> object in XML format.&#xA;     *&#xA;     * @param oStream the &lt;code>java.io.OutputStream&lt;/code> stream to write to&#xA;     * @throws SQLException if a data source access error occurs&#xA;     * @throws IOException if a IO exception occurs&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="PUBLIC_XML_SCHEMA">
      <initialValue xsi:type="references:StringReference" value="--//Sun Microsystems, Inc.//XSD Schema//EN"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The public identifier for the XML Schema definition that defines the XML&#xA;     * tags and their valid values for a &lt;code>WebRowSet&lt;/code> implementation.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="SCHEMA_SYSTEM_ID">
      <initialValue xsi:type="references:StringReference" value="http://java.sun.com/xml/ns/jdbc/webrowset.xsd"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The URL for the XML Schema definition file that defines the XML tags and&#xA;     * their valid values for a &lt;code>WebRowSet&lt;/code> implementation.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The standard interface that all implementations of a &lt;code>WebRowSet&lt;/code>&#xA; * must implement. &#xA; * &lt;P>&#xA; * &lt;h3>1.0 Overview&lt;/h3>&#xA; * The &lt;code>WebRowSetImpl&lt;/code> provides the standard &#xA; * reference implementation, which may be extended if required. &#xA; * &lt;P>&#xA; * The standard WebRowSet XML Schema definition is available at the following&#xA; * URI:&#xA; * &lt;ul>&#xA; * &lt;pre>&#xA; * &lt;a href=&quot;http://java.sun.com/xml/ns/jdbc/webrowset.xsd&quot;>http://java.sun.com/xml/ns/jdbc/webrowset.xsd&lt;/a>&#xA; * &lt;/pre>&#xA; * &lt;/ul>&#xA; * It describes the standard XML document format required when describing a&#xA; * &lt;code>RowSet&lt;/code> object in XML and must be used be all standard implementations &#xA; * of the &lt;code>WebRowSet&lt;/code> interface to ensure interoperability. In addition, &#xA; * the &lt;code>WebRowSet&lt;/code> schema uses specific SQL/XML Schema annotations,&#xA; * thus ensuring greater cross &#xA; * platform inter-operability. This is an effort currently under way at the ISO&#xA; * organization. The SQL/XML definition is available at the following URI:&#xA; * &lt;ul>&#xA; * &lt;pre>&#xA; * &lt;a href=&quot;http://standards.iso.org/iso/9075/2002/12/sqlxml&quot;>http://standards.iso.org/iso/9075/2002/12/sqlxml&lt;/a>&#xA; * &lt;/pre>&#xA; * &lt;/ul>&#xA; * The schema definition describes the internal data of a &lt;code>RowSet&lt;/code> object&#xA; * in three distinct areas:&#xA; * &lt;UL>&#xA; * &lt;li>&lt;b>properties&lt;/b>&lt;/li>&#xA; * These properties describe the standard synchronization provider properties in&#xA; * addition to the more general &lt;code>RowSet&lt;/code> properties.&#xA; * &lt;p>&#xA; * &lt;li>&lt;b>metadata&lt;/b>&lt;/li>&#xA; * This describes the metadata associated with the tabular structure governed by a&#xA; * &lt;code>WebRowSet&lt;/code> object. The metadata described is closely aligned with the&#xA; * metadata accessible in the underlying &lt;code>java.sql.ResultSet&lt;/code> interface.&#xA; * &lt;p>&#xA; * &lt;li>&lt;b>data&lt;/b>&lt;/li>&#xA; * This describes the original data (the state of data since the last population &#xA; * or last synchronization of the &lt;code>WebRowSet&lt;/code> object) and the current &#xA; * data. By keeping track of the delta between the original data and the current data, &#xA; * a &lt;code>WebRowSet&lt;/code> maintains&#xA; * the ability to synchronize changes in its data back to the originating data source.&#xA; * &lt;/ul>&#xA; * &lt;P>&#xA; * &lt;h3>2.0 WebRowSet States&lt;/h3>&#xA; * The following sections demonstrates how a &lt;code>WebRowSet&lt;/code> implementation&#xA; * should use the XML Schema to describe update, insert, and delete operations &#xA; * and to describe the state of a &lt;code>WebRowSet&lt;/code> object in XML. &#xA; * &lt;p>&#xA; * &lt;h4>2.1 State 1 - Outputting a &lt;code>WebRowSet&lt;/code> Object to XML&lt;/h3>&#xA; * In this example, a &lt;code>WebRowSet&lt;/code> object is created and populated with a simple 2 column, &#xA; * 5 row table from a data source. Having the 5 rows in a &lt;code>WebRowSet&lt;/code> object&#xA; * makes it possible to describe them in XML. The&#xA; * metadata describing the various standard JavaBeans properties as defined&#xA; * in the RowSet interface plus the standard properties defined in&#xA; * the &lt;code>CachedRowSet&lt;/code>&lt;sup>&lt;font size=-2>TM&lt;/font>&lt;/sup> interface &#xA; * provide key details that describe WebRowSet&#xA; * properties. Outputting the WebRowSet object to XML using the standard &#xA; * &lt;code>writeXml&lt;/code> methods describes the internal properties as follows:&#xA; * &lt;PRE>&#xA; * &amp;lt;&lt;font color=red>properties&lt;/font>&amp;gt;&#xA; *       &amp;lt;&lt;font color=red>command&lt;/font>&amp;gt;select co1, col2 from test_table&amp;lt;&lt;font color=red>/command&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>concurrency&lt;/font>&amp;gt;1&amp;lt;&lt;font color=red>/concurrency&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>datasource/&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>escape-processing&lt;/font>&amp;gt;true&amp;lt;&lt;font color=red>/escape-processing&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>fetch-direction&lt;/font>&amp;gt;0&amp;lt;&lt;font color=red>/fetch-direction&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>fetch-size&lt;/font>&amp;gt;0&amp;lt;&lt;font color=red>/fetch-size&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>isolation-level&lt;/font>&amp;gt;1&amp;lt;&lt;font color=red>/isolation-level&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>key-columns/&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>map/&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>max-field-size&lt;/font>&amp;gt;0&amp;lt;&lt;font color=red>/max-field-size&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>max-rows&lt;/font>&amp;gt;0&amp;lt;&lt;font color=red>/max-rows&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>query-timeout&lt;/font>&amp;gt;0&amp;lt;&lt;font color=red>/query-timeout&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>read-only&lt;/font>&amp;gt;false&amp;lt;&lt;font color=red>/read-only&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>rowset-type&lt;/font>&amp;gt;TRANSACTION_READ_UNCOMMITED&amp;lt;&lt;font color=red>/rowset-type&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>show-deleted&lt;/font>&amp;gt;false&amp;lt;&lt;font color=red>/show-deleted&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>table-name/&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>url&lt;/font>&amp;gt;jdbc:thin:oracle&amp;lt;&lt;font color=red>/url&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>sync-provider&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>sync-provider-name&lt;/font>&amp;gt;.com.rowset.provider.RIOptimisticProvider&amp;lt;&lt;font color=red>/sync-provider-name&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>sync-provider-vendor&lt;/font>&amp;gt;Sun Microsystems&amp;lt;&lt;font color=red>/sync-provider-vendor&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>sync-provider-version&lt;/font>&amp;gt;1.0&amp;lt;&lt;font color=red>/sync-provider-name&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>sync-provider-grade&lt;/font>&amp;gt;LOW&amp;lt;&lt;font color=red>/sync-provider-grade&lt;/font>&amp;gt;&#xA; *              &amp;lt;&lt;font color=red>data-source-lock&lt;/font>&amp;gt;NONE&amp;lt;&lt;font color=red>/data-source-lock&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/sync-provider&lt;/font>&amp;gt;&#xA; * &amp;lt;&lt;font color=red>/properties&lt;/font>&amp;gt; &#xA; * &lt;/PRE>&#xA; * The meta-data describing the make up of the WebRowSet is described &#xA; * in XML as detailed below. Note both columns are described between the &#xA; * &lt;code>column-definition&lt;/code> tags.&#xA; * &lt;PRE>&#xA; * &amp;lt;&lt;font color=red>metadata&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>column-count&lt;/font>&amp;gt;2&amp;lt;&lt;font color=red>/column-count&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>column-definition&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-index&lt;/font>&amp;gt;1&amp;lt;&lt;font color=red>/column-index&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>auto-increment&lt;/font>&amp;gt;false&amp;lt;&lt;font color=red>/auto-increment&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>case-sensitive&lt;/font>&amp;gt;true&amp;lt;&lt;font color=red>/case-sensitive&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>currency&lt;/font>&amp;gt;false&amp;lt;&lt;font color=red>/currency&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>nullable&lt;/font>&amp;gt;1&amp;lt;&lt;font color=red>/nullable&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>signed&lt;/font>&amp;gt;false&amp;lt;&lt;font color=red>/signed&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>searchable&lt;/font>&amp;gt;true&amp;lt;&lt;font color=red>/searchable&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-display-size&lt;/font>&amp;gt;10&amp;lt;&lt;font color=red>/column-display-size&lt;/font>&amp;gt;   &#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-label&lt;/font>&amp;gt;COL1&amp;lt;&lt;font color=red>/column-label&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-name&lt;/font>&amp;gt;COL1&amp;lt;&lt;font color=red>/column-name&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>schema-name/&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-precision&lt;/font>&amp;gt;10&amp;lt;&lt;font color=red>/column-precision&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-scale&lt;/font>&amp;gt;0&amp;lt;&lt;font color=red>/column-scale&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>table-name/&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>catalog-name/&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-type&lt;/font>&amp;gt;1&amp;lt;&lt;font color=red>/column-type&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-type-name&lt;/font>&amp;gt;CHAR&amp;lt;&lt;font color=red>/column-type-name&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/column-definition&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>column-definition&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-index&lt;/font>&amp;gt;2&amp;lt;&lt;font color=red>/column-index&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>auto-increment&lt;/font>&amp;gt;false&amp;lt;&lt;font color=red>/auto-increment&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>case-sensitive&lt;/font>&amp;gt;false&amp;lt;&lt;font color=red>/case-sensitive&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>currency&lt;/font>&amp;gt;false&amp;lt;&lt;font color=red>/currency&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>nullable&lt;/font>&amp;gt;1&amp;lt;&lt;font color=red>/nullable&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>signed&lt;/font>&amp;gt;true&amp;lt;&lt;font color=red>/signed&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>searchable&lt;/font>&amp;gt;true&amp;lt;&lt;font color=red>/searchable&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-display-size&lt;/font>&amp;gt;39&amp;lt;&lt;font color=red>/column-display-size&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-label&lt;/font>&amp;gt;COL2&amp;lt;&lt;font color=red>/column-label&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-name&lt;/font>&amp;gt;COL2&amp;lt;&lt;font color=red>/column-name&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>schema-name/&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-precision&lt;/font>&amp;gt;38&amp;lt;&lt;font color=red>/column-precision&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-scale&lt;/font>&amp;gt;0&amp;lt;&lt;font color=red>/column-scale&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>table-name/&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>catalog-name/&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-type&lt;/font>&amp;gt;3&amp;lt;&lt;font color=red>/column-type&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>column-type-name&lt;/font>&amp;gt;NUMBER&amp;lt;&lt;font color=red>/column-type-name&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/column-definition&lt;/font>&amp;gt;&#xA; * &amp;lt;&lt;font color=red>/metadata&lt;/font>&amp;gt;&#xA; * &lt;/PRE>&#xA; * Having detailed how the properties and metadata are described, the following details&#xA; * how the contents of a &lt;code>WebRowSet&lt;/code> object is described in XML. Note, that&#xA; * this describes a &lt;code>WebRowSet&lt;/code> object that has not undergone any &#xA; * modifications since its instantiation.&#xA; * A &lt;code>currentRow&lt;/code> tag is mapped to each row of the table structure that the&#xA; * &lt;code>WebRowSet&lt;/code> object provides. A &lt;code>columnValue&lt;/code> tag may contain&#xA; * either the &lt;code>stringData&lt;/code> or &lt;code>binaryData&lt;/code> tag, according to &#xA; * the SQL type that&#xA; * the XML value is mapping back to. The &lt;code>binaryData&lt;/code> tag contains data in the&#xA; * Base64 encoding and is typically used for &lt;code>BLOB&lt;/code> and &lt;code>CLOB&lt;/code> type data.&#xA; * &lt;PRE>&#xA; * &amp;lt;&lt;font color=red>data&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;firstrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;1&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;secondrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;2&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;thirdrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;3&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;fourthrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;4&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; * &amp;lt;&lt;font color=red>/data&lt;/font>&amp;gt;&#xA; * &lt;/PRE>&#xA; * &lt;h4>2.2 State 2 - Deleting a Row&lt;/h4>&#xA; * Deleting a row in a &lt;code>WebRowSet&lt;/code> object involves simply moving to the row&#xA; * to be deleted and then calling the method &lt;code>deleteRow&lt;/code>, as in any other&#xA; * &lt;code>RowSet&lt;/code> object.  The following&#xA; * two lines of code, in which &lt;i>wrs&lt;/i> is a &lt;code>WebRowSet&lt;/code> object, delete &#xA; * the third row.&#xA; * &lt;PRE>&#xA; *     wrs.absolute(3);&#xA; *     wrs.deleteRow();&#xA; * &lt;/PRE>&#xA; * The XML description shows the third row is marked as a &lt;code>deleteRow&lt;/code>,&#xA; *  which eliminates the third row in the &lt;code>WebRowSet&lt;/code> object.&#xA; * &lt;PRE>&#xA; * &amp;lt;&lt;font color=red>data&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;firstrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;1&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;secondrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;2&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>deleteRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;thirdrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;3&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/deleteRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;fourthrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;4&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; * &amp;lt;&lt;font color=red>/data&lt;/font>&amp;gt;&#xA; * &lt;/PRE>&#xA; * &lt;h4>2.3 State 3 - Inserting a Row&lt;/h4>&#xA; * A &lt;codeWebRowSet&lt;/code> object can insert a new row by moving to the insert row,&#xA; * calling the appropriate updater methods for each column in the row, and then&#xA; * calling the method &lt;code>insertRow&lt;/code>.&#xA; * &lt;PRE>&#xA; * wrs.moveToInsertRow();&#xA; * wrs.updateString(1, &quot;fifththrow&quot;);&#xA; * wrs.updateString(2, &quot;5&quot;);&#xA; * wrs.insertRow();&#xA; * &lt;/PRE>&#xA; * The following code fragment changes the second column value in the row just inserted.&#xA; * Note that this code applies when new rows are inserted right after the current row,&#xA; * which is why the method &lt;code>next&lt;/code> moves the cursor to the correct row.&#xA; * Calling the method &lt;code>acceptChanges&lt;/code> writes the change to the data source.  &#xA; * &#xA; * &lt;PRE>&#xA; * wrs.moveToCurrentRow();&#xA; * wrs.next();&#xA; * wrs.updateString(2, &quot;V&quot;);&#xA; * wrs.acceptChanges();&#xA; * :&#xA; * &lt;/PRE>&#xA; * Describing this in XML demonstrates where the Java code inserts a new row and then&#xA; * performs an update on the newly inserted row on an individual field.&#xA; * &lt;PRE> &#xA; * &amp;lt;&lt;font color=red>data&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;firstrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;1&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;secondrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;2&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;newthirdrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;III&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>insertRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;fifthrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;5&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>updateValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;V&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/updateValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/insertRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;fourthrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;4&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; * &amp;lt;&lt;font color=red>/date&lt;/font>&amp;gt;&#xA; * &lt;/PRE>&#xA; * &lt;h4>2.4 State 4 - Modifying a Row&lt;/h4>&#xA; * Modifying a row produces specific XML that records both the new value and the &#xA; * value that was replaced.  The value that was replaced becomes the original value,&#xA; * and the new value becomes the current value. The following&#xA; * code moves the cursor to a specific row, performs some modifications, and updates&#xA; * the row when complete.&#xA; * &lt;PRE>&#xA; * wrs.absolute(5);&#xA; * wrs.updateString(1, &quot;new4thRow&quot;);&#xA; * wrs.updateString(2, &quot;IV&quot;);&#xA; * wrs.updateRow();&#xA; * &lt;/PRE>&#xA; * In XML, this is described by the &lt;code>modifyRow&lt;/code> tag. Both the original and new&#xA; * values are contained within the tag for original row tracking purposes.&#xA; * &lt;PRE>&#xA; * &amp;lt;&lt;font color=red>data&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;firstrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;1&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;secondrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;2&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;newthirdrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;III&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;fifthrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;5&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/currentRow&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>modifyRow&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;fourthrow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>updateValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;new4thRow&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/updateValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;4&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/columnValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>updateValue&lt;/font>&amp;gt;&#xA; *&#x9;&#x9;&#x9;IV&#xA; *&#x9;&#x9;&amp;lt;&lt;font color=red>/updateValue&lt;/font>&amp;gt;&#xA; *&#x9;&amp;lt;&lt;font color=red>/modifyRow&lt;/font>&amp;gt;&#xA; * &amp;lt;&lt;font color=red>/data&lt;/font>&amp;gt;&#xA; * &lt;/PRE>&#xA; *&#xA; * @see javax.sql.rowset.JdbcRowSet&#xA; * @see javax.sql.rowset.CachedRowSet&#xA; * @see javax.sql.rowset.FilteredRowSet&#xA; * @see javax.sql.rowset.JoinRowSet&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="CachedRowSet.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
