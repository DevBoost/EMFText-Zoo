<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../java.ecore#/16" name="XmlReader.java">
  <comments>/*&#xA; * @(#)XmlReader.java&#x9;1.3 03/12/19 &#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>sql</namespaces>
  <namespaces>rowset</namespaces>
  <namespaces>spi</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>sql</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/io/Reader.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>sql</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../RowSetReader.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>sql</namespaces>
    <namespaces>rowset</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="XmlReader">
    <members xsi:type="members:InterfaceMethod" name="readXML">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="caller">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../WebRowSet.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="reader">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>io</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/io/Reader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * Reads and parses the given &lt;code>WebRowSet&lt;/code> object from the given&#xA;   * input stream in XML format. The &lt;code>xmlReader&lt;/code> field of the&#xA;   * given &lt;code>WebRowSet&lt;/code> object must contain this&#xA;   * &lt;code>XmlReader&lt;/code> object.&#xA;   * &lt;P>&#xA;   * If a parsing error occurs, the exception that is thrown will&#xA;   * include information about the location of the error in the&#xA;   * original XML document.&#xA;   *&#xA;   * @param caller the &lt;code>WebRowSet&lt;/code> object to be parsed, whose&#xA;   *        &lt;code>xmlReader&lt;/code> field must contain a reference to&#xA;   *        this &lt;code>XmlReader&lt;/code> object&#xA;   * @param reader the &lt;code>java.io.Reader&lt;/code> object from which&#xA;   *        &lt;code>caller&lt;/code> will be read&#xA;   * @throws SQLException if a database access error occurs or&#xA;   *            this &lt;code>XmlReader&lt;/code> object is not the reader&#xA;   *            for the given rowset&#xA;   */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * A specialized interface that facilitates an extension of the &#xA; * &lt;code>SyncProvider&lt;/code> abstract class for XML orientated &#xA; * synchronization providers.&#xA; * &lt;P>&#xA; * &lt;code>SyncProvider&lt;/code>  implementations that supply XML data reader&#xA; * capabilities such as output XML stream capabilities can implement this&#xA; * interface to provider standard &lt;code>XmlReader&lt;/code> objects to&#xA; * &lt;code>WebRowSet&lt;/code> implementations.&#xA; * &lt;p>&#xA; * An &lt;code>XmlReader&lt;/code> object is registered as the &#xA; * XML reader for a &lt;code>WebRowSet&lt;/code> by being assigned to the&#xA; * rowset's &lt;code>xmlReader&lt;/code> field. When the &lt;code>WebRowSet&lt;/code>&#xA; * object's &lt;code>readXml&lt;/code> method is invoked, it in turn invokes&#xA; * its XML reader's &lt;code>readXML&lt;/code> method.&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../RowSetReader.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
