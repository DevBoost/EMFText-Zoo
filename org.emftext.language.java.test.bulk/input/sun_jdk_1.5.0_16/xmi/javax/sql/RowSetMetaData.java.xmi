<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="RowSetMetaData.java">
  <comments>/*&#xA; * @(#)RowSetMetaData.java&#x9;1.8 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>sql</namespaces>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>sql</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="RowSetMetaData">
    <members xsi:type="members:InterfaceMethod" name="setColumnCount">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets the number of columns in the &lt;code>RowSet&lt;/code> object to&#xA;   * the given number.&#xA;   *&#xA;   * @param columnCount the number of columns in the &lt;code>RowSet&lt;/code> object&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnCount">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setAutoIncrement">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets whether the designated column is automatically numbered, &#xA;   * and thus read-only. The default is for a &lt;code>RowSet&lt;/code> object's&#xA;   * columns not to be automatically numbered.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param property &lt;code>true&lt;/code> if the column is automatically&#xA;   *                 numbered; &lt;code>false&lt;/code> if it is not&#xA;   *&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="property">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setCaseSensitive">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets whether the designated column is case sensitive.&#xA;   * The default is &lt;code>false&lt;/code>.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param property &lt;code>true&lt;/code> if the column is case sensitive;&#xA;   *                 &lt;code>false&lt;/code> if it is not&#xA;   *&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="property">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setSearchable">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets whether the designated column can be used in a where clause.&#xA;   * The default is &lt;code>false&lt;/code>.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param property &lt;code>true&lt;/code> if the column can be used in a &#xA;   *                 &lt;code>WHERE&lt;/code> clause; &lt;code>false&lt;/code> if it cannot&#xA;   *&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="property">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setCurrency">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets whether the designated column is a cash value.&#xA;   * The default is &lt;code>false&lt;/code>.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param property &lt;code>true&lt;/code> if the column is a cash value;&#xA;   *                 &lt;code>false&lt;/code> if it is not&#xA;   *&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="property">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setNullable">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets whether the designated column's value can be set to &#xA;   * &lt;code>NULL&lt;/code>.&#xA;   * The default is &lt;code>ResultSetMetaData.columnNullableUnknown&lt;/code>&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param property one of the following constants:&#xA;   *                 &lt;code>ResultSetMetaData.columnNoNulls&lt;/code>, &#xA;   *                 &lt;code>ResultSetMetaData.columnNullable&lt;/code>, or&#xA;   *                 &lt;code>ResultSetMetaData.columnNullableUnknown&lt;/code> &#xA;   *&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="property">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setSigned">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets whether the designated column is a signed number.&#xA;   * The default is &lt;code>false&lt;/code>.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param property &lt;code>true&lt;/code> if the column is a signed number;&#xA;   *                 &lt;code>false&lt;/code> if it is not&#xA;   *&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="property">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setColumnDisplaySize">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets the designated column's normal maximum width in chars to the&#xA;   * given &lt;code>int&lt;/code>.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param size the normal maximum number of characters for &#xA;   *           the designated column&#xA;   *&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="size">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setColumnLabel">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets the suggested column title for use in printouts and&#xA;   * displays, if any, to the given &lt;code>String&lt;/code>.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param label the column title&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="label">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setColumnName">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets the name of the designated column to the given &lt;code>String&lt;/code>.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param columnName the designated column's name&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setSchemaName">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets the name of the designated column's table's schema, if any, to&#xA;   * the given &lt;code>String&lt;/code>.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param schemaName the schema name&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="schemaName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setPrecision">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets the designated column's number of decimal digits to the&#xA;   * given &lt;code>int&lt;/code>.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param precision the total number of decimal digits&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="precision">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setScale">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets the designated column's number of digits to the&#xA;   * right of the decimal point to the given &lt;code>int&lt;/code>.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param scale the number of digits to right of decimal point&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="scale">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setTableName">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets the designated column's table name, if any, to the given&#xA;   * &lt;code>String&lt;/code>.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param tableName the column's table name&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tableName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setCatalogName">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets the designated column's table's catalog name, if any, to the given&#xA;   * &lt;code>String&lt;/code>.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param catalogName the column's catalog name&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="catalogName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setColumnType">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets the designated column's SQL type to the one given.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param SQLType the column's SQL type&#xA;   * @exception SQLException if a database access error occurs&#xA;   * @see Types&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="SQLType">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setColumnTypeName">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets the designated column's type name that is specific to the&#xA;   * data source, if any, to the given &lt;code>String&lt;/code>.&#xA;   *&#xA;   * @param columnIndex the first column is 1, the second is 2, ...&#xA;   * @param typeName data source specific type name.&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="columnIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="typeName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * An object that contains information about the columns in a&#xA; * &lt;code>RowSet&lt;/code> object.  This interface is&#xA; * an extension of the &lt;code>ResultSetMetaData&lt;/code> interface with &#xA; * methods for setting the values in a &lt;code>RowSetMetaData&lt;/code> object.  &#xA; * When a &lt;code>RowSetReader&lt;/code> object reads data into a &lt;code>RowSet&lt;/code>&#xA; * object, it creates a &lt;code>RowSetMetaData&lt;/code> object and initializes it&#xA; * using the methods in the &lt;code>RowSetMetaData&lt;/code> interface.  Then the&#xA; * reader passes the &lt;code>RowSetMetaData&lt;/code> object to the rowset.&#xA; * &lt;P>&#xA; * The methods in this interface are invoked internally when an application&#xA; * calls the method &lt;code>RowSet.execute&lt;/code>; an application&#xA; * programmer would not use them directly.&#xA; * &#xA; * @since 1.4 &#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../java/sql/ResultSetMetaData.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
