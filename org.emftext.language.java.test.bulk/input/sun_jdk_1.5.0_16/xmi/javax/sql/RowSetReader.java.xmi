<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="RowSetReader.java">
  <comments>/*&#xA; * @(#)RowSetReader.java&#x9;1.8 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>sql</namespaces>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>sql</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="RowSetReader">
    <members xsi:type="members:InterfaceMethod" name="readData">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Reads the new contents of the calling &lt;code>RowSet&lt;/code> object. &#xA;   * In order to call this method, a &lt;code>RowSet&lt;/code>&#xA;   * object must have implemented the &lt;code>RowSetInternal&lt;/code> interface&#xA;   * and registered this &lt;code>RowSetReader&lt;/code> object as its reader.&#xA;   * The &lt;code>readData&lt;/code>  method is invoked internally&#xA;   * by the &lt;code>RowSet.execute&lt;/code> method for rowsets that support the&#xA;   * reader/writer paradigm. &#xA;   * &#xA;   * &lt;P>The &lt;code>readData&lt;/code> method adds rows to the caller. &#xA;   * It can be implemented in a wide variety of ways and can even&#xA;   * populate the caller with rows from a nonrelational data source.&#xA;   * In general, a reader may invoke any of the rowset's methods,&#xA;   * with one exception. Calling the method &lt;code>execute&lt;/code> will &#xA;   * cause an &lt;code>SQLException&lt;/code> to be thrown&#xA;   * because &lt;code>execute&lt;/code> may not be called recursively.  Also,&#xA;   * when a reader invokes &lt;code>RowSet&lt;/code> methods, no listeners &#xA;   * are notified; that is, no &lt;code>RowSetEvent&lt;/code> objects are&#xA;   * generated and no &lt;code>RowSetListener&lt;/code> methods are invoked. &#xA;   * This is true because listeners are already being notified by the method&#xA;   * &lt;code>execute&lt;/code>.&#xA;   * &#xA;   * @param caller the &lt;code>RowSet&lt;/code> object (1) that has implemented the&#xA;   *         &lt;code>RowSetInternal&lt;/code> interface, (2) with which this reader is&#xA;   *        registered, and (3) whose &lt;code>execute&lt;/code> method called this reader&#xA;   * @exception SQLException if a database access error occurs or this method &#xA;   *            invokes the &lt;code>RowSet.execute&lt;/code> method&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="caller">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="RowSetInternal.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The facility that a disconnected &lt;code>RowSet&lt;/code> object calls on &#xA; * to populate itself with rows of data. A reader (an object implementing the&#xA; * &lt;code>RowSetReader&lt;/code> interface) may be registered with &#xA; * a &lt;code>RowSet&lt;/code> object that supports the reader/writer paradigm.&#xA; * When the &lt;code>RowSet&lt;/code> object's &lt;code>execute&lt;/code> method is&#xA; * called, it in turn calls the reader's &lt;code>readData&lt;/code> method.&#xA; *&#xA; * @since 1.4&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
