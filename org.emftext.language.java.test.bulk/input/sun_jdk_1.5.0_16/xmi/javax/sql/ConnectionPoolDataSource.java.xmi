<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="ConnectionPoolDataSource.java">
  <comments>/*&#xA; * @(#)ConnectionPoolDataSource.java&#x9;1.10 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>sql</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>sql</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="ConnectionPoolDataSource">
    <members xsi:type="members:InterfaceMethod" name="getPooledConnection">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;   * Attempts to establish a physical database connection that can&#xA;   * be used as a pooled connection.&#xA;   *&#xA;   * @return  a &lt;code>PooledConnection&lt;/code> object that is a physical&#xA;   *         connection to the database that this&#xA;   *         &lt;code>ConnectionPoolDataSource&lt;/code> object represents&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
          <target xsi:type="classifiers:Interface" href="PooledConnection.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getPooledConnection">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;   * Attempts to establish a physical database connection that can&#xA;   * be used as a pooled connection.&#xA;   *&#xA;   * @param user the database user on whose behalf the connection is being made&#xA;   * @param password the user's password&#xA;   * @return  a &lt;code>PooledConnection&lt;/code> object that is a physical&#xA;   *         connection to the database that this&#xA;   *         &lt;code>ConnectionPoolDataSource&lt;/code> object represents&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
          <target xsi:type="classifiers:Interface" href="PooledConnection.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="user">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="password">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getLogWriter">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <comments>/**&#xA;   * Retrieves the log writer for this &lt;code>ConnectionPoolDataSource&lt;/code>&#xA;   * object.  &#xA;   * &lt;p>The log writer is a character output stream to which all logging&#xA;   * and tracing messages for this &lt;code>ConnectionPoolDataSource&lt;/code> object&#xA;   * are printed.  This includes messages printed by the methods of this&#xA;   * object, messages printed by methods of other objects manufactured&#xA;   * by this object, and so on.  Messages printed to a data source-&#xA;   * specific log writer are not printed to the log writer associated&#xA;   * with the &lt;code>java.sql.DriverManager&lt;/code> class.  When a data&#xA;   * source object is created, the log writer is initially null; in other &#xA;   * words, the default is for logging to be disabled.&#xA;   *&#xA;   * @return the log writer for this  &lt;code>ConnectionPoolDataSource&lt;/code> &#xA;   *         object or &lt;code>null&lt;/code> if logging is disabled&#xA;   * @exception SQLException if a database access error occurs  &#xA;   * @see #setLogWriter&#xA;   */</comments>
        <namespaces>java</namespaces>
        <namespaces>io</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/io/PrintWriter.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setLogWriter">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets the log writer for this &lt;code>ConnectionPoolDataSource&lt;/code>&#xA;   * object to the given &lt;code>java.io.PrintWriter&lt;/code> object.  &#xA;   *&#xA;   * &lt;p>The log writer is a character output stream to which all logging&#xA;   * and tracing messages for this &lt;code>ConnectionPoolDataSource&lt;/code>&#xA;   * object are printed.  This includes messages printed by the methods of this&#xA;   * object, messages printed by methods of other objects manufactured&#xA;   * by this object, and so on.  Messages printed to a data source-&#xA;   * specific log writer are not printed to the log writer associated&#xA;   * with the &lt;code>java.sql.Drivermanager&lt;/code> class.  When a data&#xA;   * source object is created, the log writer is initially null; in other &#xA;   * words, the default is for logging to be disabled.&#xA;   *&#xA;   * @param out the new log writer; &lt;code>null&lt;/code> to disable logging&#xA;   * @exception SQLException if a database access error occurs  &#xA;   * @see #getLogWriter&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>io</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/io/PrintWriter.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setLoginTimeout">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;   * Sets the maximum time in seconds that this &#xA;   * &lt;code>ConnectionPoolDataSource&lt;/code> object will wait&#xA;   * while attempting to connect to a database.  A value of zero&#xA;   * specifies that the timeout is the default system timeout &#xA;   * if there is one; otherwise, it specifies that there is no timeout.&#xA;   * When a &lt;code>ConnectionPoolDataSource&lt;/code> object is created,&#xA;   * the login timeout is initially zero.&#xA;   *&#xA;   * @param seconds the data source login time limit&#xA;   * @exception SQLException if a database access error occurs.&#xA;   * @see #getLoginTimeout&#xA;   */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="seconds">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getLoginTimeout">
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;   * Retrieves the maximum time in seconds that this &#xA;   * &lt;code>ConnectionPoolDataSource&lt;/code> object will wait&#xA;   * while attempting to connect to a database.  A value of zero&#xA;   * means that the timeout is the default system timeout &#xA;   * if there is one; otherwise, it means that there is no timeout.&#xA;   * When a &lt;code>DataSource&lt;/code> object is created, its login timeout is&#xA;   * initially zero.&#xA;   *&#xA;   * @return the data source login time limit&#xA;   * @exception SQLException if a database access error occurs.&#xA;   * @see #setLoginTimeout&#xA;   */</comments>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/sql/SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * A factory for &lt;code>PooledConnection&lt;/code>&#xA; * objects.  An object that implements this interface will typically be&#xA; * registered with a naming service that is based on the&#xA; * Java&lt;sup>&lt;font size=-2>TM&lt;/font>&lt;/sup> Naming and Directory Interface&#xA; * (JNDI).&#xA; *&#xA; * @since 1.4&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
