<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="IIOReadProgressListener.java">
  <comments>/*&#xA; * @(#)IIOReadProgressListener.java&#x9;1.16 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>imageio</namespaces>
  <namespaces>event</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../java/util/EventListener.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../java/util/Locale.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>imageio</namespaces>
    <classifier xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="IIOReadProgressListener">
    <members xsi:type="members:InterfaceMethod" name="sequenceStarted">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports that a sequence of read operations is beginning.&#xA;     * &lt;code>ImageReader&lt;/code> implementations are required to call&#xA;     * this method exactly once from their&#xA;     * &lt;code>readAll(Iterator)&lt;/code> method.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this method.&#xA;     * @param minIndex the index of the first image to be read.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="minIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="sequenceComplete">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports that a sequence of read operationshas completed.&#xA;     * &lt;code>ImageReader&lt;/code> implementations are required to call&#xA;     * this method exactly once from their&#xA;     * &lt;code>readAll(Iterator)&lt;/code> method.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this method.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="imageStarted">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports that an image read operation is beginning.  All&#xA;     * &lt;code>ImageReader&lt;/code> implementations are required to call&#xA;     * this method exactly once when beginning an image read&#xA;     * operation.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this method.&#xA;     * @param imageIndex the index of the image being read within its&#xA;     * containing input file or stream.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="imageIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="imageProgress">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports the approximate degree of completion of the current&#xA;     * &lt;code>read&lt;/code> call of the associated&#xA;     * &lt;code>ImageReader&lt;/code>.&#xA;     *&#xA;     * &lt;p> The degree of completion is expressed as a percentage&#xA;     * varying from &lt;code>0.0F&lt;/code> to &lt;code>100.0F&lt;/code>.  The&#xA;     * percentage should ideally be calculated in terms of the&#xA;     * remaining time to completion, but it is usually more practical&#xA;     * to use a more well-defined metric such as pixels decoded or&#xA;     * portion of input stream consumed.  In any case, a sequence of&#xA;     * calls to this method during a given read operation should&#xA;     * supply a monotonically increasing sequence of percentage&#xA;     * values.  It is not necessary to supply the exact values&#xA;     * &lt;code>0&lt;/code> and &lt;code>100&lt;/code>, as these may be inferred&#xA;     * by the callee from other methods.&#xA;     *&#xA;     * &lt;p> Each particular &lt;code>ImageReader&lt;/code> implementation may&#xA;     * call this method at whatever frequency it desires.  A rule of&#xA;     * thumb is to call it around each 5 percent mark.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this method.&#xA;     * @param percentageDone the approximate percentage of decoding that&#xA;     * has been completed.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="percentageDone">
        <typeReference xsi:type="types:Float"/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="imageComplete">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports that the current image read operation has completed.&#xA;     * All &lt;code>ImageReader&lt;/code> implementations are required to&#xA;     * call this method exactly once upon completion of each image&#xA;     * read operation.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this&#xA;     * method.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="thumbnailStarted">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports that a thumbnail read operation is beginning.  All&#xA;     * &lt;code>ImageReader&lt;/code> implementations are required to call&#xA;     * this method exactly once when beginning a thumbnail read&#xA;     * operation.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this method.&#xA;     * @param imageIndex the index of the image being read within its&#xA;     * containing input file or stream.&#xA;     * @param thumbnailIndex the index of the thumbnail being read.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="imageIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="thumbnailIndex">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="thumbnailProgress">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports the approximate degree of completion of the current&#xA;     * &lt;code>getThumbnail&lt;/code> call within the associated&#xA;     * &lt;code>ImageReader&lt;/code>.  The semantics are identical to those&#xA;     * of &lt;code>imageProgress&lt;/code>.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this method.&#xA;     * @param percentageDone the approximate percentage of decoding that&#xA;     * has been completed.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="percentageDone">
        <typeReference xsi:type="types:Float"/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="thumbnailComplete">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports that a thumbnail read operation has completed.  All&#xA;     * &lt;code>ImageReader&lt;/code> implementations are required to call&#xA;     * this method exactly once upon completion of each thumbnail read&#xA;     * operation.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this&#xA;     * method.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="readAborted">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports that a read has been aborted via the reader's&#xA;     * &lt;code>abort&lt;/code> method.  No further notifications will be&#xA;     * given.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this&#xA;     * method.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * An interface used by &lt;code>ImageReader&lt;/code> implementations to&#xA; * notify callers of their image and thumbnail reading methods of&#xA; * progress.&#xA; *&#xA; * &lt;p> This interface receives general indications of decoding&#xA; * progress (via the &lt;code>imageProgress&lt;/code> and&#xA; * &lt;code>thumbnailProgress&lt;/code> methods), and events indicating when&#xA; * an entire image has been updated (via the&#xA; * &lt;code>imageStarted&lt;/code>, &lt;code>imageComplete&lt;/code>,&#xA; * &lt;code>thumbnailStarted&lt;/code> and &lt;code>thumbnailComplete&lt;/code>&#xA; * methods).  Applications that wish to be informed of pixel updates&#xA; * as they happen (for example, during progressive decoding), should&#xA; * provide an &lt;code>IIOReadUpdateListener&lt;/code>.&#xA; *&#xA; * @see IIOReadUpdateListener&#xA; * @see javax.imageio.ImageReader#addIIOReadProgressListener&#xA; * @see javax.imageio.ImageReader#removeIIOReadProgressListener&#xA; *&#xA; * @version 0.5&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../java/util/EventListener.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
