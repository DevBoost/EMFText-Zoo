<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="IIOReadUpdateListener.java">
  <comments>/*&#xA; * @(#)IIOReadUpdateListener.java&#x9;1.19 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>imageio</namespaces>
  <namespaces>event</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <namespaces>image</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../java/awt/image/BufferedImage.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../java/util/EventListener.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>imageio</namespaces>
    <classifier xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="IIOReadUpdateListener">
    <members xsi:type="members:InterfaceMethod" name="passStarted">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports that the current read operation is about to begin a&#xA;     * progressive pass.  Readers of formats that support progressive&#xA;     * encoding should use this to notify clients when each pass is&#xA;     * completed when reading a progressively encoded image.&#xA;     *&#xA;     * &lt;p> An estimate of the area that will be updated by the pass is&#xA;     * indicated by the &lt;code>minX&lt;/code>, &lt;code>minY&lt;/code>,&#xA;     * &lt;code>width&lt;/code>, and &lt;code>height&lt;/code> parameters.  If the&#xA;     * pass is interlaced, that is, it only updates selected rows or&#xA;     * columns, the &lt;code>periodX&lt;/code> and &lt;code>periodY&lt;/code>&#xA;     * parameters will indicate the degree of subsampling.  The set of&#xA;     * bands that may be affected is indicated by the value of&#xA;     * &lt;code>bands&lt;/code>.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this&#xA;     * method.&#xA;     * @param theImage the &lt;code>BufferedImage&lt;/code> being updated.&#xA;     * @param pass the numer of the pass that is about to begin,&#xA;     * starting with 0.&#xA;     * @param minPass the index of the first pass that will be decoded.&#xA;     * @param maxPass the index of the last pass that will be decoded.&#xA;     * @param minX the X coordinate of the leftmost updated column&#xA;     * of pixels.&#xA;     * @param minY the Y coordinate of the uppermost updated row&#xA;     * of pixels.&#xA;     * @param periodX the horizontal spacing between updated pixels;&#xA;     * a value of 1 means no gaps.&#xA;     * @param periodY the vertical spacing between updated pixels;&#xA;     * a value of 1 means no gaps.&#xA;     * @param bands an array of &lt;code>int&lt;/code>s indicating the the&#xA;     * set bands that may be updated.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="theImage">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/awt/image/BufferedImage.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pass">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="minPass">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="maxPass">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="minX">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="minY">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="periodX">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="periodY">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bands">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsBefore/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="imageUpdate">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports that a given region of the image has been updated.&#xA;     * The application might choose to redisplay the specified area,&#xA;     * for example, in order to provide a progressive display effect,&#xA;     * or perform other incremental processing.&#xA;     *&#xA;     * &lt;p> Note that different image format readers may produce&#xA;     * decoded pixels in a variety of different orders.  Many readers&#xA;     * will produce pixels in a simple top-to-bottom,&#xA;     * left-to-right-order, but others may use multiple passes of&#xA;     * interlacing, tiling, etc.  The sequence of updates may even&#xA;     * differ from call to call depending on network speeds, for&#xA;     * example.  A call to this method does not guarantee that all the&#xA;     * specified pixels have actually been updated, only that some&#xA;     * activity has taken place within some subregion of the one&#xA;     * specified.&#xA;     *&#xA;     * &lt;p> The particular &lt;code>ImageReader&lt;/code> implementation may&#xA;     * choose how often to provide updates.  Each update specifies&#xA;     * that a given region of the image has been updated since the&#xA;     * last update.  A region is described by its spatial bounding box&#xA;     * (&lt;code>minX&lt;/code>, &lt;code>minY&lt;/code>, &lt;code>width&lt;/code>, and&#xA;     * &lt;code>height&lt;/code>); X and Y subsampling factors&#xA;     * (&lt;code>periodX&lt;/code> and &lt;code>periodY&lt;/code>); and a set of&#xA;     * updated bands (&lt;code>bands&lt;/code>).  For example, the update:&#xA;     *&#xA;     * &lt;pre>&#xA;     * minX = 10&#xA;     * minY = 20&#xA;     * width = 3&#xA;     * height = 4&#xA;     * periodX = 2&#xA;     * periodY = 3&#xA;     * bands = { 1, 3 }&#xA;     * &lt;/pre>&#xA;     *&#xA;     * would indicate that bands 1 and 3 of the following pixels were&#xA;     * updated:&#xA;     *&#xA;     * &lt;pre>&#xA;     * (10, 20) (12, 20) (14, 20)&#xA;     * (10, 23) (12, 23) (14, 23)&#xA;     * (10, 26) (12, 26) (14, 26)&#xA;     * (10, 29) (12, 29) (14, 29)&#xA;     * &lt;/pre>&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this method.&#xA;     * @param theImage the &lt;code>BufferedImage&lt;/code> being updated.&#xA;     * @param minX the X coordinate of the leftmost updated column&#xA;     * of pixels.&#xA;     * @param minY the Y coordinate of the uppermost updated row&#xA;     * of pixels.&#xA;     * @param width the number of updated pixels horizontally.&#xA;     * @param height the number of updated pixels vertically.&#xA;     * @param periodX the horizontal spacing between updated pixels;&#xA;     * a value of 1 means no gaps.&#xA;     * @param periodY the vertical spacing between updated pixels;&#xA;     * a value of 1 means no gaps.&#xA;     * @param bands an array of &lt;code>int&lt;/code>s indicating which&#xA;     * bands are being updated.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="theImage">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/awt/image/BufferedImage.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="minX">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="minY">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="width">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="height">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="periodX">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="periodY">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bands">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsBefore/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="passComplete">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports that the current read operation has completed a&#xA;     * progressive pass.  Readers of formats that support&#xA;     * progressive encoding should use this to notify clients when&#xA;     * each pass is completed when reading a progressively&#xA;     * encoded image.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this&#xA;     * method.&#xA;     * @param theImage the &lt;code>BufferedImage&lt;/code> being updated.&#xA;     *&#xA;     * @see javax.imageio.ImageReadParam#setSourceProgressivePasses(int, int)&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="theImage">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/awt/image/BufferedImage.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="thumbnailPassStarted">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports that the current thumbnail read operation is about to&#xA;     * begin a progressive pass.  Readers of formats that support&#xA;     * progressive encoding should use this to notify clients when&#xA;     * each pass is completed when reading a progressively encoded&#xA;     * thumbnail image.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this&#xA;     * method.&#xA;     * @param theThumbnail the &lt;code>BufferedImage&lt;/code> thumbnail&#xA;     * being updated.&#xA;     * @param pass the numer of the pass that is about to begin,&#xA;     * starting with 0.&#xA;     * @param minPass the index of the first pass that will be decoded.&#xA;     * @param maxPass the index of the last pass that will be decoded.&#xA;     * @param minX the X coordinate of the leftmost updated column&#xA;     * of pixels.&#xA;     * @param minY the Y coordinate of the uppermost updated row&#xA;     * of pixels.&#xA;     * @param periodX the horizontal spacing between updated pixels;&#xA;     * a value of 1 means no gaps.&#xA;     * @param periodY the vertical spacing between updated pixels;&#xA;     * a value of 1 means no gaps.&#xA;     * @param bands an array of &lt;code>int&lt;/code>s indicating the the&#xA;     * set bands that may be updated.&#xA;     *&#xA;     * @see #passStarted&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="theThumbnail">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/awt/image/BufferedImage.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pass">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="minPass">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="maxPass">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="minX">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="minY">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="periodX">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="periodY">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bands">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsBefore/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="thumbnailUpdate">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports that a given region of a thumbnail image has been updated.&#xA;     * The application might choose to redisplay the specified area,&#xA;     * for example, in order to provide a progressive display effect,&#xA;     * or perform other incremental processing.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this method.&#xA;     * @param theThumbnail the &lt;code>BufferedImage&lt;/code> thumbnail&#xA;     * being updated.&#xA;     * @param minX the X coordinate of the leftmost updated column&#xA;     * of pixels.&#xA;     * @param minY the Y coordinate of the uppermost updated row&#xA;     * of pixels.&#xA;     * @param width the number of updated pixels horizontally.&#xA;     * @param height the number of updated pixels vertically.&#xA;     * @param periodX the horizontal spacing between updated pixels;&#xA;     * a value of 1 means no gaps.&#xA;     * @param periodY the vertical spacing between updated pixels;&#xA;     * a value of 1 means no gaps.&#xA;     * @param bands an array of &lt;code>int&lt;/code>s indicating which&#xA;     * bands are being updated.&#xA;     *&#xA;     * @see #imageUpdate&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="theThumbnail">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/awt/image/BufferedImage.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="minX">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="minY">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="width">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="height">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="periodX">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="periodY">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bands">
        <typeReference xsi:type="types:Int"/>
        <arrayDimensionsBefore/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="thumbnailPassComplete">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Reports that the current thumbnail read operation has completed&#xA;     * a progressive pass.  Readers of formats that support&#xA;     * progressive encoding should use this to notify clients when&#xA;     * each pass is completed when reading a progressively encoded&#xA;     * thumbnail image.&#xA;     *&#xA;     * @param source the &lt;code>ImageReader&lt;/code> object calling this&#xA;     * method.&#xA;     * @param theThumbnail the &lt;code>BufferedImage&lt;/code> thumbnail&#xA;     * being updated.&#xA;     *&#xA;     * @see #passComplete&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ImageReader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="theThumbnail">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/awt/image/BufferedImage.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * An interface used by &lt;code>ImageReader&lt;/code> implementations to&#xA; * notify callers of their image and thumbnail reading methods of&#xA; * pixel updates.&#xA; * &#xA; * @see javax.imageio.ImageReader#addIIOReadUpdateListener&#xA; * @see javax.imageio.ImageReader#removeIIOReadUpdateListener&#xA; *&#xA; * @version 0.5&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../java/util/EventListener.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
