<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:generics="http://www.emftext.org/java/generics" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/generics ../../../java.ecore#/6 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="RegisterableService.java">
  <comments>/*&#xA; * @(#)RegisterableService.java&#x9;1.9 04/05/05&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>imageio</namespaces>
  <namespaces>spi</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="RegisterableService">
    <members xsi:type="members:InterfaceMethod" name="onRegistration">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Called when an object implementing this interface is added to&#xA;     * the given &lt;code>category&lt;/code> of the given&#xA;     * &lt;code>registry&lt;/code>.  The object may already be registered&#xA;     * under another category or categories.&#xA;     *&#xA;     * @param registry a &lt;code>ServiceRegistry&lt;/code> where this&#xA;     * object has been registered.&#xA;     * @param category a &lt;code>Class&lt;/code> object indicating the&#xA;     * registry category under which this object has been registered.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="registry">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="ServiceRegistry.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="category">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="onDeregistration">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Called when an object implementing this interface is removed&#xA;     * from the given &lt;code>category&lt;/code> of the given&#xA;     * &lt;code>registry&lt;/code>.  The object may still be registered&#xA;     * under another category or categories.&#xA;     *&#xA;     * @param registry a &lt;code>ServiceRegistry&lt;/code> from which this&#xA;     * object is being (wholly or partially) deregistered.&#xA;     * @param category a &lt;code>Class&lt;/code> object indicating the&#xA;     * registry category from which this object is being deregistered.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="registry">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="ServiceRegistry.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="category">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * An optional interface that may be provided by service provider&#xA; * objects that will be registered with a&#xA; * &lt;code>ServiceRegistry&lt;/code>.  If this interface is present,&#xA; * notification of registration and deregistration will be performed.&#xA; *&#xA; * @see ServiceRegistry&#xA; *&#xA; * @version 0.5&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
