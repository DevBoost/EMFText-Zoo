<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../java.ecore#/16" name="BMPImageWriteParam.java">
  <comments>/*&#xA; * @(#)BMPImageWriteParam.java&#x9;1.4 04/01/06&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>imageio</namespaces>
  <namespaces>plugins</namespaces>
  <namespaces>bmp</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>imageio</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../ImageWriteParam.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>imageio</namespaces>
    <namespaces>plugins</namespaces>
    <namespaces>bmp</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../com/sun/imageio/plugins/bmp/BMPConstants.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="BMPImageWriteParam">
    <members xsi:type="members:Field" name="topDown">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Constructor" name="BMPImageWriteParam">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.0"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <comments>// Set compression types (&quot;BI_RGB&quot; denotes uncompressed).</comments>
            <target xsi:type="members:Field" href="../../ImageWriteParam.class.xmi#//@classifiers.0/@members.18"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../../com/sun/imageio/plugins/bmp/BMPConstants.class.xmi#//@classifiers.0/@members.16"/>
            </next>
            <target xsi:type="classifiers:Interface" href="../../../../com/sun/imageio/plugins/bmp/BMPConstants.class.xmi#//@classifiers.0"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <comments>// Set compression flag.</comments>
            <target xsi:type="members:Field" href="../../ImageWriteParam.class.xmi#//@classifiers.0/@members.16"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral" value="true"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../ImageWriteParam.class.xmi#//@classifiers.0/@members.17"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../ImageWriteParam.class.xmi#//@classifiers.0/@members.3"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../ImageWriteParam.class.xmi#//@classifiers.0/@members.19"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../com/sun/imageio/plugins/bmp/BMPConstants.class.xmi#//@classifiers.0/@members.10"/>
                </next>
                <target xsi:type="classifiers:Interface" href="../../../../com/sun/imageio/plugins/bmp/BMPConstants.class.xmi#//@classifiers.0"/>
              </position>
            </arraySelectors>
            <target xsi:type="members:Field" href="../../ImageWriteParam.class.xmi#//@classifiers.0/@members.18"/>
          </value>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="locale">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a &lt;code>BMPImageWriteParam&lt;/code> set to use a given&#xA;     * &lt;code>Locale&lt;/code> and with default values for all parameters.&#xA;     *&#xA;     * @param locale a &lt;code>Locale&lt;/code> to be used to localize&#xA;     * compression type names and quality descriptions, or&#xA;     * &lt;code>null&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="BMPImageWriteParam">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="literals:NullLiteral"/>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs an &lt;code>BMPImageWriteParam&lt;/code> object with default&#xA;     * values for all parameters and a &lt;code>null&lt;/code> &lt;code>Locale&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="setTopDown">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="topDown">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * If set, the data will be written out in a top-down manner, the first&#xA;     * scanline being written first.&#xA;     *&#xA;     * @param topDown whether the data are written in top-down order.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isTopDown">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the value of the &lt;code>topDown&lt;/code> parameter.&#xA;     * The default is &lt;code>false&lt;/code>.&#xA;     *&#xA;     * @return whether the data are written in top-down order.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * A subclass of &lt;code>ImageWriteParam&lt;/code> for encoding images in&#xA; * the BMP format.&#xA; *&#xA; * &lt;p> This class allows for the specification of various parameters&#xA; * while writing a BMP format image file.  By default, the data layout &#xA; * is bottom-up, such that the pixels are stored in bottom-up order, &#xA; * the first scanline being stored last.&#xA; *&#xA; * &lt;p>The particular compression scheme to be used can be specified by using&#xA; * the &lt;code>setCompressionType()&lt;/code> method with the appropriate type&#xA; * string.  The compression scheme specified will be honored if and only if it&#xA; * is compatible with the type of image being written. If the specified &#xA; * compression scheme is not compatible with the type of image being written&#xA; * then the &lt;code>IOException&lt;/code> will be thrown by the BMP image writer.&#xA; * If the compression type is not set explicitly then &lt;code>getCompressionType()&lt;/code>&#xA; * will return &lt;code>null&lt;/code>. In this case the BMP image writer will select &#xA; * a compression type that supports encoding of the given image without loss&#xA; * of the color resolution.&#xA; * &lt;p>The compression type strings and the image type(s) each supports are&#xA; * listed in the following&#xA; * table:&#xA; *&#xA; * &lt;p>&lt;table border=1>&#xA; * &lt;caption>&lt;b>Compression Types&lt;/b>&lt;/caption>&#xA; * &lt;tr>&lt;th>Type String&lt;/th> &lt;th>Description&lt;/th>  &lt;th>Image Types&lt;/th>&lt;/tr>&#xA; * &lt;tr>&lt;td>BI_RGB&lt;/td>  &lt;td>Uncompressed RLE&lt;/td> &lt;td>&lt;= 8-bits/sample&lt;/td>&lt;/tr>&#xA; * &lt;tr>&lt;td>BI_RLE8&lt;/td> &lt;td>8-bit Run Length Encoding&lt;/td> &lt;td>&lt;= 8-bits/sample&lt;/td>&lt;/tr>&#xA; * &lt;tr>&lt;td>BI_RLE4&lt;/td> &lt;td>4-bit Run Length Encoding&lt;/td> &lt;td>&lt;= 4-bits/sample&lt;/td>&lt;/tr>&#xA; * &lt;tr>&lt;td>BI_BITFIELDS&lt;/td> &lt;td>Packed data&lt;/td> &lt;td> 16 or 32 bits/sample&lt;/td>&lt;/tr>&#xA; * &lt;/table>&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="../../ImageWriteParam.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
