<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="ObjectChangeListener.java">
  <comments>/*&#xA; * @(#)ObjectChangeListener.java&#x9;1.7 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>naming</namespaces>
  <namespaces>event</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="ObjectChangeListener">
    <members xsi:type="members:InterfaceMethod" name="objectChanged">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Called when an object has been changed.&#xA;     *&lt;p>&#xA;     * The binding of the changed object can be obtained using&#xA;     * &lt;tt>evt.getNewBinding()&lt;/tt>. Its old binding (before the change)&#xA;     * can be obtained using &lt;tt>evt.getOldBinding()&lt;/tt>.&#xA;     * @param evt The nonnull naming event.&#xA;     * @see NamingEvent#OBJECT_CHANGED&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="evt">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="NamingEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA;  * Specifies the method that a listener of a &lt;tt>NamingEvent&lt;/tt>&#xA;  * with event type of &lt;tt>OBJECT_CHANGED&lt;/tt> must implement.&#xA;  *&lt;p>&#xA;  * An &lt;tt>OBJECT_CHANGED&lt;/tt> event type is fired when (the contents of)&#xA;  * an object has changed. This might mean that its attributes have been modified,&#xA;  * added, or removed, and/or that the object itself has been replaced.&#xA;  * How the object has changed can be determined by examining the&#xA;  * &lt;tt>NamingEvent&lt;/tt>'s old and new bindings.&#xA;  *&lt;p>&#xA;  * A listener interested in &lt;tt>OBJECT_CHANGED&lt;/tt> event types must:&#xA;  *&lt;ol>&#xA;  *&#xA;  *&lt;li>Implement this interface and its method (&lt;tt>objectChanged()&lt;/tt>)&#xA;  *&lt;li>Implement &lt;tt>NamingListener.namingExceptionThrown()&lt;/tt> so that&#xA;  * it will be notified of exceptions thrown while attempting to&#xA;  * collect information about the events.&#xA;  *&lt;li>Register with the source using the source's &lt;tt>addNamingListener()&lt;/tt>&#xA;  *    method.&#xA;  *&lt;/ol>&#xA;  * A listener that wants to be notified of namespace change events&#xA;  * should also implement the &lt;tt>NamespaceChangeListener&lt;/tt>&#xA;  * interface.&#xA;  * &#xA;  * @author Rosanna Lee&#xA;  * @author Scott Seligman&#xA;  * @version 1.7 03/12/19&#xA;  * &#xA;  * @see NamingEvent&#xA;  * @see NamespaceChangeListener&#xA;  * @see EventContext&#xA;  * @see EventDirContext&#xA;  * @since 1.3&#xA;  */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="NamingListener.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
