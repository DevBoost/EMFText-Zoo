<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:generics="http://www.emftext.org/java/generics" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/generics ../../../java.ecore#/6 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="Resolver.java">
  <comments>/*&#xA; * @(#)Resolver.java&#x9;1.9 04/05/05&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>naming</namespaces>
  <namespaces>spi</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>naming</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../Context.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>naming</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../Name.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>naming</namespaces>
    <classifier xsi:type="classifiers:Class" href="../NamingException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="Resolver">
    <members xsi:type="members:InterfaceMethod" name="resolveToClass">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ResolveResult.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../Name.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="contextType">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:ExtendsTypeArgument">
              <extendTypes xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../Context.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </extendTypes>
            </typeArguments>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../NamingException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Partially resolves a name.  Stops at the first&#xA;     * context that is an instance of a given subtype of&#xA;     * &lt;code>Context&lt;/code>.&#xA;     *&#xA;     * @param name&#xA;     *&#x9;&#x9;the name to resolve&#xA;     * @param contextType&#xA;     *&#x9;&#x9;the type of object to resolve.  This should&#xA;     *&#x9;&#x9;be a subtype of &lt;code>Context&lt;/code>.&#xA;     * @return&#x9;the object that was found, along with the unresolved&#xA;     *&#x9;&#x9;suffix of &lt;code>name&lt;/code>.  Cannot be null.&#xA;     *&#xA;     * @throws&#x9;javax.naming.NotContextException&#xA;     *&#x9;&#x9;if no context of the appropriate type is found&#xA;     * @throws&#x9;NamingException if a naming exception was encountered&#xA;     *&#xA;     * @see #resolveToClass(String, Class)&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="resolveToClass">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ResolveResult.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="contextType">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:ExtendsTypeArgument">
              <extendTypes xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../Context.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </extendTypes>
            </typeArguments>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../NamingException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Partially resolves a name.&#xA;     * See {@link #resolveToClass(Name, Class)} for details.&#xA;     *&#xA;     * @param name&#xA;     *&#x9;&#x9;the name to resolve&#xA;     * @param contextType&#xA;     *&#x9;&#x9;the type of object to resolve.  This should&#xA;     *&#x9;&#x9;be a subtype of &lt;code>Context&lt;/code>.&#xA;     * @return&#x9;the object that was found, along with the unresolved&#xA;     *&#x9;&#x9;suffix of &lt;code>name&lt;/code>.  Cannot be null.&#xA;     *&#xA;     * @throws&#x9;javax.naming.NotContextException&#xA;     *&#x9;&#x9;if no context of the appropriate type is found&#xA;     * @throws&#x9;NamingException if a naming exception was encountered&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA;  * This interface represents an &quot;intermediate context&quot; for name resolution.&#xA;  *&lt;p>&#xA;  * The Resolver interface contains methods that are implemented by contexts &#xA;  * that do not support subtypes of Context, but which can act as&#xA;  * intermediate contexts for resolution purposes.&#xA;  *&lt;p>&#xA;  * A &lt;tt>Name&lt;/tt> parameter passed to any method is owned&#xA;  * by the caller.  The service provider will not modify the object&#xA;  * or keep a reference to it.&#xA;  * A &lt;tt>ResolveResult&lt;/tt> object returned by any&#xA;  * method is owned by the caller.  The caller may subsequently modify it;&#xA;  * the service provider may not.&#xA;  *&#xA;  * @author Rosanna Lee&#xA;  * @author Scott Seligman&#xA;  * @version 1.9 04/05/05&#xA;  * @since 1.3&#xA;  */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
