<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/types ../../../java.ecore#/16" name="HasControls.java">
  <comments>/*&#xA; * @(#)HasControls.java&#x9;1.8 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>naming</namespaces>
  <namespaces>ldap</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>naming</namespaces>
    <classifier xsi:type="classifiers:Class" href="../NamingException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="HasControls">
    <members xsi:type="members:InterfaceMethod" name="getControls">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="Control.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../NamingException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;      * Retrieves an array of &lt;tt>Control&lt;/tt>s from the object that&#xA;      * implements this interface. It is null if there are no controls.&#xA;      *&#xA;      * @return A possibly null array of &lt;tt>Control&lt;/tt> objects.&#xA;      * @throws NamingException If cannot return controls due to an error.&#xA;      */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA;  * This interface is for returning controls with objects returned&#xA;  * in NamingEnumerations.&#xA;  * For example, suppose a server sends back controls with the results&#xA;  * of a search operation, the service provider would return a NamingEnumeration of&#xA;  * objects that are both SearchResult and implement HasControls.&#xA;  *&lt;blockquote>&lt;pre>&#xA;  *   NamingEnumeration elts = ectx.search((Name)name, filter, sctls);&#xA;  *   while (elts.hasMore()) {&#xA;  *&#x9;Object entry = elts.next();&#xA;  *&#xA;  *&#x9;// Get search result &#xA;  *&#x9;SearchResult res = (SearchResult)entry;&#xA;  *&#x9;// do something with it &#xA;  *&#xA;  *&#x9;// Get entry controls&#xA;  *  &#x9;if (entry instanceof HasControls) {&#xA;  *&#x9;    Control[] entryCtls = ((HasControls)entry).getControls();&#xA;  *&#x9;    // do something with controls&#xA;  *&#x9;}&#xA;  *   }&#xA;  *&lt;/pre>&lt;/blockquote>&#xA;  * &#xA;  * @author Rosanna Lee&#xA;  * @author Scott Seligman&#xA;  * @author Vincent Ryan&#xA;  * @version 1.8 03/12/19&#xA;  * @since 1.3&#xA;  *&#xA;  */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
