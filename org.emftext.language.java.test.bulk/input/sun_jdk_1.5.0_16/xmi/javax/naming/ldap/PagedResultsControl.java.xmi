<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16" name="PagedResultsControl.java">
  <comments>/*&#xA; * @(#)PagedResultsControl.java&#x9;1.4 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>naming</namespaces>
  <namespaces>ldap</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../java/io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jndi</namespaces>
    <namespaces>ldap</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../com/sun/jndi/ldap/Ber.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jndi</namespaces>
    <namespaces>ldap</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../com/sun/jndi/ldap/BerEncoder.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="PagedResultsControl">
    <members xsi:type="members:Field" name="OID">
      <initialValue xsi:type="references:StringReference" value="1.2.840.113556.1.4.319"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The paged-results control's assigned object identifier&#xA;     * is 1.2.840.113556.1.4.319.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="EMPTY_COOKIE">
      <initialValue xsi:type="arrays:ArrayInstantiationBySize">
        <typeReference xsi:type="types:Byte"/>
        <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="serialVersionUID">
      <initialValue xsi:type="literals:DecimalLongLiteral" decimalValue="6684806685736844298"/>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Constructor" name="PagedResultsControl">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.1"/>
          <arguments xsi:type="literals:NullLiteral"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="BasicControl.class.xmi#//@classifiers.0/@members.2"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          </value>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pageSize">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="criticality">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a control to set the number of entries to be returned per&#xA;     * page of results.&#xA;     *&#xA;     * @param&#x9;pageSize&#x9;The number of entries to return in a page.&#xA;     * @param&#x9;criticality&#x9;If true then the server must honor the control &#xA;     *                          and return search results as indicated by &#xA;     *                          pageSize or refuse to perform the search. &#xA;     *                          If false, then the server need not honor the &#xA;     *                          control.&#xA;     * @exception IOException&#x9;If an error was encountered while encoding the&#xA;     *                          supplied arguments into a control.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="PagedResultsControl">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.2"/>
          <arguments xsi:type="literals:NullLiteral"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="BasicControl.class.xmi#//@classifiers.0/@members.2"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1"/>
          </value>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pageSize">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="cookie">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="criticality">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a control to set the number of entries to be returned per&#xA;     * page of results. The cookie is provided by the server and may be &#xA;     * obtained from the paged-results response control.&#xA;     * &lt;p>&#xA;     * A sequence of paged-results can be abandoned by setting the pageSize&#xA;     * to zero and setting the cookie to the last cookie received from the&#xA;     * server.&#xA;     *&#xA;     * @param&#x9;pageSize&#x9;The number of entries to return in a page.&#xA;     * @param&#x9;cookie&#x9;&#x9;A possibly null server-generated cookie.&#xA;     * @param&#x9;criticality&#x9;If true then the server must honor the control &#xA;     *                          and return search results as indicated by &#xA;     *                          pageSize or refuse to perform the search. &#xA;     *                          If false, then the server need not honor the &#xA;     *                          control.&#xA;     * @exception IOException&#x9;If an error was encountered while encoding the&#xA;     *                          supplied arguments into a control.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="setEncodedValue">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pageSize">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="cookie">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/*&#xA;     * Encodes the paged-results control's value using ASN.1 BER.&#xA;     * The result includes the BER tag and length for the control's value but&#xA;     * does not include the control's object identifier and criticality setting.&#xA;     *&#xA;     * @param&#x9;pageSize&#x9;The number of entries to return in a page.&#xA;     * @param&#x9;cookie&#x9;&#x9;A non-null server-generated cookie.&#xA;     * @return A possibly null byte array representing the ASN.1 BER encoded&#xA;     *         value of the LDAP paged-results control.&#xA;     * @exception IOException If a BER encoding error occurs.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ber">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// build the ASN.1 encoding</comments>
              <target xsi:type="classifiers:Class" href="../../../com/sun/jndi/ldap/BerEncoder.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../com/sun/jndi/ldap/BerEncoder.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.1">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../com/sun/jndi/ldap/BerEncoder.class.xmi#//@classifiers.0/@members.11"/>
            <arguments xsi:type="expressions:InclusiveOrExpression">
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../com/sun/jndi/ldap/Ber.class.xmi#//@classifiers.0/@members.10"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../com/sun/jndi/ldap/Ber.class.xmi#//@classifiers.0"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../com/sun/jndi/ldap/Ber.class.xmi#//@classifiers.0/@members.14"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../com/sun/jndi/ldap/Ber.class.xmi#//@classifiers.0"/>
              </children>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../com/sun/jndi/ldap/BerEncoder.class.xmi#//@classifiers.0/@members.15"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../com/sun/jndi/ldap/BerEncoder.class.xmi#//@classifiers.0/@members.23"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../com/sun/jndi/ldap/Ber.class.xmi#//@classifiers.0/@members.7"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../com/sun/jndi/ldap/Ber.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../com/sun/jndi/ldap/BerEncoder.class.xmi#//@classifiers.0/@members.12"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../com/sun/jndi/ldap/BerEncoder.class.xmi#//@classifiers.0/@members.10"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Final">
      <comments>/**&#xA; * Requests that the results of a search operation be returned by the LDAP&#xA; * server in batches of a specified size. &#xA; * The requestor controls the rate at which batches are returned by the rate &#xA; * at which it invokes search operations.&#xA; * &lt;p>&#xA; * The following code sample shows how the class may be used:&#xA; * &lt;pre>&#xA; *&#xA; *     // Open an LDAP association&#xA; *     LdapContext ctx = new InitialLdapContext();&#xA; *&#xA; *     // Activate paged results&#xA; *     int pageSize = 20; // 20 entries per page&#xA; *     byte[] cookie = null;&#xA; *     int total;&#xA; *     ctx.setRequestControls(new Control[]{ &#xA; *         new PagedResultsControl(pageSize, Control.CRITICAL) });&#xA; *&#xA; *     do {&#xA; *         // Perform the search&#xA; *         NamingEnumeration results =&#xA; *             ctx.search(&quot;&quot;, &quot;(objectclass=*)&quot;, new SearchControls());&#xA; *&#xA; *         // Iterate over a batch of search results&#xA; *         while (results != null &amp;&amp; results.hasMore()) {&#xA; *             // Display an entry&#xA; *             SearchResult entry = (SearchResult)results.next();&#xA; *             System.out.println(entry.getName());&#xA; *             System.out.println(entry.getAttributes());&#xA; *&#xA; *             // Handle the entry's response controls (if any)&#xA; *             if (entry instanceof HasControls) {&#xA; *                 // ((HasControls)entry).getControls();&#xA; *             }&#xA; *         }&#xA; *         // Examine the paged results control response &#xA; *         Control[] controls = ctx.getResponseControls();&#xA; *         if (controls != null) {&#xA; *             for (int i = 0; i &lt; controls.length; i++) {&#xA; *                 if (controls[i] instanceof PagedResultsResponseControl) {&#xA; *                     PagedResultsResponseControl prrc =&#xA; *                         (PagedResultsResponseControl)controls[i];&#xA; *                     total = prrc.getResultSize();&#xA; *                     cookie = prrc.getCookie();&#xA; *                 } else {&#xA; *                     // Handle other response controls (if any)&#xA; *                 }&#xA; *             }&#xA; *         }&#xA; *&#xA; *         // Re-activate paged results&#xA; *         ctx.setRequestControls(new Control[]{&#xA; *             new PagedResultsControl(pageSize, cookie, Control.CRITICAL) });&#xA; *     } while (cookie != null);&#xA; *&#xA; *     // Close the LDAP association&#xA; *     ctx.close();&#xA; *     ...&#xA; *&#xA; * &lt;/pre>&#xA; * &lt;p>&#xA; * This class implements the LDAPv3 Control for paged-results as defined in&#xA; * &lt;a href=&quot;http://www.ietf.org/rfc/rfc2696.txt&quot;>RFC 2696&lt;/a>.&#xA; *&#xA; * The control's value has the following ASN.1 definition:&#xA; * &lt;pre>&#xA; *&#xA; *     realSearchControlValue ::= SEQUENCE {&#xA; *         size      INTEGER (0..maxInt),&#xA; *                           -- requested page size from client&#xA; *                           -- result set size estimate from server&#xA; *         cookie    OCTET STRING&#xA; *     }&#xA; *&#xA; * &lt;/pre>&#xA; *&#xA; * @since 1.5&#xA; * @see PagedResultsResponseControl&#xA; * @author Vincent Ryan&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Public"/>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="BasicControl.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
