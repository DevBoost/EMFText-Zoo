<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/types ../../../java.ecore#/16" name="ExtendedResponse.java">
  <comments>/*&#xA; * @(#)ExtendedResponse.java&#x9;1.7 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>naming</namespaces>
  <namespaces>ldap</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="ExtendedResponse">
    <comments>//static final long serialVersionUID = -3320509678029180273L;</comments>
    <members xsi:type="members:InterfaceMethod" name="getID">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;      * Retrieves the object identifier of the response.&#xA;      * The LDAP protocol specifies that the response object identifier is optional.&#xA;      * If the server does not send it, the response will contain no ID (i.e. null).&#xA;      *&#xA;      * @return&#x9;A possibly null object identifier string representing the LDAP&#xA;      *         &lt;tt>ExtendedResponse.responseName&lt;/tt> component.&#xA;      */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getEncodedValue">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;      * Retrieves the ASN.1 BER encoded value of the LDAP extended operation&#xA;      * response. Null is returned if the value is absent from the response&#xA;      * sent by the LDAP server.&#xA;      * The result is the raw BER bytes including the tag and length of&#xA;      * the response value. It does not include the response OID.&#xA;      *&#xA;      * @return A possibly null byte array representing the ASN.1 BER encoded&#xA;      *         contents of the LDAP &lt;tt>ExtendedResponse.response&lt;/tt>&#xA;      *         component.&#xA;      */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA;  * This interface represents an LDAP extended operation response as defined in&#xA;  * &lt;A HREF=&quot;ftp://ftp.isi.edu/in-notes/rfc2251.txt&quot;>RFC 2251&lt;/A>.&#xA;  * &lt;pre>&#xA;  *     ExtendedResponse ::= [APPLICATION 24] SEQUENCE {&#xA;  *          COMPONENTS OF LDAPResult,&#xA;  *          responseName     [10] LDAPOID OPTIONAL,&#xA;  *          response         [11] OCTET STRING OPTIONAL }&#xA;  * &lt;/pre>&#xA;  * It comprises an optional object identifier and an optional ASN.1 BER&#xA;  * encoded value.&#xA;  *&#xA;  *&lt;p>&#xA;  * The methods in this class can be used by the application to get low&#xA;  * level information about the extended operation response. However, typically,&#xA;  * the application will be using methods specific to the class that&#xA;  * implements this interface. Such a class should have decoded the BER buffer&#xA;  * in the response and should provide methods that allow the user to&#xA;  * access that data in the response in a type-safe and friendly manner.&#xA;  *&lt;p>&#xA;  * For example, suppose the LDAP server supported a 'get time' extended operation.&#xA;  * It would supply GetTimeRequest and GetTimeResponse classes.&#xA;  * The GetTimeResponse class might look like:&#xA;  *&lt;blockquote>&lt;pre>&#xA;  * public class GetTimeResponse implements ExtendedResponse {&#xA;  *     public java.util.Date getDate() {...};&#xA;  *     public long getTime() {...};&#xA;  *     ....&#xA;  * }&#xA;  *&lt;/pre>&lt;/blockquote>&#xA;  * A program would use then these classes as follows:&#xA;  *&lt;blockquote>&lt;pre>&#xA;  * GetTimeResponse resp =&#xA;  * &#x9;(GetTimeResponse) ectx.extendedOperation(new GetTimeRequest());&#xA;  * java.util.Date now = resp.getDate();&#xA;  *&lt;/pre>&lt;/blockquote>&#xA;  * &#xA;  * @author Rosanna Lee&#xA;  * @author Scott Seligman&#xA;  * @author Vincent Ryan&#xA;  * @version 1.7 03/12/19&#xA;  *&#xA;  * @see ExtendedRequest&#xA;  * @since 1.3&#xA;  */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <namespaces>java</namespaces>
      <namespaces>io</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../java/io/Serializable.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
