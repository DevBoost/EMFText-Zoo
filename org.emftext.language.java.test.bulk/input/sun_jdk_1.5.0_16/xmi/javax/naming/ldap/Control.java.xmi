<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/types ../../../java.ecore#/16" name="Control.java">
  <comments>/*&#xA; * @(#)Control.java&#x9;1.8 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>naming</namespaces>
  <namespaces>ldap</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="Control">
    <comments>// static final long serialVersionUID = -591027748900004825L;</comments>
    <members xsi:type="members:Field" name="CRITICAL">
      <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;      * Indicates a critical control.&#xA;      * The value of this constant is &lt;tt>true&lt;/tt>.&#xA;      */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NONCRITICAL">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;      * Indicates a non-critical control.&#xA;      * The value of this constant is &lt;tt>false&lt;/tt>.&#xA;      */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getID">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;      * Retrieves the object identifier assigned for the LDAP control.&#xA;      *&#xA;      * @return The non-null object identifier string.&#xA;      */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isCritical">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;      * Determines the criticality of the LDAP control.&#xA;      * A critical control must not be ignored by the server.&#xA;      * In other words, if the server receives a critical control&#xA;      * that it does not support, regardless of whether the control&#xA;      * makes sense for the operation, the operation will not be performed&#xA;      * and an &lt;tt>OperationNotSupportedException&lt;/tt> will be thrown.&#xA;      * @return true if this control is critical; false otherwise.&#xA;      */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getEncodedValue">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;      * Retrieves the ASN.1 BER encoded value of the LDAP control.&#xA;      * The result is the raw BER bytes including the tag and length of&#xA;      * the control's value. It does not include the controls OID or criticality.&#xA;      *&#xA;      * Null is returned if the value is absent.&#xA;      *&#xA;      * @return A possibly null byte array representing the ASN.1 BER encoded&#xA;      *         value of the LDAP control.&#xA;      */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA;  * This interface represents an LDAPv3 control as defined in &#xA;  * &lt;A HREF=&quot;ftp://ftp.isi.edu/in-notes/rfc2251.txt&quot;>RFC 2251&lt;/A>.&#xA;  *&lt;p>&#xA;  * The LDAPv3 protocol uses controls to send and receive additional data&#xA;  * to affect the behavior of predefined operations. &#xA;  * Controls can be sent along with any LDAP operation to the server.&#xA;  * These are referred to as &lt;em>request controls&lt;/em>. For example, a&#xA;  * &quot;sort&quot; control can be sent with an LDAP search operation to&#xA;  * request that the results be returned in a particular order.&#xA;  * Solicited and unsolicited controls can also be returned with&#xA;  * responses from the server. Such controls are referred to as&#xA;  * &lt;em>response controls&lt;/em>. For example, an LDAP server might &#xA;  * define a special control to return change notifications.&#xA;  *&lt;p>&#xA;  * This interface is used to represent both request and response controls.&#xA;  * &#xA;  * @author Rosanna Lee&#xA;  * @author Scott Seligman&#xA;  * @author Vincent Ryan&#xA;  * @version 1.8 03/12/19&#xA;  *&#xA;  * @see ControlFactory&#xA;  * @since 1.3&#xA;  */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <namespaces>java</namespaces>
      <namespaces>io</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../java/io/Serializable.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
