<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../java.ecore#/17" name="MultiLookAndFeel.java">
  <comments>/*&#xA; * @(#)MultiLookAndFeel.java&#x9;1.34 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>swing</namespaces>
  <namespaces>plaf</namespaces>
  <namespaces>multi</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>lang</namespaces>
    <namespaces>reflect</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/lang/reflect/Method.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
    <namespaces>plaf</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="MultiLookAndFeel">
    <members xsi:type="members:ClassMethod" name="getName">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>//////////////////////////////</comments>
        <comments>// LookAndFeel methods</comments>
        <comments>//////////////////////////////</comments>
        <comments>/**&#xA;     * Returns a string, suitable for use in menus,&#xA;     * that identifies this look and feel.&#xA;     *&#xA;     * @return a string such as &quot;Multiplexing Look and Feel&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:StringReference" value="Multiplexing Look and Feel"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getID">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a string, suitable for use by applications/services,&#xA;     * that identifies this look and feel.&#xA;     * &#xA;     * @return &quot;Multiplex&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:StringReference" value="Multiplex"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDescription">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a one-line description of this look and feel.&#xA;     * &#xA;     * @return a descriptive string such as &quot;Allows multiple UI instances per component instance&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:StringReference" value="Allows multiple UI instances per component instance"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isNativeLookAndFeel">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns &lt;code>false&lt;/code>;&#xA;     * this look and feel is not native to any platform.&#xA;     *&#xA;     * @return &lt;code>false&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isSupportedLookAndFeel">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns &lt;code>true&lt;/code>;&#xA;     * every platform permits this look and feel.&#xA;     *&#xA;     * @return &lt;code>true&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDefaults">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../UIDefaults.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates, initializes, and returns&#xA;     * the look and feel specific defaults.&#xA;     * For this look and feel,&#xA;     * the defaults consist solely of &#xA;     * mappings of UI class IDs&#xA;     * (such as &quot;ButtonUI&quot;)&#xA;     * to &lt;code>ComponentUI&lt;/code> class names&#xA;     * (such as &quot;javax.swing.plaf.multi.MultiButtonUI&quot;).&#xA;     *&#xA;     * @return an initialized &lt;code>UIDefaults&lt;/code> object&#xA;     * @see javax.swing.JComponent#getUIClassID&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="table">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../UIDefaults.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.1"/>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="packageName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:StringReference" value="javax.swing.plaf.multi.Multi"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="uiDefaults">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="ButtonUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="ButtonUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="CheckBoxMenuItemUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="MenuItemUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="CheckBoxUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="ButtonUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="ColorChooserUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="ColorChooserUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="ComboBoxUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="ComboBoxUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="DesktopIconUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="DesktopIconUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="DesktopPaneUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="DesktopPaneUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="EditorPaneUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="TextUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="FileChooserUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="FileChooserUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="FormattedTextFieldUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="TextUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="InternalFrameUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="InternalFrameUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="LabelUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="LabelUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="ListUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="ListUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="MenuBarUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="MenuBarUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="MenuItemUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="MenuItemUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="MenuUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="MenuItemUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="OptionPaneUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="OptionPaneUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="PanelUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="PanelUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="PasswordFieldUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="TextUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="PopupMenuSeparatorUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="SeparatorUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="PopupMenuUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="PopupMenuUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="ProgressBarUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="ProgressBarUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="RadioButtonMenuItemUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="MenuItemUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="RadioButtonUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="ButtonUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="RootPaneUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="RootPaneUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="ScrollBarUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="ScrollBarUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="ScrollPaneUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="ScrollPaneUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="SeparatorUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="SeparatorUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="SliderUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="SliderUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="SpinnerUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="SpinnerUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="SplitPaneUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="SplitPaneUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="TabbedPaneUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="TabbedPaneUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="TableHeaderUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="TableHeaderUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="TableUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="TableUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="TextAreaUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="TextUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="TextFieldUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="TextUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="TextPaneUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="TextUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="ToggleButtonUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="ButtonUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="ToolBarSeparatorUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="SeparatorUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="ToolBarUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="ToolBarUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="ToolTipUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="ToolTipUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="TreeUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="TreeUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="ViewportUI"/>
              <initialValues xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
                <children xsi:type="references:StringReference" value="ViewportUI"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </initialValues>
            </arrayInitializer>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../UIDefaults.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createUIs">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../ComponentUI.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mui">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../ComponentUI.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="uis">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="target">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../JComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>///////////////////////////////</comments>
        <comments>// Utility methods for the UI's</comments>
        <comments>///////////////////////////////</comments>
        <comments>/**&#xA;     * Creates the &lt;code>ComponentUI&lt;/code> objects&#xA;     * required to present&#xA;     * the &lt;code>target&lt;/code> component,&#xA;     * placing the objects in the &lt;code>uis&lt;/code> vector and&#xA;     * returning the&#xA;     * &lt;code>ComponentUI&lt;/code> object&#xA;     * that best represents the component's UI.&#xA;     * This method finds the &lt;code>ComponentUI&lt;/code> objects&#xA;     * by invoking&#xA;     * &lt;code>getDefaults().getUI(target)&lt;/code> on each &#xA;     * default and auxiliary look and feel currently in use.&#xA;     * The first UI object this method adds&#xA;     * to the &lt;code>uis&lt;/code> vector&#xA;     * is for the default look and feel.&#xA;     * &lt;p>&#xA;     * This method is invoked by the &lt;code>createUI&lt;/code> method &#xA;     * of &lt;code>MultiXxxxUI&lt;/code> classes.&#xA;     * &#xA;     * @param mui the &lt;code>ComponentUI&lt;/code> object&#xA;     *            that represents the complete UI&#xA;     *            for the &lt;code>target&lt;/code> component;&#xA;     *            this should be an instance&#xA;     *            of one of the &lt;code>MultiXxxxUI&lt;/code> classes&#xA;     * @param uis a &lt;code>Vector&lt;/code>;&#xA;     *            generally this is the &lt;code>uis&lt;/code> field&#xA;     *            of the &lt;code>mui&lt;/code> argument&#xA;     * @param target a component whose UI is represented by &lt;code>mui&lt;/code>&#xA;     *&#xA;     * @return &lt;code>mui&lt;/code> if the component has any auxiliary UI objects;&#xA;     *         otherwise, returns the UI object for the default look and feel&#xA;     *         or &lt;code>null&lt;/code> if the default UI object couldn't be found&#xA;     *&#xA;     * @see javax.swing.UIManager#getAuxiliaryLookAndFeels&#xA;     * @see javax.swing.UIDefaults#getUI&#xA;     * @see MultiButtonUI#uis&#xA;     * @see MultiButtonUI#createUI&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ui">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../ComponentUI.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable">
            <comments>// Make sure we can at least get the default UI</comments>
            <comments>//</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../UIDefaults.class.xmi#//@classifiers.0/@members.35"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.2"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../UIManager.class.xmi#//@classifiers.0/@members.23"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../UIManager.class.xmi#//@classifiers.0"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.28"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="auxiliaryLookAndFeels">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../LookAndFeel.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arrayDimensionsBefore/>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.2/@statement/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../UIManager.class.xmi#//@classifiers.0/@members.52"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../UIManager.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.2/@statement/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../UIDefaults.class.xmi#//@classifiers.0/@members.35"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.2"/>
                          </next>
                          <target xsi:type="members:ClassMethod" href="../../LookAndFeel.class.xmi#//@classifiers.0/@members.23"/>
                        </next>
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.2/@statement/@statements.3/@statement/@statements.0/@init"/>
                        </arraySelectors>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.1">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.28"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
                          </next>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
                      <children xsi:type="literals:NullLiteral"/>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.2/@statement/@statements.3/@statement/@statements.0/@init"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.2/@statement/@statements.1/@variable">
                    <next xsi:type="references:IdentifierReference"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="i">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.2/@statement/@statements.3/@statement/@statements.0/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.2/@statement/@statements.1/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Don't bother returning the multiplexing UI if all we did was</comments>
        <comments>// get a UI from just the default look and feel.</comments>
        <comments>//</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../ComponentUI.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.22"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </next>
              </child>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.14"/>
            </next>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="uisToArray">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../ComponentUI.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="uis">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Creates an array,&#xA;     * populates it with UI objects from the passed-in vector,&#xA;     * and returns the array.&#xA;     * If &lt;code>uis&lt;/code> is null,&#xA;     * this method returns an array with zero elements.&#xA;     * If &lt;code>uis&lt;/code> is an empty vector,&#xA;     * this method returns &lt;code>null&lt;/code>.&#xA;     * A run-time error occurs if any objects in the &lt;code>uis&lt;/code> vector&#xA;     * are not of type &lt;code>ComponentUI&lt;/code>.&#xA;     * &#xA;     * @param uis a vector containing &lt;code>ComponentUI&lt;/code> objects&#xA;     * @return an array equivalent to the passed-in vector&#xA;     *         &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="arrays:ArrayInstantiationBySize">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../ComponentUI.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="count">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.14"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="u">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../ComponentUI.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arrayDimensionsBefore/>
                  <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../ComponentUI.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@elseStatement/@statements.0/@variable"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@elseStatement/@statements.1/@statement/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@elseStatement/@statements.1/@statement/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../ComponentUI.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.22"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@elseStatement/@statements.1/@statement/@statements.1/@init"/>
                          </next>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@elseStatement/@statements.1/@statement/@statements.1/@init"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@elseStatement/@statements.0/@variable"/>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="i">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@elseStatement/@statements.1/@statement/@statements.1/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@elseStatement/@statements.1/@statement/@statements.0/@variable"/>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@elseStatement/@statements.0/@variable"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:NullLiteral"/>
              </statements>
            </elseStatement>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;p>A multiplexing look and feel that allows more than one UI &#xA; * to be associated with a component at the same time. &#xA; * The primary look and feel is called&#xA; * the &lt;em>default&lt;/em> look and feel,&#xA; * and the other look and feels are called &lt;em>auxiliary&lt;/em>.&#xA; * &lt;p>&#xA; * &#xA; * For further information, see&#xA; * &lt;a href=&quot;doc-files/multi_tsc.html&quot; target=&quot;_top&quot;>Using the&#xA; * Multiplexing Look and Feel.&lt;/a>&#xA; * &#xA; * &lt;p>&#xA; * &lt;strong>Warning:&lt;/strong>&#xA; * Serialized objects of this class will not be compatible with&#xA; * future Swing releases. The current serialization support is&#xA; * appropriate for short term storage or RMI between applications running&#xA; * the same version of Swing.  As of 1.4, support for long term storage&#xA; * of all JavaBeans&lt;sup>&lt;font size=&quot;-2&quot;>TM&lt;/font>&lt;/sup>&#xA; * has been added to the &lt;code>java.beans&lt;/code> package.&#xA; * Please see {@link java.beans.XMLEncoder}.&#xA; *&#xA; * @see UIManager#addAuxiliaryLookAndFeel&#xA; * @see javax.swing.plaf.multi&#xA; *&#xA; * @version 1.34 12/19/03&#xA; * @author Willie Walker&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="../../LookAndFeel.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="MultiUIDefaults">
    <comments>/**&#xA; * We want the Multiplexing LookAndFeel to be quiet and fallback&#xA; * gracefully if it cannot find a UI.  This class overrides the&#xA; * getUIError method of UIDefaults, which is the method that &#xA; * emits error messages when it cannot find a UI class in the&#xA; * LAF.&#xA; */</comments>
    <members xsi:type="members:ClassMethod" name="getUIError">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="msg">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="Multiplexing LAF:  "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.1/@members.0/@parameters.0"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
            <target xsi:type="members:Field" href="../../../../java/lang/System.class.xmi#//@classifiers.0/@members.2"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/System.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="../../UIDefaults.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
