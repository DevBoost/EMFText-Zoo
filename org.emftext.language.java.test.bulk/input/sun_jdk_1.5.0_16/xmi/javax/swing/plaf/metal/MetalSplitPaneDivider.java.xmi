<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../java.ecore#/17" name="MetalSplitPaneDivider.java">
  <comments>/*&#xA; * @(#)MetalSplitPaneDivider.java&#x9;1.21 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>swing</namespaces>
  <namespaces>plaf</namespaces>
  <namespaces>metal</namespaces>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
    <namespaces>border</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
    <namespaces>plaf</namespaces>
    <namespaces>basic</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="MetalSplitPaneDivider">
    <comments>/**&#xA; * Metal's split pane divider&#xA; * &lt;p>&#xA; * &lt;strong>Warning:&lt;/strong>&#xA; * Serialized objects of this class will not be compatible with&#xA; * future Swing releases. The current serialization support is&#xA; * appropriate for short term storage or RMI between applications running&#xA; * the same version of Swing.  As of 1.4, support for long term storage&#xA; * of all JavaBeans&lt;sup>&lt;font size=&quot;-2&quot;>TM&lt;/font>&lt;/sup>&#xA; * has been added to the &lt;code>java.beans&lt;/code> package.&#xA; * Please see {@link java.beans.XMLEncoder}.&#xA; *&#xA; * @version 1.21 12/19/03&#xA; * @author Steve Wilson&#xA; * @author Ralph kar&#xA; */</comments>
    <members xsi:type="members:Field" name="bumps">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="MetalBumps.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
        <arguments xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="MetalLookAndFeel.class.xmi#//@classifiers.0/@members.44"/>
          </next>
          <target xsi:type="classifiers:Class" href="MetalLookAndFeel.class.xmi#//@classifiers.0"/>
        </arguments>
        <arguments xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="MetalLookAndFeel.class.xmi#//@classifiers.0/@members.42"/>
          </next>
          <target xsi:type="classifiers:Class" href="MetalLookAndFeel.class.xmi#//@classifiers.0"/>
        </arguments>
        <arguments xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="MetalLookAndFeel.class.xmi#//@classifiers.0/@members.40"/>
          </next>
          <target xsi:type="classifiers:Class" href="MetalLookAndFeel.class.xmi#//@classifiers.0"/>
        </arguments>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="MetalBumps.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="focusBumps">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="MetalBumps.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
        <arguments xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="MetalLookAndFeel.class.xmi#//@classifiers.0/@members.50"/>
          </next>
          <target xsi:type="classifiers:Class" href="MetalLookAndFeel.class.xmi#//@classifiers.0"/>
        </arguments>
        <arguments xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="MetalLookAndFeel.class.xmi#//@classifiers.0/@members.48"/>
          </next>
          <target xsi:type="classifiers:Class" href="MetalLookAndFeel.class.xmi#//@classifiers.0"/>
        </arguments>
        <arguments xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../UIManager.class.xmi#//@classifiers.0/@members.26"/>
            <arguments xsi:type="references:StringReference" value="SplitPane.dividerFocusColor"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../UIManager.class.xmi#//@classifiers.0"/>
        </arguments>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="MetalBumps.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="inset">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="controlColor">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="MetalLookAndFeel.class.xmi#//@classifiers.0/@members.40"/>
        </next>
        <target xsi:type="classifiers:Class" href="MetalLookAndFeel.class.xmi#//@classifiers.0"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/awt/Color.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="primaryControlColor">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="../../UIManager.class.xmi#//@classifiers.0/@members.26"/>
          <arguments xsi:type="references:StringReference" value="SplitPane.dividerFocusColor"/>
        </next>
        <target xsi:type="classifiers:Class" href="../../UIManager.class.xmi#//@classifiers.0"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/awt/Color.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Constructor" name="MetalSplitPaneDivider">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ui">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../basic/BasicSplitPaneUI.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <members xsi:type="members:ClassMethod" name="paint">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="g">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="usedBumps">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="MetalBumps.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.329"/>
          </next>
          <target xsi:type="members:Field" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.6"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="clip">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.12"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="insets">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.24"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.2/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.2/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.2/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
              </next>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.2/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="size">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.152"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.5/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:AssignmentMinus"/>
          <value xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
            <multiplicativeOperators xsi:type="operators:Multiplication"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.5/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:AssignmentMinus"/>
          <value xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
            <multiplicativeOperators xsi:type="operators:Multiplication"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="drawX">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="drawY">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.5/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentMinus"/>
              <value xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                </expression>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.5/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentMinus"/>
              <value xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                </expression>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.8/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.9/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.3/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="MetalBumps.class.xmi#//@classifiers.0/@members.12"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.5/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="MetalBumps.class.xmi#//@classifiers.0/@members.15"/>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.8/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.9/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.30"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createLeftOneTouchButton">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../JButton.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Creates and return an instance of JButton that can be used to&#xA;     * collapse the left component in the metal split pane.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="b">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../JButton.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../JButton.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <anonymousClass>
              <members xsi:type="members:Field" name="buffer">
                <initialValue xsi:type="arrays:ArrayInstantiationByValues">
                  <arrayInitializer>
                    <initialValues xsi:type="arrays:ArrayInstantiationByValues">
                      <arrayInitializer>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </arrayInitializer>
                    </initialValues>
                    <initialValues xsi:type="arrays:ArrayInstantiationByValues">
                      <arrayInitializer>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </arrayInitializer>
                    </initialValues>
                    <initialValues xsi:type="arrays:ArrayInstantiationByValues">
                      <arrayInitializer>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </arrayInitializer>
                    </initialValues>
                    <initialValues xsi:type="arrays:ArrayInstantiationByValues">
                      <arrayInitializer>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </arrayInitializer>
                    </initialValues>
                    <initialValues xsi:type="arrays:ArrayInstantiationByValues">
                      <arrayInitializer>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                      </arrayInitializer>
                    </initialValues>
                  </arrayInitializer>
                </initialValue>
                <typeReference xsi:type="types:Int">
                  <comments>// Sprite buffer for the arrow image of the left button</comments>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayDimensionsBefore/>
              </members>
              <members xsi:type="members:ClassMethod" name="setBorder">
                <typeReference xsi:type="types:Void"/>
                <parameters xsi:type="parameters:OrdinaryParameter" name="b">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Interface" href="../../border/Border.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameters>
                <annotationsAndModifiers xsi:type="modifiers:Public"/>
              </members>
              <members xsi:type="members:ClassMethod" name="paint">
                <typeReference xsi:type="types:Void"/>
                <parameters xsi:type="parameters:OrdinaryParameter" name="g">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameters>
                <annotationsAndModifiers xsi:type="modifiers:Public"/>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="splitPane">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../JSplitPane.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.14"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="oneTouchSize">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.11"/>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="orientation">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.13"/>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="blockSize">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../java/lang/Math.class.xmi#//@classifiers.0/@members.37"/>
                            <arguments xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.21"/>
                            </arguments>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.0/@variable"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../java/lang/Math.class.xmi#//@classifiers.0"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="colors">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <comments>// Initialize the color array</comments>
                            <target xsi:type="classifiers:Class" href="../../../../java/awt/Color.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arrayDimensionsBefore/>
                        <initialValue xsi:type="arrays:ArrayInstantiationByValues">
                          <arrayInitializer>
                            <initialValues xsi:type="references:SelfReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.135"/>
                              </next>
                              <self xsi:type="literals:This"/>
                            </initialValues>
                            <initialValues xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="MetalLookAndFeel.class.xmi#//@classifiers.0/@members.48"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="MetalLookAndFeel.class.xmi#//@classifiers.0"/>
                            </initialValues>
                            <initialValues xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="MetalLookAndFeel.class.xmi#//@classifiers.0/@members.49"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="MetalLookAndFeel.class.xmi#//@classifiers.0"/>
                            </initialValues>
                            <initialValues xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="MetalLookAndFeel.class.xmi#//@classifiers.0/@members.50"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="MetalLookAndFeel.class.xmi#//@classifiers.0"/>
                            </initialValues>
                          </arrayInitializer>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@parameters.0">
                        <comments>// Fill the background first ...</comments>
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                          <arguments xsi:type="references:SelfReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.135"/>
                            </next>
                            <self xsi:type="literals:This"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.19"/>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="references:SelfReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../JComponent.class.xmi#//@classifiers.0/@members.201"/>
                                </next>
                                <self xsi:type="literals:This"/>
                              </arguments>
                              <arguments xsi:type="references:SelfReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../JComponent.class.xmi#//@classifiers.0/@members.202"/>
                                </next>
                                <self xsi:type="literals:This"/>
                              </arguments>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../JComponent.class.xmi#//@classifiers.0/@members.203"/>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <comments>// ... then draw the arrow.</comments>
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.3/@variable">
                              <comments>// Adjust color mapping for pressed button state</comments>
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.3/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                              </arraySelectors>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../ButtonModel.class.xmi#//@classifiers.0/@members.3"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../AbstractButton.class.xmi#//@classifiers.0/@members.116"/>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ForLoop">
                          <comments>// Draw the image for a vertical split</comments>
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:Continue"/>
                                  </statement>
                                  <condition xsi:type="expressions:EqualityExpression">
                                    <equalityOperators xsi:type="operators:Equal"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.0">
                                      <arraySelectors>
                                        <position xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@statement/@statements.0/@init"/>
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <additiveOperators xsi:type="operators:Subtraction"/>
                                        </position>
                                      </arraySelectors>
                                      <arraySelectors>
                                        <position xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@init"/>
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <additiveOperators xsi:type="operators:Subtraction"/>
                                        </position>
                                      </arraySelectors>
                                    </children>
                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                  </condition>
                                  <elseStatement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@parameters.0">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.3/@variable">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.0">
                                                <arraySelectors>
                                                  <position xsi:type="expressions:AdditiveExpression">
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@statement/@statements.0/@init"/>
                                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                                    <additiveOperators xsi:type="operators:Subtraction"/>
                                                  </position>
                                                </arraySelectors>
                                                <arraySelectors>
                                                  <position xsi:type="expressions:AdditiveExpression">
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@init"/>
                                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                                    <additiveOperators xsi:type="operators:Subtraction"/>
                                                  </position>
                                                </arraySelectors>
                                              </position>
                                            </arraySelectors>
                                          </arguments>
                                        </next>
                                      </expression>
                                    </statements>
                                  </elseStatement>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@parameters.0">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@statement/@statements.0/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@statement/@statements.0/@init"/>
                                    </next>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@statement/@statements.0/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.2/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="j">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@statement/@statements.0/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:RelationExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@init"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.0">
                              <next xsi:type="references:IdentifierReference"/>
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </arraySelectors>
                            </children>
                            <relationOperators xsi:type="operators:LessThanOrEqual"/>
                          </condition>
                          <init xsi:type="variables:LocalVariable" name="i">
                            <typeReference xsi:type="types:Int"/>
                            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          </init>
                          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@init"/>
                            <operator xsi:type="operators:PlusPlus"/>
                          </updates>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.1/@variable"/>
                        <children xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../JSplitPane.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../JSplitPane.class.xmi#//@classifiers.0"/>
                        </children>
                      </condition>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:ForLoop">
                          <comments>// Draw the image for a horizontal split</comments>
                          <comments>// by simply swaping the i and j axis.</comments>
                          <comments>// Except the drawLine() call this code is</comments>
                          <comments>// identical to the code block above. This was done</comments>
                          <comments>// in order to remove the additional orientation</comments>
                          <comments>// check for each pixel.</comments>
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:Continue">
                                      <comments>// Nothing needs</comments>
                                      <comments>// to be drawn</comments>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="expressions:EqualityExpression">
                                    <equalityOperators xsi:type="operators:Equal"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.0">
                                      <arraySelectors>
                                        <position xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@statement/@statements.0/@init"/>
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <additiveOperators xsi:type="operators:Subtraction"/>
                                        </position>
                                      </arraySelectors>
                                      <arraySelectors>
                                        <position xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@init"/>
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <additiveOperators xsi:type="operators:Subtraction"/>
                                        </position>
                                      </arraySelectors>
                                    </children>
                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                  </condition>
                                  <elseStatement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@parameters.0">
                                        <comments>// Set the color from the</comments>
                                        <comments>// color map</comments>
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.3/@variable">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.0">
                                                <arraySelectors>
                                                  <position xsi:type="expressions:AdditiveExpression">
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@statement/@statements.0/@init"/>
                                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                                    <additiveOperators xsi:type="operators:Subtraction"/>
                                                  </position>
                                                </arraySelectors>
                                                <arraySelectors>
                                                  <position xsi:type="expressions:AdditiveExpression">
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@init"/>
                                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                                    <additiveOperators xsi:type="operators:Subtraction"/>
                                                  </position>
                                                </arraySelectors>
                                              </position>
                                            </arraySelectors>
                                          </arguments>
                                        </next>
                                      </expression>
                                    </statements>
                                  </elseStatement>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@parameters.0">
                                    <comments>// Draw a pixel</comments>
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@statement/@statements.0/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@statement/@statements.0/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@init"/>
                                    </next>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@statement/@statements.0/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.2/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="j">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@statement/@statements.0/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:RelationExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@init"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.0">
                              <next xsi:type="references:IdentifierReference"/>
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </arraySelectors>
                            </children>
                            <relationOperators xsi:type="operators:LessThanOrEqual"/>
                          </condition>
                          <init xsi:type="variables:LocalVariable" name="i">
                            <typeReference xsi:type="types:Int"/>
                            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          </init>
                          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@init"/>
                            <operator xsi:type="operators:PlusPlus"/>
                          </updates>
                        </statements>
                      </elseStatement>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.0/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
              </members>
              <members xsi:type="members:ClassMethod" name="isFocusTraversable">
                <typeReference xsi:type="types:Boolean"/>
                <annotationsAndModifiers xsi:type="modifiers:Public">
                  <comments>// Don't want the button to participate in focus traversable.</comments>
                </annotationsAndModifiers>
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="literals:BooleanLiteral"/>
                </statements>
              </members>
            </anonymousClass>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../JComponent.class.xmi#//@classifiers.0/@members.106"/>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.194"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/awt/Cursor.class.xmi#//@classifiers.0/@members.35"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../java/awt/Cursor.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../java/awt/Cursor.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/awt/Cursor.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../AbstractButton.class.xmi#//@classifiers.0/@members.102"/>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../AbstractButton.class.xmi#//@classifiers.0/@members.99"/>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.8">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="maybeMakeButtonOpaque">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../JComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * If necessary &lt;code>c&lt;/code> is made opaque.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="opaque">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../UIManager.class.xmi#//@classifiers.0/@members.44"/>
              <arguments xsi:type="references:StringReference" value="SplitPane.oneTouchButtonsOpaque"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../UIManager.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../JComponent.class.xmi#//@classifiers.0/@members.204"/>
                <arguments xsi:type="expressions:NestedExpression">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.8"/>
                  </next>
                  <expression xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable"/>
                  </expression>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createRightOneTouchButton">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../JButton.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Creates and return an instance of JButton that can be used to&#xA;     * collapse the right component in the metal split pane.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="b">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../JButton.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../JButton.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <anonymousClass>
              <members xsi:type="members:Field" name="buffer">
                <initialValue xsi:type="arrays:ArrayInstantiationByValues">
                  <arrayInitializer>
                    <initialValues xsi:type="arrays:ArrayInstantiationByValues">
                      <arrayInitializer>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                      </arrayInitializer>
                    </initialValues>
                    <initialValues xsi:type="arrays:ArrayInstantiationByValues">
                      <arrayInitializer>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                      </arrayInitializer>
                    </initialValues>
                    <initialValues xsi:type="arrays:ArrayInstantiationByValues">
                      <arrayInitializer>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </arrayInitializer>
                    </initialValues>
                    <initialValues xsi:type="arrays:ArrayInstantiationByValues">
                      <arrayInitializer>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </arrayInitializer>
                    </initialValues>
                    <initialValues xsi:type="arrays:ArrayInstantiationByValues">
                      <arrayInitializer>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </arrayInitializer>
                    </initialValues>
                  </arrayInitializer>
                </initialValue>
                <typeReference xsi:type="types:Int">
                  <comments>// Sprite buffer for the arrow image of the right button</comments>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayDimensionsBefore/>
              </members>
              <members xsi:type="members:ClassMethod" name="setBorder">
                <typeReference xsi:type="types:Void"/>
                <parameters xsi:type="parameters:OrdinaryParameter" name="border">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Interface" href="../../border/Border.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameters>
                <annotationsAndModifiers xsi:type="modifiers:Public"/>
              </members>
              <members xsi:type="members:ClassMethod" name="paint">
                <typeReference xsi:type="types:Void"/>
                <parameters xsi:type="parameters:OrdinaryParameter" name="g">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameters>
                <annotationsAndModifiers xsi:type="modifiers:Public"/>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="splitPane">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../JSplitPane.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.14"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="oneTouchSize">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.11"/>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="orientation">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.13"/>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="blockSize">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../java/lang/Math.class.xmi#//@classifiers.0/@members.37"/>
                            <arguments xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.21"/>
                            </arguments>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.0/@variable"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../java/lang/Math.class.xmi#//@classifiers.0"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="colors">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <comments>// Initialize the color array</comments>
                            <target xsi:type="classifiers:Class" href="../../../../java/awt/Color.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arrayDimensionsBefore/>
                        <initialValue xsi:type="arrays:ArrayInstantiationByValues">
                          <arrayInitializer>
                            <initialValues xsi:type="references:SelfReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.135"/>
                              </next>
                              <self xsi:type="literals:This"/>
                            </initialValues>
                            <initialValues xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="MetalLookAndFeel.class.xmi#//@classifiers.0/@members.48"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="MetalLookAndFeel.class.xmi#//@classifiers.0"/>
                            </initialValues>
                            <initialValues xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="MetalLookAndFeel.class.xmi#//@classifiers.0/@members.49"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="MetalLookAndFeel.class.xmi#//@classifiers.0"/>
                            </initialValues>
                            <initialValues xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="MetalLookAndFeel.class.xmi#//@classifiers.0/@members.50"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="MetalLookAndFeel.class.xmi#//@classifiers.0"/>
                            </initialValues>
                          </arrayInitializer>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@parameters.0">
                        <comments>// Fill the background first ...</comments>
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                          <arguments xsi:type="references:SelfReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.135"/>
                            </next>
                            <self xsi:type="literals:This"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.19"/>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="references:SelfReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../JComponent.class.xmi#//@classifiers.0/@members.201"/>
                                </next>
                                <self xsi:type="literals:This"/>
                              </arguments>
                              <arguments xsi:type="references:SelfReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../JComponent.class.xmi#//@classifiers.0/@members.202"/>
                                </next>
                                <self xsi:type="literals:This"/>
                              </arguments>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../JComponent.class.xmi#//@classifiers.0/@members.203"/>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <comments>// ... then draw the arrow.</comments>
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.3/@variable">
                              <comments>// Adjust color mapping for pressed button state</comments>
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              </arraySelectors>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.3/@variable">
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                              </arraySelectors>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../ButtonModel.class.xmi#//@classifiers.0/@members.3"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../AbstractButton.class.xmi#//@classifiers.0/@members.116"/>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ForLoop">
                          <comments>// Draw the image for a vertical split</comments>
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:Continue"/>
                                  </statement>
                                  <condition xsi:type="expressions:EqualityExpression">
                                    <equalityOperators xsi:type="operators:Equal"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.0">
                                      <arraySelectors>
                                        <position xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@statement/@statements.0/@init"/>
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <additiveOperators xsi:type="operators:Subtraction"/>
                                        </position>
                                      </arraySelectors>
                                      <arraySelectors>
                                        <position xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@init"/>
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <additiveOperators xsi:type="operators:Subtraction"/>
                                        </position>
                                      </arraySelectors>
                                    </children>
                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                  </condition>
                                  <elseStatement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@parameters.0">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.3/@variable">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.0">
                                                <arraySelectors>
                                                  <position xsi:type="expressions:AdditiveExpression">
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@statement/@statements.0/@init"/>
                                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                                    <additiveOperators xsi:type="operators:Subtraction"/>
                                                  </position>
                                                </arraySelectors>
                                                <arraySelectors>
                                                  <position xsi:type="expressions:AdditiveExpression">
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@init"/>
                                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                                    <additiveOperators xsi:type="operators:Subtraction"/>
                                                  </position>
                                                </arraySelectors>
                                              </position>
                                            </arraySelectors>
                                          </arguments>
                                        </next>
                                      </expression>
                                    </statements>
                                  </elseStatement>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@parameters.0">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@statement/@statements.0/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@statement/@statements.0/@init"/>
                                    </next>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@statement/@statements.0/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.2/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="j">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@statement/@statements.0/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:RelationExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@init"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.0">
                              <next xsi:type="references:IdentifierReference"/>
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </arraySelectors>
                            </children>
                            <relationOperators xsi:type="operators:LessThanOrEqual"/>
                          </condition>
                          <init xsi:type="variables:LocalVariable" name="i">
                            <typeReference xsi:type="types:Int"/>
                            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          </init>
                          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@statement/@statements.0/@init"/>
                            <operator xsi:type="operators:PlusPlus"/>
                          </updates>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.1/@variable"/>
                        <children xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../JSplitPane.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../JSplitPane.class.xmi#//@classifiers.0"/>
                        </children>
                      </condition>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:ForLoop">
                          <comments>// Draw the image for a horizontal split</comments>
                          <comments>// by simply swaping the i and j axis.</comments>
                          <comments>// Except the drawLine() call this code is</comments>
                          <comments>// identical to the code block above. This was done</comments>
                          <comments>// in order to remove the additional orientation</comments>
                          <comments>// check for each pixel.</comments>
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ForLoop">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:Continue">
                                      <comments>// Nothing needs</comments>
                                      <comments>// to be drawn</comments>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="expressions:EqualityExpression">
                                    <equalityOperators xsi:type="operators:Equal"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.0">
                                      <arraySelectors>
                                        <position xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@statement/@statements.0/@init"/>
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <additiveOperators xsi:type="operators:Subtraction"/>
                                        </position>
                                      </arraySelectors>
                                      <arraySelectors>
                                        <position xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@init"/>
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                          <additiveOperators xsi:type="operators:Subtraction"/>
                                        </position>
                                      </arraySelectors>
                                    </children>
                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                  </condition>
                                  <elseStatement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@parameters.0">
                                        <comments>// Set the color from the</comments>
                                        <comments>// color map</comments>
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.3/@variable">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.0">
                                                <arraySelectors>
                                                  <position xsi:type="expressions:AdditiveExpression">
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@statement/@statements.0/@init"/>
                                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                                    <additiveOperators xsi:type="operators:Subtraction"/>
                                                  </position>
                                                </arraySelectors>
                                                <arraySelectors>
                                                  <position xsi:type="expressions:AdditiveExpression">
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@init"/>
                                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                                    <additiveOperators xsi:type="operators:Subtraction"/>
                                                  </position>
                                                </arraySelectors>
                                              </position>
                                            </arraySelectors>
                                          </arguments>
                                        </next>
                                      </expression>
                                    </statements>
                                  </elseStatement>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@parameters.0">
                                    <comments>// Draw a pixel</comments>
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@statement/@statements.0/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@statement/@statements.0/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@init"/>
                                    </next>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@statement/@statements.0/@init"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.2/@variable"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                              <init xsi:type="variables:LocalVariable" name="j">
                                <typeReference xsi:type="types:Int"/>
                                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              </init>
                              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@statement/@statements.0/@init"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </updates>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:RelationExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@init"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.0">
                              <next xsi:type="references:IdentifierReference"/>
                              <arraySelectors>
                                <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              </arraySelectors>
                            </children>
                            <relationOperators xsi:type="operators:LessThanOrEqual"/>
                          </condition>
                          <init xsi:type="variables:LocalVariable" name="i">
                            <typeReference xsi:type="types:Int"/>
                            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          </init>
                          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.1/@statement/@statements.7/@elseStatement/@statements.0/@init"/>
                            <operator xsi:type="operators:PlusPlus"/>
                          </updates>
                        </statements>
                      </elseStatement>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable/@initialValue/@anonymousClass/@members.2/@statements.0/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
              </members>
              <members xsi:type="members:ClassMethod" name="isFocusTraversable">
                <typeReference xsi:type="types:Boolean"/>
                <annotationsAndModifiers xsi:type="modifiers:Public">
                  <comments>// Don't want the button to participate in focus traversable.</comments>
                </annotationsAndModifiers>
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="literals:BooleanLiteral"/>
                </statements>
              </members>
            </anonymousClass>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.194"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/awt/Cursor.class.xmi#//@classifiers.0/@members.35"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../java/awt/Cursor.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../java/awt/Cursor.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/awt/Cursor.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../AbstractButton.class.xmi#//@classifiers.0/@members.102"/>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../AbstractButton.class.xmi#//@classifiers.0/@members.99"/>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../JComponent.class.xmi#//@classifiers.0/@members.106"/>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.8">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="classifiers:Class" name="MetalDividerLayout">
      <members xsi:type="members:ClassMethod" name="layoutContainer">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="c">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/awt/Container.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>// NOTE NOTE NOTE NOTE NOTE</comments>
          <comments>// This class is no longer used, the functionality has</comments>
          <comments>// been rolled into BasicSplitPaneDivider.DividerLayout as a</comments>
          <comments>// defaults property</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="leftButton">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../JButton.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.15"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="rightButton">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../JButton.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.16"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="splitPane">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../JSplitPane.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.14"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="orientation">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.13"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="oneTouchSize">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.11"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="oneTouchOffset">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.12"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="insets">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.24"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// This layout differs from the one used in BasicSplitPaneDivider.</comments>
          <comments>// It does not center justify the oneTouchExpadable buttons.</comments>
          <comments>// This was necessary in order to meet the spec of the Metal</comments>
          <comments>// splitpane divider.</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="extraY">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="expressions:ConditionalExpression">
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:NotEqual"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.6/@variable"/>
                              <children xsi:type="literals:NullLiteral"/>
                            </expression>
                          </child>
                          <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.6/@variable">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
                            </next>
                          </expressionIf>
                          <expressionElse xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="blockSize">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.21"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@statement/@statements.1/@variable"/>
                            <assignmentOperator xsi:type="operators:AssignmentMinus"/>
                            <value xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.6/@variable">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.6/@variable">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0/@members.2"/>
                                  </next>
                                </children>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </expression>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:NotEqual"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.6/@variable"/>
                        <children xsi:type="literals:NullLiteral"/>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@statement/@statements.1/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../java/lang/Math.class.xmi#//@classifiers.0/@members.37"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@statement/@statements.1/@variable"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.4/@variable"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../java/lang/Math.class.xmi#//@classifiers.0"/>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.160"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.5/@variable"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@statement/@statements.0/@variable"/>
                          <arguments xsi:type="expressions:MultiplicativeExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@statement/@statements.1/@variable"/>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@statement/@statements.1/@variable"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.160"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.5/@variable"/>
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.4/@variable"/>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@statement/@statements.0/@variable"/>
                          <arguments xsi:type="expressions:MultiplicativeExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@statement/@statements.1/@variable"/>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@statement/@statements.1/@variable"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.3/@variable"/>
                    <children xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../JSplitPane.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../JSplitPane.class.xmi#//@classifiers.0"/>
                    </children>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="blockSize">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.21"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="extraX">
                        <typeReference xsi:type="types:Int"/>
                        <initialValue xsi:type="expressions:ConditionalExpression">
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:NotEqual"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.6/@variable"/>
                              <children xsi:type="literals:NullLiteral"/>
                            </expression>
                          </child>
                          <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.6/@variable">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
                            </next>
                          </expressionIf>
                          <expressionElse xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:AssignmentMinus"/>
                            <value xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.6/@variable">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.6/@variable">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../java/awt/Insets.class.xmi#//@classifiers.0/@members.3"/>
                                  </next>
                                </children>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </expression>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:NotEqual"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.6/@variable"/>
                        <children xsi:type="literals:NullLiteral"/>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../java/lang/Math.class.xmi#//@classifiers.0/@members.37"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.4/@variable"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../java/lang/Math.class.xmi#//@classifiers.0"/>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.160"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@elseStatement/@statements.1/@variable"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.5/@variable"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                          <arguments xsi:type="expressions:MultiplicativeExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.160"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@elseStatement/@statements.1/@variable"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.5/@variable"/>
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.4/@variable"/>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                          <arguments xsi:type="expressions:MultiplicativeExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.7/@statement/@statements.0/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                            <multiplicativeOperators xsi:type="operators:Multiplication"/>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../JSplitPane.class.xmi#//@classifiers.0/@members.46"/>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.160"/>
                      <arguments xsi:type="expressions:UnaryExpression">
                        <operators xsi:type="operators:Subtraction"/>
                        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                      </arguments>
                      <arguments xsi:type="expressions:UnaryExpression">
                        <operators xsi:type="operators:Subtraction"/>
                        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                      </arguments>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.160"/>
                      <arguments xsi:type="expressions:UnaryExpression">
                        <operators xsi:type="operators:Subtraction"/>
                        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                      </arguments>
                      <arguments xsi:type="expressions:UnaryExpression">
                        <operators xsi:type="operators:Subtraction"/>
                        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                      </arguments>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    </next>
                  </expression>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@statements.1/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@members.0/@parameters.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0">
                <next xsi:type="references:SelfReference">
                  <self xsi:type="literals:This"/>
                </next>
              </children>
            </children>
          </condition>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="minimumLayoutSize">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="c">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/awt/Container.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="preferredLayoutSize">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="c">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/awt/Container.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="removeLayoutComponent">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="c">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/awt/Component.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
      </members>
      <members xsi:type="members:ClassMethod" name="addLayoutComponent">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="string">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="c">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/awt/Component.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Used to layout a MetalSplitPaneDivider. Layout for the divider&#xA;     * involves appropriately moving the left/right buttons around.&#xA;     * &lt;p>&#xA;     * This class should be treated as a &amp;quot;protected&amp;quot; inner class.&#xA;     * Instantiate it only within subclasses of MetalSplitPaneDivider.&#xA;     */</comments>
      </annotationsAndModifiers>
      <implements xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../java/awt/LayoutManager.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </implements>
    </members>
    <members xsi:type="members:ClassMethod" name="getOneTouchSizeFromSuper">
      <typeReference xsi:type="types:Int">
        <comments>/*&#xA;     * The following methods only exist in order to be able to access protected&#xA;     * members in the superclass, because these are otherwise not available&#xA;     * in any inner class.&#xA;     */</comments>
      </typeReference>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.0"/>
          </next>
          <self xsi:type="literals:Super"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getOneTouchOffsetFromSuper">
      <typeReference xsi:type="types:Int"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.1"/>
          </next>
          <self xsi:type="literals:Super"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getOrientationFromSuper">
      <typeReference xsi:type="types:Int"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.8"/>
          </next>
          <self xsi:type="literals:Super"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getSplitPaneFromSuper">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../JSplitPane.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.6"/>
          </next>
          <self xsi:type="literals:Super"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getLeftButtonFromSuper">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../JButton.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.9"/>
          </next>
          <self xsi:type="literals:Super"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getRightButtonFromSuper">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../JButton.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0/@members.10"/>
          </next>
          <self xsi:type="literals:Super"/>
        </returnValue>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="../basic/BasicSplitPaneDivider.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
