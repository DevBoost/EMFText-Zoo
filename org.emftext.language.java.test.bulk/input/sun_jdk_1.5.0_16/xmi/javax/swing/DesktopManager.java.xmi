<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="DesktopManager.java">
  <comments>/*&#xA; * @(#)DesktopManager.java&#x9;1.15 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>swing</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="DesktopManager">
    <members xsi:type="members:InterfaceMethod" name="openFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** If possible, display this frame in an appropriate location.&#xA;      * Normally, this is not called, as the creator of the JInternalFrame&#xA;      * will add the frame to the appropriate parent.&#xA;      */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JInternalFrame.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="closeFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** Generally, this call should remove the frame from it's parent. */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JInternalFrame.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="maximizeFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** Generally, the frame should be resized to match it's parents bounds. */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JInternalFrame.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="minimizeFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** Generally, this indicates that the frame should be restored to it's &#xA;      * size and position prior to a maximizeFrame() call.&#xA;      */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JInternalFrame.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="iconifyFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** Generally, remove this frame from it's parent and add an iconic representation. */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JInternalFrame.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="deiconifyFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** Generally, remove any iconic representation that is present and restore the&#xA;      * frame to it's original size and location.&#xA;      */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JInternalFrame.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="activateFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** &#xA;     * Generally, indicate that this frame has focus. This is usually called after &#xA;     * the JInternalFrame's IS_SELECTED_PROPERTY has been set to true.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JInternalFrame.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="deactivateFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** &#xA;     * Generally, indicate that this frame has lost focus. This is usually called &#xA;     * after the JInternalFrame's IS_SELECTED_PROPERTY has been set to false.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JInternalFrame.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="beginDraggingFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** This method is normally called when the user has indicated that &#xA;      * they will begin dragging a component around. This method should be called&#xA;      * prior to any dragFrame() calls to allow the DesktopManager to prepare any&#xA;      * necessary state. Normally &lt;b>f&lt;/b> will be a JInternalFrame.&#xA;      */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="dragFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** The user has moved the frame. Calls to this method will be preceded by calls&#xA;      * to beginDraggingFrame(). &#xA;      *  Normally &lt;b>f&lt;/b> will be a JInternalFrame.&#xA;      */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newX">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newY">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="endDraggingFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** This method signals the end of the dragging session. Any state maintained by&#xA;      * the DesktopManager can be removed here.  Normally &lt;b>f&lt;/b> will be a JInternalFrame.&#xA;      */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="beginResizingFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** This methods is normally called when the user has indicated that &#xA;      * they will begin resizing the frame. This method should be called&#xA;      * prior to any resizeFrame() calls to allow the DesktopManager to prepare any&#xA;      * necessary state.  Normally &lt;b>f&lt;/b> will be a JInternalFrame.&#xA;      */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="direction">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="resizeFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** The user has resized the component. Calls to this method will be preceded by calls&#xA;      * to beginResizingFrame(). &#xA;      *  Normally &lt;b>f&lt;/b> will be a JInternalFrame.&#xA;      */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newX">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newY">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newWidth">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newHeight">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="endResizingFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** This method signals the end of the resize session. Any state maintained by&#xA;      * the DesktopManager can be removed here.  Normally &lt;b>f&lt;/b> will be a JInternalFrame.&#xA;      */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setBoundsForFrame">
      <typeReference xsi:type="types:Void">
        <comments>/** This is a primitive reshape method.*/</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="f">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newX">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newY">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newWidth">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newHeight">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/** DesktopManager objects are owned by a JDesktopPane object. They are responsible&#xA;  * for implementing L&amp;F specific behaviors for the JDesktopPane. JInternalFrame &#xA;  * implementations should delegate specific behaviors to the DesktopManager. For&#xA;  * instance, if a JInternalFrame was asked to iconify, it should try:&#xA;  * &lt;PRE>&#xA;  *    getDesktopPane().getDesktopManager().iconifyFrame(frame);&#xA;  * &lt;/PRE>&#xA;  * This delegation allows each L&amp;F to provide custom behaviors for desktop-specific&#xA;  * actions. (For example, how and where the internal frame's icon would appear.)&#xA;  * &lt;p>This class provides a policy for the various JInternalFrame methods, it is not&#xA;  * meant to be called directly rather the various JInternalFrame methods will call &#xA;  * into the DesktopManager.&lt;/p>&#xA;  * &#xA;  * @see JDesktopPane&#xA;  * @see JInternalFrame&#xA;  * @see JInternalFrame.JDesktopIcon&#xA;  *&#xA;  * @version 1.15 12/19/03&#xA;  * @author David Kloba&#xA;  */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
