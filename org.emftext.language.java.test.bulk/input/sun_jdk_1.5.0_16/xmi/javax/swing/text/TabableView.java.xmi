<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="TabableView.java">
  <comments>/*&#xA; * @(#)TabableView.java&#x9;1.10 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>swing</namespaces>
  <namespaces>text</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="TabableView">
    <members xsi:type="members:InterfaceMethod" name="getTabbedSpan">
      <typeReference xsi:type="types:Float">
        <comments>/**&#xA;     * Determines the desired span when using the given &#xA;     * tab expansion implementation.  If a container &#xA;     * calls this method, it will do so prior to the&#xA;     * normal layout which would call getPreferredSpan.&#xA;     * A view implementing this should give the same&#xA;     * result in any subsequent calls to getPreferredSpan&#xA;     * along the axis of tab expansion.&#xA;     *&#xA;     * @param x the position the view would be located&#xA;     *  at for the purpose of tab expansion >= 0.&#xA;     * @param e how to expand the tabs when encountered.&#xA;     * @return the desired span >= 0&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Float"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="e">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="TabExpander.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getPartialSpan">
      <typeReference xsi:type="types:Float">
        <comments>/**&#xA;     * Determines the span along the same axis as tab &#xA;     * expansion for a portion of the view.  This is&#xA;     * intended for use by the TabExpander for cases&#xA;     * where the tab expansion involves aligning the&#xA;     * portion of text that doesn't have whitespace &#xA;     * relative to the tab stop.  There is therefore&#xA;     * an assumption that the range given does not&#xA;     * contain tabs.&#xA;     *&#xA;     * @param p0 the starting location in the text document >= 0&#xA;     * @param p1 the ending location in the text document >= p0&#xA;     * @return the span >= 0&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="p0">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="p1">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Interface for &lt;code>View&lt;/code>s that have size dependent upon tabs.  &#xA; * &#xA; * @author  Timothy Prinzing&#xA; * @author  Scott Violet&#xA; * @version 1.10 12/19/03&#xA; * @see TabExpander&#xA; * @see LabelView&#xA; * @see ParagraphView&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
