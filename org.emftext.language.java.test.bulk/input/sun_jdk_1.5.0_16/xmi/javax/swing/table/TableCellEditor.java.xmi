<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="TableCellEditor.java">
  <comments>/*&#xA; * @(#)TableCellEditor.java&#x9;1.16 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>swing</namespaces>
  <namespaces>table</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../java/awt/Component.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../CellEditor.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="TableCellEditor">
    <members xsi:type="members:InterfaceMethod" name="getTableCellEditorComponent">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     *  Sets an initial &lt;code>value&lt;/code> for the editor.  This will cause&#xA;     *  the editor to &lt;code>stopEditing&lt;/code> and lose any partially&#xA;     *  edited value if the editor is editing when this method is called. &lt;p>&#xA;     *&#xA;     *  Returns the component that should be added to the client's&#xA;     *  &lt;code>Component&lt;/code> hierarchy.  Once installed in the client's&#xA;     *  hierarchy this component will then be able to draw and receive&#xA;     *  user input.&#xA;     *&#xA;     * @param&#x9;table&#x9;&#x9;the &lt;code>JTable&lt;/code> that is asking the&#xA;     *&#x9;&#x9;&#x9;&#x9;editor to edit; can be &lt;code>null&lt;/code>&#xA;     * @param&#x9;value&#x9;&#x9;the value of the cell to be edited; it is&#xA;     *&#x9;&#x9;&#x9;&#x9;up to the specific editor to interpret&#xA;     *&#x9;&#x9;&#x9;&#x9;and draw the value.  For example, if value is&#xA;     *&#x9;&#x9;&#x9;&#x9;the string &quot;true&quot;, it could be rendered as a&#xA;     *&#x9;&#x9;&#x9;&#x9;string or it could be rendered as a check&#xA;     *&#x9;&#x9;&#x9;&#x9;box that is checked.  &lt;code>null&lt;/code>&#xA;     *&#x9;&#x9;&#x9;&#x9;is a valid value&#xA;     * @param&#x9;isSelected&#x9;true if the cell is to be rendered with&#xA;     *&#x9;&#x9;&#x9;&#x9;highlighting&#xA;     * @param&#x9;row     &#x9;the row of the cell being edited&#xA;     * @param&#x9;column  &#x9;the column of the cell being edited&#xA;     * @return&#x9;the component for editing&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../../../java/awt/Component.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="table">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../JTable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="isSelected">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="row">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="column">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This interface defines the method any object that would like to be&#xA; * an editor of values for components such as &lt;code>JListBox&lt;/code>,&#xA; * &lt;code>JComboBox&lt;/code>, &lt;code>JTree&lt;/code>, or &lt;code>JTable&lt;/code>&#xA; * needs to implement.&#xA; *&#xA; * @version 1.16 12/19/03&#xA; * @author Alan Chung&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../CellEditor.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
