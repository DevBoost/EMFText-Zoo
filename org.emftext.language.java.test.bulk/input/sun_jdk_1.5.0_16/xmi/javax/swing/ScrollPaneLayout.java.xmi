<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:annotations="http://www.emftext.org/java/annotations" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/annotations ../../java.ecore#/0 http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/expressions ../../java.ecore#/5 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../java.ecore#/8 http://www.emftext.org/java/literals ../../java.ecore#/9 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/operators ../../java.ecore#/12 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/references ../../java.ecore#/14 http://www.emftext.org/java/statements ../../java.ecore#/15 http://www.emftext.org/java/types ../../java.ecore#/16" name="ScrollPaneLayout.java">
  <comments>/*&#xA; * @(#)ScrollPaneLayout.java&#x9;1.60 04/05/18&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>swing</namespaces>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
    <namespaces>border</namespaces>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../java/awt/LayoutManager.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../java/awt/Container.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../java/awt/Insets.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../java/io/Serializable.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="ScrollPaneLayout">
    <members xsi:type="members:Field" name="viewport">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JViewport.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** &#xA;     * The scrollpane's viewport child.  &#xA;     * Default is an empty &lt;code>JViewport&lt;/code>.&#xA;     * @see JScrollPane#setViewport&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="vsb">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JScrollBar.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * The scrollpane's vertical scrollbar child.  &#xA;     * Default is a &lt;code>JScrollBar&lt;/code>.&#xA;     * @see JScrollPane#setVerticalScrollBar&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="hsb">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JScrollBar.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * The scrollpane's horizontal scrollbar child.  &#xA;     * Default is a &lt;code>JScrollBar&lt;/code>.&#xA;     * @see JScrollPane#setHorizontalScrollBar&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="rowHead">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JViewport.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** &#xA;     * The row header child.  Default is &lt;code>null&lt;/code>.&#xA;     * @see JScrollPane#setRowHeader&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="colHead">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JViewport.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** &#xA;     * The column header child.  Default is &lt;code>null&lt;/code>.&#xA;     * @see JScrollPane#setColumnHeader&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="lowerLeft">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * The component to display in the lower left corner. &#xA;     * Default is &lt;code>null&lt;/code>.&#xA;     * @see JScrollPane#setCorner&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="lowerRight">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * The component to display in the lower right corner. &#xA;     * Default is &lt;code>null&lt;/code>.&#xA;     * @see JScrollPane#setCorner&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="upperLeft">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * The component to display in the upper left corner. &#xA;     * Default is &lt;code>null&lt;/code>.&#xA;     * @see JScrollPane#setCorner&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="upperRight">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * The component to display in the upper right corner. &#xA;     * Default is &lt;code>null&lt;/code>.&#xA;     * @see JScrollPane#setCorner&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="vsbPolicy">
      <initialValue xsi:type="references:IdentifierReference">
        <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.15"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** &#xA;     * The display policy for the vertical scrollbar.&#xA;     * The default is &lt;code>JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED&lt;/code>.  &#xA;     * &lt;p>&#xA;     * This field is obsolete, please use the &lt;code>JScrollPane&lt;/code> field instead.&#xA;     * &#xA;     * @see JScrollPane#setVerticalScrollBarPolicy&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="hsbPolicy">
      <initialValue xsi:type="references:IdentifierReference">
        <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.18"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * The display policy for the horizontal scrollbar.&#xA;     * The default is &lt;code>JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED&lt;/code>.&#xA;     * &lt;p>&#xA;     * This field is obsolete, please use the &lt;code>JScrollPane&lt;/code> field instead.&#xA;     * &#xA;     * @see JScrollPane#setHorizontalScrollBarPolicy&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="syncWithScrollPane">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="sp">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JScrollPane.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This method is invoked after the ScrollPaneLayout is set as the&#xA;     * LayoutManager of a &lt;code>JScrollPane&lt;/code>.&#xA;     * It initializes all of the internal fields that&#xA;     * are ordinarily set by &lt;code>addLayoutComponent&lt;/code>.  For example:&#xA;     * &lt;pre>&#xA;     * ScrollPaneLayout mySPLayout = new ScrollPanelLayout() {&#xA;     *     public void layoutContainer(Container p) {&#xA;     *         super.layoutContainer(p);&#xA;     *         // do some extra work here ...&#xA;     *     }&#xA;     * };&#xA;     * scrollpane.setLayout(mySPLayout):&#xA;     * &lt;/pre>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.38"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.35"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.32"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.41"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.44"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.47"/>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.5"/>
              </arguments>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.47"/>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.6"/>
              </arguments>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.47"/>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.7"/>
              </arguments>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.47"/>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.8"/>
              </arguments>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.24"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.26"/>
            </next>
          </value>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addSingletonComponent">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldC">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newC">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** &#xA;     * Removes an existing component.  When a new component, such as&#xA;     * the left corner, or vertical scrollbar, is added, the old one,&#xA;     * if it exists, must be removed.&#xA;     * &lt;p>&#xA;     * This method returns &lt;code>newC&lt;/code>. If &lt;code>oldC&lt;/code> is&#xA;     * not equal to &lt;code>newC&lt;/code> and is non-&lt;code>null&lt;/code>,&#xA;     * it will be removed from its parent.&#xA;     * &#xA;     * @param oldC the &lt;code>Component&lt;/code> to replace&#xA;     * @param newC the &lt;code>Component&lt;/code> to add&#xA;     * @return the &lt;code>newC&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/awt/Container.class.xmi#//@classifiers.0/@members.52"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.96"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.1"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.1"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addLayoutComponent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Adds the specified component to the layout. The layout is&#xA;     * identified using one of:&#xA;     * &lt;ul>&#xA;     * &lt;li>JScrollPane.VIEWPORT&#xA;     * &lt;li>JScrollPane.VERTICAL_SCROLLBAR&#xA;     * &lt;li>JScrollPane.HORIZONTAL_SCROLLBAR&#xA;     * &lt;li>JScrollPane.ROW_HEADER&#xA;     * &lt;li>JScrollPane.COLUMN_HEADER&#xA;     * &lt;li>JScrollPane.LOWER_LEFT_CORNER&#xA;     * &lt;li>JScrollPane.LOWER_RIGHT_CORNER&#xA;     * &lt;li>JScrollPane.UPPER_LEFT_CORNER&#xA;     * &lt;li>JScrollPane.UPPER_RIGHT_CORNER&#xA;     * &lt;/ul>&#xA;     *&#xA;     * @param s the component identifier&#xA;     * @param c the the component to be added&#xA;     * @exception IllegalArgumentException if &lt;code>s&lt;/code> is an invalid key&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="JViewport.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
                </child>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
            <arguments xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.0"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="JScrollBar.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
                  </child>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.1"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="JScrollBar.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.2"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="JViewport.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
                      </child>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.3"/>
                  </arguments>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="JViewport.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.4"/>
                    </arguments>
                  </next>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.5"/>
                      </arguments>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
                          </value>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.6"/>
                        </arguments>
                      </next>
                    </condition>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.7"/>
                          </arguments>
                        </next>
                      </condition>
                      <elseStatement xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
                              </value>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.8"/>
                            </arguments>
                          </next>
                        </condition>
                        <elseStatement xsi:type="statements:Block">
                          <statements xsi:type="statements:Throw">
                            <throwable xsi:type="instantiations:NewConstructorCall">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:StringReference" value="invalid layout key "/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </arguments>
                            </throwable>
                          </statements>
                        </elseStatement>
                      </elseStatement>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="removeLayoutComponent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Removes the specified component from the layout.&#xA;     *   &#xA;     * @param c the component to remove&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:NullLiteral"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:NullLiteral"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:NullLiteral"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:NullLiteral"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="literals:NullLiteral"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="literals:NullLiteral"/>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                    </condition>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="literals:NullLiteral"/>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                      </condition>
                      <elseStatement xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="literals:NullLiteral"/>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                        </condition>
                      </elseStatement>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getVerticalScrollBarPolicy">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the vertical scrollbar-display policy.&#xA;     *&#xA;     * @return an integer giving the display policy&#xA;     * @see #setVerticalScrollBarPolicy&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setVerticalScrollBarPolicy">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the vertical scrollbar-display policy. The options&#xA;     * are:&#xA;     * &lt;ul>&#xA;     * &lt;li>JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED&#xA;     * &lt;li>JScrollPane.VERTICAL_SCROLLBAR_NEVER&#xA;     * &lt;li>JScrollPane.VERTICAL_SCROLLBAR_ALWAYS&#xA;     * &lt;/ul>&#xA;     * Note: Applications should use the &lt;code>JScrollPane&lt;/code> version&#xA;     * of this method.  It only exists for backwards compatibility&#xA;     * with the Swing 1.0.2 (and earlier) versions of this class.&#xA;     *&#xA;     * @param x an integer giving the display policy&#xA;     * @exception IllegalArgumentException if &lt;code>x&lt;/code> is an invalid&#xA;     *&#x9;&#x9;vertical scroll bar policy, as listed above&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.15"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.16"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.17"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="invalid verticalScrollBarPolicy"/>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getHorizontalScrollBarPolicy">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the horizontal scrollbar-display policy.&#xA;     *&#xA;     * @return an integer giving the display policy&#xA;     * @see #setHorizontalScrollBarPolicy&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setHorizontalScrollBarPolicy">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the horizontal scrollbar-display policy.&#xA;     * The options are:&lt;ul>&#xA;     * &lt;li>JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED&#xA;     * &lt;li>JScrollPane.HOTRIZONTAL_SCROLLBAR_NEVER&#xA;     * &lt;li>JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS&#xA;     * &lt;/ul>&#xA;     * Note: Applications should use the &lt;code>JScrollPane&lt;/code> version&#xA;     * of this method.  It only exists for backwards compatibility&#xA;     * with the Swing 1.0.2 (and earlier) versions of this class.&#xA;     *&#xA;     * @param x an int giving the display policy&#xA;     * @exception IllegalArgumentException if &lt;code>x&lt;/code> is not a valid&#xA;     *&#x9;&#x9;horizontal scrollbar policy, as listed above&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.18"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.19"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.20"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="invalid horizontalScrollBarPolicy"/>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getViewport">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JViewport.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the &lt;code>JViewport&lt;/code> object that displays the&#xA;     * scrollable contents.&#xA;     * @return the &lt;code>JViewport&lt;/code> object that displays the scrollable contents&#xA;     * @see JScrollPane#getViewport&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getHorizontalScrollBar">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JScrollBar.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the &lt;code>JScrollBar&lt;/code> object that handles horizontal scrolling.&#xA;     * @return the &lt;code>JScrollBar&lt;/code> object that handles horizontal scrolling&#xA;     * @see JScrollPane#getHorizontalScrollBar&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getVerticalScrollBar">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JScrollBar.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the &lt;code>JScrollBar&lt;/code> object that handles vertical scrolling.&#xA;     * @return the &lt;code>JScrollBar&lt;/code> object that handles vertical scrolling&#xA;     * @see JScrollPane#getVerticalScrollBar&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getRowHeader">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JViewport.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the &lt;code>JViewport&lt;/code> object that is the row header.&#xA;     * @return the &lt;code>JViewport&lt;/code> object that is the row header&#xA;     * @see JScrollPane#getRowHeader&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getColumnHeader">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JViewport.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the &lt;code>JViewport&lt;/code> object that is the column header.&#xA;     * @return the &lt;code>JViewport&lt;/code> object that is the column header&#xA;     * @see JScrollPane#getColumnHeader&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getCorner">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="key">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the &lt;code>Component&lt;/code> at the specified corner.&#xA;     * @param key the &lt;code>String&lt;/code> specifying the corner&#xA;     * @return the &lt;code>Component&lt;/code> at the specified corner, as defined in&#xA;     *         {@link ScrollPaneConstants}; if &lt;code>key&lt;/code> is not one of the&#xA;     *&#x9;&#x9;four corners, &lt;code>null&lt;/code> is returned&#xA;     * @see JScrollPane#getCorner&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
            <arguments xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.5"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
              <arguments xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.6"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.7"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.8"/>
                  </arguments>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="literals:NullLiteral"/>
                </statements>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="preferredLayoutSize">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * The preferred size of a &lt;code>ScrollPane&lt;/code> is the size of the insets,&#xA;     * plus the preferred size of the viewport, plus the preferred size of &#xA;     * the visible headers, plus the preferred size of the scrollbars&#xA;     * that will appear given the current view and the current&#xA;     * scrollbar displayPolicies.  &#xA;     * &lt;p>Note that the rowHeader is calculated as part of the preferred width&#xA;     * and the colHeader is calculated as part of the preferred size.&#xA;     * &#xA;     * @param parent the &lt;code>Container&lt;/code> that will be laid out&#xA;     * @return a &lt;code>Dimension&lt;/code> object specifying the preferred size of the &#xA;     *         viewport and any scrollbars&#xA;     * @see ViewportLayout&#xA;     * @see LayoutManager&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="scrollPane">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/* Sync the (now obsolete) policy fields with the&#xA;&#x9; * JScrollPane.&#xA;&#x9; */</comments>
              <target xsi:type="classifiers:Class" href="JScrollPane.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="JScrollPane.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.24"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.26"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="insets">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Insets.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/awt/Container.class.xmi#//@classifiers.0/@members.30"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="prefWidth">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="prefHeight">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.2"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="extentSize">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/* Note that viewport.getViewSize() is equivalent to &#xA;&#x9; * viewport.getView().getPreferredSize() modulo a null&#xA;&#x9; * view or a view whose size was explicitly set.&#xA;&#x9; */</comments>
              <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="viewSize">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="view">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.6/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.118"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.7/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="JViewport.class.xmi#//@classifiers.0/@members.45"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.8/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="JViewport.class.xmi#//@classifiers.0/@members.43"/>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>/* If there's a viewport add its preferredSize.&#xA;&#x9; */</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.6/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.6/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.6/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="viewportBorder">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/* If there's a JScrollPane.viewportBorder, add its insets.&#xA;&#x9; */</comments>
              <target xsi:type="classifiers:Interface" href="border/Border.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.28"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="vpbInsets">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../java/awt/Insets.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.11/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="border/Border.class.xmi#//@classifiers.0/@members.1"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.12/@statement/@statements.0/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.12/@statement/@statements.0/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.12/@statement/@statements.0/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.12/@statement/@statements.0/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.11/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>/* If a header exists and it's visible, factor its&#xA;&#x9; * preferred size in.&#xA;&#x9; */</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.118"/>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.110"/>
            </next>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.118"/>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.110"/>
            </next>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>/* If a scrollbar is going to appear, factor its preferred size in.&#xA;&#x9; * If the scrollbars policy is AS_NEEDED, this can be a little&#xA;&#x9; * tricky:&#xA;&#x9; * &#xA;&#x9; * - If the view is a Scrollable then scrollableTracksViewportWidth&#xA;&#x9; * and scrollableTracksViewportHeight can be used to effectively &#xA;&#x9; * disable scrolling (if they're true) in their respective dimensions.&#xA;&#x9; * &#xA;&#x9; * - Assuming that a scrollbar hasn't been disabled by the &#xA;&#x9; * previous constraint, we need to decide if the scrollbar is going &#xA;&#x9; * to appear to correctly compute the JScrollPanes preferred size.&#xA;&#x9; * To do this we compare the preferredSize of the viewport (the &#xA;&#x9; * extentSize) to the preferredSize of the view.  Although we're&#xA;&#x9; * not responsible for laying out the view we'll assume that the &#xA;&#x9; * JViewport will always give it its preferredSize.&#xA;&#x9; */</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.4/@variable"/>
                  <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.118"/>
                    </next>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.17"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="canScroll">
                    <typeReference xsi:type="types:Boolean"/>
                    <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.15/@statement/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:UnaryExpression">
                          <operators xsi:type="operators:Negate"/>
                          <child xsi:type="expressions:NestedExpression">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:InterfaceMethod" href="Scrollable.class.xmi#//@classifiers.0/@members.4"/>
                            </next>
                            <expression xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Interface" href="Scrollable.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.8/@variable"/>
                            </expression>
                          </child>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:InstanceOfExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="Scrollable.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.8/@variable"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.4/@variable"/>
                        <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                          <next xsi:type="references:MethodCall">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                            </next>
                            <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.118"/>
                          </next>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.15/@statement/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.7/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.6/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                        </children>
                        <relationOperators xsi:type="operators:GreaterThan"/>
                      </expression>
                    </children>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.7/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </expression>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.6/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </expression>
                </children>
              </condition>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.16"/>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.5/@variable"/>
                  <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.118"/>
                    </next>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.20"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="canScroll">
                    <typeReference xsi:type="types:Boolean"/>
                    <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.16/@statement/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:UnaryExpression">
                          <operators xsi:type="operators:Negate"/>
                          <child xsi:type="expressions:NestedExpression">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:InterfaceMethod" href="Scrollable.class.xmi#//@classifiers.0/@members.3"/>
                            </next>
                            <expression xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Interface" href="Scrollable.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.8/@variable"/>
                            </expression>
                          </child>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:InstanceOfExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="Scrollable.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.8/@variable"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.5/@variable"/>
                        <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
                          <next xsi:type="references:MethodCall">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                            </next>
                            <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.118"/>
                          </next>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.16/@statement/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.7/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                          </next>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.6/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                          </next>
                        </children>
                        <relationOperators xsi:type="operators:GreaterThan"/>
                      </expression>
                    </children>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.7/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </expression>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.6/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </expression>
                </children>
              </condition>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.19"/>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.4/@variable"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.5/@variable"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="minimumLayoutSize">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * The minimum size of a &lt;code>ScrollPane&lt;/code> is the size of the insets &#xA;     * plus minimum size of the viewport, plus the scrollpane's&#xA;     * viewportBorder insets, plus the minimum size &#xA;     * of the visible headers, plus the minimum size of the &#xA;     * scrollbars whose displayPolicy isn't NEVER.&#xA;     * &#xA;     * @param parent the &lt;code>Container&lt;/code> that will be laid out&#xA;     * @return a &lt;code>Dimension&lt;/code> object specifying the minimum size&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="scrollPane">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/* Sync the (now obsolete) policy fields with the&#xA;&#x9; * JScrollPane.&#xA;&#x9; */</comments>
              <target xsi:type="classifiers:Class" href="JScrollPane.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="JScrollPane.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.24"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.26"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="insets">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Insets.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/awt/Container.class.xmi#//@classifiers.0/@members.30"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="minWidth">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="minHeight">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.2"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>/* If there's a viewport add its minimumSize.&#xA;&#x9; */</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="size">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.122"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.6/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.6/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="viewportBorder">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/* If there's a JScrollPane.viewportBorder, add its insets.&#xA;&#x9; */</comments>
              <target xsi:type="classifiers:Interface" href="border/Border.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.28"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="vpbInsets">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../java/awt/Insets.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.7/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="border/Border.class.xmi#//@classifiers.0/@members.1"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.8/@statement/@statements.0/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.8/@statement/@statements.0/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.8/@statement/@statements.0/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.8/@statement/@statements.0/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.7/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>/* If a header exists and it's visible, factor its&#xA;&#x9; * minimum size in.&#xA;&#x9; */</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="size">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.122"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.9/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/lang/Math.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.9/@statement/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../java/lang/Math.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.110"/>
            </next>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="size">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.122"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/lang/Math.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.4/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.10/@statement/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../java/lang/Math.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.10/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.110"/>
            </next>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>/* If a scrollbar might appear, factor its minimum&#xA;&#x9; * size in.&#xA;&#x9; */</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="size">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="JScrollBar.class.xmi#//@classifiers.0/@members.40"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.11/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/lang/Math.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.11/@statement/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../java/lang/Math.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.16"/>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="size">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="JScrollBar.class.xmi#//@classifiers.0/@members.40"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/lang/Math.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.4/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.12/@statement/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../java/lang/Math.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.12/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.19"/>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.4/@variable"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@variable"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="layoutContainer">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * Lays out the scrollpane. The positioning of components depends on&#xA;     * the following constraints:&#xA;     * &lt;ul>&#xA;     * &lt;li> The row header, if present and visible, gets its preferred&#xA;     * width and the viewport's height.&#xA;     * &#xA;     * &lt;li> The column header, if present and visible, gets its preferred&#xA;     * height and the viewport's width.&#xA;     * &#xA;     * &lt;li> If a vertical scrollbar is needed, i.e. if the viewport's extent&#xA;     * height is smaller than its view height or if the &lt;code>displayPolicy&lt;/code>&#xA;     * is ALWAYS, it's treated like the row header with respect to its&#xA;     * dimensions and is made visible.&#xA;     * &#xA;     * &lt;li> If a horizontal scrollbar is needed, it is treated like the&#xA;     * column header (see the paragraph above regarding the vertical scrollbar).&#xA;     * &#xA;     * &lt;li> If the scrollpane has a non-&lt;code>null&lt;/code>&#xA;     * &lt;code>viewportBorder&lt;/code>, then space is allocated for that.&#xA;     * &#xA;     * &lt;li> The viewport gets the space available after accounting for&#xA;     * the previous constraints.&#xA;     * &#xA;     * &lt;li> The corner components, if provided, are aligned with the &#xA;     * ends of the scrollbars and headers. If there is a vertical&#xA;     * scrollbar, the right corners appear; if there is a horizontal&#xA;     * scrollbar, the lower corners appear; a row header gets left&#xA;     * corners, and a column header gets upper corners.&#xA;     * &lt;/ul>&#xA;     *&#xA;     * @param parent the &lt;code>Container&lt;/code> to lay out&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="scrollPane">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/* Sync the (now obsolete) policy fields with the&#xA;&#x9; * JScrollPane.&#xA;&#x9; */</comments>
              <target xsi:type="classifiers:Class" href="JScrollPane.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="JScrollPane.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.24"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.26"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="availR">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.158"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="insets">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Insets.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/awt/Container.class.xmi#//@classifiers.0/@members.30"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.5/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.5/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:AssignmentMinus"/>
          <value xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.5/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.5/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:AssignmentMinus"/>
          <value xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.5/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.5/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.2"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="leftToRight">
          <typeReference xsi:type="types:Boolean">
            <comments>/* Get the scrollPane's orientation.&#xA;         */</comments>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="SwingUtilities.class.xmi#//@classifiers.0/@members.57"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable"/>
            </next>
            <target xsi:type="classifiers:Class" href="SwingUtilities.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="colHeadR">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/* If there's a visible column header remove the space it &#xA;&#x9; * needs from the top of availR.  The column header is treated &#xA;&#x9; * as if it were fixed height, arbitrary width.&#xA;&#x9; */</comments>
              <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </arguments>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="colHeadHeight">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/lang/Math.class.xmi#//@classifiers.0/@members.37"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.118"/>
                    </next>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../java/lang/Math.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.11/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.12/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.12/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentMinus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.12/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.110"/>
              </next>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rowHeadR">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/* If there's a visible row header remove the space it needs&#xA;&#x9; * from the left or right of availR.  The row header is treated &#xA;&#x9; * as if it were fixed width, arbitrary height.&#xA;&#x9; */</comments>
              <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="rowHeadWidth">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/lang/Math.class.xmi#//@classifiers.0/@members.37"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                      <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.118"/>
                    </next>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../java/lang/Math.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.14/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentMinus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.14/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </child>
                  <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.14/@statement/@statements.0/@variable"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.10/@variable"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                      </next>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.110"/>
              </next>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="viewportBorder">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/* If there's a JScrollPane.viewportBorder, remove the&#xA;&#x9; * space it occupies for availR.&#xA;&#x9; */</comments>
              <target xsi:type="classifiers:Interface" href="border/Border.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.28"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="vpbInsets">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Insets.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.15/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="border/Border.class.xmi#//@classifiers.0/@members.1"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.0"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentMinus"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentMinus"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.15/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../java/awt/Insets.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </value>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="view">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/* At this point availR is the space available for the viewport&#xA;&#x9; * and scrollbars. rowHeadR is correct except for its height and y&#xA;         * and colHeadR is correct except for its width and x.  Once we're &#xA;&#x9; * through computing the dimensions  of these three parts we can &#xA;&#x9; * go back and set the dimensions of rowHeadR.height, rowHeadR.y,&#xA;         * colHeadR.width, colHeadR.x and the bounds for the corners.&#xA;&#x9; * &#xA;         * We'll decide about putting up scrollbars by comparing the &#xA;         * viewport views preferred size with the viewports extent&#xA;&#x9; * size (generally just its size).  Using the preferredSize is&#xA;&#x9; * reasonable because layout proceeds top down - so we expect&#xA;&#x9; * the viewport to be laid out next.  And we assume that the&#xA;&#x9; * viewports layout manager will give the view it's preferred&#xA;&#x9; * size.  One exception to this is when the view implements &#xA;&#x9; * Scrollable and Scrollable.getViewTracksViewport{Width,Height}&#xA;&#x9; * methods return true.  If the view is tracking the viewports&#xA;&#x9; * width we don't bother with a horizontal scrollbar, similarly&#xA;&#x9; * if view.getViewTracksViewport(Height) is true we don't bother&#xA;&#x9; * with a vertical scrollbar.&#xA;&#x9; */</comments>
              <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </child>
            <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="JViewport.class.xmi#//@classifiers.0/@members.43"/>
              </next>
            </expressionIf>
            <expressionElse xsi:type="literals:NullLiteral"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="viewPrefSize">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.18/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </child>
            <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.18/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.177"/>
              </next>
            </expressionIf>
            <expressionElse xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expressionElse>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="extentSize">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </child>
            <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="JViewport.class.xmi#//@classifiers.0/@members.52"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.28"/>
                  </next>
                </arguments>
              </next>
            </expressionIf>
            <expressionElse xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expressionElse>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="viewTracksViewportWidth">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="literals:BooleanLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="viewTracksViewportHeight">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="literals:BooleanLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="isEmpty">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
            </expression>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sv">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="Scrollable.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Don't bother checking the Scrollable methods if there is no room</comments>
        <comments>// for the viewport, we aren't going to show any scrollbars in this</comments>
        <comments>// case anyway.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.24/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="Scrollable.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.18/@variable"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.21/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.24/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="Scrollable.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.22/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.24/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="Scrollable.class.xmi#//@classifiers.0/@members.4"/>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.23/@variable"/>
          </children>
          <children xsi:type="expressions:InstanceOfExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="Scrollable.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.18/@variable"/>
          </children>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.24/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="vsbR">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/* If there's a vertical scrollbar and we need one, allocate&#xA;&#x9; * space for it (we'll make it visible later). A vertical &#xA;&#x9; * scrollbar is considered to be fixed width, arbitrary height.&#xA;&#x9; */</comments>
              <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </children>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="vsbNeeded">
          <typeReference xsi:type="types:Boolean"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.23/@variable"/>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral" value="true"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
            <children xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.17"/>
            </children>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.16"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable">
                    <comments>// vsbPolicy == VERTICAL_SCROLLBAR_AS_NEEDED</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.22/@variable"/>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.19/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.20/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                        </children>
                        <relationOperators xsi:type="operators:GreaterThan"/>
                      </expression>
                    </children>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.28">
              <arguments xsi:type="literals:BooleanLiteral" value="true"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.10/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.20/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="JViewport.class.xmi#//@classifiers.0/@members.52"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.28"/>
                    </next>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="hsbR">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/* If there's a horizontal scrollbar and we need one, allocate&#xA;&#x9; * space for it (we'll make it visible later). A horizontal &#xA;&#x9; * scrollbar is considered to be fixed height, arbitrary width.&#xA;&#x9; */</comments>
              <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </children>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="hsbNeeded">
          <typeReference xsi:type="types:Boolean"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.31/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.23/@variable"/>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.31/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral" value="true"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            <children xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.20"/>
            </children>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.31/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.19"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.31/@variable">
                    <comments>// hsbPolicy == HORIZONTAL_SCROLLBAR_AS_NEEDED</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.21/@variable"/>
                    </children>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.19/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                          </next>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.20/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                          </next>
                        </children>
                        <relationOperators xsi:type="operators:GreaterThan"/>
                      </expression>
                    </children>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29">
              <arguments xsi:type="literals:BooleanLiteral" value="true"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.30/@variable"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>/* If we added the horizontal scrollbar then we've implicitly &#xA;&#x9;     * reduced  the vertical space available to the viewport. &#xA;&#x9;     * As a consequence we may have to add the vertical scrollbar, &#xA;&#x9;     * if that hasn't been done so already.  Of course we&#xA;&#x9;     * don't bother with any of this if the vsbPolicy is NEVER.&#xA;&#x9;     */</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.20/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="JViewport.class.xmi#//@classifiers.0/@members.52"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.28"/>
                        </next>
                      </arguments>
                    </next>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.19/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.20/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                    </children>
                    <relationOperators xsi:type="operators:GreaterThan"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.28">
                      <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.10/@variable"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                  <children xsi:type="literals:NullLiteral"/>
                </expression>
              </children>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.16"/>
                  </children>
                </expression>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.31/@variable"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>/* Set the size of the viewport first, and then recheck the Scrollable&#xA;&#x9; * methods. Some components base their return values for the Scrollable&#xA;&#x9; * methods on the size of the Viewport, so that if we don't&#xA;&#x9; * ask after resetting the bounds we may have gotten the wrong&#xA;&#x9; * answer.&#xA;&#x9; */</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.165"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.20/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="JViewport.class.xmi#//@classifiers.0/@members.52"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.28"/>
                        </next>
                      </arguments>
                    </next>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="oldHSBNeeded">
                  <typeReference xsi:type="types:Boolean"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.31/@variable"/>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="oldVSBNeeded">
                  <typeReference xsi:type="types:Boolean"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.21/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.24/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="Scrollable.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.22/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.24/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="Scrollable.class.xmi#//@classifiers.0/@members.4"/>
                    </next>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="newVSBNeeded">
                      <typeReference xsi:type="types:Boolean"/>
                      <initialValue xsi:type="expressions:ConditionalAndExpression">
                        <children xsi:type="expressions:UnaryExpression">
                          <operators xsi:type="operators:Negate"/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.22/@variable"/>
                        </children>
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:RelationExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.19/@variable">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                              </next>
                            </children>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.20/@variable">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                              </next>
                            </children>
                            <relationOperators xsi:type="operators:GreaterThan"/>
                          </expression>
                        </children>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.34/@statement/@statements.1/@statement/@statements.5/@statement/@statements.0/@variable"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.28">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.10/@variable"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.20/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="JViewport.class.xmi#//@classifiers.0/@members.52"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.28"/>
                                </next>
                              </arguments>
                            </next>
                          </value>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.34/@statement/@statements.1/@statement/@statements.5/@statement/@statements.0/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </children>
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                    <children xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.15"/>
                    </children>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="newHSBbNeeded">
                      <typeReference xsi:type="types:Boolean"/>
                      <initialValue xsi:type="expressions:ConditionalAndExpression">
                        <children xsi:type="expressions:UnaryExpression">
                          <operators xsi:type="operators:Negate"/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.21/@variable"/>
                        </children>
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:RelationExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.19/@variable">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                              </next>
                            </children>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.20/@variable">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                              </next>
                            </children>
                            <relationOperators xsi:type="operators:GreaterThan"/>
                          </expression>
                        </children>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.31/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.34/@statement/@statements.1/@statement/@statements.6/@statement/@statements.0/@variable"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.31/@variable"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.30/@variable"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.20/@variable"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="JViewport.class.xmi#//@classifiers.0/@members.52"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.28"/>
                                    </next>
                                  </arguments>
                                </next>
                              </value>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.19/@variable">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.20/@variable">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                                  </next>
                                </children>
                                <relationOperators xsi:type="operators:GreaterThan"/>
                              </value>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.28">
                                  <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.10/@variable"/>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:ConditionalAndExpression">
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:NotEqual"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                              <children xsi:type="literals:NullLiteral"/>
                            </expression>
                          </children>
                          <children xsi:type="expressions:UnaryExpression">
                            <operators xsi:type="operators:Negate"/>
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
                          </children>
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:NotEqual"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                              <children xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.16"/>
                              </children>
                            </expression>
                          </children>
                        </condition>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.34/@statement/@statements.1/@statement/@statements.6/@statement/@statements.0/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.31/@variable"/>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </children>
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                    <children xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ScrollPaneConstants.class.xmi#//@classifiers.0/@members.18"/>
                    </children>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <comments>// You could argue that we should recheck the</comments>
                  <comments>// Scrollable methods again until they stop changing,</comments>
                  <comments>// but they might never stop changing, so we stop here</comments>
                  <comments>// and don't do any additional checks.</comments>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.165"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.34/@statement/@statements.1/@statement/@statements.1/@variable"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.31/@variable"/>
                  </children>
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.34/@statement/@statements.1/@statement/@statements.2/@variable"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
                  </children>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.24/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable">
            <comments>/* We now have the final size of the viewport: availR.&#xA;&#x9; * Now fixup the header and scrollbar widths/heights.&#xA;&#x9; */</comments>
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.2"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.30/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.2"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.11/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.11/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.16/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>/* Set the bounds of the remaining components.  The scrollbars&#xA;&#x9; * are made invisible if they're not needed.&#xA;&#x9; */</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.165"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.165"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.11/@variable"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.158"/>
                    <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.165"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.27/@variable"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.158"/>
                    <arguments xsi:type="literals:BooleanLiteral"/>
                  </next>
                </expression>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.158"/>
                    <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.165"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.30/@variable"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.31/@variable"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.158"/>
                    <arguments xsi:type="literals:BooleanLiteral"/>
                  </next>
                </expression>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.160"/>
                <arguments xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.10/@variable"/>
                  <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </expressionIf>
                  <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </expressionElse>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.30/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                </arguments>
                <arguments xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.10/@variable"/>
                  <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </expressionIf>
                  <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </expressionElse>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.30/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.160"/>
                <arguments xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.10/@variable"/>
                  <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </expressionIf>
                  <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </expressionElse>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.30/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                </arguments>
                <arguments xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.10/@variable"/>
                  <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </expressionIf>
                  <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </expressionElse>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.30/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.160"/>
                <arguments xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.10/@variable"/>
                  <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </expressionIf>
                  <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </expressionElse>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.11/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                </arguments>
                <arguments xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.10/@variable"/>
                  <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </expressionIf>
                  <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </expressionElse>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.11/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.160"/>
                <arguments xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.10/@variable"/>
                  <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </expressionIf>
                  <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </expressionElse>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.11/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                </arguments>
                <arguments xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.10/@variable"/>
                  <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.26/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </expressionIf>
                  <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.13/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </expressionElse>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.11/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="adjustForVSB">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="wantsVSB">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="available">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="vsbR">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="vpbInsets">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Insets.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="leftToRight">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Adjusts the &lt;code>Rectangle&lt;/code> &lt;code>available&lt;/code> based on if&#xA;     * the vertical scrollbar is needed (&lt;code>wantsVSB&lt;/code>).&#xA;     * The location of the vsb is updated in &lt;code>vsbR&lt;/code>, and&#xA;     * the viewport border insets (&lt;code>vpbInsets&lt;/code>) are used to offset&#xA;     * the vsb. This is only called when &lt;code>wantsVSB&lt;/code> has&#xA;     * changed, eg you shouldn't invoke adjustForVSB(true) twice.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldWidth">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.2">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="vsbWidth">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/lang/Math.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../java/lang/Math.class.xmi#//@classifiers.0/@members.37"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.0"/>
                          </next>
                          <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.118"/>
                        </next>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                        </next>
                      </arguments>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../java/lang/Math.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../java/lang/Math.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentMinus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.1/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.2">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.1/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.2">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.3">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.3"/>
                      </next>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.4"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.2">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.3">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                    </children>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </child>
                  <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.1/@statement/@statements.0/@variable"/>
                </expression>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.0"/>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.0/@variable"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="adjustForHSB">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="wantsHSB">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="available">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="hsbR">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="vpbInsets">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Insets.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Adjusts the &lt;code>Rectangle&lt;/code> &lt;code>available&lt;/code> based on if&#xA;     * the horizontal scrollbar is needed (&lt;code>wantsHSB&lt;/code>).&#xA;     * The location of the hsb is updated in &lt;code>hsbR&lt;/code>, and&#xA;     * the viewport border insets (&lt;code>vpbInsets&lt;/code>) are used to offset&#xA;     * the hsb.  This is only called when &lt;code>wantsHSB&lt;/code> has&#xA;     * changed, eg you shouldn't invoked adjustForHSB(true) twice.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldHeight">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.2">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="hsbHeight">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/lang/Math.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../java/lang/Math.class.xmi#//@classifiers.0/@members.37"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                        </next>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../java/awt/Dimension.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                          <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.118"/>
                        </next>
                      </arguments>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../java/lang/Math.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../java/lang/Math.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentMinus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.1/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.2">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.3">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.2">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.1/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.0"/>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.0/@variable"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getViewportBorderBounds">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="scrollpane">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JScrollPane.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="annotations:AnnotationInstance">
        <comments>/** &#xA;     * Returns the bounds of the border around the specified scroll pane's &#xA;     * viewport.&#xA;     *&#xA;     * @return the size and position of the viewport border&#xA;     * @deprecated As of JDK version Swing1.1&#xA;     *    replaced by &lt;code>JScrollPane.getViewportBorderBounds()&lt;/code>.&#xA;     */</comments>
        <annotation xsi:type="classifiers:Annotation" href="../../java/lang/Deprecated.class.xmi#//@classifiers.0"/>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="JScrollPane.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="classifiers:Class" name="UIResource">
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The UI resource version of &lt;code>ScrollPaneLayout&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <implements xsi:type="types:NamespaceClassifierReference">
        <namespaces>javax</namespaces>
        <namespaces>swing</namespaces>
        <namespaces>plaf</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="plaf/UIResource.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </implements>
      <extends xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </extends>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The layout manager used by &lt;code>JScrollPane&lt;/code>.  &#xA; * &lt;code>JScrollPaneLayout&lt;/code> is&#xA; * responsible for nine components: a viewport, two scrollbars,&#xA; * a row header, a column header, and four &quot;corner&quot; components.&#xA; * &lt;p>&#xA; * &lt;strong>Warning:&lt;/strong>&#xA; * Serialized objects of this class will not be compatible with&#xA; * future Swing releases. The current serialization support is&#xA; * appropriate for short term storage or RMI between applications running&#xA; * the same version of Swing.  As of 1.4, support for long term storage&#xA; * of all JavaBeans&lt;sup>&lt;font size=&quot;-2&quot;>TM&lt;/font>&lt;/sup>&#xA; * has been added to the &lt;code>java.beans&lt;/code> package.&#xA; * Please see {@link java.beans.XMLEncoder}.&#xA; *&#xA; * @see JScrollPane&#xA; * @see JViewport&#xA; *&#xA; * @version 1.60 05/18/04&#xA; * @author Hans Muller&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../java/awt/LayoutManager.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="ScrollPaneConstants.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../java/io/Serializable.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
