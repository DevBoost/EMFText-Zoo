<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/expressions ../../java.ecore#/5 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../java.ecore#/8 http://www.emftext.org/java/literals ../../java.ecore#/9 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/operators ../../java.ecore#/12 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/references ../../java.ecore#/14 http://www.emftext.org/java/statements ../../java.ecore#/15 http://www.emftext.org/java/types ../../java.ecore#/16 http://www.emftext.org/java/variables ../../java.ecore#/17" name="SpringLayout.java">
  <comments>/*&#xA; * @(#)SpringLayout.java&#x9;1.19 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>swing</namespaces>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="SpringLayout">
    <members xsi:type="members:Field" name="componentConstraints">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/util/HashMap.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../java/util/Map.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="cyclicReference">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.11"/>
          <arguments xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="Spring.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </arguments>
        </next>
        <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="cyclicSprings">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../java/util/Set.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="acyclicSprings">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../java/util/Set.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="NORTH">
      <initialValue xsi:type="references:StringReference" value="North"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Specifies the top edge of a component's bounding rectangle.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SOUTH">
      <initialValue xsi:type="references:StringReference" value="South"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Specifies the bottom edge of a component's bounding rectangle.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="EAST">
      <initialValue xsi:type="references:StringReference" value="East"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Specifies the right edge of a component's bounding rectangle.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="WEST">
      <initialValue xsi:type="references:StringReference" value="West"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Specifies the left edge of a component's bounding rectangle.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="classifiers:Class" name="Constraints">
      <members xsi:type="members:Field" name="x">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="y">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="width">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="height">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="east">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="south">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="verticalDerived">
        <initialValue xsi:type="literals:NullLiteral"/>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="horizontalDerived">
        <initialValue xsi:type="literals:NullLiteral"/>
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Constructor" name="Constraints">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="instantiations:ExplicitConstructorCall">
            <arguments xsi:type="literals:NullLiteral"/>
            <arguments xsi:type="literals:NullLiteral"/>
            <arguments xsi:type="literals:NullLiteral"/>
            <arguments xsi:type="literals:NullLiteral"/>
            <callTarget xsi:type="literals:This"/>
          </expression>
        </statements>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;        * Creates an empty &lt;code>Constraints&lt;/code> object.&#xA;        */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Constructor" name="Constraints">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="instantiations:ExplicitConstructorCall">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.9/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.9/@parameters.1"/>
            <arguments xsi:type="literals:NullLiteral"/>
            <arguments xsi:type="literals:NullLiteral"/>
            <callTarget xsi:type="literals:This"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="x">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="y">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;        * Creates a &lt;code>Constraints&lt;/code> object with the&#xA;&#x9;* specified values for its&#xA;        * &lt;code>x&lt;/code> and &lt;code>y&lt;/code> properties.&#xA;        * The &lt;code>height&lt;/code> and &lt;code>width&lt;/code> springs&#xA;&#x9;* have &lt;code>null&lt;/code> values.&#xA;        *&#xA;        * @param x  the spring controlling the component's &lt;em>x&lt;/em> value&#xA;        * @param y  the spring controlling the component's &lt;em>y&lt;/em> value&#xA;        */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Constructor" name="Constraints">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.10/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.10/@parameters.1"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.2"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.10/@parameters.2"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.3"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.10/@parameters.3"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="x">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="y">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="width">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="height">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;        * Creates a &lt;code>Constraints&lt;/code> object with the &#xA;&#x9;* specified values for its&#xA;        * &lt;code>x&lt;/code>, &lt;code>y&lt;/code>, &lt;code>width&lt;/code>,&#xA;&#x9;* and &lt;code>height&lt;/code> properties.&#xA;        * Note: If the &lt;code>SpringLayout&lt;/code> class&#xA;&#x9;* encounters &lt;code>null&lt;/code> values in the&#xA;&#x9;* &lt;code>Constraints&lt;/code> object of a given component,&#xA;&#x9;* it replaces them with suitable defaults.&#xA;        *&#xA;        * @param x  the spring value for the &lt;code>x&lt;/code> property&#xA;        * @param y  the spring value for the &lt;code>y&lt;/code> property&#xA;        * @param width  the spring value for the &lt;code>width&lt;/code> property&#xA;        * @param height  the spring value for the &lt;code>height&lt;/code> property&#xA;        */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Constructor" name="Constraints">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.11"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.11/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.166"/>
                  </next>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.11"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.11/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.167"/>
                  </next>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.2"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.11/@parameters.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.3"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.11/@parameters.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </value>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="c">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Creates a &lt;code>Constraints&lt;/code> object with&#xA;         * suitable &lt;code>x&lt;/code>, &lt;code>y&lt;/code>, &lt;code>width&lt;/code> and&#xA;         * &lt;code>height&lt;/code> springs for component, &lt;code>c&lt;/code>.&#xA;         * The &lt;code>x&lt;/code> and &lt;code>y&lt;/code> springs are constant&#xA;         * springs  initialised with the component's location at&#xA;         * the time this method is called. The &lt;code>width&lt;/code> and&#xA;         * &lt;code>height&lt;/code> springs are special springs, created by&#xA;         * the &lt;code>Spring.width()&lt;/code> and &lt;code>Spring.height()&lt;/code>&#xA;         * methods, which track the size characteristics of the component&#xA;         * when they change.&#xA;         *&#xA;         * @param c  the component whose characteristics will be reflected by this Constraints object&#xA;         * @throws NullPointerException if &lt;code>c&lt;/code> is null.&#xA;         * @since 1.5&#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:ClassMethod" name="overConstrainedHorizontally">
        <typeReference xsi:type="types:Boolean"/>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.0"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.2"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.4"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </children>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="overConstrainedVertically">
        <typeReference xsi:type="types:Boolean"/>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.1"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.3"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.5"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </children>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="sum">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="s1">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="s2">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:ConditionalOrExpression">
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.14/@parameters.0"/>
                  <children xsi:type="literals:NullLiteral"/>
                </children>
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.14/@parameters.1"/>
                  <children xsi:type="literals:NullLiteral"/>
                </children>
              </expression>
            </child>
            <expressionIf xsi:type="literals:NullLiteral"/>
            <expressionElse xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.14"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.14/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.14/@parameters.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </expressionElse>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="difference">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="s1">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="s2">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:ConditionalOrExpression">
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.15/@parameters.0"/>
                  <children xsi:type="literals:NullLiteral"/>
                </children>
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.15/@parameters.1"/>
                  <children xsi:type="literals:NullLiteral"/>
                </children>
              </expression>
            </child>
            <expressionIf xsi:type="literals:NullLiteral"/>
            <expressionElse xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.16"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.15/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.15/@parameters.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </expressionElse>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setX">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="x">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;        * Sets the &lt;code>x&lt;/code> property,&#xA;&#x9;* which controls the &lt;code>x&lt;/code> value&#xA;&#x9;* of a component's location.&#xA;        *&#xA;        * @param x the spring controlling the &lt;code>x&lt;/code> value&#xA;&#x9;*          of a component's location&#xA;        *&#xA;        * @see #getX&#xA;        * @see SpringLayout.Constraints&#xA;        */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.16/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:NullLiteral"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.2"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:NullLiteral"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.12"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getX">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;        * Returns the value of the &lt;code>x&lt;/code> property.&#xA;        *&#xA;        * @return the spring controlling the &lt;code>x&lt;/code> value&#xA;&#x9;*         of a component's location&#xA;        *&#xA;        * @see #setX&#xA;        * @see SpringLayout.Constraints&#xA;        */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.0"/>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.0"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.15">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.4"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.2"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setY">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="y">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;        * Sets the &lt;code>y&lt;/code> property,&#xA;&#x9;* which controls the &lt;code>y&lt;/code> value&#xA;&#x9;* of a component's location.&#xA;        *&#xA;        * @param y the spring controlling the &lt;code>y&lt;/code> value&#xA;&#x9;*          of a component's location&#xA;        *&#xA;        * @see #getY&#xA;        * @see SpringLayout.Constraints&#xA;        */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.18/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:NullLiteral"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.3"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:NullLiteral"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.13"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getY">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;        * Returns the value of the &lt;code>y&lt;/code> property.&#xA;        *&#xA;        * @return the spring controlling the &lt;code>y&lt;/code> value&#xA;&#x9;*         of a component's location&#xA;        *&#xA;        * @see #setY&#xA;        * @see SpringLayout.Constraints&#xA;        */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.1"/>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.1"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.15">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.5"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.3"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setWidth">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="width">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;        * Sets the &lt;code>width&lt;/code> property,&#xA;&#x9;* which controls the width of a component.&#xA;        *&#xA;        * @param width the spring controlling the width of this&#xA;&#x9;* &lt;code>Constraints&lt;/code> object&#xA;        *&#xA;        * @see #getWidth&#xA;        * @see SpringLayout.Constraints&#xA;        */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.2"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.20/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:NullLiteral"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.4"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:NullLiteral"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.12"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getWidth">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;        * Returns the value of the &lt;code>width&lt;/code> property.&#xA;        *&#xA;        * @return the spring controlling the width of a component&#xA;        *&#xA;        * @see #setWidth&#xA;        * @see SpringLayout.Constraints&#xA;        */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.2"/>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.2"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.15">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.4"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.0"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setHeight">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="height">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;        * Sets the &lt;code>height&lt;/code> property,&#xA;&#x9;* which controls the height of a component.&#xA;        *&#xA;        * @param height the spring controlling the height of this &lt;code>Constraints&lt;/code>&#xA;&#x9;* object&#xA;        *&#xA;        * @see #getHeight&#xA;        * @see SpringLayout.Constraints&#xA;        */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.3"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.22/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:NullLiteral"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.5"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:NullLiteral"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.13"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getHeight">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;        * Returns the value of the &lt;code>height&lt;/code> property.&#xA;        *&#xA;        * @return the spring controlling the height of a component&#xA;        *&#xA;        * @see #setHeight&#xA;        * @see SpringLayout.Constraints&#xA;        */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.3"/>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.3"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.15">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.5"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.1"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setEast">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="east">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.4"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.24/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:NullLiteral"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.0"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:NullLiteral"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.12"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getEast">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.4"/>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.4"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.14">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.2"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setSouth">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="south">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.5"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.26/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:NullLiteral"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.1"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:NullLiteral"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.13"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getSouth">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.5"/>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.5"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.14">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.1"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.3"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setConstraint">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="edgeName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="s">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;        * Sets the spring controlling the specified edge.&#xA;        * The edge must have one of the following values:&#xA;        * &lt;code>SpringLayout.NORTH&lt;/code>, &lt;code>SpringLayout.SOUTH&lt;/code>,&#xA;&#x9;* &lt;code>SpringLayout.EAST&lt;/code>, &lt;code>SpringLayout.WEST&lt;/code>.&#xA;        *&#xA;        * @param edgeName the edge to be set&#xA;        * @param s the spring controlling the specified edge&#xA;        *&#xA;        * @see #getConstraint&#xA;&#x9;* @see #NORTH&#xA;&#x9;* @see #SOUTH&#xA;&#x9;* @see #EAST&#xA;&#x9;* @see #WEST&#xA;        * @see SpringLayout.Constraints&#xA;        */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.28/@parameters.0"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.28/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.87"/>
              </next>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.16">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.28/@parameters.1"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.28/@parameters.0"/>
            <children xsi:type="references:StringReference" value="West"/>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.18">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.28/@parameters.1"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.28/@parameters.0"/>
              <children xsi:type="references:StringReference" value="North"/>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.24">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.28/@parameters.1"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.28/@parameters.0"/>
                <children xsi:type="references:StringReference" value="East"/>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.26">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.28/@parameters.1"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.28/@parameters.0"/>
                  <children xsi:type="references:StringReference" value="South"/>
                </condition>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getConstraint">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="edgeName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;        * Returns the value of the specified edge.&#xA;        * The edge must have one of the following values:&#xA;        * &lt;code>SpringLayout.NORTH&lt;/code>, &lt;code>SpringLayout.SOUTH&lt;/code>,&#xA;&#x9;* &lt;code>SpringLayout.EAST&lt;/code>, &lt;code>SpringLayout.WEST&lt;/code>.&#xA;        *&#xA;        * @param edgeName the edge whose value&#xA;&#x9;*                 is to be returned&#xA;        *&#xA;        * @return the spring controlling the specified edge&#xA;        *&#xA;        * @see #setConstraint&#xA;&#x9;* @see #NORTH&#xA;&#x9;* @see #SOUTH&#xA;&#x9;* @see #EAST&#xA;&#x9;* @see #WEST&#xA;        * @see SpringLayout.Constraints&#xA;        */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.29/@parameters.0"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.29/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.87"/>
              </next>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.29/@parameters.0"/>
                <children xsi:type="references:StringReference" value="West"/>
              </expression>
            </child>
            <expressionIf xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.17"/>
            <expressionElse xsi:type="expressions:ConditionalExpression">
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.29/@parameters.0"/>
                  <children xsi:type="references:StringReference" value="North"/>
                </expression>
              </child>
              <expressionIf xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.19"/>
              <expressionElse xsi:type="expressions:ConditionalExpression">
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.29/@parameters.0"/>
                    <children xsi:type="references:StringReference" value="East"/>
                  </expression>
                </child>
                <expressionIf xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.25"/>
                <expressionElse xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.29/@parameters.0"/>
                      <children xsi:type="references:StringReference" value="South"/>
                    </expression>
                  </child>
                  <expressionIf xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.27"/>
                  <expressionElse xsi:type="literals:NullLiteral"/>
                </expressionElse>
              </expressionElse>
            </expressionElse>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="reset">
        <typeReference xsi:type="types:Void">
          <comments>/*pp*/</comments>
        </typeReference>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Spring.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.0"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Spring.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.1"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.2">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Spring.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.2"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Spring.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.3"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.4">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Spring.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.4"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.5">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Spring.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.5"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Spring.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.7"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Spring.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@members.6"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * A &lt;code>Constraints&lt;/code> object holds the&#xA;     * constraints that govern the way a component's size and position&#xA;     * change in a container controlled by a &lt;code>SpringLayout&lt;/code>.&#xA;     * A &lt;code>Constraints&lt;/code> object is&#xA;     * like a &lt;code>Rectangle&lt;/code>, in that it&#xA;     * has &lt;code>x&lt;/code>, &lt;code>y&lt;/code>,&#xA;     * &lt;code>width&lt;/code>, and &lt;code>height&lt;/code> properties.&#xA;     * In the &lt;code>Constraints&lt;/code> object, however,&#xA;     * these properties have&#xA;     * &lt;code>Spring&lt;/code> values instead of integers.&#xA;     * In addition,&#xA;     * a &lt;code>Constraints&lt;/code> object&#xA;     * can be manipulated as four edges&#xA;     * -- north, south, east, and west --&#xA;     * using the &lt;code>constraint&lt;/code> property.&#xA;     * &#xA;     * &lt;p>&#xA;     * The following formulas are always true&#xA;     * for a &lt;code>Constraints&lt;/code> object:&#xA;     *&#xA;     * &lt;pre>&#xA;     *       west = x&#xA;     *      north = y&#xA;     *       east = x + width&#xA;     *      south = y + height&lt;/pre>&#xA;     *&#xA;     * &lt;b>Note&lt;/b>: In this document,&#xA;     * operators represent methods &#xA;     * in the &lt;code>Spring&lt;/code> class.&#xA;     * For example, &quot;a + b&quot; is equal to&#xA;     * &lt;code>Spring.sum(a, b)&lt;/code>,&#xA;     * and &quot;a - b&quot; is equal to&#xA;     * &lt;code>Spring.sum(a, Spring.minus(b))&lt;/code>.&#xA;     * See the &#xA;     * {@link Spring Spring&lt;/code> API documentation&lt;code>}&#xA;     * for further details&#xA;     * of spring arithmetic.&#xA;     *&#xA;     * &lt;p>&#xA;     * &#xA;     * Because a &lt;code>Constraints&lt;/code> object's properties --&#xA;     * representing its edges, size, and location -- can all be set&#xA;     * independently and yet are interrelated,&#xA;     * the object can become &lt;em>over-constrained&lt;/em>.&#xA;     * For example,&#xA;     * if both the &lt;code>x&lt;/code> and &lt;code>width&lt;/code>&#xA;     * properties are set&#xA;     * and then the east edge is set,&#xA;     * the object is over-constrained horizontally.&#xA;     * When this happens, one of the values &#xA;     * (in this case, the &lt;code>x&lt;/code> property)&#xA;     * automatically changes so&#xA;     * that the formulas still hold. &#xA;     *&#xA;     * &lt;p>&#xA;     * The following table shows which value changes&#xA;     * when a &lt;code>Constraints&lt;/code> object&#xA;     * is over-constrained horizontally.&#xA;     *&#xA;     * &lt;p>&#xA;     *&#xA;     * &lt;table border=1 summary=&quot;Shows which value changes when a Constraints object is over-constrained horizontally&quot;>&#xA;     *   &lt;tr>&#xA;     *     &lt;th valign=top>Value Being Set&lt;br>(method used)&lt;/th>&#xA;     *     &lt;th valign=top>Result When Over-Constrained Horizontally&lt;br>&#xA;     *      (&lt;code>x&lt;/code>, &lt;code>width&lt;/code>, and the east edge are all non-&lt;code>null&lt;/code>)&lt;/th>&#xA;     *   &lt;/tr>&#xA;     *   &lt;tr>&#xA;     *     &lt;td>&lt;code>x&lt;/code> or the west edge &lt;br>(&lt;code>setX&lt;/code> or &lt;code>setConstraint&lt;/code>)&lt;/td>&#xA;     *     &lt;td>&lt;code>width&lt;/code> value is automatically set to &lt;code>east - x&lt;/code>.&lt;/td>&#xA;     *   &lt;/tr>&#xA;     *   &lt;tr>&#xA;     *     &lt;td>&lt;code>width&lt;/code>&lt;br>(&lt;code>setWidth&lt;/code>)&lt;/td>&#xA;     *     &lt;td>east edge's value is automatically set to &lt;code>x + width&lt;/code>.&lt;/td>&#xA;     *   &lt;/tr>&#xA;     *   &lt;tr>&#xA;     *     &lt;td>east edge&lt;br>(&lt;code>setConstraint&lt;/code>)&lt;/td>&#xA;     *     &lt;td>&lt;code>x&lt;/code> value is automatically set to &lt;code>east - width&lt;/code>.&lt;/td>&#xA;     *   &lt;/tr>&#xA;     *   &lt;/table>&#xA;     *&#xA;     * &lt;p>&#xA;     * The rules for the vertical properties are similar:&#xA;     * &lt;p>&#xA;     *&#xA;     * &lt;table border=1 summary=&quot;Shows which value changes when a Constraints object is over-constrained vertically&quot;>&#xA;     * &lt;tr>&#xA;     *  &lt;th valign=top>Value Being Set&lt;br>(method used)&lt;/th>&#xA;     *  &lt;th valign=top>Result When Over-Constrained Vertically&lt;br>(&lt;code>y&lt;/code>, &lt;code>height&lt;/code>, and the south edge are all non-&lt;code>null&lt;/code>)&lt;/th>&#xA;     * &lt;/tr>&#xA;     * &lt;tr>&#xA;     *   &lt;td>&lt;code>y&lt;/code> or the north edge&lt;br>(&lt;code>setY&lt;/code> or &lt;code>setConstraint&lt;/code>)&lt;/td>&#xA;     *   &lt;td>&lt;code>height&lt;/code> value is automatically set to &lt;code>south - y&lt;/code>.&lt;/td>&#xA;     * &lt;/tr>&#xA;     * &lt;tr>&#xA;     *   &lt;td>&lt;code>height&lt;/code>&lt;br>(&lt;code>setHeight&lt;/code>)&lt;/td>&#xA;     *   &lt;td>south edge's value is automatically set to &lt;code>y + height&lt;/code>.&lt;/td>&#xA;     * &lt;/tr>&#xA;     * &lt;tr>&#xA;     *   &lt;td>south edge&lt;br>(&lt;code>setConstraint&lt;/code>)&lt;/td>&#xA;     *   &lt;td>&lt;code>y&lt;/code> value is automatically set to &lt;code>south - height&lt;/code>.&lt;/td>&#xA;     * &lt;/tr>&#xA;     * &lt;/table>&#xA;     *&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="classifiers:Class" name="SpringProxy">
      <members xsi:type="members:Field" name="edgeName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="c">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="l">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Constructor" name="SpringProxy">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@members.3/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@members.3/@parameters.1"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@members.2"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@members.3/@parameters.2"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="edgeName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="c">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="l">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
      </members>
      <members xsi:type="members:ClassMethod" name="getConstraint">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@members.2">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.29">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@members.0"/>
              </next>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@members.1"/>
            </next>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getMinimumValue">
        <typeReference xsi:type="types:Int"/>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.9/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getPreferredValue">
        <typeReference xsi:type="types:Int"/>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.9/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.3"/>
            </next>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getMaximumValue">
        <typeReference xsi:type="types:Int"/>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.9/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.4"/>
            </next>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getValue">
        <typeReference xsi:type="types:Int"/>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.9/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.5"/>
            </next>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setValue">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="size">
          <typeReference xsi:type="types:Int"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.9/@members.4">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.6"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@members.9/@parameters.0"/>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="isCyclic">
        <typeReference xsi:type="types:Boolean">
          <comments>/*pp*/</comments>
        </typeReference>
        <parameters xsi:type="parameters:OrdinaryParameter" name="l">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
        </parameters>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@members.10/@parameters.0">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.13">
              <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.9/@members.4"/>
            </next>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="toString">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value="SpringProxy for "/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@members.0"/>
            <children xsi:type="references:StringReference" value=" edge of "/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@members.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.94"/>
              </next>
            </children>
            <children xsi:type="references:StringReference" value="."/>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </returnValue>
        </statements>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <extends xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </extends>
    </members>
    <members xsi:type="members:Constructor" name="SpringLayout">
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a new &lt;code>SpringLayout&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="resetCyclicStatuses">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../java/util/HashSet.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../java/util/HashSet.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setParent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="p">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.11"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pc">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.8"/>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.1/@variable">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.16">
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.11"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </next>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.1/@variable">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.18">
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.11"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </next>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="width">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// The applyDefaults() method automatically adds width and</comments>
              <comments>// height springs that delegate their calculations to the</comments>
              <comments>// getMinimumSize(), getPreferredSize() and getMaximumSize()</comments>
              <comments>// methods of the relevant component. In the case of the</comments>
              <comments>// parent this will cause an infinite loop since these</comments>
              <comments>// methods, in turn, delegate their calculations to the</comments>
              <comments>// layout manager. Check for this case and replace the</comments>
              <comments>// the springs that would cause this problem with a</comments>
              <comments>// constant springs that supply default values.</comments>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.1/@variable">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.21"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.1/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.20">
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.12"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/lang/Integer.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../java/lang/Integer.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:InstanceOfExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Spring</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="Spring$WidthSpring.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@variable"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="expressions:NestedExpression">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Spring$WidthSpring.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <expression xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <namespaces>Spring</namespaces>
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Spring$WidthSpring.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.4/@variable"/>
              </expression>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="height">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.1/@variable">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.23"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.1/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.22">
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.12"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../java/lang/Integer.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../java/lang/Integer.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:InstanceOfExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Spring</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="Spring$HeightSpring.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.6/@variable"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="expressions:NestedExpression">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Spring$HeightSpring.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <expression xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <namespaces>Spring</namespaces>
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Spring$HeightSpring.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.6/@variable"/>
              </expression>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
          </children>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isCyclic">
      <typeReference xsi:type="types:Boolean">
        <comments>/*pp*/</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../../java/util/Set.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../../java/util/Set.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../../java/util/Set.class.xmi#//@classifiers.0/@members.6"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="result">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.10"/>
              <arguments xsi:type="references:SelfReference">
                <self xsi:type="literals:This"/>
              </arguments>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../java/util/Set.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../java/util/Set.class.xmi#//@classifiers.0/@members.7"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.4/@variable"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=" is cyclic. "/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="members:Field" href="../../java/lang/System.class.xmi#//@classifiers.0/@members.2"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.4/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="abandonCycles">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:ConditionalExpression">
          <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.13">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
          </child>
          <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addLayoutComponent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// LayoutManager methods.</comments>
        <comments>/**&#xA;     * Has no effect,&#xA;     * since this layout manager does not&#xA;     * use a per-component string.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="removeLayoutComponent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Removes the constraints associated with the specified component.&#xA;     *&#xA;     * @param c the component being removed from the container&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../../java/util/Map.class.xmi#//@classifiers.0/@members.6"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addInsets">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="width">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="height">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="p">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="i">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Insets.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.2">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/awt/Container.class.xmi#//@classifiers.0/@members.30"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </arguments>
          <arguments xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.1"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.2"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </arguments>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="minimumLayoutSize">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pc">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.8"/>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.17">
          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.1/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.21"/>
            </arguments>
          </arguments>
          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.1/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.23"/>
            </arguments>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="preferredLayoutSize">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pc">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.8"/>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.17">
          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.1/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.21"/>
            </arguments>
          </arguments>
          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.1/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.23"/>
            </arguments>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="maximumLayoutSize">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/awt/Dimension.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// LayoutManager2 methods.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pc">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.8"/>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.17">
          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.1/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.21"/>
            </arguments>
          </arguments>
          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.1/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.23"/>
            </arguments>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addLayoutComponent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="component">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="constraints">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * If &lt;code>constraints&lt;/code> is an instance of &#xA;     * &lt;code>SpringLayout.Constraints&lt;/code>,&#xA;     * associates the constraints with the specified component.&#xA;     * &lt;p>&#xA;     * @param   component the component being added&#xA;     * @param   constraints the component's constraints&#xA;     *&#xA;     * @see SpringLayout.Constraints&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.0"/>
              <arguments xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.8"/>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.1"/>
              </arguments>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.8"/>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.1"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getLayoutAlignmentX">
      <typeReference xsi:type="types:Float"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="p">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns 0.5f (centered).&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getLayoutAlignmentY">
      <typeReference xsi:type="types:Float"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="p">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns 0.5f (centered).&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:DecimalFloatLiteral" decimalValue="0.5"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="invalidateLayout">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="p">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <members xsi:type="members:ClassMethod" name="putConstraint">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="e1">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c1">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="pad">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="e2">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c2">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// End of LayoutManger2 methods</comments>
        <comments>/**&#xA;     * Links edge &lt;code>e1&lt;/code> of component &lt;code>c1&lt;/code> to&#xA;     * edge &lt;code>e2&lt;/code> of component &lt;code>c2&lt;/code>,&#xA;     * with a fixed distance between the edges. This&#xA;     * constraint will cause the assignment&#xA;     * &lt;pre>&#xA;     *     value(e1, c1) = value(e2, c2) + pad&lt;/pre>&#xA;     * to take place during all subsequent layout operations.&#xA;     * &lt;p>&#xA;     * @param   e1 the edge of the dependent&#xA;     * @param   c1 the component of the dependent&#xA;     * @param   pad the fixed distance between dependent and anchor&#xA;     * @param   e2 the edge of the anchor&#xA;     * @param   c2 the component of the anchor&#xA;     *&#xA;     * @see #putConstraint(String, Component, Spring, String, Component)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.26">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.1"/>
          <arguments xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.2"/>
            </next>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.3"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.4"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="putConstraint">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="e1">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c1">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="e2">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c2">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Links edge &lt;code>e1&lt;/code> of component &lt;code>c1&lt;/code> to&#xA;     * edge &lt;code>e2&lt;/code> of component &lt;code>c2&lt;/code>. As edge&#xA;     * &lt;code>(e2, c2)&lt;/code> changes value, edge &lt;code>(e1, c1)&lt;/code> will&#xA;     * be calculated by taking the (spring) sum of &lt;code>(e2, c2)&lt;/code>&#xA;     * and &lt;code>s&lt;/code>. Each edge must have one of the following values:&#xA;     * &lt;code>SpringLayout.NORTH&lt;/code>, &lt;code>SpringLayout.SOUTH&lt;/code>,&#xA;     * &lt;code>SpringLayout.EAST&lt;/code>, &lt;code>SpringLayout.WEST&lt;/code>.&#xA;     * &lt;p>&#xA;     * @param   e1 the edge of the dependent&#xA;     * @param   c1 the component of the dependent&#xA;     * @param   s the spring linking dependent and anchor&#xA;     * @param   e2 the edge of the anchor&#xA;     * @param   c2 the component of the anchor&#xA;     *&#xA;     * @see #putConstraint(String, Component, int, String, Component)&#xA;     * @see #NORTH&#xA;     * @see #SOUTH&#xA;     * @see #EAST&#xA;     * @see #WEST&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.27">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.1"/>
          <arguments xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.14"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.2"/>
              <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.31">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.3"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.4"/>
              </arguments>
            </next>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </arguments>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="putConstraint">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="e">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.28">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.2"/>
              </next>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.1"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.2"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="applyDefaults">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0/@members.8"/>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="constraints">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0/@members.8"/>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.8"/>
                </typeReference>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.20">
                <arguments xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <namespaces>Spring</namespaces>
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="Spring$WidthSpring.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.21"/>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.22">
                <arguments xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <namespaces>Spring</namespaces>
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="Spring$HeightSpring.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.23"/>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.16">
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.11"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.17"/>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.18">
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.11"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.19"/>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.1"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="putConstraints">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="component">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="constraints">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0/@members.8"/>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../../java/util/Map.class.xmi#//@classifiers.0/@members.5"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.0"/>
            <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.28">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.1"/>
            </arguments>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getConstraints">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0/@members.8"/>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the constraints for the specified component.&#xA;     * Note that,&#xA;     * unlike the &lt;code>GridBagLayout&lt;/code>&#xA;     * &lt;code>getConstraints&lt;/code> method,&#xA;     * this method does not clone constraints.&#xA;     * If no constraints&#xA;     * have been associated with this component,&#xA;     * this method&#xA;     * returns a default constraints object positioned at&#xA;     * 0,0 relative to the parent's Insets and its width/height&#xA;     * constrained to the minimum, maximum, and preferred sizes of the&#xA;     * component. The size characteristics&#xA;     * are not frozen at the time this method is called;&#xA;     * instead this method returns a constraints object&#xA;     * whose characteristics track the characteristics&#xA;     * of the component as they change.&#xA;     *&#xA;     * @param       c the component whose constraints will be returned&#xA;     *&#xA;     * @return      the constraints for the specified component&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="result">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.8"/>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.8"/>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0"/>
              </next>
            </child>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="cp">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../java/lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="expressions:NestedExpression">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="JComponent.class.xmi#//@classifiers.0/@members.190"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0">
                        <next xsi:type="references:ReflectiveClassReference"/>
                      </arguments>
                    </next>
                    <expression xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <namespaces>javax</namespaces>
                        <namespaces>swing</namespaces>
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="JComponent.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0"/>
                    </expression>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.28">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0"/>
                      <arguments xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences target="//@classifiers.0/@members.8"/>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.1/@statement/@statements.0/@statement/@statements.0/@variable"/>
                      </arguments>
                    </returnValue>
                  </statements>
                </statement>
                <condition xsi:type="expressions:InstanceOfExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences target="//@classifiers.0/@members.8"/>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.1/@statement/@statements.0/@statement/@statements.0/@variable"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:InstanceOfExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>javax</namespaces>
                <namespaces>swing</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="JComponent.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.8"/>
                </typeReference>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.0/@variable"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.0/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getConstraint">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Spring.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="edgeName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the spring controlling the distance between &#xA;     * the specified edge of&#xA;     * the component and the top or left edge of its parent. This&#xA;     * method, instead of returning the current binding for the&#xA;     * edge, returns a proxy that tracks the characteristics&#xA;     * of the edge even if the edge is subsequently rebound.&#xA;     * Proxies are intended to be used in builder envonments&#xA;     * where it is useful to allow the user to define the&#xA;     * constraints for a layout in any order. Proxies do, however,&#xA;     * provide the means to create cyclic dependencies amongst&#xA;     * the constraints of a layout. Such cycles are detected&#xA;     * internally by &lt;code>SpringLayout&lt;/code> so that&#xA;     * the layout operation always terminates.&#xA;     *&#xA;     * @param edgeName must be &#xA;     *                 &lt;code>SpringLayout.NORTH&lt;/code>,&#xA;     *                 &lt;code>SpringLayout.SOUTH&lt;/code>,&#xA;     *                 &lt;code>SpringLayout.EAST&lt;/code>, or&#xA;     *                 &lt;code>SpringLayout.WEST&lt;/code>&#xA;     * @param c the component whose edge spring is desired&#xA;     *&#xA;     * @return a proxy for the spring controlling the distance between the&#xA;     *         specified edge and the top or left edge of its parent&#xA;     * &#xA;     * @see #NORTH&#xA;     * @see #SOUTH&#xA;     * @see #EAST&#xA;     * @see #WEST&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
            <comments>// The interning here is unnecessary; it was added for efficiency.</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.87"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.9"/>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.1"/>
          <arguments xsi:type="references:SelfReference">
            <self xsi:type="literals:This"/>
          </arguments>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="layoutContainer">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/awt/Container.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="n">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/awt/Container.class.xmi#//@classifiers.0/@members.25"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.30"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.30"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/awt/Container.class.xmi#//@classifiers.0/@members.27"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.3/@init"/>
                </next>
              </arguments>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.3/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.1/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.3/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="insets">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/awt/Insets.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../java/awt/Container.class.xmi#//@classifiers.0/@members.30"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pc">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.8"/>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.6"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </next>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.5/@variable">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.17"/>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.6"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </next>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.5/@variable">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.19"/>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.6"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.168"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.4/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.4/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </children>
              <additiveOperators xsi:type="operators:Subtraction"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </next>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.5/@variable">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.21"/>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.6"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.169"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.4/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.4/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </children>
              <additiveOperators xsi:type="operators:Subtraction"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </next>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.5/@variable">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.23"/>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="c">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../java/awt/Component.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../java/awt/Container.class.xmi#//@classifiers.0/@members.27"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@init"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="cc">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.8"/>
              </typeReference>
              <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@statement/@statements.0/@variable"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="x">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.5"/>
                </next>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@statement/@statements.1/@variable">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.17"/>
                </arguments>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="y">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.5"/>
                </next>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@statement/@statements.1/@variable">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.19"/>
                </arguments>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="width">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.5"/>
                </next>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@statement/@statements.1/@variable">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.21"/>
                </arguments>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="height">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.14">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Spring.class.xmi#//@classifiers.0/@members.5"/>
                </next>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@statement/@statements.1/@variable">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.8/@members.23"/>
                </arguments>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../java/awt/Component.class.xmi#//@classifiers.0/@members.160"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.4/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@statement/@statements.2/@variable"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.4/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../java/awt/Insets.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@statement/@statements.3/@variable"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@statement/@statements.4/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@statement/@statements.5/@variable"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.1/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * A &lt;code>SpringLayout&lt;/code> lays out the children of its associated container&#xA; * according to a set of constraints.&#xA; * See &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/uiswing/layout/spring.html&quot;>How to Use SpringLayout&lt;/a>&#xA; * in &lt;em>The Java Tutorial&lt;/em> for examples of using&#xA; * &lt;code>SpringLayout&lt;/code>.&#xA; *&#xA; * &lt;p>&#xA; * Each constraint,&#xA; * represented by a &lt;code>Spring&lt;/code> object,&#xA; * controls the vertical or horizontal distance&#xA; * between two component edges.&#xA; * The edges can belong to&#xA; * any child of the container,&#xA; * or to the container itself.&#xA; * For example,&#xA; * the allowable width of a component&#xA; * can be expressed using a constraint&#xA; * that controls the distance between the west (left) and east (right) &#xA; * edges of the component.&#xA; * The allowable &lt;em>y&lt;/em> coordinates for a component&#xA; * can be expressed by constraining the distance between&#xA; * the north (top) edge of the component&#xA; * and the north edge of its container.&#xA; *&#xA; * &lt;P>&#xA; * Every child of a &lt;code>SpringLayout&lt;/code>-controlled container,&#xA; * as well as the container itself,&#xA; * has exactly one set of constraints&#xA; * associated with it.&#xA; * These constraints are represented by&#xA; * a &lt;code>SpringLayout.Constraints&lt;/code> object.&#xA; * By default,&#xA; * &lt;code>SpringLayout&lt;/code> creates constraints&#xA; * that make their associated component&#xA; * have the minimum, preferred, and maximum sizes&#xA; * returned by the component's&#xA; * {@link java.awt.Component#getMinimumSize},&#xA; * {@link java.awt.Component#getPreferredSize}, and&#xA; * {@link java.awt.Component#getMaximumSize}&#xA; * methods. The &lt;em>x&lt;/em> and &lt;em>y&lt;/em> positions are initially not&#xA; * constrained, so that until you constrain them the &lt;code>Component&lt;/code>&#xA; * will be positioned at 0,0 relative to the &lt;code>Insets&lt;/code> of the&#xA; * parent &lt;code>Container&lt;/code>.&#xA; * &#xA; * &lt;p>&#xA; * You can change &#xA; * a component's constraints in several ways.&#xA; * You can &#xA; * use one of the &#xA; * {@link #putConstraint putConstraint}&#xA; * methods&#xA; * to establish a spring&#xA; * linking the edges of two components within the same container.&#xA; * Or you can get the appropriate &lt;code>SpringLayout.Constraints&lt;/code>&#xA; * object using &#xA; * {@link #getConstraints getConstraints}&#xA; * and then modify one or more of its springs.&#xA; * Or you can get the spring for a particular edge of a component&#xA; * using {@link #getConstraint getConstraint},&#xA; * and modify it.&#xA; * You can also associate&#xA; * your own &lt;code>SpringLayout.Constraints&lt;/code> object &#xA; * with a component by specifying the constraints object&#xA; * when you add the component to its container&#xA; * (using &#xA; * {@link Container#add(Component, Object)}).&#xA; *&#xA; * &lt;p>&#xA; * The &lt;code>Spring&lt;/code> object representing each constraint &#xA; * has a minimum, preferred, maximum, and current value.&#xA; * The current value of the spring &#xA; * is somewhere between the minimum and maximum values,&#xA; * according to the formula given in the&#xA; * {@link Spring#sum} method description.&#xA; * When the minimum, preferred, and maximum values are the same,&#xA; * the current value is always equal to them;&#xA; * this inflexible spring is called a &lt;em>strut&lt;/em>.&#xA; * You can create struts using the factory method&#xA; * {@link Spring#constant(int)}.&#xA; * The &lt;code>Spring&lt;/code> class also provides factory methods&#xA; * for creating other kinds of springs,&#xA; * including springs that depend on other springs.&#xA; *&#xA; * &lt;p>&#xA; * In a &lt;code>SpringLayout&lt;/code>, the position of each edge is dependent on&#xA; * the position of just one other edge. If a constraint is subsequently added&#xA; * to create a new binding for an edge, the previous binding is discarded&#xA; * and the edge remains dependent on a single edge. &#xA; * Springs should only be attached&#xA; * between edges of the container and its immediate children; the behavior&#xA; * of the &lt;code>SpringLayout&lt;/code> when presented with constraints linking&#xA; * the edges of components from different containers (either internal or&#xA; * external) is undefined.&#xA; *&#xA; * &lt;h3>&#xA; * SpringLayout vs. Other Layout Managers&#xA; * &lt;/h3>&#xA; *&#xA; * &lt;blockquote>&#xA; * &lt;hr>&#xA; * &lt;strong>Note:&lt;/strong>&#xA; * Unlike many layout managers,&#xA; * &lt;code>SpringLayout&lt;/code> doesn't automatically set the location of&#xA; * the components it manages.&#xA; * If you hand-code a GUI that uses &lt;code>SpringLayout&lt;/code>, &#xA; * remember to initialize component locations by constraining the west/east&#xA; * and north/south locations.&#xA; * &lt;p>&#xA; * Depending on the constraints you use,&#xA; * you may also need to set the size of the container explicitly.&#xA; * &lt;hr>&#xA; * &lt;/blockquote>&#xA; *&#xA; * &lt;p>&#xA; * Despite the simplicity of &lt;code>SpringLayout&lt;/code>,&#xA; * it can emulate the behavior of most other layout managers.&#xA; * For some features,&#xA; * such as the line breaking provided by &lt;code>FlowLayout&lt;/code>, &#xA; * you'll need to &#xA; * create a special-purpose subclass of the &lt;code>Spring&lt;/code> class.&#xA; *&#xA; * &lt;p>&#xA; * &lt;code>SpringLayout&lt;/code> also provides a way to solve&#xA; * many of the difficult layout&#xA; * problems that cannot be solved by nesting combinations&#xA; * of &lt;code>Box&lt;/code>es. That said, &lt;code>SpringLayout&lt;/code> honors the&#xA; * &lt;code>LayoutManager2&lt;/code> contract correctly and so can be nested with&#xA; * other layout managers -- a technique that can be preferable to&#xA; * creating the constraints implied by the other layout managers.&#xA; * &lt;p>&#xA; * The asymptotic complexity of the layout operation of a &lt;code>SpringLayout&lt;/code>&#xA; * is linear in the number of constraints (and/or components).&#xA; * &lt;p>&#xA; * &lt;strong>Warning:&lt;/strong>&#xA; * Serialized objects of this class will not be compatible with&#xA; * future Swing releases. The current serialization support is&#xA; * appropriate for short term storage or RMI between applications running&#xA; * the same version of Swing.  As of 1.4, support for long term storage&#xA; * of all JavaBeans&lt;sup>&lt;font size=&quot;-2&quot;>TM&lt;/font>&lt;/sup>&#xA; * has been added to the &lt;code>java.beans&lt;/code> package.&#xA; * Please see {@link java.beans.XMLEncoder}.&#xA; *&#xA; * @see Spring&#xA; * @see SpringLayout.Constraints&#xA; *&#xA; * @version  1.19 12/19/03&#xA; * @author &#x9;Philip Milne&#xA; * @author &#x9;Joe Winchester&#xA; * @since       1.4&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../java/awt/LayoutManager2.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
