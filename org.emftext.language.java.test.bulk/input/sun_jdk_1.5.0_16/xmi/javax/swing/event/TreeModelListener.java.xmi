<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="TreeModelListener.java">
  <comments>/*&#xA; * @(#)TreeModelListener.java&#x9;1.17 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>swing</namespaces>
  <namespaces>event</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../java/util/EventListener.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="TreeModelListener">
    <members xsi:type="members:InterfaceMethod" name="treeNodesChanged">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * &lt;p>Invoked after a node (or a set of siblings) has changed in some&#xA;     * way. The node(s) have not changed locations in the tree or&#xA;     * altered their children arrays, but other attributes have&#xA;     * changed and may affect presentation. Example: the name of a&#xA;     * file has changed, but it is in the same location in the file&#xA;     * system.&lt;/p>&#xA;     * &lt;p>To indicate the root has changed, childIndices and children&#xA;     * will be null. &lt;/p>&#xA;     * &#xA;     * &lt;p>Use &lt;code>e.getPath()&lt;/code> &#xA;     * to get the parent of the changed node(s).&#xA;     * &lt;code>e.getChildIndices()&lt;/code>&#xA;     * returns the index(es) of the changed node(s).&lt;/p>&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="e">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="TreeModelEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="treeNodesInserted">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * &lt;p>Invoked after nodes have been inserted into the tree.&lt;/p>&#xA;     * &#xA;     * &lt;p>Use &lt;code>e.getPath()&lt;/code> &#xA;     * to get the parent of the new node(s).&#xA;     * &lt;code>e.getChildIndices()&lt;/code>&#xA;     * returns the index(es) of the new node(s)&#xA;     * in ascending order.&lt;/p>&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="e">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="TreeModelEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="treeNodesRemoved">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * &lt;p>Invoked after nodes have been removed from the tree.  Note that&#xA;     * if a subtree is removed from the tree, this method may only be&#xA;     * invoked once for the root of the removed subtree, not once for&#xA;     * each individual set of siblings removed.&lt;/p>&#xA;     *&#xA;     * &lt;p>Use &lt;code>e.getPath()&lt;/code> &#xA;     * to get the former parent of the deleted node(s).&#xA;     * &lt;code>e.getChildIndices()&lt;/code>&#xA;     * returns, in ascending order, the index(es) &#xA;     * the node(s) had before being deleted.&lt;/p>&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="e">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="TreeModelEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="treeStructureChanged">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * &lt;p>Invoked after the tree has drastically changed structure from a&#xA;     * given node down.  If the path returned by e.getPath() is of length&#xA;     * one and the first element does not identify the current root node&#xA;     * the first element should become the new root of the tree.&lt;p>&#xA;     * &#xA;     * &lt;p>Use &lt;code>e.getPath()&lt;/code> &#xA;     * to get the path to the node.&#xA;     * &lt;code>e.getChildIndices()&lt;/code>&#xA;     * returns null.&lt;/p>&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="e">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="TreeModelEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Defines the interface for an object that listens&#xA; * to changes in a TreeModel.&#xA; * For further information and examples see&#xA; * &lt;a&#xA; href=&quot;http://java.sun.com/docs/books/tutorial/uiswing/events/treemodellistener.html&quot;>How to Write a Tree Model Listener&lt;/a>,&#xA; * a section in &lt;em>The Java Tutorial.&lt;/em>&#xA; *&#xA; * @version 1.17 12/19/03&#xA; * @author Rob Davis&#xA; * @author Ray Ryan&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../java/util/EventListener.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
