<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:generics="http://www.emftext.org/java/generics" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../java.ecore#/5 http://www.emftext.org/java/generics ../../../../java.ecore#/6 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../java.ecore#/17" name="RMIServerImpl.java">
  <comments>/*&#xA; * @(#)RMIServerImpl.java&#x9;1.58 07/08/14&#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>management</namespaces>
  <namespaces>remote</namespaces>
  <namespaces>rmi</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>remote</namespaces>
    <namespaces>internal</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../com/sun/jmx/remote/internal/ArrayNotificationBuffer.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>remote</namespaces>
    <namespaces>internal</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../com/sun/jmx/remote/internal/NotificationBuffer.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>remote</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../com/sun/jmx/remote/security/JMXPluggableAuthenticator.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>remote</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>lang</namespaces>
    <namespaces>ref</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/lang/ref/WeakReference.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>rmi</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../java/rmi/Remote.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>rmi</namespaces>
    <namespaces>server</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/rmi/server/RemoteServer.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>rmi</namespaces>
    <namespaces>server</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/rmi/server/ServerNotActiveException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../java/security/Principal.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/util/ArrayList.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/util/Collections.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../java/util/List.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../java/util/Map.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../java/util/Set.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>management</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../MBeanServer.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>management</namespaces>
    <namespaces>remote</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../JMXAuthenticator.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>management</namespaces>
    <namespaces>remote</namespaces>
    <classifier xsi:type="classifiers:Class" href="../JMXConnectorServer.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../security/auth/Subject.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="RMIServerImpl">
    <members xsi:type="members:Constructor" name="RMIServerImpl">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.0"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </child>
            <expressionIf xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../java/util/Collections.class.xmi#//@classifiers.0/@members.11"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/Collections.class.xmi#//@classifiers.0"/>
            </expressionIf>
            <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.0"/>
          </value>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="env">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Interface" href="../../../../java/util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Constructs a new &lt;code>RMIServerImpl&lt;/code>.&lt;/p>&#xA;     *&#xA;     * @param env the environment containing attributes for the new&#xA;     * &lt;code>RMIServerImpl&lt;/code>.  Can be null, which is equivalent&#xA;     * to an empty Map.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="setRMIConnectorServer">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="connServer">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="RMIConnectorServer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:InterfaceMethod" name="export">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * &lt;p>Exports this RMI object.&lt;/p>&#xA;     *&#xA;     * @exception IOException if this RMI object cannot be exported.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="toStub">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../java/rmi/Remote.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a remotable stub for this server object.&#xA;     * @return a remotable stub.&#xA;     * @exception IOException if the stub cannot be obtained - e.g the&#xA;     *            RMIServerImpl has not been exported yet.&#xA;     **/</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:ClassMethod" name="setDefaultClassLoader">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="cl">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/ClassLoader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Sets the default &lt;code>ClassLoader&lt;/code> for this connector&#xA;     * server. New client connections will use this classloader.&#xA;     * Existing client connections are unaffected.&lt;/p>&#xA;     *&#xA;     * @param cl the new &lt;code>ClassLoader&lt;/code> to be used by this&#xA;     * connector server.&#xA;     *&#xA;     * @see #getDefaultClassLoader&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDefaultClassLoader">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/ClassLoader.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Gets the default &lt;code>ClassLoader&lt;/code> used by this connector&#xA;     * server.&lt;/p>&#xA;     *&#xA;     * @return the default &lt;code>ClassLoader&lt;/code> used by this&#xA;     * connector server.&lt;/p>&#xA;     *&#xA;     * @see #setDefaultClassLoader&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setMBeanServer">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mbs">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../MBeanServer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Sets the &lt;code>MBeanServer&lt;/code> to which this connector&#xA;     * server is attached. New client connections will interact&#xA;     * with this &lt;code>MBeanServer&lt;/code>. Existing client connections are&#xA;     * unaffected.&lt;/p>&#xA;     *&#xA;     * @param mbs the new &lt;code>MBeanServer&lt;/code>.  Can be null, but&#xA;     * new client connections will be refused as long as it is.&#xA;     *&#xA;     * @see #getMBeanServer&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getMBeanServer">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../MBeanServer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>The &lt;code>MBeanServer&lt;/code> to which this connector server&#xA;     * is attached.  This is the last value passed to {@link&#xA;     * #setMBeanServer} on this object, or null if that method has&#xA;     * never been called.&lt;/p>&#xA;     *&#xA;     * @return the &lt;code>MBeanServer&lt;/code> to which this connector&#xA;     * is attached.&#xA;     *&#xA;     * @see #setMBeanServer&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getVersion">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:TryBlock">
        <comments>// Expected format is: &quot;protocol-version implementation-name&quot;</comments>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value="1.0 java_runtime_"/>
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/lang/System.class.xmi#//@classifiers.0/@members.25"/>
                <arguments xsi:type="references:StringReference" value="java.runtime.version"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
          </returnValue>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="1.0 "/>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../java/lang/SecurityException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="newClient">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="RMIConnection.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="credentials">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Creates a new client connection.  This method calls {@link&#xA;     * #makeClient makeClient} and adds the returned client connection&#xA;     * object to an internal list.  When this&#xA;     * &lt;code>RMIServerImpl&lt;/code> is shut down via its {@link&#xA;     * #close()} method, the {@link RMIConnection#close() close()}&#xA;     * method of each object remaining in the list is called.&lt;/p>&#xA;     *&#xA;     * &lt;p>The fact that a client connection object is in this internal&#xA;     * list does not prevent it from being garbage collected.&lt;/p>&#xA;     *&#xA;     * @param credentials this object specifies the user-defined&#xA;     * credentials to be passed in to the server in order to&#xA;     * authenticate the caller before creating the&#xA;     * &lt;code>RMIConnection&lt;/code>.  Can be null.&#xA;     *&#xA;     * @return the newly-created &lt;code>RMIConnection&lt;/code>.  This is&#xA;     * usually the object created by &lt;code>makeClient&lt;/code>, though&#xA;     * an implementation may choose to wrap that object in another&#xA;     * object implementing &lt;code>RMIConnection&lt;/code>.&#xA;     *&#xA;     * @exception IOException if the new client object cannot be&#xA;     * created or exported.&#xA;     *&#xA;     * @exception SecurityException if the given credentials do not allow&#xA;     * the server to authenticate the user successfully.&#xA;     *&#xA;     * @exception IllegalStateException if {@link #getMBeanServer()}&#xA;     * is null.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.10">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="doNewClient">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * This method could be overridden by subclasses defined in this package&#xA;     * to perform additional operations specific to the underlying transport&#xA;     * before creating the new client connection.&#xA;     */</comments>
          <target xsi:type="classifiers:Interface" href="RMIConnection.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="credentials">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tracing">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.4"/>
            </next>
          </initialValue>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:StringReference" value="newClient"/>
              <arguments xsi:type="references:StringReference" value="making new client"/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@variable"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../java/lang/IllegalStateException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:StringReference" value="Not attached to an MBean server"/>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.7"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="subject">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../security/auth/Subject.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="authenticator">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../JMXAuthenticator.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../JMXAuthenticator.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../JMXConnectorServer.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../JMXConnectorServer.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </child>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <comments>/*&#xA;&#x9;     * Create the JAAS-based authenticator only if authentication&#xA;&#x9;     * has been enabled&#xA;&#x9;     */</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.4/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../com/sun/jmx/remote/security/JMXPluggableAuthenticator.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                    <arguments xsi:type="references:StringReference" value="jmx.remote.x.password.file"/>
                  </next>
                </children>
                <children xsi:type="literals:NullLiteral"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                    <arguments xsi:type="references:StringReference" value="jmx.remote.x.login.config"/>
                  </next>
                </children>
                <children xsi:type="literals:NullLiteral"/>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.4/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                  <arguments xsi:type="references:StringReference" value="newClient"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="got authenticator: "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.4/@variable">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../java/lang/Class.class.xmi#//@classifiers.0/@members.44"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.2"/>
                      </next>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@variable"/>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.3/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.4/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../JMXAuthenticator.class.xmi#//@classifiers.0/@members.0"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
                  </next>
                </value>
              </expression>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                    <arguments xsi:type="references:StringReference" value="newClient"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Authentication failed: "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.6/@statement/@statements.1/@catcheBlocks.0/@parameter"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.6/@statement/@statements.1/@catcheBlocks.0/@parameter"/>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../java/lang/SecurityException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.4/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                  <arguments xsi:type="references:StringReference" value="newClient"/>
                  <arguments xsi:type="references:StringReference" value="subject is not null"/>
                </next>
              </expression>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.3/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                  <arguments xsi:type="references:StringReference" value="newClient"/>
                  <arguments xsi:type="references:StringReference" value="no subject"/>
                </next>
              </expression>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@variable"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="connectionId">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.17">
            <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.3/@variable"/>
          </initialValue>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:StringReference" value="newClient"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="making new connection: "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.8/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@variable"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="client">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="RMIConnection.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.11">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.8/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.3/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="RMIConnectorServer.class.xmi#//@classifiers.0/@members.24"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.8/@variable"/>
            <arguments xsi:type="references:StringReference" value="Connection opened"/>
            <arguments xsi:type="literals:NullLiteral"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.18"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="wr">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/lang/ref/WeakReference.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../java/lang/ref/WeakReference.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.10/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:SynchronizedBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../java/util/List.class.xmi#//@classifiers.0/@members.6"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.13/@variable"/>
            </next>
          </expression>
        </statements>
        <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:StringReference" value="newClient"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="new connection done: "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.8/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@variable"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.10/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:InterfaceMethod" name="makeClient">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="RMIConnection.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="connectionId">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="subject">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../security/auth/Subject.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * &lt;p>Creates a new client connection.  This method is called by&#xA;     * the public method {@link #newClient(Object)}.&lt;/p>&#xA;     *&#xA;     * @param connectionId the ID of the new connection.  Every&#xA;     * connection opened by this connector server will have a&#xA;     * different ID.  The behavior is unspecified if this parameter is&#xA;     * null.&#xA;     *&#xA;     * @param subject the authenticated subject.  Can be null.&#xA;     *&#xA;     * @return the newly-created &lt;code>RMIConnection&lt;/code>.&#xA;     *&#xA;     * @exception IOException if the new client object cannot be&#xA;     * created or exported.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="closeClient">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="client">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="RMIConnection.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * &lt;p>Closes a client connection made by {@link #makeClient makeClient}.&#xA;     *&#xA;     * @param client a connection previously returned by&#xA;     * &lt;code>makeClient&lt;/code> on which the &lt;code>closeClient&lt;/code>&#xA;     * method has not previously been called.  The behavior is&#xA;     * unspecified if these conditions are violated, including the&#xA;     * case where &lt;code>client&lt;/code> is null.&#xA;     *&#xA;     * @exception IOException if the client connection cannot be&#xA;     * closed.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getProtocol">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * &lt;p>Returns the protocol string for this object.  The string is&#xA;     * &lt;code>rmi&lt;/code> for RMI/JRMP and &lt;code>iiop&lt;/code> for RMI/IIOP.&#xA;     *&#xA;     * @return the protocol string for this object.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:ClassMethod" name="clientClosed">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="client">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="RMIConnection.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * &lt;p>Method called when a client connection created by {@link&#xA;     * #makeClient makeClient} is closed.  A subclass that defines&#xA;     * &lt;code>makeClient&lt;/code> must arrange for this method to be&#xA;     * called when the resultant object's {@link RMIConnection#close()&#xA;     * close} method is called.  This enables it to be removed from&#xA;     * the &lt;code>RMIServerImpl&lt;/code>'s list of connections.  It is&#xA;     * not an error for &lt;code>client&lt;/code> not to be in that&#xA;     * list.&lt;/p>&#xA;     *&#xA;     * &lt;p>After removing &lt;code>client&lt;/code> from the list of&#xA;     * connections, this method calls {@link #closeClient&#xA;     * closeClient(client)}.&lt;/p>&#xA;     *&#xA;     * @param client the client connection that has been closed.&#xA;     *&#xA;     * @exception IOException if {@link #closeClient} throws this&#xA;     * exception.&#xA;     *&#xA;     * @exception NullPointerException if &lt;code>client&lt;/code> is null.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="debug">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.5"/>
            </next>
          </initialValue>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:StringReference" value="clientClosed"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="client="/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.0/@variable"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../java/lang/NullPointerException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:StringReference" value="Null client"/>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:SynchronizedBlock">
        <comments>/* It is not a bug for this loop not to find the client.  In&#xA;               our close() method, we remove a client from the list before&#xA;               calling its close() method.  */</comments>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.18"/>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="wr">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../java/lang/ref/WeakReference.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../java/lang/ref/WeakReference.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@statements.1/@init">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </child>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@statements.1/@init">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Break"/>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@statements.1/@statement/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../java/lang/ref/Reference.class.xmi#//@classifiers.0/@members.6"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.3/@statements.1/@init">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </condition>
          <init xsi:type="variables:LocalVariable" name="it">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../java/util/List.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </initialValue>
          </init>
        </statements>
        <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:StringReference" value="clientClosed"/>
              <arguments xsi:type="references:StringReference" value="closing client."/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.0/@variable"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.12">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:StringReference" value="clientClosed"/>
              <arguments xsi:type="references:StringReference" value="sending notif"/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.0/@variable"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="RMIConnectorServer.class.xmi#//@classifiers.0/@members.25"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="RMIConnection.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </arguments>
            <arguments xsi:type="references:StringReference" value="Client connection closed"/>
            <arguments xsi:type="literals:NullLiteral"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:StringReference" value="clientClosed"/>
              <arguments xsi:type="references:StringReference" value="done"/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="close">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Closes this connection server.  This method first calls the&#xA;     * {@link #closeServer()} method so that no new client connections&#xA;     * will be accepted.  Then, for each remaining {@link&#xA;     * RMIConnection} object returned by {@link #makeClient&#xA;     * makeClient}, its {@link RMIConnection#close() close} method is&#xA;     * called.&lt;/p>&#xA;     *&#xA;     * &lt;p>The behavior when this method is called more than once is&#xA;     * unspecified.&lt;/p>&#xA;     *&#xA;     * &lt;p>If {@link #closeServer()} throws an&#xA;     * &lt;code>IOException&lt;/code>, the individual connections are&#xA;     * nevertheless closed, and then the &lt;code>IOException&lt;/code> is&#xA;     * thrown from this method.&lt;/p>&#xA;     *&#xA;     * &lt;p>If {@link #closeServer()} returns normally but one or more&#xA;     * of the individual connections throws an&#xA;     * &lt;code>IOException&lt;/code>, then, after closing all the&#xA;     * connections, one of those &lt;code>IOException&lt;/code>s is thrown&#xA;     * from this method.  If more than one connection throws an&#xA;     * &lt;code>IOException&lt;/code>, it is unspecified which one is thrown&#xA;     * from this method.&lt;/p>&#xA;     *&#xA;     * @exception IOException if {@link #closeServer()} or one of the&#xA;     * {@link RMIConnection#close()} calls threw&#xA;     * &lt;code>IOException&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tracing">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.4"/>
            </next>
          </initialValue>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="debug">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.5"/>
            </next>
          </initialValue>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:StringReference" value="close"/>
              <arguments xsi:type="references:StringReference" value="closing"/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.0/@variable"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ioException">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:StringReference" value="close"/>
                <arguments xsi:type="references:StringReference" value="closing Server"/>
              </next>
            </expression>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable"/>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.16"/>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                  <arguments xsi:type="references:StringReference" value="close"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Failed to close server: "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.4/@catcheBlocks.0/@parameter"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.0/@variable"/>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.12"/>
                  <arguments xsi:type="references:StringReference" value="close"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.4/@catcheBlocks.0/@parameter"/>
                </next>
              </expression>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable"/>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.4/@catcheBlocks.0/@parameter"/>
            </expression>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.12"/>
              <arguments xsi:type="references:StringReference" value="close"/>
              <arguments xsi:type="references:StringReference" value="closing Clients"/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable"/>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <comments>// Loop to close all clients</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:SynchronizedBlock">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.12"/>
                    <arguments xsi:type="references:StringReference" value="close"/>
                    <arguments xsi:type="references:StringReference" value="droping dead references"/>
                  </next>
                </expression>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable"/>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.18"/>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.12"/>
                    <arguments xsi:type="references:StringReference" value="close"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="client count: "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../java/util/List.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                </expression>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable"/>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Break"/>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../java/util/List.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <comments>/* Loop until we find a non-null client.  Because we called&#xA;                   dropDeadReferences(), this will usually be the first&#xA;                   element of the list, but a garbage collection could have&#xA;                   happened in between.  */</comments>
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="wr">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../java/lang/ref/WeakReference.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../java/lang/ref/WeakReference.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.6/@statement/@statements.0/@statements.4/@init">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                      </child>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="client">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="RMIConnection.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Interface" href="RMIConnection.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.6/@statement/@statements.0/@statements.4/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../java/lang/ref/Reference.class.xmi#//@classifiers.0/@members.6"/>
                        </next>
                      </child>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.6/@statement/@statements.0/@statements.4/@init">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:TryBlock">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.6/@statement/@statements.0/@statements.4/@statement/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:InterfaceMethod" href="RMIConnection.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                        </expression>
                      </statements>
                      <catcheBlocks>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                                <arguments xsi:type="references:StringReference" value="close"/>
                                <arguments xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="references:StringReference" value="Failed to close client: "/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.6/@statement/@statements.0/@statements.4/@statement/@statements.3/@statement/@statements.0/@catcheBlocks.0/@parameter"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                </arguments>
                              </next>
                            </expression>
                          </statement>
                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.0/@variable"/>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.12"/>
                                <arguments xsi:type="references:StringReference" value="close"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.6/@statement/@statements.0/@statements.4/@statement/@statements.3/@statement/@statements.0/@catcheBlocks.0/@parameter"/>
                              </next>
                            </expression>
                          </statement>
                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.1/@variable"/>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.6/@statement/@statements.0/@statements.4/@statement/@statements.3/@statement/@statements.0/@catcheBlocks.0/@parameter"/>
                            </expression>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:Equal"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
                            <children xsi:type="literals:NullLiteral"/>
                          </condition>
                        </statements>
                        <parameter name="e">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                        </parameter>
                      </catcheBlocks>
                    </statements>
                    <statements xsi:type="statements:Break"/>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.6/@statement/@statements.0/@statements.4/@statement/@statements.1/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.6/@statement/@statements.0/@statements.4/@init">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </condition>
              <init xsi:type="variables:LocalVariable" name="it">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../java/util/List.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </initialValue>
              </init>
            </statements>
            <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
          </statements>
        </statement>
        <condition xsi:type="literals:BooleanLiteral" value="true"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../com/sun/jmx/remote/internal/NotificationBuffer.class.xmi#//@classifiers.0/@members.1"/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                  <arguments xsi:type="references:StringReference" value="close"/>
                  <arguments xsi:type="references:StringReference" value="close failed."/>
                </next>
              </expression>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.0/@variable"/>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.3/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:StringReference" value="close"/>
              <arguments xsi:type="references:StringReference" value="closed."/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:InterfaceMethod" name="closeServer">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * &lt;p>Called by {@link #close()} to close the connector server.&#xA;     * After returning from this method, the connector server must&#xA;     * not accept any new connections.&lt;/p>&#xA;     *&#xA;     * @exception IOException if the attempt to close the connector&#xA;     * server failed.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:ClassMethod" name="makeConnectionId">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="protocol">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="subject">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../security/auth/Subject.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
          <operator xsi:type="operators:PlusPlus"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="clientHost">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:StringReference" value=""/>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/rmi/server/RemoteServer.class.xmi#//@classifiers.0/@members.4"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/rmi/server/RemoteServer.class.xmi#//@classifiers.0"/>
            </value>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="references:StringReference" value="makeConnectionId"/>
                <arguments xsi:type="references:StringReference" value="getClientHost"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.2/@catcheBlocks.0/@parameter"/>
              </next>
            </expression>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../java/rmi/server/ServerNotActiveException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="buf">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.3/@variable">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
              <arguments xsi:type="references:StringReference" value=":"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.3/@variable">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
              <arguments xsi:type="references:StringReference" value="//"/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
            </next>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.3/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:StringReference" value=" "/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="principals">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../java/util/Set.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../security/auth/Subject.class.xmi#//@classifiers.0/@members.18"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="sep">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:StringReference" value=""/>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="p">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Interface" href="../../../../java/security/Principal.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="../../../../java/security/Principal.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statement/@statements.2/@init">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                    </child>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="name">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statement/@statements.2/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../java/lang/String.class.xmi#//@classifiers.0/@members.59"/>
                          <arguments xsi:type="literals:CharacterLiteral" value="59"/>
                          <arguments xsi:type="literals:CharacterLiteral" value="58"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../../java/lang/String.class.xmi#//@classifiers.0/@members.59"/>
                        <arguments xsi:type="literals:CharacterLiteral" value="32"/>
                        <arguments xsi:type="literals:CharacterLiteral" value="95"/>
                      </next>
                      <target xsi:type="members:InterfaceMethod" href="../../../../java/security/Principal.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.3/@variable">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statement/@statements.2/@statement/@statements.1/@variable"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statement/@statements.1/@variable"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statement/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:StringReference" value=";"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statement/@statements.2/@init">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </condition>
            <init xsi:type="variables:LocalVariable" name="it">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.7/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Set.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </initialValue>
            </init>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.3/@variable">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.27"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:StringReference" value=" "/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:StringReference" value="newConnectionId"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="connectionId="/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.3/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </next>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.4"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.3/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="dropDeadReferences">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:SynchronizedBlock">
        <statements xsi:type="statements:ForLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="wr">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../java/lang/ref/WeakReference.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../java/lang/ref/WeakReference.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@statements.0/@init">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </child>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@statements.0/@init">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                </expression>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@statements.0/@statement/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../java/lang/ref/Reference.class.xmi#//@classifiers.0/@members.6"/>
                  </next>
                </children>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@statements.0/@init">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </condition>
          <init xsi:type="variables:LocalVariable" name="it">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../java/util/List.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </initialValue>
          </init>
        </statements>
        <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getNotifBuffer">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../com/sun/jmx/remote/internal/NotificationBuffer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <statements xsi:type="statements:Condition">
        <comments>//Notification buffer is lazily created when the first client connects</comments>
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../com/sun/jmx/remote/internal/ArrayNotificationBuffer.class.xmi#//@classifiers.0/@members.16"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../com/sun/jmx/remote/internal/ArrayNotificationBuffer.class.xmi#//@classifiers.0"/>
            </value>
          </expression>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
      </statements>
    </members>
    <members xsi:type="members:Field" name="logger">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arguments xsi:type="references:StringReference" value="javax.management.remote.rmi"/>
        <arguments xsi:type="references:StringReference" value="RMIServerImpl"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="clientList">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/util/ArrayList.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../java/util/List.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** List of WeakReference values.  Each one references an&#xA;        RMIConnection created by this object, or null if the&#xA;        RMIConnection has been garbage-collected.  */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="cl">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/ClassLoader.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="mbeanServer">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../MBeanServer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="env">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../java/util/Map.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="connServer">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="RMIConnectorServer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="connectionIdNumber">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="notifBuffer">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../com/sun/jmx/remote/internal/NotificationBuffer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;p>An RMI object representing a connector server.  Remote clients&#xA; * can make connections using the {@link #newClient(Object)} method.  This&#xA; * method returns an RMI object representing the connection.&lt;/p>&#xA; *&#xA; * &lt;p>User code does not usually reference this class directly.&#xA; * RMI connection servers are usually created with the class {@link&#xA; * RMIConnectorServer}.  Remote clients usually create connections&#xA; * either with {@link javax.management.remote.JMXConnectorFactory}&#xA; * or by instantiating {@link RMIConnector}.&lt;/p>&#xA; *&#xA; * &lt;p>This is an abstract class.  Concrete subclasses define the&#xA; * details of the client connection objects, such as whether they use&#xA; * JRMP or IIOP.&lt;/p>&#xA; *&#xA; * @since 1.5&#xA; * @since.unbundled 1.0&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="RMIServer.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
