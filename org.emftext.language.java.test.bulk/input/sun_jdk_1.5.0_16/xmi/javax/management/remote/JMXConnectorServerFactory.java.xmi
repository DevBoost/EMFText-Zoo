<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:generics="http://www.emftext.org/java/generics" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/generics ../../../java.ecore#/6 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16" name="JMXConnectorServerFactory.java">
  <comments>/*&#xA; * @(#)JMXConnectorServerFactory.java&#x9;1.17 04/05/05&#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>management</namespaces>
  <namespaces>remote</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../java/io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>net</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../java/net/MalformedURLException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../java/util/Collections.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../java/util/HashMap.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../java/util/Map.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>management</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../MBeanServer.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>management</namespaces>
    <classifier xsi:type="classifiers:Class" href="../ObjectName.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>remote</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>remote</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../com/sun/jmx/remote/util/EnvHelp.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="JMXConnectorServerFactory">
    <members xsi:type="members:Field" name="DEFAULT_CLASS_LOADER">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="JMXConnectorFactory.class.xmi#//@classifiers.0/@members.0"/>
        </next>
        <target xsi:type="classifiers:Class" href="JMXConnectorFactory.class.xmi#//@classifiers.0"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Name of the attribute that specifies the default class&#xA;     * loader.  This class loader is used to deserialize objects in&#xA;     * requests received from the client, possibly after consulting an&#xA;     * MBean-specific class loader.  The value associated with this&#xA;     * attribute is an instance of {@link ClassLoader}.&lt;/p>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DEFAULT_CLASS_LOADER_NAME">
      <initialValue xsi:type="references:StringReference" value="jmx.remote.default.class.loader.name"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Name of the attribute that specifies the default class&#xA;     * loader MBean name.  This class loader is used to deserialize objects in&#xA;     * requests received from the client, possibly after consulting an&#xA;     * MBean-specific class loader.  The value associated with this&#xA;     * attribute is an instance of {@link ObjectName}.&lt;/p>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="PROTOCOL_PROVIDER_PACKAGES">
      <initialValue xsi:type="references:StringReference" value="jmx.remote.protocol.provider.pkgs"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Name of the attribute that specifies the provider packages&#xA;     * that are consulted when looking for the handler for a protocol.&#xA;     * The value associated with this attribute is a string with&#xA;     * package names separated by vertical bars (&lt;code>|&lt;/code>).&lt;/p>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="PROTOCOL_PROVIDER_CLASS_LOADER">
      <initialValue xsi:type="references:StringReference" value="jmx.remote.protocol.provider.class.loader"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Name of the attribute that specifies the class&#xA;     * loader for loading protocol providers.&#xA;     * The value associated with this attribute is an instance&#xA;     * of {@link ClassLoader}.&lt;/p>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="PROTOCOL_PROVIDER_DEFAULT_PACKAGE">
      <initialValue xsi:type="references:StringReference" value="com.sun.jmx.remote.protocol"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="logger">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arguments xsi:type="references:StringReference" value="javax.management.remote.misc"/>
        <arguments xsi:type="references:StringReference" value="JMXConnectorServerFactory"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Constructor" name="JMXConnectorServerFactory">
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** There are no instances of this class.  */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="getConnectorServerAsService">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JMXConnectorServer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="loader">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/ClassLoader.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="url">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JMXServiceURL.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="map">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../java/util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mbs">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../MBeanServer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JMXProviderException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="providers">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JMXConnectorFactory.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:ReflectiveClassReference"/>
                <target xsi:type="classifiers:Interface" href="JMXConnectorServerProvider.class.xmi#//@classifiers.0"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="JMXConnectorFactory.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="provider">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="JMXConnectorServerProvider.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="connection">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="JMXConnectorServer.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="JMXConnectorServerProvider.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.2/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="JMXConnectorServerProvider.class.xmi#//@classifiers.0/@members.0"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.1"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.2"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.3"/>
                  </next>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.2/@variable"/>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@statement/@statements.1/@catcheBlocks.0/@parameter"/>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="JMXProviderException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
            <catcheBlocks>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                      <arguments xsi:type="references:StringReference" value="getConnectorAsService"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="URL["/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.1"/>
                        <children xsi:type="references:StringReference" value="] Service provider exception "/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.3/@statement/@statements.1/@catcheBlocks.1/@parameter"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                  </expression>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../com/sun/jmx/remote/util/ClassLogger.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                </condition>
              </statements>
              <statements xsi:type="statements:Continue"/>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../java/lang/Exception.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:NullLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="newJMXConnectorServer">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JMXConnectorServer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="serviceURL">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="JMXServiceURL.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="environment">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Interface" href="../../../java/util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mbeanServer">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../MBeanServer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Creates a connector server at the given address.  The&#xA;     * resultant server is not started until its {@link&#xA;     * JMXConnectorServer#start() start} method is called.&lt;/p>&#xA;     *&#xA;     * @param serviceURL the address of the new connector server.  The&#xA;     * actual address of the new connector server, as returned by its&#xA;     * {@link JMXConnectorServer#getAddress() getAddress} method, will&#xA;     * not necessarily be exactly the same.  For example, it might&#xA;     * include a port number if the original address did not.&#xA;     *&#xA;     * @param environment a set of attributes to control the new&#xA;     * connector server's behaviour.  This parameter can be null.&#xA;     * Keys in this map must be Strings.  The appropriate type of each&#xA;     * associated value depends on the attribute.  The contents of&#xA;     * &lt;code>environment&lt;/code> are not changed by this call.&#xA;     *&#xA;     * @param mbeanServer the MBean server that this connector server&#xA;     * is attached to.  Null if this connector server will be attached&#xA;     * to an MBean server by being registered in it.&#xA;     *&#xA;     * @return a &lt;code>JMXConnectorServer&lt;/code> representing the new&#xA;     * connector server.  Each successful call to this method produces&#xA;     * a different object.&#xA;     *&#xA;     * @exception NullPointerException if &lt;code>serviceURL&lt;/code> is null.&#xA;     *&#xA;     * @exception IOException if the connector server cannot be made&#xA;     * because of a communication problem.&#xA;     *&#xA;     * @exception MalformedURLException if there is no provider for the&#xA;     * protocol in &lt;code>serviceURL&lt;/code>.&#xA;     *&#xA;     * @exception JMXProviderException if there is a provider for the&#xA;     * protocol in &lt;code>serviceURL&lt;/code> but it cannot be used for&#xA;     * some reason.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../java/util/HashMap.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </value>
          </expression>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../com/sun/jmx/remote/util/EnvHelp.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../com/sun/jmx/remote/util/EnvHelp.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../java/util/HashMap.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
              </value>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="targetInterface">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../java/lang/Class.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:ReflectiveClassReference"/>
            <target xsi:type="classifiers:Interface" href="JMXConnectorServerProvider.class.xmi#//@classifiers.0"/>
          </initialValue>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="loader">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../java/lang/ClassLoader.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JMXConnectorFactory.class.xmi#//@classifiers.0/@members.14"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="JMXConnectorFactory.class.xmi#//@classifiers.0"/>
          </initialValue>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="protocol">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="JMXServiceURL.class.xmi#//@classifiers.0/@members.19"/>
            </next>
          </initialValue>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="providerClassName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:StringReference" value="ServerProvider"/>
          <annotationsAndModifiers xsi:type="modifiers:Final"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="provider">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="JMXConnectorServerProvider.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="JMXConnectorServerProvider.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="JMXConnectorFactory.class.xmi#//@classifiers.0/@members.10"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.4/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable"/>
              </next>
              <target xsi:type="classifiers:Class" href="JMXConnectorFactory.class.xmi#//@classifiers.0"/>
            </child>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <comments>// Loader is null when context class loader is set to null</comments>
            <comments>// and no loader has been provided in map.</comments>
            <comments>// com.sun.jmx.remote.util.Service class extracted from j2se</comments>
            <comments>// provider search algorithm doesn't handle well null classloader.</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="connection">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="JMXConnectorServer.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.7">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.2"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Return">
                  <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable"/>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.6/@statement/@statements.0/@statement/@statements.0/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="JMXConnectorServerProvider.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="JMXConnectorFactory.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.3/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:ReflectiveClassReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../java/lang/Class.class.xmi#//@classifiers.0/@members.46"/>
                        </next>
                      </next>
                      <target xsi:type="classifiers:Class" href="JMXConnectorFactory.class.xmi#//@classifiers.0"/>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.4/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.1/@variable"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="JMXConnectorFactory.class.xmi#//@classifiers.0"/>
                </child>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.5/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../java/net/MalformedURLException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="Unsupported protocol: "/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.3/@variable"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.5/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../java/util/Collections.class.xmi#//@classifiers.0/@members.44"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../java/util/Collections.class.xmi#//@classifiers.0"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.5/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="JMXConnectorServerProvider.class.xmi#//@classifiers.0/@members.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.2"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;p>Factory to create JMX API connector servers.  There&#xA; * are no instances of this class.&lt;/p>&#xA; *&#xA; * &lt;p>Each connector server is created by an instance of {@link&#xA; * JMXConnectorServerProvider}.  This instance is found as follows.  Suppose&#xA; * the given {@link JMXServiceURL} looks like&#xA; * &lt;code>&quot;service:jmx:&lt;em>protocol&lt;/em>:&lt;em>remainder&lt;/em>&quot;&lt;/code>.&#xA; * Then the factory will attempt to find the appropriate {@link&#xA; * JMXConnectorServerProvider} for &lt;code>&lt;em>protocol&lt;/em>&lt;/code>.  Each&#xA; * occurrence of the character &lt;code>+&lt;/code> or &lt;code>-&lt;/code> in&#xA; * &lt;code>&lt;em>protocol&lt;/em>&lt;/code> is replaced by &lt;code>.&lt;/code> or&#xA; * &lt;code>_&lt;/code>, respectively.&lt;/p>&#xA; *&#xA; * &lt;p>A &lt;em>provider package list&lt;/em> is searched for as follows:&lt;/p>&#xA; *&#xA; * &lt;ol>&#xA; *&#xA; * &lt;li>If the &lt;code>environment&lt;/code> parameter to {@link&#xA; * #newJMXConnectorServer(JMXServiceURL,Map,MBeanServer)&#xA; * newJMXConnectorServer} contains the key&#xA; * &lt;code>jmx.remote.protocol.provider.pkgs&lt;/code> then the associated&#xA; * value is the provider package list.&#xA; *&#xA; * &lt;li>Otherwise, if the system property&#xA; * &lt;code>jmx.remote.protocol.provider.pkgs&lt;/code> exists, then its value&#xA; * is the provider package list.&#xA; *&#xA; * &lt;li>Otherwise, there is no provider package list.&#xA; *&#xA; * &lt;/ol>&#xA; *&#xA; * &lt;p>The provider package list is a string that is interpreted as a&#xA; * list of non-empty Java package names separated by vertical bars&#xA; * (&lt;code>|&lt;/code>).  If the string is empty, then so is the provider&#xA; * package list.  If the provider package list is not a String, or if&#xA; * it contains an element that is an empty string, a {@link&#xA; * JMXProviderException} is thrown.&lt;/p>&#xA; *&#xA; * &lt;p>If the provider package list exists and is not empty, then for&#xA; * each element &lt;code>&lt;em>pkg&lt;/em>&lt;/code> of the list, the factory&#xA; * will attempt to load the class&#xA; *&#xA; * &lt;blockquote>&#xA; * &lt;code>&lt;em>pkg&lt;/em>.&lt;em>protocol&lt;/em>.ServerProvider&lt;/code>&#xA; * &lt;/blockquote>&#xA;&#xA; * &lt;p>If the &lt;code>environment&lt;/code> parameter to {@link&#xA; * #newJMXConnectorServer(JMXServiceURL, Map, MBeanServer)&#xA; * newJMXConnectorServer} contains the key&#xA; * &lt;code>jmx.remote.protocol.provider.class.loader&lt;/code> then the&#xA; * associated value is the class loader to use to load the provider.&#xA; * If the associated value is not an instance of {@link&#xA; * java.lang.ClassLoader}, an {@link&#xA; * java.lang.IllegalArgumentException} is thrown.&lt;/p>&#xA; *&#xA; * &lt;p>If the &lt;code>jmx.remote.protocol.provider.class.loader&lt;/code>&#xA; * key is not present in the &lt;code>environment&lt;/code> parameter, the&#xA; * calling thread's context class loader is used.&lt;/p>&#xA; *&#xA; * &lt;p>If the attempt to load this class produces a {@link&#xA; * ClassNotFoundException}, the search for a handler continues with&#xA; * the next element of the list.&lt;/p>&#xA; *&#xA; * &lt;p>Otherwise, a problem with the provider found is signalled by a&#xA; * {@link JMXProviderException} whose {@link&#xA; * JMXProviderException#getCause() &lt;em>cause&lt;/em>} indicates the&#xA; * underlying exception, as follows:&lt;/p>&#xA; *&#xA; * &lt;ul>&#xA; *&#xA; * &lt;li>if the attempt to load the class produces an exception other&#xA; * than &lt;code>ClassNotFoundException&lt;/code>, that is the&#xA; * &lt;em>cause&lt;/em>;&#xA; *&#xA; * &lt;li>if {@link Class#newInstance()} for the class produces an&#xA; * exception, that is the &lt;em>cause&lt;/em>.&#xA; *&#xA; * &lt;/ul>&#xA; *&#xA; * &lt;p>If no provider is found by the above steps, including the&#xA; * default case where there is no provider package list, then the&#xA; * implementation will use its own provider for&#xA; * &lt;code>&lt;em>protocol&lt;/em>&lt;/code>, or it will throw a&#xA; * &lt;code>MalformedURLException&lt;/code> if there is none.  An&#xA; * implementation may choose to find providers by other means.  For&#xA; * example, it may support the &lt;a&#xA; * href=&quot;http://java.sun.com/j2se/1.5.0/docs/guide/jar/jar.html#Service Provider&quot;>&#xA; * JAR conventions for service providers&lt;/a>, where the service&#xA; * interface is &lt;code>JMXConnectorServerProvider&lt;/code>.&lt;/p>&#xA; *&#xA; * &lt;p>Every implementation must support the RMI connector protocols,&#xA; * specified with the string &lt;code>rmi&lt;/code> or&#xA; * &lt;code>iiop&lt;/code>.&lt;/p>&#xA; *&#xA; * &lt;p>Once a provider is found, the result of the&#xA; * &lt;code>newJMXConnectorServer&lt;/code> method is the result of calling&#xA; * {@link&#xA; * JMXConnectorServerProvider#newJMXConnectorServer(JMXServiceURL,&#xA; * Map, MBeanServer) newJMXConnectorServer} on the provider.&lt;/p>&#xA; *&#xA; * &lt;p>The &lt;code>Map&lt;/code> parameter passed to the&#xA; * &lt;code>JMXConnectorServerProvider&lt;/code> is a new read-only&#xA; * &lt;code>Map&lt;/code> that contains all the entries that were in the&#xA; * &lt;code>environment&lt;/code> parameter to {@link&#xA; * #newJMXConnectorServer(JMXServiceURL,Map,MBeanServer)&#xA; * JMXConnectorServerFactory.newJMXConnectorServer}, if there was one.&#xA; * Additionally, if the&#xA; * &lt;code>jmx.remote.protocol.provider.class.loader&lt;/code> key is not&#xA; * present in the &lt;code>environment&lt;/code> parameter, it is added to&#xA; * the new read-only &lt;code>Map&lt;/code>. The associated value is the&#xA; * calling thread's context class loader.&lt;/p>&#xA; *&#xA; * @since 1.5&#xA; * @since.unbundled 1.0&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
