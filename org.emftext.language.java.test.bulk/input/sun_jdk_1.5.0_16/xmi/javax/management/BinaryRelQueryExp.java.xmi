<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/expressions ../../java.ecore#/5 http://www.emftext.org/java/literals ../../java.ecore#/9 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/operators ../../java.ecore#/12 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/references ../../java.ecore#/14 http://www.emftext.org/java/statements ../../java.ecore#/15 http://www.emftext.org/java/types ../../java.ecore#/16" name="BinaryRelQueryExp.java">
  <comments>/*&#xA; * @(#)BinaryRelQueryExp.java&#x9;4.17 03/12/19&#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>management</namespaces>
  <classifiers xsi:type="classifiers:Class" name="BinaryRelQueryExp">
    <comments>/**&#xA; * This class is used by the query-building mechanism to represent binary&#xA; * operations.&#xA; * @serial include&#xA; *&#xA; * @since 1.5&#xA; */</comments>
    <members xsi:type="members:Field" name="serialVersionUID">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalLongLiteral" decimalValue="5690656271650491000"/>
      </initialValue>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/* Serial version */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="relOp">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** &#xA;     * @serial The operator &#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="exp1">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="ValueExp.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** &#xA;     * @serial The first value &#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="exp2">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="ValueExp.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** &#xA;     * @serial The second value &#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="BinaryRelQueryExp">
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Basic Constructor.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="BinaryRelQueryExp">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.2"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="op">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="v1">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="ValueExp.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="v2">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="ValueExp.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a new BinaryRelQueryExp with operator op applied on v1 and&#xA;     * v2 values.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="getOperator">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the operator of the query.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getLeftValue">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="ValueExp.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the left value of the query.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getRightValue">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="ValueExp.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the right value of the query.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="apply">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="ObjectName.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="BadStringOperationException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="BadBinaryOpValueExpException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="BadAttributeValueExpException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="InvalidApplicationException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Applies the BinaryRelQueryExp on an MBean.&#xA;     *&#xA;     * @param name The name of the MBean on which the BinaryRelQueryExp will be applied.&#xA;     *&#xA;     * @return  True if the query was successfully applied to the MBean, false otherwise.&#xA;     *&#xA;     * @exception BadStringOperationException&#xA;     * @exception BadBinaryOpValueExpException&#xA;     * @exception BadAttributeValueExpException &#xA;     * @exception InvalidApplicationException&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="val1">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/lang/Object.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="ValueExp.class.xmi#//@classifiers.0/@members.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="val2">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/lang/Object.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="ValueExp.class.xmi#//@classifiers.0/@members.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sval1">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sval2">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="dval1">
          <typeReference xsi:type="types:Double"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="dval2">
          <typeReference xsi:type="types:Double"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lval1">
          <typeReference xsi:type="types:Long"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lval2">
          <typeReference xsi:type="types:Long"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bval1">
          <typeReference xsi:type="types:Boolean"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bval2">
          <typeReference xsi:type="types:Boolean"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="numeric">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="expressions:InstanceOfExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="NumericValueExp.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="bool">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="expressions:InstanceOfExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="BooleanValueExp.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.6/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:NestedExpression">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="NumericValueExp.class.xmi#//@classifiers.0/@members.11"/>
                    </next>
                    <expression xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="NumericValueExp.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
                    </expression>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.7/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:NestedExpression">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="NumericValueExp.class.xmi#//@classifiers.0/@members.11"/>
                    </next>
                    <expression xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="NumericValueExp.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.1/@variable"/>
                    </expression>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Switch">
                <cases xsi:type="statements:NormalSwitchCase">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.6/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.7/@variable"/>
                      <relationOperators xsi:type="operators:GreaterThan"/>
                    </returnValue>
                  </statements>
                  <condition xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                  </condition>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.6/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.7/@variable"/>
                      <relationOperators xsi:type="operators:LessThan"/>
                    </returnValue>
                  </statements>
                  <condition xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                  </condition>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.6/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.7/@variable"/>
                      <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                    </returnValue>
                  </statements>
                  <condition xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                  </condition>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.6/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.7/@variable"/>
                      <relationOperators xsi:type="operators:LessThanOrEqual"/>
                    </returnValue>
                  </statements>
                  <condition xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                  </condition>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.6/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.7/@variable"/>
                    </returnValue>
                  </statements>
                  <condition xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.4"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                  </condition>
                </cases>
                <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
              </statements>
            </statement>
            <condition xsi:type="expressions:NestedExpression">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="NumericValueExp.class.xmi#//@classifiers.0/@members.12"/>
              </next>
              <expression xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="NumericValueExp.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
              </expression>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:NestedExpression">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="NumericValueExp.class.xmi#//@classifiers.0/@members.10"/>
                    </next>
                    <expression xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="NumericValueExp.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
                    </expression>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.5/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:NestedExpression">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="NumericValueExp.class.xmi#//@classifiers.0/@members.10"/>
                    </next>
                    <expression xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="NumericValueExp.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.1/@variable"/>
                    </expression>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Switch">
                <cases xsi:type="statements:NormalSwitchCase">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.5/@variable"/>
                      <relationOperators xsi:type="operators:GreaterThan"/>
                    </returnValue>
                  </statements>
                  <condition xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                  </condition>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.5/@variable"/>
                      <relationOperators xsi:type="operators:LessThan"/>
                    </returnValue>
                  </statements>
                  <condition xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                  </condition>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.5/@variable"/>
                      <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                    </returnValue>
                  </statements>
                  <condition xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                  </condition>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.5/@variable"/>
                      <relationOperators xsi:type="operators:LessThanOrEqual"/>
                    </returnValue>
                  </statements>
                  <condition xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                  </condition>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.5/@variable"/>
                    </returnValue>
                  </statements>
                  <condition xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.4"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                  </condition>
                </cases>
                <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.10/@variable"/>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.8/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:NestedExpression">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.8"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="BooleanValueExp.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                  <expression xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="BooleanValueExp.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
                  </expression>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.9/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:NestedExpression">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.8"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="BooleanValueExp.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                  <expression xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="BooleanValueExp.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.1/@variable"/>
                  </expression>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:Switch">
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.8/@variable"/>
                    <children xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.9/@variable"/>
                    </children>
                  </returnValue>
                </statements>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                </condition>
              </cases>
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.8/@variable"/>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.9/@variable"/>
                  </returnValue>
                </statements>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                </condition>
              </cases>
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.8/@variable"/>
                    <children xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.9/@variable"/>
                    </children>
                  </returnValue>
                </statements>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                </condition>
              </cases>
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.8/@variable"/>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.9/@variable"/>
                  </returnValue>
                </statements>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                </condition>
              </cases>
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.8/@variable"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.9/@variable"/>
                  </returnValue>
                </statements>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                </condition>
              </cases>
              <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.11/@variable"/>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.2/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:NestedExpression">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="StringValueExp.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                  <expression xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="StringValueExp.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
                  </expression>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.3/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:NestedExpression">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="StringValueExp.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                  <expression xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="StringValueExp.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.1/@variable"/>
                  </expression>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:Switch">
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.37"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.3/@variable"/>
                      </next>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:GreaterThan"/>
                  </returnValue>
                </statements>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                </condition>
              </cases>
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.37"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.3/@variable"/>
                      </next>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </returnValue>
                </statements>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                </condition>
              </cases>
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.37"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.3/@variable"/>
                      </next>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                  </returnValue>
                </statements>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                </condition>
              </cases>
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.37"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.3/@variable"/>
                      </next>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:LessThanOrEqual"/>
                  </returnValue>
                </statements>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                </condition>
              </cases>
              <cases xsi:type="statements:NormalSwitchCase">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../java/lang/String.class.xmi#//@classifiers.0/@members.37"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.3/@variable"/>
                      </next>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </returnValue>
                </statements>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
                </condition>
              </cases>
              <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
            </statements>
          </elseStatement>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="toString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the string representing the object.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:AdditiveExpression">
          <children xsi:type="references:StringReference" value="("/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          <children xsi:type="references:StringReference" value=") "/>
          <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.11"/>
          <children xsi:type="references:StringReference" value=" ("/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          <children xsi:type="references:StringReference" value=")"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="relOpString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value=">"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="&lt;"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value=">="/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="&lt;="/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="="/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="Query.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Class" href="Query.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:StringReference" value="="/>
      </statements>
    </members>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="QueryExp.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="QueryEval.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
