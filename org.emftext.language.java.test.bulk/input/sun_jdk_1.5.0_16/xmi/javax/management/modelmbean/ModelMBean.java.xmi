<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="ModelMBean.java">
  <comments>/*&#xA; * @(#)file      ModelMBean.java&#xA; * @(#)author    IBM Corp.&#xA; * @(#)version   1.21&#xA; * @(#)lastedit      04/02/10&#xA; */</comments>
  <comments>/*&#xA; * Copyright IBM Corp. 1999-2000.  All rights reserved.&#xA; * &#xA; * The program is provided &quot;as is&quot; without any warranty express or implied,&#xA; * including the warranty of non-infringement and the implied warranties of&#xA; * merchantibility and fitness for a particular purpose. IBM will not be&#xA; * liable for any damages suffered by you or any third party claim against &#xA; * you regarding the Program.&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc.  All rights reserved.&#xA; * This software is the proprietary information of Sun Microsystems, Inc.&#xA; * Use is subject to license terms.&#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc.  Tous droits reserves.&#xA; * Ce logiciel est propriete de Sun Microsystems, Inc.&#xA; * Distribue par des licences qui en restreignent l'utilisation. &#xA; *&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>management</namespaces>
  <namespaces>modelmbean</namespaces>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>management</namespaces>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>management</namespaces>
    <classifier xsi:type="classifiers:Class" href="../InstanceNotFoundException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="ModelMBean">
    <members xsi:type="members:InterfaceMethod" name="setModelMBeanInfo">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inModelMBeanInfo">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="ModelMBeanInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../MBeanException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../RuntimeOperationsException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Initializes a ModelMBean object using ModelMBeanInfo passed in. &#xA;&#x9; * This method makes it possible to set a customized ModelMBeanInfo on&#xA;&#x9; * the ModelMBean as long as it is not registered with the MBeanServer.&#xA;&#x9; * &lt;br>&#xA;&#x9; * Once the ModelMBean's ModelMBeanInfo (with Descriptors) are &#xA;&#x9; * customized and set on the ModelMBean, the  ModelMBean can be &#xA;&#x9; * registered with the MBeanServer.&#xA;&#x9; * &lt;P>&#xA;&#x9; * If the ModelMBean is currently registered, this method throws&#xA;&#x9; * a {@link javax.management.RuntimeOperationsException} wrapping an&#xA;&#x9; * {@link IllegalStateException}&#xA;&#x9; *&#xA;&#x9; * @param inModelMBeanInfo The ModelMBeanInfo object to be used &#xA;&#x9; *        by the ModelMBean.    &#xA;&#x9; *&#x9; &#xA;&#x9; * @exception MBeanException Wraps a distributed communication &#xA;&#x9; *        Exception. &#xA;&#x9; * @exception RuntimeOperationsException &#xA;&#x9; * &lt;ul>&lt;li>Wraps an {@link IllegalArgumentException} if&#xA;&#x9; *         the MBeanInfo passed in parameter is null.&lt;/li>&#xA;&#x9; *     &lt;li>Wraps an {@link IllegalStateException} if the ModelMBean &#xA;&#x9; *         is currently registered in the MBeanServer.&lt;/li>&#xA;&#x9; * &lt;/ul>&#xA;&#x9; *&#xA;&#x9; **/</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setManagedResource">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mr">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mr_type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../MBeanException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../RuntimeOperationsException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../InstanceNotFoundException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="InvalidTargetObjectTypeException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Sets the instance handle of the object against which to&#xA;&#x9; * execute all methods in this ModelMBean management interface&#xA;&#x9; * (MBeanInfo and Descriptors).&#xA;&#x9; *&#xA;&#x9; * @param mr Object that is the managed resource&#xA;&#x9; * @param mr_type The type of reference for the managed resource.  Can be: ObjectReference,&#xA;&#x9; *               Handle, IOR, EJBHandle, RMIReference.&#xA;&#x9; *               If the MBeanServer cannot process the mr_type passed in, an InvalidTargetTypeException&#xA;&#x9; *               will be thrown.&#xA;&#x9; *     &#xA;&#x9; *&#xA;&#x9; * @exception MBeanException The initializer of the object has thrown an exception.&#xA;&#x9; * @exception RuntimeOperationsException Wraps an IllegalArgumentException: &#xA;&#x9; *       The managed resource type passed in parameter is null.&#xA;&#x9; * @exception InstanceNotFoundException The managed resource object could not be found&#xA;&#x9; * @exception InvalidTargetObjectTypeException The managed resource type cannot be processed by the &#xA;&#x9; * ModelMBean or JMX Agent.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**                    &#xA; * This interface must be implemented by the ModelMBeans. An implementation of this interface &#xA; * must be shipped with every JMX Agent. &#xA; * &lt;P>&#xA; * Java resources wishing to be manageable instantiate the ModelMBean using the MBeanServer's &#xA; * createMBean method.  The resource then sets the ModelMBeanInfo (with Descriptors) for the ModelMBean&#xA; * instance. The attributes and operations exposed via the ModelMBeanInfo for the ModelMBean are accessible&#xA; * from MBeans, connectors/adaptors like other MBeans. Through the ModelMBeanInfo Descriptors, values and methods in&#xA; * the managed application can be defined and mapped to attributes and operations of the ModelMBean.&#xA; * This mapping can be defined during development in an XML formatted file or dynamically and&#xA; * programmatically at runtime. &#xA; * &lt;P>&#xA; * Every ModelMBean which is instantiated in the MBeanServer becomes manageable: &#xA; * its attributes and operations&#xA; * become remotely accessible through the connectors/adaptors connected to that MBeanServer. &#xA; * A Java object cannot be registered in the MBeanServer unless it is a JMX compliant MBean.&#xA; * By instantiating a ModelMBean, resources are guaranteed that the MBean is valid.&#xA; * &lt;P>&#xA; * MBeanException and RuntimeOperationsException must be thrown on every public method.  This allows &#xA; * for wrapping exceptions from distributed communications (RMI, EJB, etc.).  These exceptions do&#xA; * not have to be thrown by the implementation except in the scenarios described in the specification &#xA; * and javadoc.&#xA; *&#xA; * @since 1.5&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../DynamicMBean.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../PersistentMBean.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="ModelMBeanNotificationBroadcaster.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
