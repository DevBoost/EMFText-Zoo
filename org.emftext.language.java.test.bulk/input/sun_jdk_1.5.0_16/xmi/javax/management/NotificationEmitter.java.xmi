<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="NotificationEmitter.java">
  <comments>/*&#xA; * @(#)NotificationEmitter.java&#x9;1.13 03/12/19&#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>management</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="NotificationEmitter">
    <members xsi:type="members:InterfaceMethod" name="removeNotificationListener">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="listener">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="NotificationListener.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="filter">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="NotificationFilter.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="handback">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ListenerNotFoundException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Removes a listener from this MBean.  The MBean must have a&#xA;     * listener that exactly matches the given &lt;code>listener&lt;/code>,&#xA;     * &lt;code>filter&lt;/code>, and &lt;code>handback&lt;/code> parameters.  If&#xA;     * there is more than one such listener, only one is removed.&lt;/p>&#xA;     *&#xA;     * &lt;p>The &lt;code>filter&lt;/code> and &lt;code>handback&lt;/code> parameters&#xA;     * may be null if and only if they are null in a listener to be&#xA;     * removed.&lt;/p>&#xA;     *&#xA;     * @param listener A listener that was previously added to this&#xA;     * MBean.&#xA;     * @param filter The filter that was specified when the listener&#xA;     * was added.&#xA;     * @param handback The handback that was specified when the listener was&#xA;     * added.&#xA;     *&#xA;     * @exception ListenerNotFoundException The listener is not&#xA;     * registered with the MBean, or it is not registered with the&#xA;     * given filter and handback.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;p>Interface implemented by an MBean that emits Notifications. It&#xA; * allows a listener to be registered with the MBean as a notification&#xA; * listener.&lt;/p>&#xA; *&#xA; * &lt;p>This interface should be used by new code in preference to the&#xA; * {@link NotificationBroadcaster} interface.&lt;/p>&#xA; *&#xA; * @since 1.5&#xA; * @since.unbundled JMX 1.2&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="NotificationBroadcaster.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
