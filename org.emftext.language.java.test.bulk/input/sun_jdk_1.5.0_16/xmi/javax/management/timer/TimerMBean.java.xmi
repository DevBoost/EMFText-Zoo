<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="TimerMBean.java">
  <comments>/*&#xA; * @(#)TimerMBean.java&#x9;4.25 04/02/10&#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>management</namespaces>
  <namespaces>timer</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <comments>// java imports</comments>
    <comments>//</comments>
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../java/util/Date.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../java/util/Enumeration.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../java/util/Vector.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <comments>// NPCTE fix for bugId 4464388, esc 0,  MR , to be added after modification of jmx spec</comments>
    <comments>//import java.io.Serializable;</comments>
    <comments>// end of NPCTE fix for bugId 4464388 </comments>
    <comments>// jmx imports</comments>
    <comments>//</comments>
    <namespaces>javax</namespaces>
    <namespaces>management</namespaces>
    <classifier xsi:type="classifiers:Class" href="../InstanceNotFoundException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="TimerMBean">
    <members xsi:type="members:InterfaceMethod" name="start">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Starts the timer.&#xA;     * &lt;P>&#xA;     * If there is one or more timer notifications before the time in the list of notifications, the notification&#xA;     * is sent according to the &lt;CODE>sendPastNotifications&lt;/CODE> flag and then, updated&#xA;     * according to its period and remaining number of occurrences.&#xA;     * If the timer notification date remains earlier than the current date, this notification is just removed &#xA;     * from the list of notifications.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="stop">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Stops the timer.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="addNotification">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="message">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="userData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="date">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/util/Date.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="period">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="nbOccurences">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="fixedRate">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <namespaces>java</namespaces>
        <namespaces>lang</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a new timer notification with the specified &lt;CODE>type&lt;/CODE>, &lt;CODE>message&lt;/CODE> &#xA;     * and &lt;CODE>userData&lt;/CODE> and inserts it into the list of notifications with a given date, &#xA;     * period and number of occurrences.&#xA;     * &lt;P>&#xA;     * If the timer notification to be inserted has a date that is before the current date,&#xA;     * the method behaves as if the specified date were the current date. &lt;BR>&#xA;     * For once-off notifications, the notification is delivered immediately. &lt;BR>&#xA;     * For periodic notifications, the first notification is delivered immediately and the&#xA;     * subsequent ones are spaced as specified by the period parameter. &#xA;     * &lt;P>&#xA;     * Note that once the timer notification has been added into the list of notifications,&#xA;     * its associated date, period and number of occurrences cannot be updated.&#xA;     * &lt;P>&#xA;     * In the case of a periodic notification, the value of parameter &lt;i>fixedRate&lt;/i> is used to&#xA;     * specify the execution scheme, as specified in {@link java.util.Timer}.&#xA;     *&#xA;     * @param type The timer notification type.&#xA;     * @param message The timer notification detailed message.&#xA;     * @param userData The timer notification user data object.&#xA;     * @param date The date when the notification occurs.&#xA;     * @param period The period of the timer notification (in milliseconds).&#xA;     * @param nbOccurences The total number the timer notification will be emitted.&#xA;     * @param fixedRate If &lt;code>true&lt;/code> and if the notification is periodic, the notification&#xA;     *                  is scheduled with a &lt;i>fixed-rate&lt;/i> execution scheme. If&#xA;     *                  &lt;code>false&lt;/code> and if the notification is periodic, the notification&#xA;     *                  is scheduled with a &lt;i>fixed-delay&lt;/i> execution scheme. Ignored if the&#xA;     *                  notification is not periodic.&#xA;     *&#xA;     * @return The identifier of the new created timer notification.&#xA;     *&#xA;     * @exception java.lang.IllegalArgumentException The period or the number of occurrences is negative&#xA;     *&#xA;     * @see #addNotification(String, String, Object, Date, long, long)&#xA;     */</comments>
        <comments>// NPCTE fix for bugId 4464388, esc 0,  MR, to be added after modification of jmx spec</comments>
        <comments>//  public synchronized Integer addNotification(String type, String message, Serializable userData, </comments>
        <comments>//                                                Date date, long period, long nbOccurences) </comments>
        <comments>// end of NPCTE fix for bugId 4464388</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="addNotification">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="message">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="userData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="date">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/util/Date.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="period">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="nbOccurences">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <exceptions>
        <namespaces>java</namespaces>
        <namespaces>lang</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a new timer notification with the specified &lt;CODE>type&lt;/CODE>, &lt;CODE>message&lt;/CODE> &#xA;     * and &lt;CODE>userData&lt;/CODE> and inserts it into the list of notifications with a given date, &#xA;     * period and number of occurrences.&#xA;     * &lt;P>&#xA;     * If the timer notification to be inserted has a date that is before the current date,&#xA;     * the method behaves as if the specified date were the current date. &lt;BR>&#xA;     * For once-off notifications, the notification is delivered immediately. &lt;BR>&#xA;     * For periodic notifications, the first notification is delivered immediately and the&#xA;     * subsequent ones are spaced as specified by the period parameter. &#xA;     * &lt;P>&#xA;     * Note that once the timer notification has been added into the list of notifications,&#xA;     * its associated date, period and number of occurrences cannot be updated.&#xA;     * &lt;P>&#xA;     * In the case of a periodic notification, uses a &lt;i>fixed-delay&lt;/i> execution scheme, as specified in&#xA;     * {@link java.util.Timer}. In order to use a &lt;i>fixed-rate&lt;/i> execution scheme, use &#xA;     * {@link #addNotification(String, String, Object, Date, long, long, boolean)} instead.&#xA;     *&#xA;     * @param type The timer notification type.&#xA;     * @param message The timer notification detailed message.&#xA;     * @param userData The timer notification user data object.&#xA;     * @param date The date when the notification occurs.&#xA;     * @param period The period of the timer notification (in milliseconds).&#xA;     * @param nbOccurences The total number the timer notification will be emitted.&#xA;     *&#xA;     * @return The identifier of the new created timer notification.&#xA;     *&#xA;     * @exception java.lang.IllegalArgumentException The period or the number of occurrences is negative&#xA;     *&#xA;     * @see #addNotification(String, String, Object, Date, long, long, boolean)&#xA;     */</comments>
        <comments>// NPCTE fix for bugId 4464388, esc 0,  MR , to be added after modification of jmx spec </comments>
        <comments>//  public synchronized Integer addNotification(String type, String message, Serializable userData, </comments>
        <comments>//                                              Date date, long period) </comments>
        <comments>// end of NPCTE fix for bugId 4464388 */ </comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="addNotification">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="message">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="userData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="date">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/util/Date.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="period">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <exceptions>
        <namespaces>java</namespaces>
        <namespaces>lang</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a new timer notification with the specified &lt;CODE>type&lt;/CODE>, &lt;CODE>message&lt;/CODE> &#xA;     * and &lt;CODE>userData&lt;/CODE> and inserts it into the list of notifications with a given date&#xA;     * and period and a null number of occurrences.&#xA;     * &lt;P>&#xA;     * The timer notification will repeat continuously using the timer period using a &lt;i>fixed-delay&lt;/i>&#xA;     * execution scheme, as specified in {@link java.util.Timer}. In order to use a &lt;i>fixed-rate&lt;/i>&#xA;     * execution scheme, use {@link #addNotification(String, String, Object, Date, long, long,&#xA;     * boolean)} instead. &#xA;     * &lt;P>&#xA;     * If the timer notification to be inserted has a date that is before the current date,&#xA;     * the method behaves as if the specified date were the current date. The&#xA;     * first notification is delivered immediately and the subsequent ones are&#xA;     * spaced as specified by the period parameter.&#xA;     * &#xA;     * @param type The timer notification type.&#xA;     * @param message The timer notification detailed message.&#xA;     * @param userData The timer notification user data object.&#xA;     * @param date The date when the notification occurs.&#xA;     * @param period The period of the timer notification (in milliseconds).&#xA;     *&#xA;     * @return The identifier of the new created timer notification.&#xA;     *&#xA;     * @exception java.lang.IllegalArgumentException The period is negative or&#xA;     * the date notification is before the current date.&#xA;     */</comments>
        <comments>// NPCTE fix for bugId 4464388, esc 0,  MR , to be added after modification of jmx spec </comments>
        <comments>//  public synchronized Integer addNotification(String type, String message, Serializable userData, </comments>
        <comments>//                                              Date date, long period) </comments>
        <comments>// end of NPCTE fix for bugId 4464388 */ </comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="addNotification">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="message">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="userData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="date">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/util/Date.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <namespaces>java</namespaces>
        <namespaces>lang</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a new timer notification with the specified &lt;CODE>type&lt;/CODE>, &lt;CODE>message&lt;/CODE> &#xA;     * and &lt;CODE>userData&lt;/CODE> and inserts it into the list of notifications with a given date&#xA;     * and a null period and number of occurrences.&#xA;     * &lt;P>&#xA;     * The timer notification will be handled once at the specified date.&#xA;     * &lt;P>&#xA;     * If the timer notification to be inserted has a date that is before the current date,&#xA;     * the method behaves as if the specified date were the current date and the&#xA;     * notification is delivered immediately.&#xA;     * &#xA;     * @param type The timer notification type.&#xA;     * @param message The timer notification detailed message.&#xA;     * @param userData The timer notification user data object.&#xA;     * @param date The date when the notification occurs.&#xA;     *&#xA;     * @return The identifier of the new created timer notification.&#xA;     *&#xA;     * @exception java.lang.IllegalArgumentException The date notification is before the current date.&#xA;     */</comments>
        <comments>// NPCTE fix for bugId 4464388, esc 0,  MR, to be added after modification of jmx spec</comments>
        <comments>//  public synchronized Integer addNotification(String type, String message, Serializable userData, Date date) </comments>
        <comments>//      throws java.lang.IllegalArgumentException {</comments>
        <comments>// end of NPCTE fix for bugId 4464388</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="removeNotification">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../InstanceNotFoundException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Removes the timer notification corresponding to the specified identifier from the list of notifications.&#xA;     * &#xA;     * @param id The timer notification identifier.&#xA;     *&#xA;     * @exception InstanceNotFoundException The specified identifier does not correspond to any timer notification&#xA;     * in the list of notifications of this timer MBean.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="removeNotifications">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../InstanceNotFoundException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Removes all the timer notifications corresponding to the specified type from the list of notifications.&#xA;     * &#xA;     * @param type The timer notification type.&#xA;     *&#xA;     * @exception InstanceNotFoundException The specified type does not correspond to any timer notification&#xA;     * in the list of notifications of this timer MBean.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="removeAllNotifications">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Removes all the timer notifications from the list of notifications&#xA;     * and resets the counter used to update the timer notification identifiers.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getNbNotifications">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// GETTERS AND SETTERS</comments>
        <comments>//--------------------    </comments>
        <comments>/**&#xA;     * Gets the number of timer notifications registered into the list of notifications.&#xA;     *&#xA;     * @return The number of timer notifications.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAllNotificationIDs">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/util/Vector.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets all timer notification identifiers registered into the list of notifications.&#xA;     *&#xA;     * @return A vector of &lt;CODE>Integer&lt;/CODE> objects containing all the timer notification identifiers.&#xA;     * &lt;BR>The vector is empty if there is no timer notification registered for this timer MBean.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getNotificationIDs">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/util/Vector.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets all the identifiers of timer notifications corresponding to the specified type.&#xA;     *&#xA;     * @param type The timer notification type.&#xA;     *&#xA;     * @return A vector of &lt;CODE>Integer&lt;/CODE> objects containing all the identifiers of &#xA;     * timer notifications with the specified &lt;CODE>type&lt;/CODE>.&#xA;     * &lt;BR>The vector is empty if there is no timer notifications registered for this timer MBean &#xA;     * with the specified &lt;CODE>type&lt;/CODE>.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getNotificationType">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the timer notification type corresponding to the specified identifier.&#xA;     *&#xA;     * @param id The timer notification identifier.&#xA;     *&#xA;     * @return The timer notification type or null if the identifier is not mapped to any &#xA;     * timer notification registered for this timer MBean.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getNotificationMessage">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the timer notification detailed message corresponding to the specified identifier.&#xA;     *&#xA;     * @param id The timer notification identifier.&#xA;     *&#xA;     * @return The timer notification detailed message or null if the identifier is not mapped to any &#xA;     * timer notification registered for this timer MBean.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getNotificationUserData">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the timer notification user data object corresponding to the specified identifier.&#xA;     *&#xA;     * @param id The timer notification identifier.&#xA;     *&#xA;     * @return The timer notification user data object or null if the identifier is not mapped to any &#xA;     * timer notification registered for this timer MBean.&#xA;     */</comments>
        <comments>// NPCTE fix for bugId 4464388, esc 0 , MR , 03 sept 2001 , to be added after modification of jmx spec</comments>
        <comments>//public Serializable getNotificationUserData(Integer id);</comments>
        <comments>// end of NPCTE fix for bugId 4464388</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getDate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/util/Date.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets a copy of the date associated to a timer notification.&#xA;     *&#xA;     * @param id The timer notification identifier.&#xA;     *&#xA;     * @return A copy of the date or null if the identifier is not mapped to any &#xA;     * timer notification registered for this timer MBean.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getPeriod">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/Long.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets a copy of the period (in milliseconds) associated to a timer notification.&#xA;     *&#xA;     * @param id The timer notification identifier.&#xA;     *&#xA;     * @return A copy of the period or null if the identifier is not mapped to any &#xA;     * timer notification registered for this timer MBean.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getNbOccurences">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/Long.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets a copy of the remaining number of occurrences associated to a timer notification.&#xA;     *&#xA;     * @param id The timer notification identifier.&#xA;     *&#xA;     * @return A copy of the remaining number of occurrences or null if the identifier is not mapped to any &#xA;     * timer notification registered for this timer MBean.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getFixedRate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets a copy of the flag indicating whether a periodic notification is&#xA;     * executed at &lt;i>fixed-delay&lt;/i> or at &lt;i>fixed-rate&lt;/i>.&#xA;     *&#xA;     * @param id The timer notification identifier.&#xA;     *&#xA;     * @return A copy of the flag indicating whether a periodic notification is&#xA;     *         executed at &lt;i>fixed-delay&lt;/i> or at &lt;i>fixed-rate&lt;/i>.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getSendPastNotifications">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the flag indicating whether or not the timer sends past notifications.&#xA;     *&#xA;     * @return The past notifications sending on/off flag value.&#xA;     *&#xA;     * @see #setSendPastNotifications&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setSendPastNotifications">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the flag indicating whether the timer sends past notifications or not.&#xA;     *&#xA;     * @param value The past notifications sending on/off flag value.&#xA;     *&#xA;     * @see #getSendPastNotifications&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isActive">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Tests whether the timer MBean is active.&#xA;     * A timer MBean is marked active when the {@link #start start} method is called.&#xA;     * It becomes inactive when the {@link #stop stop} method is called.&#xA;     *&#xA;     * @return &lt;CODE>true&lt;/CODE> if the timer MBean is active, &lt;CODE>false&lt;/CODE> otherwise.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isEmpty">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Tests whether the list of timer notifications is empty.&#xA;     *&#xA;     * @return &lt;CODE>true&lt;/CODE> if the list of timer notifications is empty, &lt;CODE>false&lt;/CODE> otherwise.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Exposes the management interface of the timer MBean.&#xA; *&#xA; * @version     4.25     02/10/04&#xA; * @author      Sun Microsystems, Inc&#xA; *&#xA; * @since 1.5&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
