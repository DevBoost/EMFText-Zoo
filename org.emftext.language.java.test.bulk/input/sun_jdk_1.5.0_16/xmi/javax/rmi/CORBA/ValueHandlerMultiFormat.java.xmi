<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="ValueHandlerMultiFormat.java">
  <comments>/*&#xA; * @(#)ValueHandlerMultiFormat.java&#x9;1.2 03/12/19&#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>rmi</namespaces>
  <namespaces>CORBA</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="ValueHandlerMultiFormat">
    <members xsi:type="members:InterfaceMethod" name="getMaximumStreamFormatVersion">
      <typeReference xsi:type="types:Byte">
        <comments>/**&#xA;     * Returns the maximum stream format version for&#xA;     * RMI/IDL custom value types that is supported&#xA;     * by this ValueHandler object. The ValueHandler&#xA;     * object must support the returned stream format version and&#xA;     * all lower versions.&#xA;     *&#xA;     * An ORB may use this value to include in a standard&#xA;     * IOR tagged component or service context to indicate to other&#xA;     * ORBs the maximum RMI-IIOP stream format that it&#xA;     * supports.  If not included, the default for GIOP 1.2&#xA;     * is stream format version 1, and stream format version&#xA;     * 2 for GIOP 1.3 and higher.&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="writeValue">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Allows the ORB to pass the stream format&#xA;     * version for RMI/IDL custom value types. If the ORB&#xA;     * calls this method, it must pass a stream format version&#xA;     * between 1 and the value returned by the&#xA;     * getMaximumStreamFormatVersion method inclusive,&#xA;     * or else a BAD_PARAM exception with standard minor code&#xA;     * will be thrown.&#xA;     *&#xA;     * If the ORB calls the older ValueHandler.writeValue(OutputStream,&#xA;     * Serializable) method, stream format version 1 is implied.&#xA;     *&#xA;     * The ORB output stream passed to the ValueHandlerMultiFormat.writeValue&#xA;     * method must implement the ValueOutputStream interface, and the&#xA;     * ORB input stream passed to the ValueHandler.readValue method must&#xA;     * implement the ValueInputStream interface.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CORBA</namespaces>
          <namespaces>portable</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../org/omg/CORBA/portable/OutputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>io</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../java/io/Serializable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="streamFormatVersion">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Java to IDL ptc 02-01-12 1.5.1.5&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="ValueHandler.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
