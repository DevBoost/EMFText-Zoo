<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16" name="AuthPermission.java">
  <comments>/*&#xA; * @(#)AuthPermission.java&#x9;1.51 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>security</namespaces>
  <namespaces>auth</namespaces>
  <classifiers xsi:type="classifiers:Class" name="AuthPermission">
    <members xsi:type="members:Field" name="serialVersionUID">
      <initialValue xsi:type="literals:DecimalLongLiteral" decimalValue="5806031445061587174"/>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Constructor" name="AuthPermission">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="expressions:ConditionalExpression">
            <child xsi:type="references:StringReference" value="createLoginContext">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.0"/>
              </next>
            </child>
            <expressionIf xsi:type="references:StringReference" value="createLoginContext.*"/>
            <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.0"/>
          </arguments>
          <callTarget xsi:type="literals:Super">
            <comments>// for backwards compatibility --</comments>
            <comments>// createLoginContext is deprecated in favor of createLoginContext.*</comments>
          </callTarget>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a new AuthPermission with the specified name.&#xA;     * The name is the symbolic name of the AuthPermission.&#xA;     *&#xA;     * &lt;p>&#xA;     *&#xA;     * @param name the name of the AuthPermission&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="AuthPermission">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="expressions:ConditionalExpression">
            <child xsi:type="references:StringReference" value="createLoginContext">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
              </next>
            </child>
            <expressionIf xsi:type="references:StringReference" value="createLoginContext.*"/>
            <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.1"/>
          <callTarget xsi:type="literals:Super">
            <comments>// for backwards compatibility --</comments>
            <comments>// createLoginContext is deprecated in favor of createLoginContext.*</comments>
          </callTarget>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="actions">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a new AuthPermission object with the specified name.&#xA;     * The name is the symbolic name of the AuthPermission, and the&#xA;     * actions String is currently unused and should be null.&#xA;     *&#xA;     * &lt;p>&#xA;     *&#xA;     * @param name the name of the AuthPermission &lt;p>&#xA;     *&#xA;     * @param actions should be null.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This class is for authentication permissions.&#xA; * An AuthPermission contains a name&#xA; * (also referred to as a &quot;target name&quot;)&#xA; * but no actions list; you either have the named permission&#xA; * or you don't.&#xA; *&#xA; * &lt;p> The target name is the name of a security configuration parameter&#xA; * (see below).  Currently the AuthPermission object is used to&#xA; * guard access to the Policy, Subject, LoginContext,&#xA; * and Configuration objects.&#xA; *&#xA; * &lt;p> The possible target names for an Authentication Permission are:&#xA; *&#xA; * &lt;pre>&#xA; *&#x9;doAs -&#x9;&#x9;&#x9;allow the caller to invoke the&#xA; *&#x9;&#x9;&#x9;&#x9;&lt;code>Subject.doAs&lt;/code> methods.&#xA; *&#xA; *&#x9;doAsPrivileged -&#x9;allow the caller to invoke the&#xA; *&#x9;&#x9;&#x9;&#x9;&lt;code>Subject.doAsPrivileged&lt;/code> methods.&#xA; *&#xA; *&#x9;getSubject -&#x9;&#x9;allow for the retrieval of the&#xA; *&#x9;&#x9;&#x9;&#x9;Subject(s) associated with the&#xA; *&#x9;&#x9;&#x9;&#x9;current Thread.&#xA; *&#xA; *&#x9;getSubjectFromDomainCombiner -&#x9;allow for the retrieval of the&#xA; *&#x9;&#x9;&#x9;&#x9;Subject associated with the&#xA; *&#x9;&#x9;&#x9;&#x9;a &lt;code>SubjectDomainCombiner&lt;/code>.&#xA; *&#xA; *&#x9;setReadOnly -&#x9;&#x9;allow the caller to set a Subject&#xA; *&#x9;&#x9;&#x9;&#x9;to be read-only.&#xA; *&#xA; *&#x9;modifyPrincipals -&#x9;allow the caller to modify the &lt;code>Set&lt;/code>&#xA; *&#x9;&#x9;&#x9;&#x9;of Principals associated with a&#xA; *&#x9;&#x9;&#x9;&#x9;&lt;code>Subject&lt;/code>&#xA; *&#xA; *&#x9;modifyPublicCredentials - allow the caller to modify the&#xA; *&#x9;&#x9;&#x9;&#x9;&lt;code>Set&lt;/code> of public credentials&#xA; *&#x9;&#x9;&#x9;&#x9;associated with a &lt;code>Subject&lt;/code>&#xA; *&#xA; *&#x9;modifyPrivateCredentials - allow the caller to modify the&#xA; *&#x9;&#x9;&#x9;&#x9;&lt;code>Set&lt;/code> of private credentials&#xA; *&#x9;&#x9;&#x9;&#x9;associated with a &lt;code>Subject&lt;/code>&#xA; *&#xA; *&#x9;refreshCredential -&#x9;allow code to invoke the &lt;code>refresh&lt;/code>&#xA; *&#x9;&#x9;&#x9;&#x9;method on a credential which implements&#xA; *&#x9;&#x9;&#x9;&#x9;the &lt;code>Refreshable&lt;/code> interface.&#xA; *&#xA; *&#x9;destroyCredential -&#x9;allow code to invoke the &lt;code>destroy&lt;/code>&#xA; *&#x9;&#x9;&#x9;&#x9;method on a credential &lt;code>object&lt;/code>&#xA; *&#x9;&#x9;&#x9;&#x9;which implements the &lt;code>Destroyable&lt;/code>&#xA; *&#x9;&#x9;&#x9;&#x9;interface.&#xA; *&#xA; *&#x9;createLoginContext.{name} -  allow code to instantiate a&#xA; *&#x9;&#x9;&#x9;&#x9;&lt;code>LoginContext&lt;/code> with the&#xA; *&#x9;&#x9;&#x9;&#x9;specified &lt;i>name&lt;/i>.  &lt;i>name&lt;/i>&#xA; *&#x9;&#x9;&#x9;&#x9;is used as the index into the installed login&#xA; *&#x9;&#x9;&#x9;&#x9;&lt;code>Configuration&lt;/code>&#xA; *&#x9;&#x9;&#x9;&#x9;(that returned by&#xA; *&#x9;&#x9;&#x9;&#x9;&lt;code>Configuration.getConfiguration()&lt;/code>).&#xA; *&#x9;&#x9;&#x9;&#x9;&lt;i>name&lt;/i> can be wildcarded (set to '*')&#xA; *&#x9;&#x9;&#x9;&#x9;to allow for any name.&#xA; *&#xA; *&#x9;getLoginConfiguration - allow for the retrieval of the system-wide&#xA; *&#x9;&#x9;&#x9;&#x9;login Configuration.&#xA; *&#xA; *&#x9;setLoginConfiguration - allow for the setting of the system-wide&#xA; *&#x9;&#x9;&#x9;&#x9;login Configuration.&#xA; *&#xA; *&#x9;refreshLoginConfiguration - allow for the refreshing of the system-wide&#xA; *&#x9;&#x9;&#x9;&#x9;login Configuration.&#xA; * &lt;/pre>&#xA; *&#xA; * &lt;p> The following target name has been deprecated in favor of&#xA; * &lt;code>createLoginContext.{name}&lt;/code>.&#xA; *&#xA; * &lt;pre>&#xA; *&#x9;createLoginContext -&#x9;allow code to instantiate a&#xA; *&#x9;&#x9;&#x9;&#x9;&lt;code>LoginContext&lt;/code>.&#xA; * &lt;/pre>&#xA; *&#xA; * &lt;p> &lt;code>javax.security.auth.Policy&lt;/code> has been&#xA; * deprecated in favor of &lt;code>java.security.Policy&lt;/code>.&#xA; * Therefore, the following target names have also been deprecated:&#xA; *&#xA; * &lt;pre>&#xA; *&#x9;getPolicy -&#x9;&#x9;allow the caller to retrieve the system-wide&#xA; *&#x9;&#x9;&#x9;&#x9;Subject-based access control policy.&#xA; *&#xA; *&#x9;setPolicy -&#x9;&#x9;allow the caller to set the system-wide&#xA; *&#x9;&#x9;&#x9;&#x9;Subject-based access control policy.&#xA; *&#xA; *&#x9;refreshPolicy -&#x9;&#x9;allow the caller to refresh the system-wide&#xA; *&#x9;&#x9;&#x9;&#x9;Subject-based access control policy.&#xA; * &lt;/pre>&#xA; *&#xA; * @version 1.51, 12/19/03&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Final"/>
    <extends xsi:type="types:NamespaceClassifierReference">
      <namespaces>java</namespaces>
      <namespaces>security</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="../../../java/security/BasicPermission.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
