<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:generics="http://www.emftext.org/java/generics" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/generics ../../../java.ecore#/6 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="SaslServerFactory.java">
  <comments>/*&#xA; * @(#)SaslServerFactory.java&#x9;1.14 04/05/05&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>security</namespaces>
  <namespaces>sasl</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../java/util/Map.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>callback</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../auth/callback/CallbackHandler.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="SaslServerFactory">
    <members xsi:type="members:InterfaceMethod" name="createSaslServer">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="SaslServer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mechanism">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="protocol">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="serverName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="props">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Interface" href="../../../java/util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="cbh">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../auth/callback/CallbackHandler.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="SaslException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a &lt;tt>SaslServer&lt;/tt> using the parameters supplied.&#xA;     * It returns null&#xA;     * if no &lt;tt>SaslServer&lt;/tt> can be created using the parameters supplied.&#xA;     * Throws &lt;tt>SaslException&lt;/tt> if it cannot create a &lt;tt>SaslServer&lt;/tt>&#xA;     * because of an error.&#xA;     *&#xA;     * @param mechanism The non-null&#xA;     * IANA-registered name of a SASL mechanism. (e.g. &quot;GSSAPI&quot;, &quot;CRAM-MD5&quot;).&#xA;     * @param protocol The non-null string name of the protocol for which&#xA;     * the authentication is being performed (e.g., &quot;ldap&quot;).&#xA;     * @param serverName The non-null fully qualified host name of the server&#xA;     * to authenticate to.&#xA;     * @param props The possibly null set of properties used to select the SASL&#xA;     * mechanism and to configure the authentication exchange of the selected&#xA;     * mechanism. See the &lt;tt>Sasl&lt;/tt> class for a list of standard properties. &#xA;     * Other, possibly mechanism-specific, properties can be included.&#xA;     * Properties not relevant to the selected mechanism are ignored.&#xA;     *&#xA;     * @param cbh The possibly null callback handler to used by the SASL&#xA;     * mechanisms to get further information from the application/library&#xA;     * to complete the authentication. For example, a SASL mechanism might&#xA;     * require the authentication ID, password and realm from the caller.&#xA;     * The authentication ID is requested by using a &lt;tt>NameCallback&lt;/tt>.&#xA;     * The password is requested by using a &lt;tt>PasswordCallback&lt;/tt>.&#xA;     * The realm is requested by using a &lt;tt>RealmChoiceCallback&lt;/tt> if there is a list&#xA;     * of realms to choose from, and by using a &lt;tt>RealmCallback&lt;/tt> if&#xA;     * the realm must be entered. &#xA;     *&#xA;     *@return A possibly null &lt;tt>SaslServer&lt;/tt> created using the parameters&#xA;     * supplied. If null, this factory cannot produce a &lt;tt>SaslServer&lt;/tt>&#xA;     * using the parameters supplied.&#xA;     *@exception SaslException If cannot create a &lt;tt>SaslServer&lt;/tt> because&#xA;     * of an error.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getMechanismNames">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="props">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Interface" href="../../../java/util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns an array of names of mechanisms that match the specified&#xA;     * mechanism selection policies.&#xA;     * @param props The possibly null set of properties used to specify the&#xA;     * security policy of the SASL mechanisms. For example, if &lt;tt>props&lt;/tt>&#xA;     * contains the &lt;tt>Sasl.POLICY_NOPLAINTEXT&lt;/tt> property with the value&#xA;     * &lt;tt>&quot;true&quot;&lt;/tt>, then the factory must not return any SASL mechanisms&#xA;     * that are susceptible to simple plain passive attacks.&#xA;     * See the &lt;tt>Sasl&lt;/tt> class for a complete list of policy properties.&#xA;     * Non-policy related properties, if present in &lt;tt>props&lt;/tt>, are ignored.&#xA;     * @return A non-null array containing a IANA-registered SASL mechanism names.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * An interface for creating instances of &lt;tt>SaslServer&lt;/tt>.&#xA; * A class that implements this interface&#xA; * must be thread-safe and handle multiple simultaneous &#xA; * requests. It must also have a public constructor that accepts no &#xA; * argument. &#xA; *&lt;p>&#xA; * This interface is not normally accessed directly by a server, which will use the&#xA; * &lt;tt>Sasl&lt;/tt> static methods&#xA; * instead. However, a particular environment may provide and install a&#xA; * new or different &lt;tt>SaslServerFactory&lt;/tt>.&#xA; *&#xA; * @since 1.5&#xA; *&#xA; * @see SaslServer&#xA; * @see Sasl&#xA; *&#xA; * @author Rosanna Lee&#xA; * @author Rob Weltman&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
  </classifiers>
</containers:CompilationUnit>
