<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:generics="http://www.emftext.org/java/generics" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/generics ../../../java.ecore#/6 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16" name="SoundbankResource.java">
  <comments>/*&#xA; * @(#)SoundbankResource.java&#x9;1.15 04/05/05&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>sound</namespaces>
  <namespaces>midi</namespaces>
  <classifiers xsi:type="classifiers:Class" name="SoundbankResource">
    <comments>/**&#xA;     * Obtains the index of this &lt;code>SoundbankResource&lt;/code> into the &#xA;     * &lt;code>Soundbank's&lt;/code> set of &lt;code>SoundbankResources&lt;/code>.&#xA;     * @return the wavetable index&#xA;     */</comments>
    <comments>//public int getIndex() {</comments>
    <comments>//&#x9;return index;</comments>
    <comments>//}</comments>
    <comments>/**&#xA;     * Obtains a list of the instruments in the sound bank that use the &#xA;     * &lt;code>SoundbankResource&lt;/code> for sound synthesis.&#xA;     * @return an array of &lt;code>Instruments&lt;/code> that reference this &#xA;     * &lt;code>SoundbankResource&lt;/code>&#xA;     *&#xA;     * @see Instrument#getSamples&#xA;     */</comments>
    <comments>//public abstract Instrument[] getInstruments();</comments>
    <members xsi:type="members:Field" name="soundBank">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="Soundbank.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * The sound bank that contains the &lt;code>SoundbankResources&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="name">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * The name of the &lt;code>SoundbankResource&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="dataClass">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/Class.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * The class used to represent the sample's data.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Constructor" name="SoundbankResource">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.2"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="soundBank">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="Soundbank.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="dataClass">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../../../java/lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * The wavetable index.&#xA;     */</comments>
        <comments>//private final int index;</comments>
        <comments>/**&#xA;     * Constructs a new &lt;code>SoundbankResource&lt;/code> from the given sound bank &#xA;     * and wavetable index.  (Setting the &lt;code>SoundbankResource's&lt;/code> name, &#xA;     * sampled audio data, and instruments is a subclass responsibility.)&#xA;     * @param soundBank the sound bank containing this &lt;code>SoundbankResource&lt;/code>&#xA;     * @param name the name of the sample&#xA;     * @param dataClass the class used to represent the sample's data&#xA;     *&#xA;     * @see #getSoundbank&#xA;     * @see #getName&#xA;     * @see #getDataClass&#xA;     * @see #getData&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="getSoundbank">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="Soundbank.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Obtains the sound bank that contains this &lt;code>SoundbankResource&lt;/code>.&#xA;     * @return the sound bank in which this &lt;code>SoundbankResource&lt;/code> is stored&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getName">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Obtains the name of the resource.  This should generally be a string &#xA;     * descriptive of the resource.&#xA;     * @return the instrument's name&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDataClass">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <typeArguments xsi:type="generics:UnknownTypeArgument"/>
          <target xsi:type="classifiers:Class" href="../../../java/lang/Class.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Obtains the class used by this sample to represent its data.&#xA;     * The object returned by &lt;code>getData&lt;/code> will be of this&#xA;     * class.  If this &lt;code>SoundbankResource&lt;/code> object does not support&#xA;     * direct access to its data, returns &lt;code>null&lt;/code>.&#xA;     * @return the class used to represent the sample's data, or &#xA;     * null if the data is not accessible&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
      </statements>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getData">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Obtains the sampled audio that is stored in this &lt;code>SoundbankResource&lt;/code>.  &#xA;     * The type of object returned depends on the implementation of the &#xA;     * concrete class, and may be queried using &lt;code>getDataClass&lt;/code>.&#xA;     * @return an object containing the sampled audio data  &#xA;     * @see #getDataClass&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * A &lt;code>SoundbankResource&lt;/code> represents any audio resource stored&#xA; * in a &lt;code>{@link Soundbank}&lt;/code>.  Common soundbank resources include:&#xA; * &lt;ul>&#xA; * &lt;li>Instruments.  An instrument may be specified in a variety of&#xA; * ways.  However, all soundbanks have some mechanism for defining&#xA; * instruments.  In doing so, they may reference other resources&#xA; * stored in the soundbank.  Each instrument has a &lt;code>Patch&lt;/code>&#xA; * which specifies the MIDI program and bank by which it may be &#xA; * referenced in MIDI messages.  Instrument information may be&#xA; * stored in &lt;code>{@link Instrument}&lt;/code> objects.&#xA; * &lt;li>Audio samples.  A sample typically is a sampled audio waveform &#xA; * which contains a short sound recording whose duration is a fraction of&#xA; * a second, or at most a few seconds.  These audio samples may be&#xA; * used by a &lt;code>{@link Synthesizer}&lt;/code> to synthesize sound in response to MIDI &#xA; * commands, or extracted for use by an application.&#xA; * (The terminology reflects musicians' use of the word &quot;sample&quot; to refer &#xA; * collectively to a series of contiguous audio samples or frames, rather than &#xA; * to a single, instantaneous sample.)&#xA; * The data class for an audio sample will be an object&#xA; * that encapsulates the audio sample data itself and information&#xA; * about how to interpret it (the format of the audio data), such&#xA; * as an &lt;code>{@link javax.sound.sampled.AudioInputStream}&lt;/code>.&#x9;&lt;/li>&#xA; * &lt;li>Embedded sequences.  A sound bank may contain built-in&#xA; * song data stored in a data object such as a &lt;code>{@link Sequence}&lt;/code>.&#xA; * &lt;/ul>  &#xA; * &lt;p>&#xA; * Synthesizers that use wavetable synthesis or related&#xA; * techniques play back the audio in a sample when&#xA; * synthesizing notes, often when emulating the real-world instrument that &#xA; * was originally recorded.  However, there is not necessarily a one-to-one&#xA; * correspondence between the &lt;code>Instruments&lt;/code> and samples&#xA; * in a &lt;code>Soundbank&lt;/code>.  A single &lt;code>Instrument&lt;/code> can use &#xA; * multiple SoundbankResources (typically for notes of dissimilar pitch or &#xA; * brightness).  Also, more than one &lt;code>Instrument&lt;/code> can use the same &#xA; * sample.&#xA; *&#xA; * @version 1.15, 04/05/05&#xA; * @author Kara Kytle&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
  </classifiers>
</containers:CompilationUnit>
