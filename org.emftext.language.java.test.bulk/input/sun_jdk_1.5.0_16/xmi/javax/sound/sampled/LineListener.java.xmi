<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="LineListener.java">
  <comments>/*&#xA; * @(#)LineListener.java&#x9;1.9 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>sound</namespaces>
  <namespaces>sampled</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="LineListener">
    <members xsi:type="members:InterfaceMethod" name="update">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="event">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="LineEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Informs the listener that a line's state has changed.  The listener can then invoke &#xA;     * &lt;code>LineEvent&lt;/code> methods to obtain information about the event.&#xA;     * @param event a line event that describes the change&#xA;     */</comments>
        <comments>/*&#xA;     * Informs the listener that a line's state has changed.  The listener can then invoke &#xA;     * &lt;code>LineEvent&lt;/code> methods to obtain information about the event.&#xA;     * @param event a line event that describes the change&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Instances of classes that implement the &lt;code>LineListener&lt;/code> interface can register to &#xA; * receive events when a line's status changes.&#xA; *&#xA; * @author Kara Kytle&#xA; * @version 1.9 03/12/19&#xA; *&#xA; * @see Line&#xA; * @see Line#addLineListener&#xA; * @see Line#removeLineListener&#xA; * @see LineEvent&#xA; *&#xA; * @since 1.3&#xA; */</comments>
      <comments>/*&#xA; * Instances of classes that implement the &lt;code>LineListener&lt;/code> interface can register to &#xA; * receive events when a line's status changes.&#xA; *&#xA; * @see Line&#xA; * @see Line#addLineListener&#xA; * @see Line#removeLineListener&#xA; * @see LineEvent&#xA; *&#xA; * @version 1.9 03/12/19&#xA; * @author Kara Kytle&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <namespaces>java</namespaces>
      <namespaces>util</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../java/util/EventListener.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
