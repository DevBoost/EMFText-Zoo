<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="NamespaceContext.java">
  <comments>// $Id: NamespaceContext.java,v 1.4.16.1 2004/06/28 18:20:38 ndw Exp $</comments>
  <comments>/*&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>xml</namespaces>
  <namespaces>namespace</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="NamespaceContext">
    <members xsi:type="members:InterfaceMethod" name="getNamespaceURI">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * &lt;p>Get Namespace URI bound to a prefix in the current scope.&lt;/p>&#xA;     *&#xA;     * &lt;p>When requesting a Namespace URI by prefix, the following&#xA;     * table describes the returned Namespace URI value for all&#xA;     * possible prefix values:&lt;/p>&#xA;     *&#xA;     * &lt;table border=&quot;2&quot; rules=&quot;all&quot; cellpadding=&quot;4&quot;> &#xA;     *   &lt;thead>&#xA;     *     &lt;tr>&#xA;     *       &lt;td align=&quot;center&quot; colspan=&quot;2&quot;>&#xA;     *         &lt;code>getNamespaceURI(prefix)&lt;/code>&#xA;     *         return value for specified prefixes&#xA;     *       &lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>prefix parameter&lt;/td>&#xA;     *       &lt;td>Namespace URI return value&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *   &lt;/thead>&#xA;     *   &lt;tbody>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>&lt;code>DEFAULT_NS_PREFIX&lt;/code> (&quot;&quot;)&lt;/td>&#xA;     *       &lt;td>default Namespace URI in the current scope or&#xA;     *         &lt;code>{@link javax.xml.XMLConstants#NULL_NS_URI XMLConstants.NULL_NS_URI(&quot;&quot;)}&lt;/code>   &#xA;     *         when there is no default Namespace URI in the current scope&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>bound prefix&lt;/td>&#xA;     *       &lt;td>Namespace URI bound to prefix in current scope&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>unbound prefix&lt;/td>&#xA;     *       &lt;td>&lt;code>{@link javax.xml.XMLConstants#NULL_NS_URI XMLConstants.NULL_NS_URI(&quot;&quot;)}&lt;/code> &lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>&lt;code>XMLConstants.XML_NS_PREFIX&lt;/code> (&quot;xml&quot;)&lt;/td>&#xA;     *       &lt;td>&lt;code>XMLConstants.XML_NS_URI&lt;/code>&#xA;     *           (&quot;http://www.w3.org/XML/1998/namespace&quot;)&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>&lt;code>XMLConstants.XMLNS_ATTRIBUTE&lt;/code> (&quot;xmlns&quot;)&lt;/td>&#xA;     *       &lt;td>&lt;code>XMLConstants.XMLNS_ATTRIBUTE_NS_URI&lt;/code>&#xA;     *         (&quot;http://www.w3.org/2000/xmlns/&quot;)&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>&lt;code>null&lt;/code>&lt;/td>&#xA;     *       &lt;td>&lt;code>IllegalArgumentException&lt;/code> is thrown&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *    &lt;/tbody>&#xA;     * &lt;/table>&#xA;     *  &#xA;     * @param prefix prefix to look up&#xA;     * @return Namespace URI bound to prefix in the current scope&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="prefix">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getPrefix">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * &lt;p>Get prefix bound to Namespace URI in the current scope.&lt;/p>&#xA;     *&#xA;     * &lt;p>To get all prefixes bound to a Namespace URI in the current&#xA;     * scope, use {@link #getPrefixes(String namespaceURI)}.&lt;/p>&#xA;     *&#xA;     * &lt;p>When requesting a prefix by Namespace URI, the following&#xA;     * table describes the returned prefix value for all Namespace URI&#xA;     * values:&lt;/p>&#xA;     *&#xA;     * &lt;table border=&quot;2&quot; rules=&quot;all&quot; cellpadding=&quot;4&quot;>&#xA;     *   &lt;thead>&#xA;     *     &lt;tr>&#xA;     *       &lt;td align=&quot;center&quot; colspan=&quot;2&quot;>&#xA;     *         &lt;code>getPrefix(namespaceURI)&lt;/code> return value for&#xA;     *         specified Namespace URIs&#xA;     *       &lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>Namespace URI parameter&lt;/td>&#xA;     *       &lt;td>prefix value returned&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *   &lt;/thead>&#xA;     *   &lt;tbody>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>&amp;lt;default Namespace URI&amp;gt;&lt;/td>&#xA;     *       &lt;td>&lt;code>XMLConstants.DEFAULT_NS_PREFIX&lt;/code> (&quot;&quot;)&#xA;     *       &lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>bound Namespace URI&lt;/td>&#xA;     *       &lt;td>prefix bound to Namespace URI in the current scope,&#xA;     *           if multiple prefixes are bound to the Namespace URI in&#xA;     *           the current scope, a single arbitrary prefix, whose&#xA;     *           choice is implementation dependent, is returned&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>unbound Namespace URI&lt;/td>&#xA;     *       &lt;td>&lt;code>null&lt;/code>&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>&lt;code>XMLConstants.XML_NS_URI&lt;/code>&#xA;     *           (&quot;http://www.w3.org/XML/1998/namespace&quot;)&lt;/td>&#xA;     *       &lt;td>&lt;code>XMLConstants.XML_NS_PREFIX&lt;/code> (&quot;xml&quot;)&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>&lt;code>XMLConstants.XMLNS_ATTRIBUTE_NS_URI&lt;/code>&#xA;     *           (&quot;http://www.w3.org/2000/xmlns/&quot;)&lt;/td>&#xA;     *       &lt;td>&lt;code>XMLConstants.XMLNS_ATTRIBUTE&lt;/code> (&quot;xmlns&quot;)&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>&lt;code>null&lt;/code>&lt;/td>&#xA;     *       &lt;td>&lt;code>IllegalArgumentException&lt;/code> is thrown&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *   &lt;/tbody>&#xA;     * &lt;/table>&#xA;     *&#xA;     * @param namespaceURI URI of Namespace to lookup&#xA;     * @return prefix bound to Namespace URI in current context&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="namespaceURI">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getPrefixes">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * &lt;p>Get all prefixes bound to a Namespace URI in the current&#xA;     * scope.&lt;/p>&#xA;     *&#xA;     * &lt;p>An Iterator over String elements is returned in an arbitrary, &lt;strong>implementation dependent&lt;/strong>, order.&lt;/p>&#xA;     *&#xA;     * &lt;p>&lt;strong>The &lt;code>Iterator&lt;/code> is&#xA;     * &lt;em>not&lt;/em> modifiable.  e.g. the&#xA;     * &lt;code>remove()&lt;/code> method will throw&#xA;     * &lt;code>UnsupportedOperationException&lt;/code>.&lt;/strong>&lt;/p>&#xA;     *&#xA;     * &lt;p>When requesting prefixes by Namespace URI, the following&#xA;     * table describes the returned prefixes value for all Namespace&#xA;     * URI values:&lt;/p>&#xA;     *&#xA;     * &lt;table border=&quot;2&quot; rules=&quot;all&quot; cellpadding=&quot;4&quot;>&#xA;     *   &lt;thead>&#xA;     *     &lt;tr>&#xA;     *       &lt;td align=&quot;center&quot; colspan=&quot;2&quot;>&lt;code>&#xA;     *         getPrefixes(namespaceURI)&lt;/code> return value for&#xA;     *         specified Namespace URIs&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>Namespace URI parameter&lt;/td>&#xA;     *       &lt;td>prefixes value returned&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *   &lt;/thead>&#xA;     *   &lt;tbody>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>bound Namespace URI,&#xA;     *         including the &amp;lt;default Namespace URI&amp;gt;&lt;/td>&#xA;     *       &lt;td>&lt;code>Iterator&lt;/code> over prefixes bound to Namespace URI in&#xA;     *         the current scope in an arbitrary, &lt;strong>implementation dependent&lt;/strong>,&#xA;     *         order&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>unbound Namespace URI&lt;/td>&#xA;     *       &lt;td>empty &lt;code>Iterator&lt;/code>&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>&lt;code>XMLConstants.XML_NS_URI&lt;/code>&#xA;     *           (&quot;http://www.w3.org/XML/1998/namespace&quot;)&lt;/td>&#xA;     *       &lt;td>&lt;code>Iterator&lt;/code> with one element set to&#xA;     *         &lt;code>XMLConstants.XML_NS_PREFIX&lt;/code> (&quot;xml&quot;)&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>&lt;code>XMLConstants.XMLNS_ATTRIBUTE_NS_URI&lt;/code>&#xA;     *           (&quot;http://www.w3.org/2000/xmlns/&quot;)&lt;/td>&#xA;     *       &lt;td>&lt;code>Iterator&lt;/code> with one element set to&#xA;     *         &lt;code>XMLConstants.XMLNS_ATTRIBUTE&lt;/code> (&quot;xmlns&quot;)&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *     &lt;tr>&#xA;     *       &lt;td>&lt;code>null&lt;/code>&lt;/td>&#xA;     *       &lt;td>&lt;code>IllegalArgumentException&lt;/code> is thrown&lt;/td>&#xA;     *     &lt;/tr>&#xA;     *   &lt;/tbody>&#xA;     * &lt;/table>&#xA;     *&#xA;     * @param namespaceURI URI of Namespace to lookup&#xA;     * @return &lt;code>Iterator&lt;/code> for all prefixes bound to the&#xA;     * Namespace URI in the current scope&#xA;     */</comments>
          <target xsi:type="classifiers:Interface" href="../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="namespaceURI">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;p>Interface for read only XML Namespace context processing.&lt;/p>&#xA; *&#xA; * &lt;p>An XML Namespace has the properties:&lt;/p>&#xA; * &lt;ul>&#xA; *   &lt;li>Namespace URI:&#xA; *       Namespace name expressed as a URI to which the prefix is bound&lt;/li>&#xA; *   &lt;li>prefix: syntactically, this is the part of the attribute name&#xA; *       following the &lt;code>XMLConstants.XMLNS_ATTRIBUTE&lt;/code>&#xA; *       (&quot;xmlns&quot;) in the Namespace declaration&lt;/li>&#xA; * &lt;/ul>&#xA; * &lt;p> example: &lt;code>&amp;lt;element xmlns:prefix=&quot;http://Namespace-name-URI&quot;&amp;gt;&lt;/code>&lt;/p>&#xA; *&#xA; * &lt;p>All &lt;code>get*(*)&lt;/code> methods operate in the current scope&#xA; * for Namespace URI and prefix resolution.&lt;/p>&#xA; *&#xA; * &lt;p>Note that a Namespace URI can be bound to&#xA; * &lt;strong>multiple&lt;/strong> prefixes in the current scope.  This can&#xA; * occur when multiple &lt;code>XMLConstants.XMLNS_ATTRIBUTE&lt;/code>&#xA; * (&quot;xmlns&quot;) Namespace declarations occur in the same Start-Tag and&#xA; * refer to the same Namespace URI. e.g.&lt;br />&#xA; * &lt;pre>&#xA; * &amp;lt;element xmlns:prefix1=&quot;http://Namespace-name-URI&quot;&#xA; *          xmlns:prefix2=&quot;http://Namespace-name-URI&quot;&amp;gt;&#xA; * &lt;/pre>&#xA; * This can also occur when the same Namespace URI is used in multiple&#xA; * &lt;code>XMLConstants.XMLNS_ATTRIBUTE&lt;/code> (&quot;xmlns&quot;) Namespace&#xA; * declarations in the logical parent element hierarchy.  e.g.&lt;br />&#xA; * &lt;pre>&#xA; * &amp;lt;parent xmlns:prefix1=&quot;http://Namespace-name-URI&quot;>&#xA; *   &amp;lt;child xmlns:prefix2=&quot;http://Namespace-name-URI&quot;&amp;gt;&#xA; *     ...&#xA; *   &amp;lt;/child&amp;gt;&#xA; * &amp;lt;/parent&amp;gt;&#xA; * &lt;/pre>&lt;/p>&#xA; *&#xA; * &lt;p>A prefix can only be bound to a &lt;strong>single&lt;/strong>&#xA; * Namespace URI in the current scope.&lt;/p>&#xA; *&#xA; * @author &lt;a href=&quot;mailto:Jeff.Suttor@Sun.com&quot;>Jeff Suttor&lt;/a>&#xA; * @version $Revision: 1.4.16.1 $, $Date: 2004/06/28 18:20:38 $&#xA; * @see javax.xml.XMLConstants javax.XMLConstants for declarations of common XML values&#xA; * @see &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#QName&quot;>XML Schema Part2: Datatypes&lt;/a>&#xA; * @see &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;>Namespaces in XML&lt;/a>&#xA; * @see &lt;a href=&quot;http://www.w3.org/XML/xml-names-19990114-errata&quot;>Namespaces in XML Errata&lt;/a>&#xA; * @since 1.5&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
