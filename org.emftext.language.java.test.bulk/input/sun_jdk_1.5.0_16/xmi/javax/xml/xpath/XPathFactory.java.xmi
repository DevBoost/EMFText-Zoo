<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16" name="XPathFactory.java">
  <comments>// $Id: XPathFactory.java,v 1.13.10.1.2.1 2004/09/16 09:25:15 nb131165 Exp $</comments>
  <comments>/*&#xA; * @(#)XPathFactory.java&#x9;1.10 05/01/04&#xA; * &#xA; * Copyright 2005 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>xml</namespaces>
  <namespaces>xpath</namespaces>
  <classifiers xsi:type="classifiers:Class" name="XPathFactory">
    <members xsi:type="members:Field" name="DEFAULT_PROPERTY_NAME">
      <initialValue xsi:type="references:StringReference" value="javax.xml.xpath.XPathFactory"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>The default property name according to the JAXP spec.&lt;/p>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DEFAULT_OBJECT_MODEL_URI">
      <initialValue xsi:type="references:StringReference" value="http://java.sun.com/jaxp/xpath/dom"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Default Object Model URI.&lt;/p>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ss">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="SecuritySupport.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="SecuritySupport.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     *&lt;p> Take care of restrictions imposed by java security model &lt;/p>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Constructor" name="XPathFactory">
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * &lt;p>Protected constructor as {@link #newInstance()} or {@link #newInstance(String uri)}&#xA;     * should be used to create a new instance of an &lt;code>XPathFactory&lt;/code>.&lt;/p>&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="newInstance">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Get a new &lt;code>XPathFactory&lt;/code> instance using the default object model,&#xA;     * {@link #DEFAULT_OBJECT_MODEL_URI},&#xA;     * the W3C DOM.&lt;/p>&#xA;     * &#xA;     * &lt;p>This method is functionally equivalent to:&lt;/p>&#xA;     * &lt;pre>&#xA;     *   newInstance(DEFAULT_OBJECT_MODEL_URI)&#xA;     * &lt;/pre>&#xA;     * &#xA;     * &lt;p>Since the implementation for the W3C DOM is always available, this method will never fail.&lt;/p> &#xA;     * &#xA;     * @return Instance of an &lt;code>XPathFactory&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          </returnValue>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../java/lang/RuntimeException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="XPathFactory#newInstance() failed to create an XPathFactory for the default object model: "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                <children xsi:type="references:StringReference" value=" with the XPathFactoryConfigurationException: "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.0/@catcheBlocks.0/@parameter">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.13"/>
                  </next>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
          <parameter name="xpathFactoryConfigurationException">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XPathFactoryConfigurationException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="newInstance">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="uri">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XPathFactoryConfigurationException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;    * &lt;p>Get a new &lt;code>XPathFactory&lt;/code> instance using the specified object model.&lt;/p>&#xA;    * &#xA;    * &lt;p>To find a &lt;code>XPathFactory&lt;/code> object,&#xA;    * this method looks the following places in the following order where &quot;the class loader&quot; refers to the context class loader:&lt;/p>&#xA;    * &lt;ol>&#xA;    *   &lt;li>&#xA;    *     If the system property {@link #DEFAULT_PROPERTY_NAME} + &quot;:uri&quot; is present,&#xA;    *     where uri is the parameter to this method, then its value is read as a class name.&#xA;    *     The method will try to create a new instance of this class by using the class loader,&#xA;    *     and returns it if it is successfully created.&#xA;    *   &lt;/li>&#xA;    *   &lt;li>&#xA;    *     ${java.home}/lib/jaxp.properties is read and the value associated with the key being the system property above is looked for.&#xA;    *     If present, the value is processed just like above.&#xA;    *   &lt;/li>&#xA;    *   &lt;li>&#xA;    *     The class loader is asked for service provider provider-configuration files matching &lt;code>javax.xml.xpath.XPathFactory&lt;/code>&#xA;    *     in the resource directory META-INF/services.&#xA;    *     See the JAR File Specification for file format and parsing rules.&#xA;    *     Each potential service provider is required to implement the method:&#xA;    *     &lt;pre>&#xA;    *       {@link #isObjectModelSupported(String objectModel)}&#xA;    *     &lt;/pre>&#xA;    *     The first service provider found in class loader order that supports the specified object model is returned.&#xA;    *   &lt;/li>&#xA;    *   &lt;li>&#xA;    *     Platform default &lt;code>XPathFactory&lt;/code> is located in a platform specific way.&#xA;    *     There must be a platform default XPathFactory for the W3C DOM, i.e. {@link #DEFAULT_OBJECT_MODEL_URI}.&#xA;    *   &lt;/li>&#xA;    * &lt;/ol>&#xA;    * &lt;p>If everything fails, an &lt;code>XPathFactoryConfigurationException&lt;/code> will be thrown.&lt;/p>&#xA;    * &#xA;    * &lt;p>Tip for Trouble-shooting:&lt;/p>&#xA;    * &lt;p>See {@link java.util.Properties#load(java.io.InputStream)} for exactly how a property file is parsed.&#xA;    * In particular, colons ':' need to be escaped in a property file, so make sure the URIs are properly escaped in it.&#xA;    * For example:&lt;/p>&#xA;    * &lt;pre>&#xA;    *   http\://java.sun.com/jaxp/xpath/dom=org.acme.DomXPathFactory&#xA;    * &lt;/pre>&#xA;    * &#xA;    * @param uri Identifies the underlying object model.&#xA;    *   The specification only defines the URI {@link #DEFAULT_OBJECT_MODEL_URI},&#xA;    *   &lt;code>http://java.sun.com/jaxp/xpath/dom&lt;/code> for the W3C DOM,&#xA;    *   the org.w3c.dom package, and implementations are free to introduce other URIs for other object models.&#xA;    * &#xA;    * @return Instance of an &lt;code>XPathFactory&lt;/code>.&#xA;    * &#xA;    * @throws XPathFactoryConfigurationException If the specified object model is unavailable.&#xA;    * @throws NullPointerException If &lt;code>uri&lt;/code> is &lt;code>null&lt;/code>. &#xA;&#x9; * @throws IllegalArgumentException If &lt;code>uri.length() == 0&lt;/code>.&#xA;    */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../java/lang/NullPointerException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="XPathFactory#newInstance(String uri) cannot be called with uri == null"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="XPathFactory#newInstance(String uri) cannot be called with uri == &quot;&quot;"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
            </next>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="classLoader">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../java/lang/ClassLoader.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="SecuritySupport.class.xmi#//@classifiers.0/@members.1"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable">
                <comments>//use the current class loader</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0">
                <next xsi:type="references:ReflectiveClassReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../java/lang/Class.class.xmi#//@classifiers.0/@members.46"/>
                  </next>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="xpathFactory">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XPathFactoryFinder.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="XPathFactoryFinder.class.xmi#//@classifiers.0/@members.10"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
            </next>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.2/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="XPathFactoryConfigurationException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="No XPathFctory implementation found for the object model: "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.4/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isObjectModelSupported">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="objectModel">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * &lt;p>Is specified object model supported by this &lt;code>XPathFactory&lt;/code>?&lt;/p>&#xA;&#x9; * &#xA;&#x9; * @param objectModel Specifies the object model which the returned &lt;code>XPathFactory&lt;/code> will understand.&#xA;&#x9; *  &#xA;&#x9; * @return &lt;code>true&lt;/code> if &lt;code>XPathFactory&lt;/code> supports &lt;code>objectModel&lt;/code>, else &lt;code>false&lt;/code>.&#xA;&#x9; * &#xA;&#x9; * @throws NullPointerException If &lt;code>objectModel&lt;/code> is &lt;code>null&lt;/code>.&#xA;&#x9; * @throws IllegalArgumentException If &lt;code>objectModel.length() == 0&lt;/code>.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setFeature">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XPathFactoryConfigurationException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Set a feature for this &lt;code>XPathFactory&lt;/code> and &lt;code>XPath&lt;/code>s created by this factory.&lt;/p>&#xA;     * &#xA;     * &lt;p>&#xA;     * Feature names are fully qualified {@link java.net.URI}s.&#xA;     * Implementations may define their own features.&#xA;     * An {@link XPathFactoryConfigurationException} is thrown if this &lt;code>XPathFactory&lt;/code> or the &lt;code>XPath&lt;/code>s&#xA;     *  it creates cannot support the feature.&#xA;     * It is possible for an &lt;code>XPathFactory&lt;/code> to expose a feature value but be unable to change its state.&#xA;     * &lt;/p>&#xA;     * &#xA;     * &lt;p>&#xA;     * All implementations are required to support the {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.&#xA;     * When the feature is &lt;code>true&lt;/code>, any reference to  an external function is an error.&#xA;     * Under these conditions, the implementation must not call the {@link XPathFunctionResolver}&#xA;     * and must throw an {@link XPathFunctionException}.&#xA;     * &lt;/p>&#xA;     * &#xA;     * @param name Feature name.&#xA;     * @param value Is feature state &lt;code>true&lt;/code> or &lt;code>false&lt;/code>.&#xA;     *  &#xA;     * @throws XPathFactoryConfigurationException if this &lt;code>XPathFactory&lt;/code> or the &lt;code>XPath&lt;/code>s&#xA;     *   it creates cannot support this feature.&#xA;     * @throws NullPointerException if &lt;code>name&lt;/code> is &lt;code>null&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getFeature">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XPathFactoryConfigurationException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * &lt;p>Get the state of the named feature.&lt;/p>&#xA;&#x9; * &#xA;     * &lt;p>&#xA;     * Feature names are fully qualified {@link java.net.URI}s.&#xA;     * Implementations may define their own features.&#xA;     * An {@link XPathFactoryConfigurationException} is thrown if this &lt;code>XPathFactory&lt;/code> or the &lt;code>XPath&lt;/code>s&#xA;     * it creates cannot support the feature.&#xA;     * It is possible for an &lt;code>XPathFactory&lt;/code> to expose a feature value but be unable to change its state.&#xA;     * &lt;/p>&#xA;     * &#xA;&#x9; * @param name Feature name.&#xA;&#x9; * &#xA;&#x9; * @return State of the named feature.&#xA;&#x9; * &#xA;     * @throws XPathFactoryConfigurationException if this &lt;code>XPathFactory&lt;/code> or the &lt;code>XPath&lt;/code>s&#xA;     *   it creates cannot support this feature.&#xA;     * @throws NullPointerException if &lt;code>name&lt;/code> is &lt;code>null&lt;/code>.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setXPathVariableResolver">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="resolver">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="XPathVariableResolver.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p>Establish a default variable resolver.&lt;/p>&#xA;     *&#xA;     * &lt;p>Any &lt;code>XPath&lt;/code> objects constructed from this factory will use&#xA;     * the specified resolver by default.&lt;/p>&#xA;     * &#xA;     * &lt;p>A &lt;code>NullPointerException&lt;/code> is thrown if &lt;code>resolver&lt;/code> is &lt;code>null&lt;/code>.&lt;/p>&#xA;     * &#xA;     * @param resolver Variable resolver.&#xA;     * &#xA;     *  @throws NullPointerException If &lt;code>resolver&lt;/code> is &lt;code>null&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setXPathFunctionResolver">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="resolver">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="XPathFunctionResolver.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;       * &lt;p>Establish a default function resolver.&lt;/p>&#xA;       * &#xA;       * &lt;p>Any &lt;code>XPath&lt;/code> objects constructed from this factory will use&#xA;       * the specified resolver by default.&lt;/p>&#xA;       *&#xA;       * &lt;p>A &lt;code>NullPointerException&lt;/code> is thrown if &lt;code>resolver&lt;/code> is &lt;code>null&lt;/code>.&lt;/p>&#xA;       * &#xA;       * @param resolver XPath function resolver.&#xA;       * &#xA;       * @throws NullPointerException If &lt;code>resolver&lt;/code> is &lt;code>null&lt;/code>.&#xA;       */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="newXPath">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="XPath.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;    * &lt;p>Return a new &lt;code>XPath&lt;/code> using the underlying object&#xA;    * model determined when the &lt;code>XPathFactory&lt;/code> was instantiated.&lt;/p>&#xA;    * &#xA;    * @return New instance of an &lt;code>XPath&lt;/code>.&#xA;    */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;p>An &lt;code>XPathFactory&lt;/code> instance can be used to create&#xA; * {@link javax.xml.xpath.XPath} objects.&lt;/p>&#xA; *&#xA; *&lt;p>See {@link #newInstance(String uri)} for lookup mechanism.&lt;/p>&#xA; *&#xA; * @author  &lt;a href=&quot;mailto:Norman.Walsh@Sun.com&quot;>Norman Walsh&lt;/a>&#xA; * @author  &lt;a href=&quot;mailto:Jeff.Suttor@Sun.com&quot;>Jeff Suttor&lt;/a>&#xA; * @version $Revision: 1.13.10.1.2.1 $, $Date: 2004/09/16 09:25:15 $&#xA; * @since 1.5&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
  </classifiers>
</containers:CompilationUnit>
