<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:references="http://www.emftext.org/java/references" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/types ../../../java.ecore#/16" name="OutputKeys.java">
  <comments>/*&#xA; * @(#)OutputKeys.java&#x9;1.15 04/07/26&#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>javax</namespaces>
  <namespaces>xml</namespaces>
  <namespaces>transform</namespaces>
  <classifiers xsi:type="classifiers:Class" name="OutputKeys">
    <members xsi:type="members:Constructor" name="OutputKeys">
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Default constructor is private on purpose.  This class is&#xA;     * only for static variable access, and should never be constructed.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="METHOD">
      <initialValue xsi:type="references:StringReference" value="method"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * method = &quot;xml&quot; | &quot;html&quot; | &quot;text&quot; | &lt;var>expanded name&lt;/var>.&#xA;     *&#xA;     * &lt;p>The value of the method property identifies the overall method that&#xA;     * should be used for outputting the result tree.  Other non-namespaced&#xA;     * values may be used, such as &quot;xhtml&quot;, but, if accepted, the handling&#xA;     * of such values is implementation defined.  If any of the method values&#xA;     * are not accepted and are not namespace qualified,&#xA;     * then {@link javax.xml.transform.Transformer#setOutputProperty}&#xA;     * or {@link javax.xml.transform.Transformer#setOutputProperties} will&#xA;     * throw a {@link java.lang.IllegalArgumentException}.&lt;/p>&#xA;     *&#xA;     * @see &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;>&#xA;     *  section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VERSION">
      <initialValue xsi:type="references:StringReference" value="version"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * version = &lt;var>nmtoken&lt;/var>.&#xA;     *&#xA;     * &lt;p>&lt;code>version&lt;/code> specifies the version of the output&#xA;     * method.&lt;/p>&#xA;     * &lt;p>When the output method is &quot;xml&quot;, the version value specifies the&#xA;     * version of XML to be used for outputting the result tree. The default&#xA;     * value for the xml output method is 1.0. When the output method is&#xA;     * &quot;html&quot;, the version value indicates the version of the HTML.&#xA;     * The default value for the xml output method is 4.0, which specifies&#xA;     * that the result should be output as HTML conforming to the HTML 4.0&#xA;     * Recommendation [HTML].  If the output method is &quot;text&quot;, the version&#xA;     * property is ignored.&lt;/p>&#xA;     * @see &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;>&#xA;     *  section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ENCODING">
      <initialValue xsi:type="references:StringReference" value="encoding"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * encoding = &lt;var>string&lt;/var>.&#xA;     *&#xA;     * &lt;p>&lt;code>encoding&lt;/code> specifies the preferred character&#xA;     * encoding that the Transformer should use to encode sequences of&#xA;     * characters as sequences of bytes. The value of the encoding property should be&#xA;     * treated case-insensitively. The value must only contain characters in&#xA;     * the range #x21 to #x7E (i.e., printable ASCII characters). The value&#xA;     * should either be a &lt;code>charset&lt;/code> registered with the Internet&#xA;     * Assigned Numbers Authority &lt;a href=&quot;#IANA&quot;>[IANA]&lt;/a>,&#xA;     * &lt;a href=&quot;#RFC2278&quot;>[RFC2278]&lt;/a> or start with &lt;code>X-&lt;/code>.&lt;/p>&#xA;     * @see &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;>&#xA;     * section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OMIT_XML_DECLARATION">
      <initialValue xsi:type="references:StringReference" value="omit-xml-declaration"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * omit-xml-declaration = &quot;yes&quot; | &quot;no&quot;.&#xA;     *&#xA;     * &lt;p>&lt;code>omit-xml-declaration&lt;/code> specifies whether the XSLT&#xA;     * processor should output an XML declaration; the value must be&#xA;     * &lt;code>yes&lt;/code> or &lt;code>no&lt;/code>.&lt;/p>&#xA;     * @see &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;>&#xA;     *  section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STANDALONE">
      <initialValue xsi:type="references:StringReference" value="standalone"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * standalone = &quot;yes&quot; | &quot;no&quot;.&#xA;     *&#xA;     * &lt;p>&lt;code>standalone&lt;/code> specifies whether the Transformer&#xA;     * should output a standalone document declaration; the value must be&#xA;     * &lt;code>yes&lt;/code> or &lt;code>no&lt;/code>.&lt;/p>&#xA;     * @see &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;>&#xA;     *  section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DOCTYPE_PUBLIC">
      <initialValue xsi:type="references:StringReference" value="doctype-public"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * doctype-public = &lt;var>string&lt;/var>.&#xA;     * &lt;p>See the documentation for the {@link #DOCTYPE_SYSTEM} property&#xA;     * for a description of what the value of the key should be.&lt;/p>&#xA;     *&#xA;     * @see &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;>&#xA;     *  section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DOCTYPE_SYSTEM">
      <initialValue xsi:type="references:StringReference" value="doctype-system"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * doctype-system = &lt;var>string&lt;/var>.&#xA;     * &lt;p>&lt;code>doctype-system&lt;/code> specifies the system identifier&#xA;     * to be used in the document type declaration.&lt;/p>&#xA;     * &lt;p>If the doctype-system property is specified, the xml output method&#xA;     * should output a document type declaration immediately before the first&#xA;     * element. The name following &amp;lt;!DOCTYPE should be the name of the first&#xA;     * element. If doctype-public property is also specified, then the xml&#xA;     * output method should output PUBLIC followed by the public identifier&#xA;     * and then the system identifier; otherwise, it should output SYSTEM&#xA;     * followed by the system identifier. The internal subset should be empty.&#xA;     * The value of the doctype-public property should be ignored unless the doctype-system&#xA;     * property is specified.&lt;/p>&#xA;     * &lt;p>If the doctype-public or doctype-system properties are specified,&#xA;     * then the html output method should output a document type declaration&#xA;     * immediately before the first element. The name following &amp;lt;!DOCTYPE&#xA;     * should be HTML or html. If the doctype-public property is specified,&#xA;     * then the output method should output PUBLIC followed by the specified&#xA;     * public identifier; if the doctype-system property is also specified,&#xA;     * it should also output the specified system identifier following the&#xA;     * public identifier. If the doctype-system property is specified but&#xA;     * the doctype-public property is not specified, then the output method&#xA;     * should output SYSTEM followed by the specified system identifier.&lt;/p>&#xA;     *&#xA;     * &lt;p>&lt;code>doctype-system&lt;/code> specifies the system identifier&#xA;     * to be used in the document type declaration.&lt;/p>&#xA;     * @see &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;>&#xA;     *  section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="CDATA_SECTION_ELEMENTS">
      <initialValue xsi:type="references:StringReference" value="cdata-section-elements"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * cdata-section-elements = &lt;var>expanded names&lt;/var>.&#xA;     *&#xA;     * &lt;p>&lt;code>cdata-section-elements&lt;/code> specifies a whitespace delimited&#xA;     * list of the names of elements whose text node children should be output&#xA;     * using CDATA sections. Note that these names must use the format&#xA;     * described in the section Qualfied Name Representation in&#xA;     * {@link javax.xml.transform}.&lt;/p>&#xA;     *&#xA;     * @see &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;>&#xA;     *  section 16 of the XSL Transformations (XSLT) W3C Recommendation.&lt;/a>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="INDENT">
      <initialValue xsi:type="references:StringReference" value="indent"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * indent = &quot;yes&quot; | &quot;no&quot;.&#xA;     *&#xA;     * &lt;p>&lt;code>indent&lt;/code> specifies whether the Transformer may&#xA;     * add additional whitespace when outputting the result tree; the value&#xA;     * must be &lt;code>yes&lt;/code> or &lt;code>no&lt;/code>.  &lt;/p>&#xA;     * @see &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;>&#xA;     *  section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MEDIA_TYPE">
      <initialValue xsi:type="references:StringReference" value="media-type"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * media-type = &lt;var>string&lt;/var>.&#xA;     *&#xA;     * &lt;p>&lt;code>media-type&lt;/code> specifies the media type (MIME&#xA;     * content type) of the data that results from outputting the result&#xA;     * tree. The &lt;code>charset&lt;/code> parameter should not be specified&#xA;     * explicitly; instead, when the top-level media type is&#xA;     * &lt;code>text&lt;/code>, a &lt;code>charset&lt;/code> parameter should be added&#xA;     * according to the character encoding actually used by the output&#xA;     * method.  &lt;/p>&#xA;     * @see &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;>s&#xA;     * ection 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Provides string constants that can be used to set&#xA; * output properties for a Transformer, or to retrieve&#xA; * output properties from a Transformer or Templates object.&#xA; * &lt;p>All the fields in this class are read-only.&lt;/p>&#xA; *&#xA; * @see &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;>&#xA; *  section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a>&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
