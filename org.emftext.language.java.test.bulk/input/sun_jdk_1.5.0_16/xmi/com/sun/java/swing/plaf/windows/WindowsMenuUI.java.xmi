<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../../../java.ecore#/17" name="WindowsMenuUI.java">
  <comments>/*&#xA; * @(#)WindowsMenuUI.java&#x9;1.26 07/01/22&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>java</namespaces>
  <namespaces>swing</namespaces>
  <namespaces>plaf</namespaces>
  <namespaces>windows</namespaces>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <namespaces>event</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../java/awt/event/MouseEvent.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
    <namespaces>plaf</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../javax/swing/plaf/ComponentUI.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
    <namespaces>plaf</namespaces>
    <namespaces>basic</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../javax/swing/plaf/basic/BasicMenuUI.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
    <namespaces>event</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../javax/swing/event/MouseInputListener.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>java</namespaces>
    <namespaces>swing</namespaces>
    <namespaces>plaf</namespaces>
    <namespaces>windows</namespaces>
    <namespaces>TMSchema</namespaces>
    <classifier xsi:type="classifiers:Enumeration" href="TMSchema$Part.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>java</namespaces>
    <namespaces>swing</namespaces>
    <namespaces>plaf</namespaces>
    <namespaces>windows</namespaces>
    <namespaces>TMSchema</namespaces>
    <classifier xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="WindowsMenuUI">
    <members xsi:type="members:Field" name="accessor">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="WindowsMenuItemUIAccessor.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <anonymousClass>
          <members xsi:type="members:ClassMethod" name="getMenuItem">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenuItem.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <annotationsAndModifiers xsi:type="modifiers:Public"/>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../../javax/swing/plaf/basic/BasicMenuItemUI.class.xmi#//@classifiers.0/@members.0"/>
              </returnValue>
            </statements>
          </members>
          <members xsi:type="members:ClassMethod" name="getState">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <parameters xsi:type="parameters:OrdinaryParameter" name="menu">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenuItem.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </parameters>
            <annotationsAndModifiers xsi:type="modifiers:Public"/>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="state">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.117"/>
                    </next>
                  </child>
                  <expressionIf xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:EnumConstant" href="TMSchema$State.class.xmi#//@classifiers.0/@constants.37"/>
                    </next>
                    <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
                  </expressionIf>
                  <expressionElse xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:EnumConstant" href="TMSchema$State.class.xmi#//@classifiers.0/@constants.14"/>
                    </next>
                    <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
                  </expressionElse>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="model">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/AbstractButton.class.xmi#//@classifiers.0/@members.116"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:ConditionalExpression">
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.117"/>
                          </next>
                        </expression>
                      </child>
                      <expressionIf xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:EnumConstant" href="TMSchema$State.class.xmi#//@classifiers.0/@constants.40"/>
                        </next>
                        <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
                      </expressionIf>
                      <expressionElse xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:EnumConstant" href="TMSchema$State.class.xmi#//@classifiers.0/@constants.16"/>
                        </next>
                        <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
                      </expressionElse>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalOrExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="stateTmp">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <comments>/* &#xA;                     * Only paint rollover if no other menu on menubar is &#xA;                     * selected&#xA;                     */</comments>
                          <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.0/@variable"/>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:ConditionalExpression">
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.117"/>
                            </next>
                          </expression>
                        </child>
                        <expressionIf xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:EnumConstant" href="TMSchema$State.class.xmi#//@classifiers.0/@constants.22"/>
                          </next>
                          <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
                        </expressionIf>
                        <expressionElse xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:EnumConstant" href="TMSchema$State.class.xmi#//@classifiers.0/@constants.15"/>
                          </next>
                          <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
                        </expressionElse>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ForEachLoop">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.0/@variable"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.2/@elseStatement/@statement/@statements.0/@variable"/>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:Break"/>
                        </statement>
                        <condition xsi:type="expressions:NestedExpression">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/AbstractButton.class.xmi#//@classifiers.0/@members.58"/>
                          </next>
                          <expression xsi:type="expressions:CastExpression">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenuItem.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.2/@elseStatement/@statement/@statements.2/@next"/>
                          </expression>
                        </condition>
                      </statements>
                    </statement>
                    <next name="menuElement">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Interface" href="../../../../../../javax/swing/MenuElement.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                    </next>
                    <collection xsi:type="expressions:NestedExpression">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/JMenuBar.class.xmi#//@classifiers.0/@members.31"/>
                      </next>
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenuBar.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.96"/>
                          </next>
                        </child>
                      </expression>
                    </collection>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.4"/>
                    </next>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0/@members.51"/>
                    </next>
                    <expression xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@parameters.0"/>
                    </expression>
                  </children>
                </condition>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:Condition">
              <comments>//non top level menus have HOT state instead of PUSHED</comments>
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:EnumConstant" href="TMSchema$State.class.xmi#//@classifiers.0/@constants.22"/>
                          </next>
                          <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.0/@variable"/>
                    <children xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:EnumConstant" href="TMSchema$State.class.xmi#//@classifiers.0/@constants.40"/>
                      </next>
                      <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
                    </children>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.0/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:EnumConstant" href="TMSchema$State.class.xmi#//@classifiers.0/@constants.15"/>
                            </next>
                            <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
                          </value>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.0/@variable"/>
                      <children xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:EnumConstant" href="TMSchema$State.class.xmi#//@classifiers.0/@constants.16"/>
                        </next>
                        <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
                      </children>
                    </condition>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="expressions:NestedExpression">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0/@members.51"/>
                  </next>
                  <expression xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@parameters.0"/>
                  </expression>
                </child>
              </condition>
            </statements>
            <statements xsi:type="statements:Condition">
              <comments>/* &#xA;                 * on Vista top level menu for non active frame looks disabled&#xA;                 */</comments>
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:EnumConstant" href="TMSchema$State.class.xmi#//@classifiers.0/@constants.14"/>
                          </next>
                          <target xsi:type="classifiers:Enumeration" href="TMSchema$State.class.xmi#//@classifiers.0"/>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:UnaryExpression">
                    <operators xsi:type="operators:Negate"/>
                    <child xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="WindowsMenuBarUI.class.xmi#//@classifiers.0/@members.11"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@parameters.0"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="WindowsMenuBarUI.class.xmi#//@classifiers.0"/>
                    </child>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0/@members.51"/>
                  </next>
                  <expression xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@parameters.0"/>
                  </expression>
                </children>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="WindowsMenuItemUI.class.xmi#//@classifiers.0/@members.10"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="WindowsMenuItemUI.class.xmi#//@classifiers.0"/>
                </children>
              </condition>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.1/@statements.0/@variable"/>
            </statements>
          </members>
          <members xsi:type="members:ClassMethod" name="getPart">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Enumeration" href="TMSchema$Part.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <parameters xsi:type="parameters:OrdinaryParameter" name="menuItem">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenuItem.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </parameters>
            <annotationsAndModifiers xsi:type="modifiers:Public"/>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="expressions:ConditionalExpression">
                <child xsi:type="expressions:NestedExpression">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0/@members.51"/>
                  </next>
                  <expression xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@initialValue/@anonymousClass/@members.2/@parameters.0"/>
                  </expression>
                </child>
                <expressionIf xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:EnumConstant" href="TMSchema$Part.class.xmi#//@classifiers.0/@constants.2"/>
                  </next>
                  <target xsi:type="classifiers:Enumeration" href="TMSchema$Part.class.xmi#//@classifiers.0"/>
                </expressionIf>
                <expressionElse xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:EnumConstant" href="TMSchema$Part.class.xmi#//@classifiers.0/@constants.8"/>
                  </next>
                  <target xsi:type="classifiers:Enumeration" href="TMSchema$Part.class.xmi#//@classifiers.0"/>
                </expressionElse>
              </returnValue>
            </statements>
          </members>
        </anonymousClass>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="WindowsMenuItemUIAccessor.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:ClassMethod" name="createUI">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/plaf/ComponentUI.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="installDefaults">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/plaf/basic/BasicMenuUI.class.xmi#//@classifiers.0/@members.12"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/AbstractButton.class.xmi#//@classifiers.0/@members.106"/>
                <arguments xsi:type="literals:BooleanLiteral" value="true"/>
              </next>
              <target xsi:type="members:Field" href="../../../../../../javax/swing/plaf/basic/BasicMenuItemUI.class.xmi#//@classifiers.0/@members.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="WindowsLookAndFeel.class.xmi#//@classifiers.0/@members.28"/>
            </next>
            <target xsi:type="classifiers:Class" href="WindowsLookAndFeel.class.xmi#//@classifiers.0"/>
          </child>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="paintBackground">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="g">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="menuItem">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenuItem.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bgColor">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../java/awt/Color.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Draws the background of the menu.&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="WindowsMenuItemUI.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.1"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.2"/>
              </next>
              <target xsi:type="classifiers:Class" href="WindowsMenuItemUI.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return"/>
        </statement>
        <condition xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="WindowsMenuItemUI.class.xmi#//@classifiers.0/@members.10"/>
          </next>
          <target xsi:type="classifiers:Class" href="WindowsMenuItemUI.class.xmi#//@classifiers.0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="menu">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="model">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/AbstractButton.class.xmi#//@classifiers.0/@members.116"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Use superclass method for the old Windows LAF,</comments>
        <comments>// for submenus, and for XP toplevel if selected or pressed</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/plaf/basic/BasicMenuItemUI.class.xmi#//@classifiers.0/@members.58"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.2"/>
              </next>
              <self xsi:type="literals:Super"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return"/>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="WindowsLookAndFeel.class.xmi#//@classifiers.0/@members.28"/>
            </next>
            <target xsi:type="classifiers:Class" href="WindowsLookAndFeel.class.xmi#//@classifiers.0"/>
          </children>
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0/@members.51"/>
              </next>
            </child>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="XPStyle.class.xmi#//@classifiers.0/@members.8"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="XPStyle.class.xmi#//@classifiers.0"/>
                </children>
                <children xsi:type="literals:NullLiteral"/>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </children>
                </expression>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldColor">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../java/awt/Color.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.4"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="menuWidth">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/JComponent.class.xmi#//@classifiers.0/@members.201"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="menuHeight">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/JComponent.class.xmi#//@classifiers.0/@members.202"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="table">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/UIDefaults.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/UIManager.class.xmi#//@classifiers.0/@members.48"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/UIManager.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="highlight">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../java/awt/Color.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.7/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/UIDefaults.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="controlLtHighlight"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="shadow">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../java/awt/Color.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.7/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/UIDefaults.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:StringReference" value="controlShadow"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.135"/>
              </next>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.6/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                  <comments>// Draw a lowered bevel border</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.9/@variable"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.6/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.8/@variable"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.6/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.6/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.6/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="otherMenuSelected">
                    <typeReference xsi:type="types:Boolean">
                      <comments>// Only paint rollover if no other menu on menubar is selected</comments>
                    </typeReference>
                    <initialValue xsi:type="literals:BooleanLiteral"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="menus">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="../../../../../../javax/swing/MenuElement.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <initialValue xsi:type="expressions:NestedExpression">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/JMenuBar.class.xmi#//@classifiers.0/@members.31"/>
                      </next>
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenuBar.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.96"/>
                          </next>
                        </child>
                      </expression>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ForLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.12/@statement/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="literals:BooleanLiteral" value="true"/>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:Break"/>
                      </statement>
                      <condition xsi:type="expressions:NestedExpression">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/AbstractButton.class.xmi#//@classifiers.0/@members.58"/>
                        </next>
                        <expression xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenuItem.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.12/@statement/@statements.0/@elseStatement/@statement/@statements.1/@variable">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.12/@statement/@statements.0/@elseStatement/@statement/@statements.2/@init"/>
                            </arraySelectors>
                          </child>
                        </expression>
                      </condition>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.12/@statement/@statements.0/@elseStatement/@statement/@statements.2/@init"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.12/@statement/@statements.0/@elseStatement/@statement/@statements.1/@variable">
                      <next xsi:type="references:IdentifierReference"/>
                    </children>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <init xsi:type="variables:LocalVariable" name="i">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </init>
                  <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.12/@statement/@statements.0/@elseStatement/@statement/@statements.2/@init"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </updates>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../../../../../javax/swing/plaf/basic/BasicMenuItemUI.class.xmi#//@classifiers.0/@members.1"/>
                              </arguments>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                            <comments>// Uses protected field.</comments>
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.19"/>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@variable"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.6/@variable"/>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:NotEqual"/>
                        <children xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="XPStyle.class.xmi#//@classifiers.0/@members.8"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="XPStyle.class.xmi#//@classifiers.0"/>
                        </children>
                        <children xsi:type="literals:NullLiteral"/>
                      </condition>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                            <comments>// Draw a raised bevel border</comments>
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.8/@variable"/>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@variable"/>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <additiveOperators xsi:type="operators:Subtraction"/>
                              </arguments>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.6/@variable"/>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                                <additiveOperators xsi:type="operators:Subtraction"/>
                              </arguments>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.9/@variable"/>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@variable"/>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <additiveOperators xsi:type="operators:Subtraction"/>
                              </arguments>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@variable"/>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <additiveOperators xsi:type="operators:Subtraction"/>
                              </arguments>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.6/@variable"/>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                                <additiveOperators xsi:type="operators:Subtraction"/>
                              </arguments>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.6/@variable"/>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                                <additiveOperators xsi:type="operators:Subtraction"/>
                              </arguments>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.5/@variable"/>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                                <additiveOperators xsi:type="operators:Subtraction"/>
                              </arguments>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.6/@variable"/>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                                <additiveOperators xsi:type="operators:Subtraction"/>
                              </arguments>
                            </next>
                          </expression>
                        </statements>
                      </elseStatement>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:UnaryExpression">
                    <operators xsi:type="operators:Negate"/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.12/@statement/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                </children>
              </condition>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.1/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/JComponent.class.xmi#//@classifiers.0/@members.203"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@statements.4/@variable"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="paintText">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="g">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="menuItem">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenuItem.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="textRect">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="text">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Method which renders the text of the current menu item.&#xA;     * &lt;p>&#xA;     * @param g Graphics context&#xA;     * @param menuItem Current menu item to render&#xA;     * @param textRect Bounding rectangle to render the text.&#xA;     * @param text String to render&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="WindowsMenuItemUI.class.xmi#//@classifiers.0/@members.7"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.2"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.3"/>
              </next>
              <target xsi:type="classifiers:Class" href="WindowsMenuItemUI.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return"/>
        </statement>
        <condition xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="WindowsMenuItemUI.class.xmi#//@classifiers.0/@members.10"/>
          </next>
          <target xsi:type="classifiers:Class" href="WindowsMenuItemUI.class.xmi#//@classifiers.0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="menu">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="model">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/AbstractButton.class.xmi#//@classifiers.0/@members.116"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldColor">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../java/awt/Color.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.4"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="paintRollover">
          <typeReference xsi:type="types:Boolean">
            <comments>// Only paint rollover if no other menu on menubar is selected</comments>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.4"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="menus">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../javax/swing/MenuElement.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="expressions:NestedExpression">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/JMenuBar.class.xmi#//@classifiers.0/@members.31"/>
                </next>
                <expression xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenuBar.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.96"/>
                    </next>
                  </child>
                </expression>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.4/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Break"/>
                </statement>
                <condition xsi:type="expressions:NestedExpression">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/AbstractButton.class.xmi#//@classifiers.0/@members.58"/>
                  </next>
                  <expression xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenuItem.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.5/@statement/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.5/@statement/@statements.1/@init"/>
                      </arraySelectors>
                    </child>
                  </expression>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.5/@statement/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.5/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.5/@statement/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.4/@variable"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0/@members.51"/>
            </next>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <comments>// Uses protected field.</comments>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../../javax/swing/plaf/basic/BasicMenuItemUI.class.xmi#//@classifiers.0/@members.2"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="WindowsLookAndFeel.class.xmi#//@classifiers.0/@members.28"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="WindowsLookAndFeel.class.xmi#//@classifiers.0"/>
                  </children>
                  <children xsi:type="expressions:UnaryExpression">
                    <operators xsi:type="operators:Negate"/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0/@members.51"/>
                      </next>
                    </child>
                  </children>
                </expression>
              </children>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="XPStyle.class.xmi#//@classifiers.0/@members.8"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="XPStyle.class.xmi#//@classifiers.0"/>
                </children>
                <children xsi:type="literals:NullLiteral"/>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.4/@variable"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </children>
                </expression>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="WindowsGraphicsUtils.class.xmi#//@classifiers.0/@members.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.3"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </next>
          <target xsi:type="classifiers:Class" href="WindowsGraphicsUtils.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@statements.3/@variable"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createMouseInputListener">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../javax/swing/event/MouseInputListener.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.6"/>
          </typeReference>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="classifiers:Class" name="WindowsMouseInputHandler">
      <members xsi:type="members:ClassMethod" name="mouseEntered">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="evt">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/MouseEvent.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/plaf/basic/BasicMenuUI$MouseInputHandler.class.xmi#//@classifiers.0/@members.5"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@members.0/@parameters.0"/>
            </next>
            <self xsi:type="literals:Super"/>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="menu">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@members.0/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../java/util/EventObject.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </child>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="model">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@members.0/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/AbstractButton.class.xmi#//@classifiers.0/@members.116"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@members.0/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.9"/>
                  <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.203"/>
                </next>
                <target xsi:type="members:Field" href="../../../../../../javax/swing/plaf/basic/BasicMenuItemUI.class.xmi#//@classifiers.0/@members.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@members.0/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/AbstractButton.class.xmi#//@classifiers.0/@members.105"/>
            </next>
          </condition>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="mouseExited">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="evt">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/MouseEvent.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/plaf/basic/BasicMenuUI$MouseInputHandler.class.xmi#//@classifiers.0/@members.6"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@members.1/@parameters.0"/>
            </next>
            <self xsi:type="literals:Super"/>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="menu">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@members.1/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../java/util/EventObject.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </child>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="model">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@members.1/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/AbstractButton.class.xmi#//@classifiers.0/@members.116"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@members.1/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../../javax/swing/ButtonModel.class.xmi#//@classifiers.0/@members.9"/>
                  <arguments xsi:type="literals:BooleanLiteral"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.203"/>
                </next>
                <target xsi:type="members:Field" href="../../../../../../javax/swing/plaf/basic/BasicMenuItemUI.class.xmi#//@classifiers.0/@members.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@members.1/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/AbstractButton.class.xmi#//@classifiers.0/@members.105"/>
            </next>
          </condition>
        </statements>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * This class implements a mouse handler that sets the rollover flag to&#xA;     * true when the mouse enters the menu and false when it exits.&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <extends xsi:type="types:NamespaceClassifierReference">
        <namespaces>BasicMenuUI</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/plaf/basic/BasicMenuUI$MouseInputHandler.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </extends>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Windows rendition of the component.&#xA; * &lt;p>&#xA; * &lt;strong>Warning:&lt;/strong>&#xA; * Serialized objects of this class will not be compatible with&#xA; * future Swing releases.  The current serialization support is appropriate&#xA; * for short term storage or RMI between applications running the same&#xA; * version of Swing.  A future release of Swing will provide support for&#xA; * long term persistence.&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/plaf/basic/BasicMenuUI.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
