<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../java.ecore#/16" name="MotifTextUI.java">
  <comments>/*&#xA; * @(#)MotifTextUI.java&#x9;1.20 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>java</namespaces>
  <namespaces>swing</namespaces>
  <namespaces>plaf</namespaces>
  <namespaces>motif</namespaces>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <namespaces>event</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
    <namespaces>text</namespaces>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>swing</namespaces>
    <namespaces>plaf</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="MotifTextUI">
    <members xsi:type="members:ClassMethod" name="createCaret">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../javax/swing/text/Caret.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates the object to use for a caret for all of the Motif&#xA;     * text components.  The caret is rendered as an I-beam on Motif.&#xA;     *&#xA;     * @return the caret object&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.1"/>
          </typeReference>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="classifiers:Class" name="MotifCaret">
      <members xsi:type="members:ClassMethod" name="focusGained">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="e">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/FocusEvent.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Called when the component containing the caret gains&#xA;&#x9; * focus.  This is implemented to repaint the component &#xA;&#x9; * so the focus rectangle will be re-rendered, as well&#xA;&#x9; * as providing the superclass behavior.&#xA;&#x9; *&#xA;&#x9; * @param e the focus event&#xA;&#x9; * @see FocusListener#focusGained&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/text/DefaultCaret.class.xmi#//@classifiers.0/@members.41"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.0/@parameters.0"/>
            </next>
            <self xsi:type="literals:Super"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.203"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/text/DefaultCaret.class.xmi#//@classifiers.0/@members.34"/>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="focusLost">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="e">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/FocusEvent.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Called when the component containing the caret loses&#xA;&#x9; * focus.  This is implemented to set the caret to visibility&#xA;&#x9; * to false.&#xA;&#x9; *&#xA;&#x9; * @param e the focus event&#xA;&#x9; * @see FocusListener#focusLost&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/text/DefaultCaret.class.xmi#//@classifiers.0/@members.42"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.1/@parameters.0"/>
            </next>
            <self xsi:type="literals:Super"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.203"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/text/DefaultCaret.class.xmi#//@classifiers.0/@members.34"/>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="damage">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="r">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Protected">
          <comments>/**&#xA;&#x9; * Damages the area surrounding the caret to cause&#xA;&#x9; * it to be repainted.  If paint() is reimplemented,&#xA;&#x9; * this method should also be reimplemented.&#xA;&#x9; *&#xA;&#x9; * @param r  the current location of the caret, does nothing if null&#xA;&#x9; * @see #paint&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.2/@parameters.0">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.4"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.2/@parameters.0">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.2/@parameters.0">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.4"/>
                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.2/@parameters.0">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/text/DefaultCaret.class.xmi#//@classifiers.0/@members.35"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.2/@parameters.0"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="paint">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="g">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Renders the caret as a vertical line.  If this is reimplemented&#xA;&#x9; * the damage method should also be reimplemented as it assumes the&#xA;&#x9; * shape of the caret is a vertical line.  Does nothing if isVisible()&#xA;         * is false.  The caret color is derived from getCaretColor() if&#xA;         * the component has focus, else from getDisabledTextColor().&#xA;&#x9; *&#xA;&#x9; * @param g the graphics context&#xA;&#x9; * @see #damage&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:TryBlock">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="c">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/JTextComponent.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/text/DefaultCaret.class.xmi#//@classifiers.0/@members.34"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="fg">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../java/awt/Color.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="expressions:ConditionalExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Component.class.xmi#//@classifiers.0/@members.329"/>
                      </next>
                    </child>
                    <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/text/JTextComponent.class.xmi#//@classifiers.0/@members.63"/>
                      </next>
                    </expressionIf>
                    <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/text/JTextComponent.class.xmi#//@classifiers.0/@members.69"/>
                      </next>
                    </expressionElse>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="mapper">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/plaf/TextUI.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/text/JTextComponent.class.xmi#//@classifiers.0/@members.33"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="dot">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/text/DefaultCaret.class.xmi#//@classifiers.0/@members.69"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="r">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/plaf/TextUI.class.xmi#//@classifiers.0/@members.1"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.0/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.3/@variable"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="x0">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.4/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.4"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="x1">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.4/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.4"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="y0">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.4/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="y1">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.4/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.4/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.3"/>
                      </next>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.5"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.1/@variable"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.4/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.7/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.4/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../java/awt/Rectangle.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.8/@variable"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.5/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.7/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.6/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.7/@variable"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../java/awt/Graphics.class.xmi#//@classifiers.0/@members.18"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.5/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.8/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.6/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3/@statements.0/@statement/@statements.0/@statements.8/@variable"/>
                  </next>
                </expression>
              </statements>
              <catcheBlocks>
                <comments>// can't render I guess</comments>
                <comments>//System.err.println(&quot;Can't render caret&quot;);</comments>
                <parameter name="e">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/BadLocationException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameter>
              </catcheBlocks>
            </statements>
          </statement>
          <condition xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/text/DefaultCaret.class.xmi#//@classifiers.0/@members.65"/>
          </condition>
        </statements>
      </members>
      <members xsi:type="members:Field" name="IBeamOverhang">
        <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
        <typeReference xsi:type="types:Int"/>
        <annotationsAndModifiers xsi:type="modifiers:Static"/>
        <annotationsAndModifiers xsi:type="modifiers:Final"/>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The motif caret is rendered as an I beam.&#xA;     * &lt;p>&#xA;     * &lt;strong>Warning:&lt;/strong>&#xA;     * Serialized objects of this class will not be compatible with&#xA;     * future Swing releases.  The current serialization support is appropriate&#xA;     * for short term storage or RMI between applications running the same&#xA;     * version of Swing.  A future release of Swing will provide support for&#xA;     * long term persistence.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <implements xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../javax/swing/plaf/UIResource.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </implements>
      <extends xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/DefaultCaret.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </extends>
    </members>
    <members xsi:type="members:Field" name="defaultBindings">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>JTextComponent</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/JTextComponent$KeyBinding.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/KeyStroke.class.xmi#//@classifiers.0/@members.7"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../java/awt/event/KeyEvent.class.xmi#//@classifiers.0/@members.116"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/KeyEvent.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../java/awt/event/InputEvent.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/InputEvent.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/KeyStroke.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../../javax/swing/text/DefaultEditorKit.class.xmi#//@classifiers.0/@members.9"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/DefaultEditorKit.class.xmi#//@classifiers.0"/>
            </arguments>
          </initialValues>
          <initialValues xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>JTextComponent</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/JTextComponent$KeyBinding.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/KeyStroke.class.xmi#//@classifiers.0/@members.7"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../java/awt/event/KeyEvent.class.xmi#//@classifiers.0/@members.116"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/KeyEvent.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../java/awt/event/InputEvent.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/InputEvent.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/KeyStroke.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../../javax/swing/text/DefaultEditorKit.class.xmi#//@classifiers.0/@members.10"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/DefaultEditorKit.class.xmi#//@classifiers.0"/>
            </arguments>
          </initialValues>
          <initialValues xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>JTextComponent</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/JTextComponent$KeyBinding.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/KeyStroke.class.xmi#//@classifiers.0/@members.7"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../java/awt/event/KeyEvent.class.xmi#//@classifiers.0/@members.88"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/KeyEvent.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../java/awt/event/InputEvent.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/InputEvent.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/KeyStroke.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../../javax/swing/text/DefaultEditorKit.class.xmi#//@classifiers.0/@members.8"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/DefaultEditorKit.class.xmi#//@classifiers.0"/>
            </arguments>
          </initialValues>
          <initialValues xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>JTextComponent</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/JTextComponent$KeyBinding.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/KeyStroke.class.xmi#//@classifiers.0/@members.7"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../java/awt/event/KeyEvent.class.xmi#//@classifiers.0/@members.22"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/KeyEvent.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../java/awt/event/InputEvent.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/InputEvent.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/KeyStroke.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../../javax/swing/text/DefaultEditorKit.class.xmi#//@classifiers.0/@members.21"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/DefaultEditorKit.class.xmi#//@classifiers.0"/>
            </arguments>
          </initialValues>
          <initialValues xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>JTextComponent</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/JTextComponent$KeyBinding.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../javax/swing/KeyStroke.class.xmi#//@classifiers.0/@members.7"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../java/awt/event/KeyEvent.class.xmi#//@classifiers.0/@members.24"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/KeyEvent.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../java/awt/event/InputEvent.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../java/awt/event/InputEvent.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/KeyStroke.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../../javax/swing/text/DefaultEditorKit.class.xmi#//@classifiers.0/@members.20"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/DefaultEditorKit.class.xmi#//@classifiers.0"/>
            </arguments>
          </initialValues>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>JTextComponent</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../javax/swing/text/JTextComponent$KeyBinding.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>/**&#xA;     * Default bindings all keymaps implementing the Motif feel.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Provides the look and feel features that are common across&#xA; * the Motif/CDE text LAF implementations.  &#xA; * &lt;p>&#xA; * &lt;strong>Warning:&lt;/strong>&#xA; * Serialized objects of this class will not be compatible with&#xA; * future Swing releases.  The current serialization support is appropriate&#xA; * for short term storage or RMI between applications running the same&#xA; * version of Swing.  A future release of Swing will provide support for&#xA; * long term persistence.&#xA; *&#xA; * @author  Timothy Prinzing&#xA; * @version 1.20 12/19/03&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
