<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../../../../../java.ecore#/7 http://www.emftext.org/java/literals ../../../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../../../../../java.ecore#/13 http://www.emftext.org/java/statements ../../../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../../../java.ecore#/16" name="DTMNodeListBase.java">
  <comments>/*&#xA; * Copyright 1999-2004 The Apache Software Foundation.&#xA; *&#xA; * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#xA; * you may not use this file except in compliance with the License.&#xA; * You may obtain a copy of the License at&#xA; *&#xA; *     http://www.apache.org/licenses/LICENSE-2.0&#xA; *&#xA; * Unless required by applicable law or agreed to in writing, software&#xA; * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xA; * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; * See the License for the specific language governing permissions and&#xA; * limitations under the License.&#xA; */</comments>
  <comments>/*&#xA; * $Id: DTMNodeListBase.java,v 1.3 2004/02/16 23:06:11 minchau Exp $&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>xml</namespaces>
  <namespaces>internal</namespaces>
  <namespaces>dtm</namespaces>
  <namespaces>ref</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../../org/w3c/dom/Node.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="DTMNodeListBase">
    <members xsi:type="members:Constructor" name="DTMNodeListBase">
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <members xsi:type="members:ClassMethod" name="item">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../../org/w3c/dom/Node.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="index">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>//================================================================</comments>
        <comments>// org.w3c.dom.NodeList API follows</comments>
        <comments>/**&#xA;     * Returns the &lt;code>index&lt;/code>th item in the collection. If &#xA;     * &lt;code>index&lt;/code> is greater than or equal to the number of nodes in &#xA;     * the list, this returns &lt;code>null&lt;/code>.&#xA;     * @param indexIndex into the collection.&#xA;     * @return The node at the &lt;code>index&lt;/code>th position in the &#xA;     *   &lt;code>NodeList&lt;/code>, or &lt;code>null&lt;/code> if that is not a valid &#xA;     *   index.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:NullLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getLength">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The number of nodes in the list. The range of valid child node indices &#xA;     * is 0 to &lt;code>length-1&lt;/code> inclusive. &#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;code>DTMNodeList&lt;/code> gives us an implementation of the DOM's&#xA; * NodeList interface wrapped around a DTM Iterator. The author&#xA; * considers this something of an abominations, since NodeList was not&#xA; * intended to be a general purpose &quot;list of nodes&quot; API and is&#xA; * generally considered by the DOM WG to have be a mistake... but I'm&#xA; * told that some of the XPath/XSLT folks say they must have this&#xA; * solution.&#xA; *&#xA; * Please note that this is not necessarily equivlaent to a DOM&#xA; * NodeList operating over the same document. In particular:&#xA; * &lt;ul>&#xA; *&#xA; * &lt;li>If there are several Text nodes in logical succession (ie,&#xA; * across CDATASection and EntityReference boundaries), we will return&#xA; * only the first; the caller is responsible for stepping through&#xA; * them.&#xA; * (%REVIEW% Provide a convenience routine here to assist, pending&#xA; * proposed DOM Level 3 getAdjacentText() operation?) &lt;/li>&#xA; *&#xA; * &lt;li>Since the whole XPath/XSLT architecture assumes that the source&#xA; * document is not altered while we're working with it, we do not&#xA; * promise to implement the DOM NodeList's &quot;live view&quot; response to&#xA; * document mutation. &lt;/li>&#xA; *&#xA; * &lt;/ul>&#xA; *&#xA; * &lt;p>State: In progress!!&lt;/p>&#xA; *&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <namespaces>org</namespaces>
      <namespaces>w3c</namespaces>
      <namespaces>dom</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../../../../../../org/w3c/dom/NodeList.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
