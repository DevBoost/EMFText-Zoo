<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../../java.ecore#/16" name="DOMParserImpl.java">
  <comments>/*&#xA; * The Apache Software License, Version 1.1&#xA; *&#xA; *&#xA; * Copyright (c) 2000-2004 The Apache Software Foundation.  All rights&#xA; * reserved.&#xA; *&#xA; * Redistribution and use in source and binary forms, with or without&#xA; * modification, are permitted provided that the following conditions&#xA; * are met:&#xA; *&#xA; * 1. Redistributions of source code must retain the above copyright&#xA; *    notice, this list of conditions and the following disclaimer.&#xA; *&#xA; * 2. Redistributions in binary form must reproduce the above copyright&#xA; *    notice, this list of conditions and the following disclaimer in&#xA; *    the documentation and/or other materials provided with the&#xA; *    distribution.&#xA; *&#xA; * 3. The end-user documentation included with the redistribution,&#xA; *    if any, must include the following acknowledgment:&#xA; *       &quot;This product includes software developed by the&#xA; *        Apache Software Foundation (http://www.apache.org/).&quot;&#xA; *    Alternately, this acknowledgment may appear in the software itself,&#xA; *    if and wherever such third-party acknowledgments normally appear.&#xA; *&#xA; * 4. The names &quot;Xerces&quot; and &quot;Apache Software Foundation&quot; must&#xA; *    not be used to endorse or promote products derived from this&#xA; *    software without prior written permission. For written&#xA; *    permission, please contact apache@apache.org.&#xA; *&#xA; * 5. Products derived from this software may not be called &quot;Apache&quot;,&#xA; *    nor may &quot;Apache&quot; appear in their name, without prior written&#xA; *    permission of the Apache Software Foundation.&#xA; *&#xA; * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED&#xA; * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES&#xA; * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE&#xA; * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR&#xA; * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,&#xA; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT&#xA; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF&#xA; * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND&#xA; * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,&#xA; * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT&#xA; * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF&#xA; * SUCH DAMAGE.&#xA; * ====================================================================&#xA; *&#xA; * This software consists of voluntary contributions made by many&#xA; * individuals on behalf of the Apache Software Foundation and was&#xA; * originally based on software copyright (c) 2001, International&#xA; * Business Machines, Inc., http://www.apache.org.  For more&#xA; * information on the Apache Software Foundation, please see&#xA; * &lt;http://www.apache.org/>.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>xerces</namespaces>
  <namespaces>internal</namespaces>
  <namespaces>parsers</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/io/StringReader.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/util/Stack.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/util/StringTokenizer.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Class" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Class" href="../dom/DOMStringListImpl.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMError.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <classifier xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../util/DOMEntityResolverWrapper.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../util/DOMErrorHandlerWrapper.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../util/SymbolTable.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>grammars</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../xni/grammars/XMLGrammarPool.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../xni/parser/XMLEntityResolver.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Class" href="../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMConfiguration.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMErrorHandler.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMStringList.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/Node.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <namespaces>ls</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/ls/LSException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <namespaces>ls</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSParser.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <namespaces>ls</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSParserFilter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <namespaces>ls</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSResourceResolver.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <namespaces>ls</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="DOMParserImpl">
    <members xsi:type="members:Field" name="NAMESPACES">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.2"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.3"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// SAX &amp; Xerces feature ids</comments>
        <comments>/** Feature identifier: namespaces. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VALIDATION_FEATURE">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.2"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.6"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Feature id: validation. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="XMLSCHEMA">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.62"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.63"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** XML Schema validation */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DYNAMIC_VALIDATION">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.62"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.68"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Dynamic validation */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NORMALIZE_DATA">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.62"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.64"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Feature identifier: expose schema normalized value */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DISALLOW_DOCTYPE_DECL_FEATURE">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.62"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.73"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Feature identifier: disallow docType Decls. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SYMBOL_TABLE">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.93"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// internal properties</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="PSVI_AUGMENT">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.62"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.67"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="currentThread">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="fSchemaType">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>//</comments>
        <comments>// Data</comments>
        <comments>//</comments>
        <comments>// REVISIT: this value should be null by default and should be set during creation of</comments>
        <comments>//          LSParser</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fBusy">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
    </members>
    <members xsi:type="members:Field" name="DEBUG">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="fSchemaLocations">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fSchemaLocation">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fRecognizedParameters">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMStringList.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="abortNow">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Constructor" name="DOMParserImpl">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="ObjectFactory.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:StringReference" value="com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="ObjectFactory.class.xmi#//@classifiers.0"/>
            </child>
          </arguments>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.62"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </children>
                      <children xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.63"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                    <arguments xsi:type="literals:BooleanLiteral"/>
                  </next>
                  <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </children>
                      <children xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.28"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                  <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference">
                    <comments>// XML Schem validation</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                        </children>
                        <children xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.28"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                        </children>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </condition>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="configuration">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="schemaType">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>//</comments>
        <comments>// Constructors</comments>
        <comments>//</comments>
        <comments>/**&#xA;     * Constructs a DOM Builder using the standard parser configuration.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="DOMParserImpl">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="domRecognizedFeatures">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.33"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.34"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.36"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.39"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.41"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.50"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.42"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.54"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.49"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.56"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </initialValues>
            </arrayInitializer>
          </initialValue>
          <annotationsAndModifiers xsi:type="modifiers:Final">
            <comments>// add recognized features</comments>
          </annotationsAndModifiers>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@statements.1/@variable"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <comments>// turn off deferred DOM</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.5"/>
            </arguments>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <comments>// Set values so that the value of the</comments>
          <comments>// infoset parameter is true (its default value).</comments>
          <comments>//</comments>
          <comments>// true: namespace-declarations, well-formed,</comments>
          <comments>// element-content-whitespace, comments, namespaces</comments>
          <comments>//</comments>
          <comments>// false: validate-if-schema, entities,</comments>
          <comments>// datatype-normalization, cdata-sections</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.41"/>
              </next>
              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="literals:BooleanLiteral" value="true"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.49"/>
              </next>
              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="literals:BooleanLiteral" value="true"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.2"/>
            </arguments>
            <arguments xsi:type="literals:BooleanLiteral" value="true"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.4"/>
            </arguments>
            <arguments xsi:type="literals:BooleanLiteral" value="true"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            <arguments xsi:type="literals:BooleanLiteral" value="true"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.1"/>
            </arguments>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.3"/>
            </arguments>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <comments>// set other default values</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.33"/>
              </next>
              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.36"/>
              </next>
              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="literals:BooleanLiteral" value="true"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.50"/>
              </next>
              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="literals:BooleanLiteral" value="true"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.42"/>
              </next>
              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.56"/>
              </next>
              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="literals:BooleanLiteral" value="true"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <comments>// REVISIT: by default Xerces assumes that input is certified.</comments>
          <comments>//          default is different from the one specified in the DOM spec</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.54"/>
              </next>
              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="literals:BooleanLiteral" value="true"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <comments>// Xerces datatype-normalization feature is on by default</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
            <arguments xsi:type="literals:BooleanLiteral"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="config">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a DOM Builder using the specified parser configuration.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="DOMParserImpl">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="ObjectFactory.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:StringReference" value="com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration"/>
                <arguments xsi:type="references:StringReference" value="com.sun.org.apache.xerces.internal.parsers.XIncludeParserConfiguration"/>
              </next>
              <target xsi:type="classifiers:Class" href="ObjectFactory.class.xmi#//@classifiers.0"/>
            </child>
          </arguments>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.90"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.93"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@parameters.0"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="symbolTable">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../util/SymbolTable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// &lt;init>(XMLParserConfiguration)</comments>
        <comments>/**&#xA;     * Constructs a DOM Builder using the specified symbol table.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="DOMParserImpl">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="ObjectFactory.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:StringReference" value="com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration"/>
                <arguments xsi:type="references:StringReference" value="com.sun.org.apache.xerces.internal.parsers.XIncludeParserConfiguration"/>
              </next>
              <target xsi:type="classifiers:Class" href="ObjectFactory.class.xmi#//@classifiers.0"/>
            </child>
          </arguments>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.90"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.93"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.90"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.102"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.1"/>
          </next>
          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="symbolTable">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../util/SymbolTable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="grammarPool">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../xni/grammars/XMLGrammarPool.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// &lt;init>(SymbolTable)</comments>
        <comments>/**&#xA;     * Constructs a DOM Builder using the specified symbol table and&#xA;     * grammar pool.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="reset">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Resets the parser state.&#xA;     *&#xA;     * @throws SAXException Thrown on initialization error.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.55"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// DOM Filter</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.30"/>
              </next>
              <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.47"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.47"/>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.40"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../xni/QName.class.xmi#//@classifiers.0/@members.9"/>
          </next>
          <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.46"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.44"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDomConfig">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMConfiguration.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// reset()</comments>
        <comments>//</comments>
        <comments>// DOMParser methods</comments>
        <comments>//</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <self xsi:type="literals:This"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getFilter">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSParserFilter.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     *  When the application provides a filter, the parser will call out to&#xA;     * the filter at the completion of the construction of each&#xA;     * &lt;code>Element&lt;/code> node. The filter implementation can choose to&#xA;     * remove the element from the document being constructed (unless the&#xA;     * element is the document element) or to terminate the parse early. If&#xA;     * the document is being validated when it's loaded the validation&#xA;     * happens before the filter is called.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.50"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setFilter">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="filter">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSParserFilter.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     *  When the application provides a filter, the parser will call out to&#xA;     * the filter at the completion of the construction of each&#xA;     * &lt;code>Element&lt;/code> node. The filter implementation can choose to&#xA;     * remove the element from the document being constructed (unless the&#xA;     * element is the document element) or to terminate the parse early. If&#xA;     * the document is being validated when it's loaded the validation&#xA;     * happens before the filter is called.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.50"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.47"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Stack.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.47"/>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setParameter">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set parameters and properties&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// set features</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="state">
              <typeReference xsi:type="types:Boolean"/>
              <initialValue xsi:type="expressions:NestedExpression">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.8"/>
                </next>
                <expression xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                </expression>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.2"/>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                    </next>
                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.35"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                      </next>
                      <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.37"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.1"/>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                        </next>
                        <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.38"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                          </next>
                          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.55"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </condition>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <comments>// setting those features to false is no-op</comments>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:LocalVariableStatement">
                              <variable name="msg">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <comments>// true is not supported</comments>
                                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <initialValue xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                    <arguments xsi:type="references:StringReference" value="FEATURE_NOT_SUPPORTED"/>
                                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                      <typeReference xsi:type="types:NamespaceClassifierReference">
                                        <classifierReferences>
                                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                        </classifierReferences>
                                      </typeReference>
                                      <arrayDimensionsBefore/>
                                      <arrayInitializer>
                                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
                                      </arrayInitializer>
                                    </arguments>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                </initialValue>
                              </variable>
                            </statements>
                            <statements xsi:type="statements:Throw">
                              <throwable xsi:type="instantiations:NewConstructorCall">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                </arguments>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.1/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@variable"/>
                              </throwable>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:ConditionalOrExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.42"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.47"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.48"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.33"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </children>
                      </condition>
                      <elseStatement xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                              </next>
                              <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.40"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </condition>
                        <elseStatement xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:Condition">
                              <comments>// Setting false has no effect.</comments>
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <comments>// true: namespaces, comments, element-content-whitespace</comments>
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                                      <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.2"/>
                                      </arguments>
                                      <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.4"/>
                                      </arguments>
                                      <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <comments>// false: validate-if-schema, entities,</comments>
                                    <comments>// datatype-normalization, cdata-sections</comments>
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
                                      <arguments xsi:type="literals:BooleanLiteral"/>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.1"/>
                                      </arguments>
                                      <arguments xsi:type="literals:BooleanLiteral"/>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                                      <arguments xsi:type="literals:BooleanLiteral"/>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.3"/>
                                      </arguments>
                                      <arguments xsi:type="literals:BooleanLiteral"/>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.39"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                              </arguments>
                            </next>
                          </condition>
                          <elseStatement xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.3"/>
                                    </arguments>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                                  </next>
                                  <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.34"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                </arguments>
                              </next>
                            </condition>
                            <elseStatement xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <comments>// setting these features to true is no-op</comments>
                                <comments>// REVISIT: implement &quot;namespace-declaration&quot; feature</comments>
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:LocalVariableStatement">
                                      <variable name="msg">
                                        <typeReference xsi:type="types:NamespaceClassifierReference">
                                          <classifierReferences>
                                            <comments>// false is not supported</comments>
                                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                          </classifierReferences>
                                        </typeReference>
                                        <initialValue xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                            <arguments xsi:type="references:IdentifierReference">
                                              <next xsi:type="references:IdentifierReference">
                                                <target xsi:type="members:Field" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                              </next>
                                              <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                            </arguments>
                                            <arguments xsi:type="references:StringReference" value="FEATURE_NOT_SUPPORTED"/>
                                            <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                                <classifierReferences>
                                                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                                </classifierReferences>
                                              </typeReference>
                                              <arrayDimensionsBefore/>
                                              <arrayInitializer>
                                                <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
                                              </arrayInitializer>
                                            </arguments>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                        </initialValue>
                                      </variable>
                                    </statements>
                                    <statements xsi:type="statements:Throw">
                                      <throwable xsi:type="instantiations:NewConstructorCall">
                                        <typeReference xsi:type="types:NamespaceClassifierReference">
                                          <classifierReferences>
                                            <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                          </classifierReferences>
                                        </typeReference>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.1/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@variable"/>
                                      </throwable>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="expressions:UnaryExpression">
                                    <operators xsi:type="operators:Negate"/>
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                                  </condition>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:ConditionalOrExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.41"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.49"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.56"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                              </condition>
                              <elseStatement xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                                      </next>
                                      <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="statements:Condition">
                                    <statement xsi:type="statements:Block">
                                      <statements xsi:type="statements:ExpressionStatement">
                                        <expression xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                                          </next>
                                          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                        </expression>
                                      </statements>
                                    </statement>
                                    <condition xsi:type="expressions:EqualityExpression">
                                      <equalityOperators xsi:type="operators:NotEqual"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                                      <children xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.1"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </children>
                                    </condition>
                                  </statements>
                                  <statements xsi:type="statements:Condition">
                                    <statement xsi:type="statements:Block">
                                      <statements xsi:type="statements:ExpressionStatement">
                                        <expression xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
                                            <arguments xsi:type="literals:BooleanLiteral"/>
                                          </next>
                                          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                        </expression>
                                      </statements>
                                    </statement>
                                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                                  </statements>
                                </statement>
                                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.44"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </condition>
                                <elseStatement xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                                        </next>
                                        <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                      </expression>
                                    </statements>
                                    <statements xsi:type="statements:Condition">
                                      <comments>// Note: validation and dynamic validation are mutually exclusive</comments>
                                      <statement xsi:type="statements:Block">
                                        <statements xsi:type="statements:ExpressionStatement">
                                          <expression xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                                              <arguments xsi:type="literals:BooleanLiteral"/>
                                            </next>
                                            <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                          </expression>
                                        </statements>
                                      </statement>
                                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.43"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </condition>
                                  <elseStatement xsi:type="statements:Condition">
                                    <statement xsi:type="statements:Block">
                                      <statements xsi:type="statements:ExpressionStatement">
                                        <expression xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                            <arguments xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.4"/>
                                            </arguments>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                                          </next>
                                          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                        </expression>
                                      </statements>
                                    </statement>
                                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.45"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                      </next>
                                    </condition>
                                    <elseStatement xsi:type="statements:Condition">
                                      <statement xsi:type="statements:Block">
                                        <statements xsi:type="statements:ExpressionStatement">
                                          <expression xsi:type="references:IdentifierReference">
                                            <comments>//XSModel - turn on PSVI augmentation</comments>
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                                              <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                                            </next>
                                            <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                          </expression>
                                        </statements>
                                        <statements xsi:type="statements:ExpressionStatement">
                                          <expression xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
                                              <arguments xsi:type="references:IdentifierReference">
                                                <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.7"/>
                                              </arguments>
                                              <arguments xsi:type="references:StringReference" value="com.sun.org.apache.xerces.internal.dom.PSVIDocumentImpl"/>
                                            </next>
                                            <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                          </expression>
                                        </statements>
                                      </statement>
                                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                          <arguments xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.61"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                          </arguments>
                                        </next>
                                      </condition>
                                      <elseStatement xsi:type="statements:Block">
                                        <statements xsi:type="statements:ExpressionStatement">
                                          <expression xsi:type="references:IdentifierReference">
                                            <comments>// Constants.DOM_CHARSET_OVERRIDES_XML_ENCODING feature,</comments>
                                            <comments>// Constants.DOM_SPLIT_CDATA feature,</comments>
                                            <comments>// or any Xerces feature</comments>
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                                                <next xsi:type="references:MethodCall">
                                                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.67"/>
                                                  <arguments xsi:type="references:IdentifierReference">
                                                    <next xsi:type="references:IdentifierReference">
                                                      <target xsi:type="members:Field" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0/@members.0"/>
                                                    </next>
                                                    <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
                                                  </arguments>
                                                </next>
                                              </arguments>
                                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.0/@variable"/>
                                            </next>
                                            <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                          </expression>
                                        </statements>
                                      </elseStatement>
                                    </elseStatement>
                                  </elseStatement>
                                </elseStatement>
                              </elseStatement>
                            </elseStatement>
                          </elseStatement>
                        </elseStatement>
                      </elseStatement>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="msg">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                      </arguments>
                      <arguments xsi:type="references:StringReference" value="FEATURE_NOT_FOUND"/>
                      <arguments xsi:type="arrays:ArrayInstantiationByValues">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arrayDimensionsBefore/>
                        <arrayInitializer>
                          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
                        </arrayInitializer>
                      </arguments>
                    </next>
                    <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.8"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@statement/@statements.1/@catcheBlocks.0/@statements.0/@variable"/>
                </throwable>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <comments>// set properties</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:TryBlock">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.16"/>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="instantiations:NewConstructorCall">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../util/DOMErrorHandlerWrapper.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <arguments xsi:type="expressions:CastExpression">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMErrorHandler.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                          </arguments>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.1"/>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.16"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                      </expression>
                    </statements>
                    <catcheBlocks>
                      <parameter name="e">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                      </parameter>
                    </catcheBlocks>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:InstanceOfExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMErrorHandler.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                  </children>
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="msg">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <comments>// REVISIT: type mismatch</comments>
                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <initialValue xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                          </arguments>
                          <arguments xsi:type="references:StringReference" value="TYPE_MISMATCH_ERR"/>
                          <arguments xsi:type="arrays:ArrayInstantiationByValues">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arrayDimensionsBefore/>
                            <arrayInitializer>
                              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
                            </arrayInitializer>
                          </arguments>
                        </next>
                        <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:Throw">
                    <throwable xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@elseStatement/@statements.0/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                    </throwable>
                  </statements>
                </elseStatement>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.58"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:TryBlock">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.0"/>
                            </arguments>
                            <arguments xsi:type="instantiations:NewConstructorCall">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../util/DOMEntityResolverWrapper.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <arguments xsi:type="expressions:CastExpression">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSResourceResolver.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                              </arguments>
                            </arguments>
                          </next>
                          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                        </expression>
                      </statements>
                      <catcheBlocks>
                        <parameter name="e">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                        </parameter>
                      </catcheBlocks>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="expressions:InstanceOfExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSResourceResolver.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                    </children>
                    <children xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                      <children xsi:type="literals:NullLiteral"/>
                    </children>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="msg">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <comments>// REVISIT: type mismatch</comments>
                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <initialValue xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                            </arguments>
                            <arguments xsi:type="references:StringReference" value="TYPE_MISMATCH_ERR"/>
                            <arguments xsi:type="arrays:ArrayInstantiationByValues">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <arrayDimensionsBefore/>
                              <arrayInitializer>
                                <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
                              </arrayInitializer>
                            </arguments>
                          </next>
                          <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:Throw">
                      <throwable xsi:type="instantiations:NewConstructorCall">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@elseStatement/@statements.0/@elseStatement/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                      </throwable>
                    </statements>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.57"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:TryBlock">
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
                                  <arguments xsi:type="expressions:AdditiveExpression">
                                    <children xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </children>
                                    <children xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.27"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </children>
                                    <additiveOperators xsi:type="operators:Addition"/>
                                  </arguments>
                                  <arguments xsi:type="literals:NullLiteral"/>
                                </next>
                                <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:Equal"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                            <children xsi:type="literals:NullLiteral"/>
                          </condition>
                          <elseStatement xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="expressions:AssignmentExpression">
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
                                  <assignmentOperator xsi:type="operators:Assignment"/>
                                  <value xsi:type="expressions:CastExpression">
                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                      <classifierReferences>
                                        <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                      </classifierReferences>
                                    </typeReference>
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                                  </value>
                                </expression>
                              </statements>
                              <statements xsi:type="statements:LocalVariableStatement">
                                <variable name="t">
                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                    <classifierReferences>
                                      <comments>// map DOM schema-location to JAXP schemaSource property</comments>
                                      <comments>// tokenize location string</comments>
                                      <target xsi:type="classifiers:Class" href="../../../../../../../java/util/StringTokenizer.class.xmi#//@classifiers.0"/>
                                    </classifierReferences>
                                  </typeReference>
                                  <initialValue xsi:type="instantiations:NewConstructorCall">
                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                      <classifierReferences>
                                        <target xsi:type="classifiers:Class" href="../../../../../../../java/util/StringTokenizer.class.xmi#//@classifiers.0"/>
                                      </classifierReferences>
                                    </typeReference>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
                                    <arguments xsi:type="references:StringReference" value=" &#xA;&#x9;&#xD;"/>
                                  </initialValue>
                                </variable>
                              </statements>
                              <statements xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.40"/>
                                      </next>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@statements.0/@elseStatement/@statement/@statements.1/@variable">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/StringTokenizer.class.xmi#//@classifiers.0/@members.18"/>
                                          </next>
                                        </arguments>
                                      </next>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="statements:WhileLoop">
                                    <statement xsi:type="statements:Block">
                                      <statements xsi:type="statements:ExpressionStatement">
                                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@statements.0/@elseStatement/@statement/@statements.1/@variable">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/StringTokenizer.class.xmi#//@classifiers.0/@members.18"/>
                                              </next>
                                            </arguments>
                                          </next>
                                        </expression>
                                      </statements>
                                    </statement>
                                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@statements.0/@elseStatement/@statement/@statements.1/@variable">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/StringTokenizer.class.xmi#//@classifiers.0/@members.17"/>
                                      </next>
                                    </condition>
                                  </statements>
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
                                        <arguments xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                          </children>
                                          <children xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.27"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                          </children>
                                          <additiveOperators xsi:type="operators:Addition"/>
                                        </arguments>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.32"/>
                                          </next>
                                        </arguments>
                                      </next>
                                      <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                    </expression>
                                  </statements>
                                </statement>
                                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@statements.0/@elseStatement/@statement/@statements.1/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/StringTokenizer.class.xmi#//@classifiers.0/@members.17"/>
                                  </next>
                                </condition>
                                <elseStatement xsi:type="statements:Block">
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
                                        <arguments xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                          </children>
                                          <children xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.27"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                          </children>
                                          <additiveOperators xsi:type="operators:Addition"/>
                                        </arguments>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                                      </next>
                                      <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                    </expression>
                                  </statements>
                                </elseStatement>
                              </statements>
                            </statement>
                            <condition xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:Equal"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                              <children xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.0"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                              </children>
                            </condition>
                            <elseStatement xsi:type="statements:Block">
                              <statements xsi:type="statements:LocalVariableStatement">
                                <variable name="msg">
                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                    <classifierReferences>
                                      <comments>// REVISIT: allow pre-parsing DTD grammars</comments>
                                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                    </classifierReferences>
                                  </typeReference>
                                  <initialValue xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                      <arguments xsi:type="references:StringReference" value="FEATURE_NOT_SUPPORTED"/>
                                      <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                        <typeReference xsi:type="types:NamespaceClassifierReference">
                                          <classifierReferences>
                                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                          </classifierReferences>
                                        </typeReference>
                                        <arrayDimensionsBefore/>
                                        <arrayInitializer>
                                          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
                                        </arrayInitializer>
                                      </arguments>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                  </initialValue>
                                </variable>
                              </statements>
                              <statements xsi:type="statements:Throw">
                                <throwable xsi:type="instantiations:NewConstructorCall">
                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                    <classifierReferences>
                                      <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                    </classifierReferences>
                                  </typeReference>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@statements.0/@elseStatement/@elseStatement/@statements.0/@variable"/>
                                </throwable>
                              </statements>
                            </elseStatement>
                          </elseStatement>
                        </statements>
                        <catcheBlocks>
                          <parameter name="e">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                          </parameter>
                        </catcheBlocks>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:ConditionalOrExpression">
                      <children xsi:type="expressions:InstanceOfExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                      </children>
                      <children xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                        <children xsi:type="literals:NullLiteral"/>
                      </children>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="msg">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <comments>// REVISIT: type mismatch</comments>
                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                              </arguments>
                              <arguments xsi:type="references:StringReference" value="TYPE_MISMATCH_ERR"/>
                              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <arrayDimensionsBefore/>
                                <arrayInitializer>
                                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
                                </arrayInitializer>
                              </arguments>
                            </next>
                            <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:Throw">
                        <throwable xsi:type="instantiations:NewConstructorCall">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                        </throwable>
                      </statements>
                    </elseStatement>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.60"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:TryBlock">
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:IdentifierReference">
                                  <comments>// turn off schema feature</comments>
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                    <arguments xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.62"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </children>
                                      <children xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.63"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </children>
                                      <additiveOperators xsi:type="operators:Addition"/>
                                    </arguments>
                                    <arguments xsi:type="literals:BooleanLiteral"/>
                                  </next>
                                  <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                </expression>
                              </statements>
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:IdentifierReference">
                                  <comments>// map to JAXP schemaLanguage</comments>
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
                                    <arguments xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </children>
                                      <children xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.28"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </children>
                                      <additiveOperators xsi:type="operators:Addition"/>
                                    </arguments>
                                    <arguments xsi:type="literals:NullLiteral"/>
                                  </next>
                                  <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                </expression>
                              </statements>
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="expressions:AssignmentExpression">
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                                  <assignmentOperator xsi:type="operators:Assignment"/>
                                  <value xsi:type="literals:NullLiteral"/>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:Equal"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                              <children xsi:type="literals:NullLiteral"/>
                            </condition>
                            <elseStatement xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <comments>// turn on schema feature</comments>
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                      <arguments xsi:type="expressions:AdditiveExpression">
                                        <children xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.62"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                        </children>
                                        <children xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.63"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                        </children>
                                        <additiveOperators xsi:type="operators:Addition"/>
                                      </arguments>
                                      <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference">
                                    <comments>// map to JAXP schemaLanguage</comments>
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
                                      <arguments xsi:type="expressions:AdditiveExpression">
                                        <children xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                        </children>
                                        <children xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.28"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                        </children>
                                        <additiveOperators xsi:type="operators:Addition"/>
                                      </arguments>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.0"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="expressions:AssignmentExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                                    <assignmentOperator xsi:type="operators:Assignment"/>
                                    <value xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.0"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </value>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.0"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                              </condition>
                              <elseStatement xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:IdentifierReference">
                                      <comments>// turn off schema feature</comments>
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.2"/>
                                        <arguments xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.62"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                          </children>
                                          <children xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.63"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                          </children>
                                          <additiveOperators xsi:type="operators:Addition"/>
                                        </arguments>
                                        <arguments xsi:type="literals:BooleanLiteral"/>
                                      </next>
                                      <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:IdentifierReference">
                                      <comments>// map to JAXP schemaLanguage</comments>
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
                                        <arguments xsi:type="expressions:AdditiveExpression">
                                          <children xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                          </children>
                                          <children xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.28"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                          </children>
                                          <additiveOperators xsi:type="operators:Addition"/>
                                        </arguments>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.1"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                      </next>
                                      <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="expressions:AssignmentExpression">
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                                      <assignmentOperator xsi:type="operators:Assignment"/>
                                      <value xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.1"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </value>
                                    </expression>
                                  </statements>
                                </statement>
                                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.1"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </condition>
                              </elseStatement>
                            </elseStatement>
                          </statements>
                          <catcheBlocks>
                            <parameter name="e">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                            </parameter>
                          </catcheBlocks>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:ConditionalOrExpression">
                        <children xsi:type="expressions:InstanceOfExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                        </children>
                        <children xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                          <children xsi:type="literals:NullLiteral"/>
                        </children>
                      </condition>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="msg">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <initialValue xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                </arguments>
                                <arguments xsi:type="references:StringReference" value="TYPE_MISMATCH_ERR"/>
                                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                    <classifierReferences>
                                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                    </classifierReferences>
                                  </typeReference>
                                  <arrayDimensionsBefore/>
                                  <arrayInitializer>
                                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
                                  </arrayInitializer>
                                </arguments>
                              </next>
                              <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:Throw">
                          <throwable xsi:type="instantiations:NewConstructorCall">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                            </arguments>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                          </throwable>
                        </statements>
                      </elseStatement>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.59"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.5"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.7"/>
                            </arguments>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                          </next>
                          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.7"/>
                        </arguments>
                      </next>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="msg">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <comments>// REVISIT: check if this is a boolean parameter -- type mismatch should be thrown.</comments>
                              <comments>//parameter is not recognized</comments>
                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                              </arguments>
                              <arguments xsi:type="references:StringReference" value="FEATURE_NOT_FOUND"/>
                              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <arrayDimensionsBefore/>
                                <arrayInitializer>
                                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
                                </arrayInitializer>
                              </arguments>
                            </next>
                            <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:Throw">
                        <throwable xsi:type="instantiations:NewConstructorCall">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.8"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                        </throwable>
                      </statements>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getParameter">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Look up the value of a feature or a property.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:ConditionalExpression">
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.2"/>
                    </arguments>
                  </next>
                  <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                </expression>
              </child>
              <expressionIf xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
              </expressionIf>
              <expressionElse xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
              </expressionElse>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.35"/>
              </next>
              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="expressions:ConditionalExpression">
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                    </next>
                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                  </expression>
                </child>
                <expressionIf xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                </expressionIf>
                <expressionElse xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                </expressionElse>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.37"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.1"/>
                        </arguments>
                      </next>
                      <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                    </expression>
                  </child>
                  <expressionIf xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                  </expressionIf>
                  <expressionElse xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                  </expressionElse>
                </returnValue>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.38"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:ConditionalExpression">
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                        </next>
                        <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                      </expression>
                    </child>
                    <expressionIf xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                    </expressionIf>
                    <expressionElse xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                    </expressionElse>
                  </returnValue>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.40"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:ConditionalExpression">
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                          </next>
                          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                        </expression>
                      </child>
                      <expressionIf xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                      </expressionIf>
                      <expressionElse xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                      </expressionElse>
                    </returnValue>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.44"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="expressions:ConditionalExpression">
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
                            </next>
                            <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                          </expression>
                        </child>
                        <expressionIf xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                        </expressionIf>
                        <expressionElse xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                        </expressionElse>
                      </returnValue>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.43"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Return">
                        <returnValue xsi:type="expressions:ConditionalExpression">
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.4"/>
                                </arguments>
                              </next>
                              <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                            </expression>
                          </child>
                          <expressionIf xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                          </expressionIf>
                          <expressionElse xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                          </expressionElse>
                        </returnValue>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.45"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </condition>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:Return">
                          <returnValue xsi:type="expressions:ConditionalExpression">
                            <child xsi:type="expressions:NestedExpression">
                              <expression xsi:type="references:IdentifierReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                                </next>
                                <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                              </expression>
                            </child>
                            <expressionIf xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                            </expressionIf>
                            <expressionElse xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                            </expressionElse>
                          </returnValue>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.55"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                          </arguments>
                        </next>
                      </condition>
                      <elseStatement xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:LocalVariableStatement">
                            <variable name="infoset">
                              <typeReference xsi:type="types:Boolean">
                                <comments>// REVISIT: This is somewhat expensive to compute</comments>
                                <comments>// but it's possible that the user has a reference</comments>
                                <comments>// to the configuration and is changing the values</comments>
                                <comments>// of these features directly on it.</comments>
                              </typeReference>
                              <initialValue xsi:type="expressions:ConditionalAndExpression">
                                <children xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                                  </next>
                                  <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                </children>
                                <children xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.2"/>
                                    </arguments>
                                  </next>
                                  <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                </children>
                                <children xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.4"/>
                                    </arguments>
                                  </next>
                                  <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                </children>
                                <children xsi:type="expressions:UnaryExpression">
                                  <operators xsi:type="operators:Negate"/>
                                  <child xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </child>
                                </children>
                                <children xsi:type="expressions:UnaryExpression">
                                  <operators xsi:type="operators:Negate"/>
                                  <child xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.1"/>
                                      </arguments>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </child>
                                </children>
                                <children xsi:type="expressions:UnaryExpression">
                                  <operators xsi:type="operators:Negate"/>
                                  <child xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </child>
                                </children>
                                <children xsi:type="expressions:UnaryExpression">
                                  <operators xsi:type="operators:Negate"/>
                                  <child xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.3"/>
                                      </arguments>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </child>
                                </children>
                              </initialValue>
                            </variable>
                          </statements>
                          <statements xsi:type="statements:Return">
                            <returnValue xsi:type="expressions:ConditionalExpression">
                              <child xsi:type="expressions:NestedExpression">
                                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                              </child>
                              <expressionIf xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                              </expressionIf>
                              <expressionElse xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                              </expressionElse>
                            </returnValue>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.39"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </condition>
                        <elseStatement xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:Return">
                              <returnValue xsi:type="expressions:ConditionalExpression">
                                <child xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.3"/>
                                      </arguments>
                                    </next>
                                    <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                  </expression>
                                </child>
                                <expressionIf xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                                </expressionIf>
                                <expressionElse xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                                </expressionElse>
                              </returnValue>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.34"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                              </arguments>
                            </next>
                          </condition>
                          <elseStatement xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:Return">
                                <returnValue xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                                </returnValue>
                              </statements>
                            </statement>
                            <condition xsi:type="expressions:ConditionalOrExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.48"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.47"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                              </children>
                            </condition>
                            <elseStatement xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:Return">
                                  <returnValue xsi:type="expressions:ConditionalExpression">
                                    <child xsi:type="expressions:NestedExpression">
                                      <expression xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.67"/>
                                              <arguments xsi:type="references:IdentifierReference">
                                                <next xsi:type="references:IdentifierReference">
                                                  <target xsi:type="members:Field" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0/@members.0"/>
                                                </next>
                                                <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
                                              </arguments>
                                            </next>
                                          </arguments>
                                        </next>
                                        <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                      </expression>
                                    </child>
                                    <expressionIf xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                                    </expressionIf>
                                    <expressionElse xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                                    </expressionElse>
                                  </returnValue>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:ConditionalOrExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.41"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.49"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.56"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.33"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.42"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.50"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.36"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                              </condition>
                              <elseStatement xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:Condition">
                                    <statement xsi:type="statements:Block">
                                      <statements xsi:type="statements:Return">
                                        <returnValue xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../util/DOMErrorHandlerWrapper.class.xmi#//@classifiers.0/@members.10"/>
                                          </next>
                                          <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.16"/>
                                        </returnValue>
                                      </statements>
                                    </statement>
                                    <condition xsi:type="expressions:EqualityExpression">
                                      <equalityOperators xsi:type="operators:NotEqual"/>
                                      <children xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.16"/>
                                      </children>
                                      <children xsi:type="literals:NullLiteral"/>
                                    </condition>
                                  </statements>
                                  <statements xsi:type="statements:Return">
                                    <returnValue xsi:type="literals:NullLiteral"/>
                                  </statements>
                                </statement>
                                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.58"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </condition>
                                <elseStatement xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:TryBlock">
                                      <statements xsi:type="statements:LocalVariableStatement">
                                        <variable name="entityResolver">
                                          <typeReference xsi:type="types:NamespaceClassifierReference">
                                            <classifierReferences>
                                              <target xsi:type="classifiers:Interface" href="../xni/parser/XMLEntityResolver.class.xmi#//@classifiers.0"/>
                                            </classifierReferences>
                                          </typeReference>
                                          <initialValue xsi:type="expressions:CastExpression">
                                            <typeReference xsi:type="types:NamespaceClassifierReference">
                                              <classifierReferences>
                                                <target xsi:type="classifiers:Interface" href="../xni/parser/XMLEntityResolver.class.xmi#//@classifiers.0"/>
                                              </classifierReferences>
                                            </typeReference>
                                            <child xsi:type="references:IdentifierReference">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.6"/>
                                                <arguments xsi:type="references:IdentifierReference">
                                                  <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.0"/>
                                                </arguments>
                                              </next>
                                              <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                            </child>
                                          </initialValue>
                                        </variable>
                                      </statements>
                                      <statements xsi:type="statements:Condition">
                                        <statement xsi:type="statements:Block">
                                          <statements xsi:type="statements:Return">
                                            <returnValue xsi:type="expressions:NestedExpression">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="../util/DOMEntityResolverWrapper.class.xmi#//@classifiers.0/@members.6"/>
                                              </next>
                                              <expression xsi:type="expressions:CastExpression">
                                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                                  <classifierReferences>
                                                    <target xsi:type="classifiers:Class" href="../util/DOMEntityResolverWrapper.class.xmi#//@classifiers.0"/>
                                                  </classifierReferences>
                                                </typeReference>
                                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@variable"/>
                                              </expression>
                                            </returnValue>
                                          </statements>
                                        </statement>
                                        <condition xsi:type="expressions:ConditionalAndExpression">
                                          <children xsi:type="expressions:EqualityExpression">
                                            <equalityOperators xsi:type="operators:NotEqual"/>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@variable"/>
                                            <children xsi:type="literals:NullLiteral"/>
                                          </children>
                                          <children xsi:type="expressions:InstanceOfExpression">
                                            <typeReference xsi:type="types:NamespaceClassifierReference">
                                              <classifierReferences>
                                                <target xsi:type="classifiers:Class" href="../util/DOMEntityResolverWrapper.class.xmi#//@classifiers.0"/>
                                              </classifierReferences>
                                            </typeReference>
                                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statements.0/@variable"/>
                                          </children>
                                        </condition>
                                      </statements>
                                      <statements xsi:type="statements:Return">
                                        <returnValue xsi:type="literals:NullLiteral"/>
                                      </statements>
                                      <catcheBlocks>
                                        <parameter name="e">
                                          <typeReference xsi:type="types:NamespaceClassifierReference">
                                            <classifierReferences>
                                              <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
                                            </classifierReferences>
                                          </typeReference>
                                        </parameter>
                                      </catcheBlocks>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.57"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </condition>
                                  <elseStatement xsi:type="statements:Condition">
                                    <statement xsi:type="statements:Block">
                                      <statements xsi:type="statements:Return">
                                        <returnValue xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.6"/>
                                            <arguments xsi:type="expressions:AdditiveExpression">
                                              <children xsi:type="references:IdentifierReference">
                                                <next xsi:type="references:IdentifierReference">
                                                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                                                </next>
                                                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                              </children>
                                              <children xsi:type="references:IdentifierReference">
                                                <next xsi:type="references:IdentifierReference">
                                                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.28"/>
                                                </next>
                                                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                              </children>
                                              <additiveOperators xsi:type="operators:Addition"/>
                                            </arguments>
                                          </next>
                                          <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                        </returnValue>
                                      </statements>
                                    </statement>
                                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.59"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                      </next>
                                    </condition>
                                    <elseStatement xsi:type="statements:Condition">
                                      <statement xsi:type="statements:Block">
                                        <statements xsi:type="statements:Return">
                                          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
                                        </statements>
                                      </statement>
                                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                          <arguments xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.60"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                          </arguments>
                                        </next>
                                      </condition>
                                      <elseStatement xsi:type="statements:Condition">
                                        <statement xsi:type="statements:Block">
                                          <statements xsi:type="statements:Return">
                                            <returnValue xsi:type="references:IdentifierReference">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.6"/>
                                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                                              </next>
                                              <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                            </returnValue>
                                          </statements>
                                        </statement>
                                        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                                          </next>
                                        </condition>
                                        <elseStatement xsi:type="statements:Condition">
                                          <statement xsi:type="statements:Block">
                                            <statements xsi:type="statements:Return">
                                              <returnValue xsi:type="references:IdentifierReference">
                                                <next xsi:type="references:MethodCall">
                                                  <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.6"/>
                                                  <arguments xsi:type="references:IdentifierReference">
                                                    <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.7"/>
                                                  </arguments>
                                                </next>
                                                <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
                                              </returnValue>
                                            </statements>
                                          </statement>
                                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                              <arguments xsi:type="references:IdentifierReference">
                                                <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.7"/>
                                              </arguments>
                                            </next>
                                          </condition>
                                          <elseStatement xsi:type="statements:Block">
                                            <statements xsi:type="statements:LocalVariableStatement">
                                              <variable name="msg">
                                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                                  <classifierReferences>
                                                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                                  </classifierReferences>
                                                </typeReference>
                                                <initialValue xsi:type="references:IdentifierReference">
                                                  <next xsi:type="references:MethodCall">
                                                    <target xsi:type="members:ClassMethod" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                                    <arguments xsi:type="references:IdentifierReference">
                                                      <next xsi:type="references:IdentifierReference">
                                                        <target xsi:type="members:Field" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                                      </next>
                                                      <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                                    </arguments>
                                                    <arguments xsi:type="references:StringReference" value="FEATURE_NOT_FOUND"/>
                                                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                                      <typeReference xsi:type="types:NamespaceClassifierReference">
                                                        <classifierReferences>
                                                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                                        </classifierReferences>
                                                      </typeReference>
                                                      <arrayDimensionsBefore/>
                                                      <arrayInitializer>
                                                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0"/>
                                                      </arrayInitializer>
                                                    </arguments>
                                                  </next>
                                                  <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                                </initialValue>
                                              </variable>
                                            </statements>
                                            <statements xsi:type="statements:Throw">
                                              <throwable xsi:type="instantiations:NewConstructorCall">
                                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                                  <classifierReferences>
                                                    <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                                  </classifierReferences>
                                                </typeReference>
                                                <arguments xsi:type="references:IdentifierReference">
                                                  <next xsi:type="references:IdentifierReference">
                                                    <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.8"/>
                                                  </next>
                                                  <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                                </arguments>
                                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                                              </throwable>
                                            </statements>
                                          </elseStatement>
                                        </elseStatement>
                                      </elseStatement>
                                    </elseStatement>
                                  </elseStatement>
                                </elseStatement>
                              </elseStatement>
                            </elseStatement>
                          </elseStatement>
                        </elseStatement>
                      </elseStatement>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:NullLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="canSetParameter">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="state">
              <typeReference xsi:type="types:Boolean"/>
              <initialValue xsi:type="expressions:NestedExpression">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.8"/>
                </next>
                <expression xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.1"/>
                </expression>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <comments>// true is not supported</comments>
                <returnValue xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@statement/@statements.0/@variable"/>
                  </child>
                  <expressionIf xsi:type="literals:BooleanLiteral"/>
                  <expressionElse xsi:type="literals:BooleanLiteral" value="true"/>
                </returnValue>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.42"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.47"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.48"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.33"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <comments>// false is not supported</comments>
                  <returnValue xsi:type="expressions:ConditionalExpression">
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@statement/@statements.0/@variable"/>
                    </child>
                    <expressionIf xsi:type="literals:BooleanLiteral" value="true"/>
                    <expressionElse xsi:type="literals:BooleanLiteral"/>
                  </returnValue>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalOrExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.41"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.49"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.56"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.34"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.36"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.35"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.37"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.55"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.38"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.39"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.40"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.44"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.43"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.45"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.52"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                </condition>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <comments>// Recognize Xerces features.</comments>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0/@members.3"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.67"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </arguments>
                </next>
                <target xsi:type="members:Field" href="XMLParser.class.xmi#//@classifiers.0/@members.3"/>
              </expression>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:BooleanLiteral"/>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.1"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <comments>// check properties</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:InstanceOfExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMErrorHandler.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.1"/>
                  </children>
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.1"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:BooleanLiteral"/>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.58"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="expressions:InstanceOfExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSResourceResolver.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.1"/>
                    </children>
                    <children xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.1"/>
                      <children xsi:type="literals:NullLiteral"/>
                    </children>
                  </condition>
                </statements>
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="literals:BooleanLiteral"/>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.57"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Return">
                        <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:ConditionalOrExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ConditionalAndExpression">
                          <children xsi:type="expressions:InstanceOfExpression">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.1"/>
                          </children>
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:ConditionalOrExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.1">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.0"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.1">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.1"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                              </children>
                            </expression>
                          </children>
                        </expression>
                      </children>
                      <children xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.1"/>
                        <children xsi:type="literals:NullLiteral"/>
                      </children>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="literals:BooleanLiteral"/>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.59"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Return">
                        <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
                      </statement>
                      <condition xsi:type="expressions:ConditionalOrExpression">
                        <children xsi:type="expressions:InstanceOfExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.1"/>
                        </children>
                        <children xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.1"/>
                          <children xsi:type="literals:NullLiteral"/>
                        </children>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="literals:BooleanLiteral"/>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.60"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Return">
                        <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.7"/>
                        </arguments>
                      </next>
                    </condition>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getParameterNames">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMStringList.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     *  DOM Level 3 CR - Experimental.&#xA;     *&#xA;     *  The list of the parameters supported by this&#xA;     * &lt;code>DOMConfiguration&lt;/code> object and for which at least one value&#xA;     * can be set by the application. Note that this list can also contain&#xA;     * parameter names defined outside this specification.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="parameters">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <comments>// REVISIT: add Xerces recognized properties/features</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.40"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.34"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.33"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.41"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.50"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.38"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.43"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.44"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.37"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.36"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.48"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.42"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.56"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.47"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.49"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.39"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.55"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.45"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.35"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.58"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.57"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.60"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.59"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../dom/DOMStringListImpl.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@statement/@statements.0/@variable"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="parseURI">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="uri">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/ls/LSException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Parse an XML document from a location identified by an URI reference.&#xA;     * If the URI contains a fragment identifier (see section 4.1 in ), the&#xA;     * behavior is not defined by this specification.&#xA;     *&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>//If DOMParser insstance is already busy parsing another document when this</comments>
        <comments>// method is called, then raise INVALID_STATE_ERR according to DOM L3 LS spec</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="msg">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                  </arguments>
                  <arguments xsi:type="references:StringReference" value="INVALID_STATE_ERR"/>
                  <arguments xsi:type="literals:NullLiteral"/>
                </next>
                <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.11"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.0/@statement/@statements.0/@variable"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="source">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="literals:NullLiteral"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.0"/>
            <arguments xsi:type="literals:NullLiteral"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:Condition">
          <comments>//since we are depending on application to handle</comments>
          <comments>//multithreading issues this should be ok.</comments>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.33"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statement>
          <condition xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:BooleanLiteral" value="true"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XMLParser.class.xmi#//@classifiers.0/@members.5"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.1/@variable"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:BooleanLiteral"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                  <comments>//reset interrupt state</comments>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.53"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.54"/>
              </next>
            </children>
          </condition>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// Consume this exception if the user</comments>
            <comments>// issued an interrupt or an abort.</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                  <comments>//reset interrupt state</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.53"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.54"/>
                </next>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:NullLiteral"/>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="error">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <initialValue xsi:type="instantiations:NewConstructorCall">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.2/@catcheBlocks.0/@statements.3/@statement/@statements.0/@statement/@statements.0/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0/@members.3"/>
                        </next>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.2/@catcheBlocks.0/@parameter"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.2/@catcheBlocks.0/@statements.3/@statement/@statements.0/@statement/@statements.0/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.2/@catcheBlocks.0/@parameter">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.9"/>
                        </next>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.2/@catcheBlocks.0/@statements.3/@statement/@statements.0/@statement/@statements.0/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMError.class.xmi#//@classifiers.0/@members.2"/>
                        </next>
                        <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMError.class.xmi#//@classifiers.0"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/DOMErrorHandler.class.xmi#//@classifiers.0/@members.0"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.2/@catcheBlocks.0/@statements.3/@statement/@statements.0/@statement/@statements.0/@variable"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../util/DOMErrorHandlerWrapper.class.xmi#//@classifiers.0/@members.10"/>
                      </next>
                      <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.16"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.16"/>
                  </children>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.2/@catcheBlocks.0/@parameter">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.14"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/ls/LSException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/ls/LSException.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/ls/LSException.class.xmi#//@classifiers.0"/>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.2/@catcheBlocks.0/@parameter">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </arguments>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@statements.2/@catcheBlocks.0/@parameter"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.13"/>
              </children>
            </condition>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Exception.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.54"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="parse">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="is">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/ls/LSException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Parse an XML document from a resource identified by an&#xA;     * &lt;code>LSInput&lt;/code>.&#xA;     *&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="xmlInputSource">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// need to wrap the LSInput with an XMLInputSource</comments>
              <target xsi:type="classifiers:Class" href="../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.31">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="msg">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                  </arguments>
                  <arguments xsi:type="references:StringReference" value="INVALID_STATE_ERR"/>
                  <arguments xsi:type="literals:NullLiteral"/>
                </next>
                <target xsi:type="classifiers:Class" href="../dom/DOMMessageFormatter.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.11"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.1/@statement/@statements.0/@variable"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:Condition">
          <comments>//since we are depending on application to handle</comments>
          <comments>//multithreading issues this should be ok.</comments>
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.33"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statement>
          <condition xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:BooleanLiteral" value="true"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XMLParser.class.xmi#//@classifiers.0/@members.5"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.0/@variable"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:BooleanLiteral"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                  <comments>//reset interrupt state </comments>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.53"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.54"/>
              </next>
            </children>
          </condition>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// Consume this exception if the user</comments>
            <comments>// issued an interrupt or an abort.</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                  <comments>//reset interrupt state </comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.53"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.54"/>
                </next>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:BooleanLiteral"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:NullLiteral"/>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="error">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <initialValue xsi:type="instantiations:NewConstructorCall">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@catcheBlocks.0/@statements.3/@statement/@statements.0/@statement/@statements.0/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0/@members.3"/>
                        </next>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@catcheBlocks.0/@parameter"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@catcheBlocks.0/@statements.3/@statement/@statements.0/@statement/@statements.0/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@catcheBlocks.0/@parameter">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.9"/>
                        </next>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@catcheBlocks.0/@statements.3/@statement/@statements.0/@statement/@statements.0/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMError.class.xmi#//@classifiers.0/@members.2"/>
                        </next>
                        <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMError.class.xmi#//@classifiers.0"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/DOMErrorHandler.class.xmi#//@classifiers.0/@members.0"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@catcheBlocks.0/@statements.3/@statement/@statements.0/@statement/@statements.0/@variable"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../util/DOMErrorHandlerWrapper.class.xmi#//@classifiers.0/@members.10"/>
                      </next>
                      <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.16"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.16"/>
                  </children>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@catcheBlocks.0/@parameter">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.14"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/ls/LSException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/ls/LSException.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/ls/LSException.class.xmi#//@classifiers.0"/>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@catcheBlocks.0/@parameter">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </arguments>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29/@statements.2/@catcheBlocks.0/@parameter"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.13"/>
              </children>
            </condition>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Exception.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.54"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="parseWithContext">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/Node.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="is">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="cnode">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/Node.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="action">
        <typeReference xsi:type="types:Short"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/ls/LSException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     *  Parse an XML document or fragment from a resource identified by an&#xA;     * &lt;code>LSInput&lt;/code> and insert the content into an existing&#xA;     * document at the position epcified with the &lt;code>contextNode&lt;/code>&#xA;     * and &lt;code>action&lt;/code> arguments. When parsing the input stream the&#xA;     * context node is used for resolving unbound namespace prefixes.&#xA;     *&#xA;     * @param is  The &lt;code>LSInput&lt;/code> from which the source&#xA;     *   document is to be read.&#xA;     * @param cnode  The &lt;code>Node&lt;/code> that is used as the context for&#xA;     *   the data that is being parsed.&#xA;     * @param action This parameter describes which action should be taken&#xA;     *   between the new set of node being inserted and the existing&#xA;     *   children of the context node. The set of possible actions is&#xA;     *   defined above.&#xA;     * @exception DOMException&#xA;     *   HIERARCHY_REQUEST_ERR: Thrown if this action results in an invalid&#xA;     *   hierarchy (i.e. a Document with more than one document element).&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Throw">
        <comments>// REVISIT: need to implement.</comments>
        <throwable xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
          </arguments>
          <arguments xsi:type="references:StringReference" value="Not supported"/>
        </throwable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="dom2xmlInputSource">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * NON-DOM: convert LSInput to XNIInputSource&#xA;     *&#xA;     * @param is&#xA;     * @return&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="is">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="xis">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// need to wrap the LSInput with an XMLInputSource</comments>
              <target xsi:type="classifiers:Class" href="../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// check whether there is a Reader</comments>
        <comments>// according to DOM, we need to treat such reader as &quot;UTF-16&quot;.</comments>
        <comments>// check whether there is an InputStream</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.8"/>
                  </next>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.6"/>
                  </next>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.10"/>
                  </next>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                </arguments>
                <arguments xsi:type="references:StringReference" value="UTF-16"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <comments>// if there is a string data, use a StringReader</comments>
          <comments>// according to DOM, we need to treat such data as &quot;UTF-16&quot;.</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.8"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.6"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.10"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.12"/>
                    </next>
                  </arguments>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.2"/>
              </next>
            </children>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <comments>// otherwise, just use the public/system/base Ids</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.8"/>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.6"/>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.10"/>
                      </next>
                    </arguments>
                    <arguments xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../java/io/StringReader.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.4"/>
                        </next>
                      </arguments>
                    </arguments>
                    <arguments xsi:type="references:StringReference" value="UTF-16"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                </children>
                <children xsi:type="literals:NullLiteral"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                    </next>
                    <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:GreaterThan"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.8"/>
                        </next>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.6"/>
                        </next>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.10"/>
                        </next>
                      </arguments>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalOrExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.6"/>
                        </next>
                      </children>
                      <children xsi:type="literals:NullLiteral"/>
                    </children>
                    <children xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                          </next>
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.6"/>
                        </next>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      <relationOperators xsi:type="operators:GreaterThan"/>
                    </children>
                  </expression>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.8"/>
                        </next>
                      </children>
                      <children xsi:type="literals:NullLiteral"/>
                    </children>
                    <children xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                          </next>
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/ls/LSInput.class.xmi#//@classifiers.0/@members.8"/>
                        </next>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      <relationOperators xsi:type="operators:GreaterThan"/>
                    </children>
                  </expression>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <comments>// all inputs are null</comments>
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="error">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <initialValue xsi:type="instantiations:NewConstructorCall">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.1/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.0/@statement/@statements.0/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0/@members.4"/>
                          </next>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:StringReference" value="no-input-specified"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.1/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.0/@statement/@statements.0/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:StringReference" value="no-input-specified"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.1/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.0/@statement/@statements.0/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../dom/DOMErrorImpl.class.xmi#//@classifiers.0/@members.0"/>
                          </next>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMError.class.xmi#//@classifiers.0/@members.2"/>
                          </next>
                          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMError.class.xmi#//@classifiers.0"/>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/w3c/dom/DOMErrorHandler.class.xmi#//@classifiers.0/@members.0"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.1/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.0/@statement/@statements.0/@variable"/>
                          </next>
                          <target xsi:type="members:ClassMethod" href="../util/DOMErrorHandlerWrapper.class.xmi#//@classifiers.0/@members.10"/>
                        </next>
                        <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.16"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="AbstractDOMParser.class.xmi#//@classifiers.0/@members.16"/>
                    </children>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:Throw">
                  <throwable xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/ls/LSException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/ls/LSException.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/ls/LSException.class.xmi#//@classifiers.0"/>
                    </arguments>
                    <arguments xsi:type="references:StringReference" value="no-input-specified"/>
                  </throwable>
                </statements>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getAsync">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * @see org.w3c.dom.ls.LSParser#getAsync()&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getBusy">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * @see org.w3c.dom.ls.LSParser#getBusy()&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="abort">
      <comments>// If not busy then this is noop</comments>
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * @see org.w3c.dom.ls.DOMParser#abort()&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// If parse operation is in progress then reset it</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.20">
                <comments>//Revisit : Should we also close all opened readers ?</comments>
                <comments>//Work towards other classes supporting abort instead of </comments>
                <comments>//calling reset.</comments>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <comments>//interrupt the thread doing the parse operation.</comments>
              <comments>//come out of all block operations.</comments>
              <comments>// current thread could be blocked on read operation.</comments>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.52"/>
                  </next>
                </expression>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <catcheBlocks>
              <parameter name="ex">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Exception.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
      </statements>
      <statements xsi:type="statements:Return"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This is Xerces DOM Builder class. It uses the abstract DOM&#xA; * parser with a document scanner, a dtd scanner, and a validator, as&#xA; * well as a grammar pool.&#xA; *&#xA; * @author Pavani Mukthipudi, Sun Microsystems Inc.&#xA; * @author Elena Litani, IBM&#xA; * @author Rahul Srivastava, Sun Microsystems Inc.&#xA; * @version $Id: DOMParserImpl.java,v 1.25 2004/04/23 16:06:10 mrglavas Exp $&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSParser.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMConfiguration.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="AbstractDOMParser.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
