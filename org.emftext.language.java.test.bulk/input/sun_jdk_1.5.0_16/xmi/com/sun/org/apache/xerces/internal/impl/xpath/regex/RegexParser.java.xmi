<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../../../../../../java.ecore#/17" name="RegexParser.java">
  <comments>/*&#xA; * The Apache Software License, Version 1.1&#xA; *&#xA; *&#xA; * Copyright (c) 1999-2003 The Apache Software Foundation.  All rights &#xA; * reserved.&#xA; *&#xA; * Redistribution and use in source and binary forms, with or without&#xA; * modification, are permitted provided that the following conditions&#xA; * are met:&#xA; *&#xA; * 1. Redistributions of source code must retain the above copyright&#xA; *    notice, this list of conditions and the following disclaimer. &#xA; *&#xA; * 2. Redistributions in binary form must reproduce the above copyright&#xA; *    notice, this list of conditions and the following disclaimer in&#xA; *    the documentation and/or other materials provided with the&#xA; *    distribution.&#xA; *&#xA; * 3. The end-user documentation included with the redistribution,&#xA; *    if any, must include the following acknowledgment:  &#xA; *       &quot;This product includes software developed by the&#xA; *        Apache Software Foundation (http://www.apache.org/).&quot;&#xA; *    Alternately, this acknowledgment may appear in the software itself,&#xA; *    if and wherever such third-party acknowledgments normally appear.&#xA; *&#xA; * 4. The names &quot;Xerces&quot; and &quot;Apache Software Foundation&quot; must&#xA; *    not be used to endorse or promote products derived from this&#xA; *    software without prior written permission. For written &#xA; *    permission, please contact apache@apache.org.&#xA; *&#xA; * 5. Products derived from this software may not be called &quot;Apache&quot;,&#xA; *    nor may &quot;Apache&quot; appear in their name, without prior written&#xA; *    permission of the Apache Software Foundation.&#xA; *&#xA; * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED&#xA; * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES&#xA; * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE&#xA; * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR&#xA; * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,&#xA; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT&#xA; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF&#xA; * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND&#xA; * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,&#xA; * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT&#xA; * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF&#xA; * SUCH DAMAGE.&#xA; * ====================================================================&#xA; *&#xA; * This software consists of voluntary contributions made by many&#xA; * individuals on behalf of the Apache Software Foundation and was&#xA; * originally based on software copyright (c) 1999, International&#xA; * Business Machines, Inc., http://www.apache.org.  For more&#xA; * information on the Apache Software Foundation, please see&#xA; * &lt;http://www.apache.org/>.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>xerces</namespaces>
  <namespaces>internal</namespaces>
  <namespaces>impl</namespaces>
  <namespaces>xpath</namespaces>
  <namespaces>regex</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../java/util/MissingResourceException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="RegexParser">
    <comments>/**&#xA; * A Regular Expression Parser.&#xA; *&#xA; * @version $Id: RegexParser.java,v 1.8 2003/03/25 14:47:06 sandygao Exp $&#xA; */</comments>
    <members xsi:type="members:Field" name="T_CHAR">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_EOF">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_OR">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_STAR">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '|'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_PLUS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '*'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_QUESTION">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '+'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_LPAREN">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '?'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_RPAREN">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '('</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_DOT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// ')'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_LBRACKET">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '.'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_BACKSOLIDUS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '['</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_CARET">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '\'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_DOLLAR">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="12"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '^'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_LPAREN2">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="13"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '$'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_LOOKAHEAD">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="14"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '(?:'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_NEGATIVELOOKAHEAD">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="15"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '(?='</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_LOOKBEHIND">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '(?!'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_NEGATIVELOOKBEHIND">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="17"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '(?&lt;='</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_INDEPENDENT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="18"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '(?&lt;!'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_SET_OPERATIONS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="19"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '(?>'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_POSIX_CHARCLASS_START">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="20"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '(?['</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_COMMENT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="21"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '[:' in a character class</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_MODIFIERS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="22"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '(?#'</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_CONDITION">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="23"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '(?' [\-,a-z,A-Z]</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="T_XMLSCHEMA_CC_SUBTRACTION">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '(?('</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="classifiers:Class" name="ReferencePosition">
      <members xsi:type="members:Field" name="refNumber">
        <typeReference xsi:type="types:Int"/>
      </members>
      <members xsi:type="members:Field" name="position">
        <typeReference xsi:type="types:Int"/>
      </members>
      <members xsi:type="members:Constructor" name="ReferencePosition">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@members.2/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@members.2/@parameters.1"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="n">
          <typeReference xsi:type="types:Int"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="pos">
          <typeReference xsi:type="types:Int"/>
        </parameters>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// '-[' in a character class</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="offset">
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="regex">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="regexlen">
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="options">
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="resources">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="chardata">
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="nexttoken">
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="S_NORMAL">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="S_INBRACKETS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="S_INXBRACKETS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="context">
      <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="parennumber">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="hasBackReferences">
      <typeReference xsi:type="types:Boolean"/>
    </members>
    <members xsi:type="members:Field" name="references">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Constructor" name="RegexParser">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.42">
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Locale.class.xmi#//@classifiers.0/@members.35"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <members xsi:type="members:Constructor" name="RegexParser">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.42">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0"/>
          </next>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="locale">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <members xsi:type="members:ClassMethod" name="setLocale">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="locale">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:StringReference" value="com.sun.org.apache.xerces.internal.impl.xpath.regex.message"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0"/>
            </value>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/RuntimeException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="Installation Problem???  Couldn't load messages: "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@statements.0/@catcheBlocks.0/@parameter">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.9"/>
                  </next>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
          <parameter name="mre">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/MissingResourceException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="ex">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="key">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="loc">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0/@members.11"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@parameters.0"/>
              </next>
            </next>
            <self xsi:type="literals:This"/>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@parameters.1"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isSet">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="flag">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0"/>
            </expression>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="parse">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="regex">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="options">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.46">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
          </next>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="REUtil.class.xmi#//@classifiers.0/@members.11"/>
                <arguments xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
                  <self xsi:type="literals:This"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="REUtil.class.xmi#//@classifiers.0"/>
            </value>
          </expression>
        </statement>
        <condition xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="RegularExpression.class.xmi#//@classifiers.0/@members.18"/>
              </next>
              <target xsi:type="classifiers:Class" href="RegularExpression.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
          <self xsi:type="literals:This"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
              </next>
            </next>
            <self xsi:type="literals:This"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ret">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49"/>
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
            <arguments xsi:type="references:StringReference" value="parser.parse.1"/>
            <arguments xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
              <self xsi:type="literals:This"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
            <self xsi:type="literals:This"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="position">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences target="//@classifiers.0/@members.25"/>
                  </typeReference>
                  <initialValue xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences target="//@classifiers.0/@members.25"/>
                    </typeReference>
                    <child xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.22"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.11/@statement/@statements.0/@init"/>
                        </next>
                      </next>
                      <self xsi:type="literals:This"/>
                    </child>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                    <arguments xsi:type="references:StringReference" value="parser.parse.2"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.11/@statement/@statements.0/@statement/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@members.1"/>
                    </arguments>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.11/@statement/@statements.0/@statement/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@members.0"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThanOrEqual"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.11/@statement/@statements.0/@init"/>
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.14"/>
                  </next>
                </next>
                <self xsi:type="literals:This"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.11/@statement/@statements.0/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.30"/>
                </next>
              </next>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.9/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setContext">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="con">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/*&#xA;    public RegularExpression createRegex(String regex, int options) throws ParseException {&#xA;        Token tok = this.parse(regex, options);&#xA;        return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);&#xA;    }&#xA;    */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="read">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
          <self xsi:type="literals:This"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="next">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Subtraction"/>
                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return"/>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
            <self xsi:type="literals:This"/>
          </children>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ret">
          <typeReference xsi:type="types:Int"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ch">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </child>
                  <operator xsi:type="operators:PlusPlus"/>
                </arguments>
              </next>
            </next>
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Switch">
            <comments>// In a character class, this.chardata has one character, that is to say,</comments>
            <comments>// a pair of surrogates is composed and stored to this.chardata.</comments>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                    <arguments xsi:type="references:StringReference" value="parser.next.1"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                    <self xsi:type="literals:This"/>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                        <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                          <child xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                            <self xsi:type="literals:This"/>
                          </child>
                          <operator xsi:type="operators:PlusPlus"/>
                        </arguments>
                      </next>
                    </next>
                    <self xsi:type="literals:This"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="literals:CharacterLiteral" value="92"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                      <child xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </child>
                      <operator xsi:type="operators:PlusPlus"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="RegularExpression.class.xmi#//@classifiers.0/@members.23"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="RegularExpression.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                      <self xsi:type="literals:This"/>
                    </children>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </children>
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                          <arguments xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                            <self xsi:type="literals:This"/>
                          </arguments>
                        </next>
                      </next>
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="literals:CharacterLiteral" value="91"/>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                  </expression>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="literals:CharacterLiteral" value="45"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                      <child xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </child>
                      <operator xsi:type="operators:PlusPlus"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Break"/>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:UnaryExpression">
                    <operators xsi:type="operators:Negate"/>
                    <child xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="RegularExpression.class.xmi#//@classifiers.0/@members.23"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="RegularExpression.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                      <self xsi:type="literals:This"/>
                    </child>
                  </children>
                  <children xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                      <self xsi:type="literals:This"/>
                    </children>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </children>
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                          <arguments xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                            <self xsi:type="literals:This"/>
                          </arguments>
                        </next>
                      </next>
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="literals:CharacterLiteral" value="58"/>
                  </children>
                </condition>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="91"/>
            </cases>
            <cases xsi:type="statements:DefaultSwitchCase">
              <comments>// Through down</comments>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="low">
                      <typeReference xsi:type="types:Int"/>
                      <initialValue xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                            <arguments xsi:type="references:SelfReference">
                              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                              <self xsi:type="literals:This"/>
                            </arguments>
                          </next>
                        </next>
                        <self xsi:type="literals:This"/>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                            <self xsi:type="literals:This"/>
                          </child>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="REUtil.class.xmi#//@classifiers.0/@members.3"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.4/@statement/@statements.0/@cases.3/@statements.0/@statement/@statements.0/@variable"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="REUtil.class.xmi#//@classifiers.0"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                          <child xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                            <self xsi:type="literals:This"/>
                          </child>
                          <operator xsi:type="operators:PlusPlus"/>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="REUtil.class.xmi#//@classifiers.0/@members.4"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.4/@statement/@statements.0/@cases.3/@statements.0/@statement/@statements.0/@variable"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="REUtil.class.xmi#//@classifiers.0"/>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="REUtil.class.xmi#//@classifiers.0/@members.5"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="REUtil.class.xmi#//@classifiers.0"/>
                  </children>
                  <children xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                      <self xsi:type="literals:This"/>
                    </children>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                </expression>
              </statements>
            </cases>
            <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return"/>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="124"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="42"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="43"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="63"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="41"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="46"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="91"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="94"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="36"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Break"/>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                <self xsi:type="literals:This"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Break"/>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                    <arguments xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                      <self xsi:type="literals:This"/>
                    </arguments>
                  </next>
                </next>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:CharacterLiteral" value="63"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.next.2"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:PrefixUnaryModificationExpression">
                <child xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                  <self xsi:type="literals:This"/>
                </child>
                <operator xsi:type="operators:PlusPlus"/>
              </children>
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                <self xsi:type="literals:This"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                    <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                      <child xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </child>
                      <operator xsi:type="operators:PlusPlus"/>
                    </arguments>
                  </next>
                </next>
                <self xsi:type="literals:This"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Switch">
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="literals:CharacterLiteral" value="58"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="literals:CharacterLiteral" value="61"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="literals:CharacterLiteral" value="33"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="literals:CharacterLiteral" value="91"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="literals:CharacterLiteral" value="62"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                    <arguments xsi:type="references:StringReference" value="parser.next.2"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                        <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                          <child xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                            <self xsi:type="literals:This"/>
                          </child>
                          <operator xsi:type="operators:PlusPlus"/>
                        </arguments>
                      </next>
                    </next>
                    <self xsi:type="literals:This"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                  <children xsi:type="literals:CharacterLiteral" value="61"/>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                    <children xsi:type="literals:CharacterLiteral" value="33"/>
                  </condition>
                  <elseStatement xsi:type="statements:Throw">
                    <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                      <arguments xsi:type="references:StringReference" value="parser.next.3"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:SelfReference">
                          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                          <self xsi:type="literals:This"/>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                        <additiveOperators xsi:type="operators:Subtraction"/>
                      </arguments>
                    </throwable>
                  </elseStatement>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="literals:CharacterLiteral" value="60"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:WhileLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                            <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                              <child xsi:type="references:SelfReference">
                                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                                <self xsi:type="literals:This"/>
                              </child>
                              <operator xsi:type="operators:PlusPlus"/>
                            </arguments>
                          </next>
                        </next>
                        <self xsi:type="literals:This"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Break"/>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                      <children xsi:type="literals:CharacterLiteral" value="41"/>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                    <arguments xsi:type="references:StringReference" value="parser.next.4"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                  <children xsi:type="literals:CharacterLiteral" value="41"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="literals:CharacterLiteral" value="35"/>
            </cases>
            <cases xsi:type="statements:DefaultSwitchCase">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                      <child xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This">
                          <comments>// Options</comments>
                        </self>
                      </child>
                      <operator xsi:type="operators:MinusMinus"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Break"/>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                    <children xsi:type="literals:CharacterLiteral" value="45"/>
                  </children>
                  <children xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="expressions:RelationExpression">
                      <children xsi:type="literals:CharacterLiteral" value="97"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                      <relationOperators xsi:type="operators:LessThanOrEqual"/>
                    </children>
                    <children xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                      <children xsi:type="literals:CharacterLiteral" value="122"/>
                      <relationOperators xsi:type="operators:LessThanOrEqual"/>
                    </children>
                  </children>
                  <children xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="expressions:RelationExpression">
                      <children xsi:type="literals:CharacterLiteral" value="65"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                      <relationOperators xsi:type="operators:LessThanOrEqual"/>
                    </children>
                    <children xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                      <children xsi:type="literals:CharacterLiteral" value="90"/>
                      <relationOperators xsi:type="operators:LessThanOrEqual"/>
                    </children>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable">
                          <comments>// conditional</comments>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:Break">
                      <comments>// this.offsets points the next of '('.</comments>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
                    <children xsi:type="literals:CharacterLiteral" value="40"/>
                  </condition>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                  <arguments xsi:type="references:StringReference" value="parser.next.2"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                  </arguments>
                </throwable>
              </statements>
            </cases>
            <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="40"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.next.1"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                <self xsi:type="literals:This"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                    <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                      <child xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </child>
                      <operator xsi:type="operators:PlusPlus"/>
                    </arguments>
                  </next>
                </next>
                <self xsi:type="literals:This"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="92"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            </expression>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.2/@variable"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@statements.1/@variable"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="parseRegex">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * regex ::= term (`|` term)*&#xA;     * term ::= factor+&#xA;     * factor ::= ('^' | '$' | '\A' | '\Z' | '\z' | '\b' | '\B' | '\&lt;' | '\>'&#xA;     *            | atom (('*' | '+' | '?' | minmax ) '?'? )?)&#xA;     *            | '(?=' regex ')'  | '(?!' regex ')'  | '(?&amp;lt;=' regex ')'  | '(?&amp;lt;!' regex ')'&#xA;     * atom ::= char | '.' | range | '(' regex ')' | '(?:' regex ')' | '\' [0-9]&#xA;     *          | '\w' | '\W' | '\d' | '\D' | '\s' | '\S' | category-block &#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.50"/>
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="parent">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// '|'</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.71"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.84"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.0/@variable"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.1/@variable"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.1/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.84"/>
                <arguments xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.50"/>
                  <self xsi:type="literals:This"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="parseTerm">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * term ::= factor+&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ch">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.72"/>
              </next>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.0/@variable"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.0/@variable"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.0/@variable"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          </children>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="tok">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.80"/>
                <self xsi:type="literals:This"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="concat">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="literals:NullLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <comments>//tok = Token.createConcat(tok, this.parseFactor());</comments>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.1/@elseStatement/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.70"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.1/@elseStatement/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.84"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.1/@elseStatement/@statements.0/@variable"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.1/@elseStatement/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.1/@elseStatement/@statements.1/@variable"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.1/@elseStatement/@statements.1/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.1/@elseStatement/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.84"/>
                    <arguments xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.80"/>
                      <self xsi:type="literals:This"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                      <self xsi:type="literals:This"/>
                    </value>
                  </expression>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.0/@variable"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.0/@variable"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.1/@elseStatement/@statements.0/@variable"/>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processCaret">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>// ----------------------------------------------------------------</comments>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.32"/>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processDollar">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.34"/>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processLookahead">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.65"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.15"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </arguments>
              <arguments xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49"/>
                <self xsi:type="literals:This"/>
              </arguments>
            </next>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
            <arguments xsi:type="references:StringReference" value="parser.factor.1"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <comments>// ')'</comments>
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processNegativelookahead">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.65"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.16"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </arguments>
              <arguments xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49"/>
                <self xsi:type="literals:This"/>
              </arguments>
            </next>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
            <arguments xsi:type="references:StringReference" value="parser.factor.1"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <comments>// ')'</comments>
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processLookbehind">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.65"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.17"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </arguments>
              <arguments xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49"/>
                <self xsi:type="literals:This"/>
              </arguments>
            </next>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
            <arguments xsi:type="references:StringReference" value="parser.factor.1"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <comments>// ')'</comments>
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processNegativelookbehind">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.65"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.18"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </arguments>
              <arguments xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49"/>
                <self xsi:type="literals:This"/>
              </arguments>
            </next>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
            <arguments xsi:type="references:StringReference" value="parser.factor.1"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <comments>// ')'</comments>
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.56/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_A">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.35"/>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_Z">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.37"/>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_z">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.36"/>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_b">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.38"/>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_B">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.39"/>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_lt">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.40"/>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_gt">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.41"/>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processStar">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tok">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.68"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.64/@parameters.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
        </condition>
        <elseStatement xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.67"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.64/@parameters.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </returnValue>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processPlus">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tok">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This">
            <comments>// X+ -> XX*</comments>
          </self>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.69"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.68"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@parameters.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
        </condition>
        <elseStatement xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.69"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.67"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@parameters.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </returnValue>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processQuestion">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tok">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This">
            <comments>// X? -> X|</comments>
          </self>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="par">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.71"/>
            </next>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.84"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.72"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.84"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.84"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.84"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.72"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="checkQuestion">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="off">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@parameters.0"/>
            <children xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
              <self xsi:type="literals:This"/>
            </children>
            <relationOperators xsi:type="operators:LessThan"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@parameters.0"/>
                </next>
              </next>
              <self xsi:type="literals:This"/>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="63"/>
          </children>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processParen">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="p">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37"/>
              <self xsi:type="literals:This"/>
            </child>
            <operator xsi:type="operators:PlusPlus"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.66"/>
              <arguments xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49"/>
                <self xsi:type="literals:This"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.68/@statements.1/@variable"/>
            </next>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
            <arguments xsi:type="references:StringReference" value="parser.factor.1"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <comments>// Skips ')'</comments>
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.68/@statements.2/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processParen2">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.66"/>
              <arguments xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49"/>
                <self xsi:type="literals:This"/>
              </arguments>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </next>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
            <arguments xsi:type="references:StringReference" value="parser.factor.1"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <comments>// Skips ')'</comments>
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processCondition">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:Condition">
        <comments>// this.offset points the next of '('</comments>
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
            <arguments xsi:type="references:StringReference" value="parser.factor.4"/>
            <arguments xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
              <self xsi:type="literals:This"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
              <self xsi:type="literals:This"/>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </children>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
            <self xsi:type="literals:This"/>
          </children>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="refno">
          <typeReference xsi:type="types:Int">
            <comments>// Parses a condition.</comments>
          </typeReference>
          <initialValue xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Subtraction"/>
            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="condition">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ch">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                <arguments xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                  <self xsi:type="literals:This"/>
                </arguments>
              </next>
            </next>
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.3/@variable"/>
                <children xsi:type="literals:CharacterLiteral" value="48"/>
                <additiveOperators xsi:type="operators:Subtraction"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38"/>
                <self xsi:type="literals:This"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39"/>
                  <self xsi:type="literals:This"/>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </value>
              </expression>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.28"/>
                  <arguments xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences target="//@classifiers.0/@members.25"/>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.1/@variable"/>
                    <arguments xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                      <self xsi:type="literals:This"/>
                    </arguments>
                  </arguments>
                </next>
              </next>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </child>
              <operator xsi:type="operators:PlusPlus"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.factor.1"/>
                <arguments xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                  <self xsi:type="literals:This"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                    <arguments xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                      <self xsi:type="literals:This"/>
                    </arguments>
                  </next>
                </next>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:CharacterLiteral" value="41"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </child>
              <operator xsi:type="operators:PlusPlus"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="literals:CharacterLiteral" value="49"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.3/@variable"/>
            <relationOperators xsi:type="operators:LessThanOrEqual"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.3/@variable"/>
            <children xsi:type="literals:CharacterLiteral" value="57"/>
            <relationOperators xsi:type="operators:LessThanOrEqual"/>
          </children>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                  <self xsi:type="literals:This"/>
                </child>
                <operator xsi:type="operators:MinusMinus"/>
              </expression>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.3/@variable"/>
              <children xsi:type="literals:CharacterLiteral" value="63"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This">
                <comments>// Points '('.</comments>
              </self>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.2/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.80"/>
                <self xsi:type="literals:This"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Switch">
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.15"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.16"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.17"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.18"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                    <arguments xsi:type="references:StringReference" value="parser.factor.1"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.11"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </condition>
            </cases>
            <cases xsi:type="statements:DefaultSwitchCase">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                  <arguments xsi:type="references:StringReference" value="parser.factor.5"/>
                  <arguments xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </arguments>
                </throwable>
              </statements>
            </cases>
            <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.2/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.23"/>
              </next>
            </variable>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This">
            <comments>// Parses yes/no-patterns.</comments>
          </self>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="yesPattern">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49"/>
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="noPattern">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.factor.6"/>
                <arguments xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                  <self xsi:type="literals:This"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.6/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.82"/>
                </next>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.7/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.6/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.83"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.6/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.6/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.83"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.6/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.23"/>
            </next>
          </children>
          <children xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.5"/>
            </next>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
            <arguments xsi:type="references:StringReference" value="parser.factor.1"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.80"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.1/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.2/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.6/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70/@statements.7/@variable"/>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processModifiers">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="add">
          <typeReference xsi:type="types:Int">
            <comments>// this.offset points the next of '?'.</comments>
            <comments>// modifiers ::= [imsw]* ('-' [imsw]*)? ':'</comments>
          </typeReference>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          <additionalLocalVariables name="mask">
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </additionalLocalVariables>
          <additionalLocalVariables name="ch">
            <initialValue xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Subtraction"/>
              <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            </initialValue>
          </additionalLocalVariables>
        </variable>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.0/@variable/@additionalLocalVariables.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                    <arguments xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                      <self xsi:type="literals:This"/>
                    </arguments>
                  </next>
                </next>
                <self xsi:type="literals:This"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="v">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="REUtil.class.xmi#//@classifiers.0/@members.8"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.0/@variable/@additionalLocalVariables.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="REUtil.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Break"/>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.1/@statement/@statements.1/@variable"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.0/@variable">
                <comments>// '-' or ':'?</comments>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentOr"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.1/@statement/@statements.1/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </child>
              <operator xsi:type="operators:PlusPlus"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
            <self xsi:type="literals:This"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
            <arguments xsi:type="references:StringReference" value="parser.factor.2"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
            <self xsi:type="literals:This"/>
          </children>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </child>
              <operator xsi:type="operators:PlusPlus"/>
            </expression>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.0/@variable/@additionalLocalVariables.1"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                        <arguments xsi:type="references:SelfReference">
                          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                          <self xsi:type="literals:This"/>
                        </arguments>
                      </next>
                    </next>
                    <self xsi:type="literals:This"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="v">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="REUtil.class.xmi#//@classifiers.0/@members.8"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.0/@variable/@additionalLocalVariables.1"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="REUtil.class.xmi#//@classifiers.0"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Break"/>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.3/@statement/@statements.1/@statement/@statements.1/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.0/@variable/@additionalLocalVariables.0">
                    <comments>// ':'?</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:AssignmentOr"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.3/@statement/@statements.1/@statement/@statements.1/@variable"/>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </child>
                  <operator xsi:type="operators:PlusPlus"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                <self xsi:type="literals:This"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.factor.2"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                <self xsi:type="literals:This"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.0/@variable/@additionalLocalVariables.1"/>
          <children xsi:type="literals:CharacterLiteral" value="45"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </child>
              <operator xsi:type="operators:PlusPlus"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.79"/>
                  <arguments xsi:type="references:SelfReference">
                    <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49"/>
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.0/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.0/@variable/@additionalLocalVariables.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.factor.1"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.0/@variable/@additionalLocalVariables.1"/>
          <children xsi:type="literals:CharacterLiteral" value="58"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                  <self xsi:type="literals:This">
                    <comments>// such as (?-i)</comments>
                  </self>
                </child>
                <operator xsi:type="operators:PlusPlus"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
                <self xsi:type="literals:This"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.4/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.79"/>
                    <arguments xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49"/>
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.0/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.0/@variable/@additionalLocalVariables.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.0/@variable/@additionalLocalVariables.1"/>
            <children xsi:type="literals:CharacterLiteral" value="41"/>
          </condition>
          <elseStatement xsi:type="statements:Throw">
            <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
              <arguments xsi:type="references:StringReference" value="parser.factor.3"/>
              <arguments xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </arguments>
            </throwable>
          </elseStatement>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@statements.4/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processIndependent">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.65"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.19"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </arguments>
              <arguments xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.49"/>
                <self xsi:type="literals:This"/>
              </arguments>
            </next>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
            <arguments xsi:type="references:StringReference" value="parser.factor.1"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <comments>// Skips ')'</comments>
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_c">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ch2">
          <typeReference xsi:type="types:Int"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Must be in 0x0040-0x005f</comments>
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
            <arguments xsi:type="references:StringReference" value="parser.atom.1"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
              <self xsi:type="literals:This"/>
            </children>
            <children xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
              <self xsi:type="literals:This"/>
            </children>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                          <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                            <child xsi:type="references:SelfReference">
                              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                              <self xsi:type="literals:This"/>
                            </child>
                            <operator xsi:type="operators:PlusPlus"/>
                          </arguments>
                        </next>
                      </next>
                      <self xsi:type="literals:This"/>
                    </value>
                  </expression>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="65504"/>
              </expression>
            </children>
            <children xsi:type="literals:HexIntegerLiteral" hexValue="64"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.75"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73/@statements.0/@variable"/>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="64"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_C">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:Throw">
        <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
          <arguments xsi:type="references:StringReference" value="parser.process.1"/>
          <arguments xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
            <self xsi:type="literals:This"/>
          </arguments>
        </throwable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_i">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.75"/>
              <arguments xsi:type="literals:CharacterLiteral" value="105"/>
            </next>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.75/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_I">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:Throw">
        <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
          <arguments xsi:type="references:StringReference" value="parser.process.1"/>
          <arguments xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
            <self xsi:type="literals:This"/>
          </arguments>
        </throwable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_g">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.114"/>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_X">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.115"/>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBackreference">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="refnum">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
              <self xsi:type="literals:This"/>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="48"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.77"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.0/@variable"/>
            </next>
            <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral" value="true"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </value>
          </expression>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.28"/>
              <arguments xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.25"/>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.0/@variable"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </arguments>
            </next>
          </next>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="parseFactor">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>// ----------------------------------------------------------------</comments>
          <comments>/**&#xA;     * factor ::= ('^' | '$' | '\A' | '\Z' | '\z' | '\b' | '\B' | '\&lt;' | '\>'&#xA;     *            | atom (('*' | '+' | '?' | minmax ) '?'? )?)&#xA;     *            | '(?=' regex ')'  | '(?!' regex ')'  | '(?&amp;lt;=' regex ')'  | '(?&amp;lt;!' regex ')'&#xA;     *            | '(?#' [^)]* ')'&#xA;     * minmax ::= '{' min (',' max?)? '}'&#xA;     * min ::= [0-9]+&#xA;     * max ::= [0-9]+&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ch">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <comments>// through down</comments>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.51"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.52"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.53"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.54"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.55"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.56"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.72"/>
              </next>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Switch">
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.57"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="65"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.58"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="90"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.59"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="122"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.60"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="98"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.61"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="66"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.62"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="60"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.63"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="62"/>
            </cases>
            <variable xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
              <self xsi:type="literals:This"/>
            </variable>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.1/@variable"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.81"/>
            <self xsi:type="literals:This"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.64">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.1/@variable"/>
              </next>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.65">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.1/@variable"/>
              </next>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.66">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.1/@variable"/>
              </next>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="off">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="min">
                  <typeReference xsi:type="types:Int">
                    <comments>// this.offset -> next of '{'</comments>
                  </typeReference>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <additionalLocalVariables name="max">
                    <initialValue xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Subtraction"/>
                      <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    </initialValue>
                  </additionalLocalVariables>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                        <children xsi:type="literals:CharacterLiteral" value="48"/>
                        <additiveOperators xsi:type="operators:Subtraction"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:WhileLoop">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="expressions:MultiplicativeExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable"/>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
                              <multiplicativeOperators xsi:type="operators:Multiplication"/>
                            </children>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                            <children xsi:type="literals:CharacterLiteral" value="48"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Subtraction"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Throw">
                          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                            <arguments xsi:type="references:StringReference" value="parser.quantifier.5"/>
                            <arguments xsi:type="references:SelfReference">
                              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                              <self xsi:type="literals:This"/>
                            </arguments>
                          </throwable>
                        </statement>
                        <condition xsi:type="expressions:RelationExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          <relationOperators xsi:type="operators:LessThan"/>
                        </condition>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:ConditionalAndExpression">
                      <children xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.0/@variable"/>
                        <children xsi:type="references:SelfReference">
                          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                          <self xsi:type="literals:This"/>
                        </children>
                        <relationOperators xsi:type="operators:LessThan"/>
                      </children>
                      <children xsi:type="expressions:RelationExpression">
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:SelfReference">
                              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                                  <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.0/@variable"/>
                                    <operator xsi:type="operators:PlusPlus"/>
                                  </arguments>
                                </next>
                              </next>
                              <self xsi:type="literals:This"/>
                            </value>
                          </expression>
                        </children>
                        <children xsi:type="literals:CharacterLiteral" value="48"/>
                        <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                      </children>
                      <children xsi:type="expressions:RelationExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                        <children xsi:type="literals:CharacterLiteral" value="57"/>
                        <relationOperators xsi:type="operators:LessThanOrEqual"/>
                      </children>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:RelationExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:SelfReference">
                          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                              <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.0/@variable"/>
                                <operator xsi:type="operators:PlusPlus"/>
                              </arguments>
                            </next>
                          </next>
                          <self xsi:type="literals:This"/>
                        </value>
                      </expression>
                    </children>
                    <children xsi:type="literals:CharacterLiteral" value="48"/>
                    <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                  </children>
                  <children xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                    <children xsi:type="literals:CharacterLiteral" value="57"/>
                    <relationOperators xsi:type="operators:LessThanOrEqual"/>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:Throw">
                    <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                      <arguments xsi:type="references:StringReference" value="parser.quantifier.1"/>
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                    </throwable>
                  </statements>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable/@additionalLocalVariables.0"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Throw">
                        <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                          <arguments xsi:type="references:StringReference" value="parser.quantifier.3"/>
                          <arguments xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                            <self xsi:type="literals:This"/>
                          </arguments>
                        </throwable>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.0/@variable"/>
                      <children xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                        <self xsi:type="literals:This"/>
                      </children>
                      <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                    </condition>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable/@additionalLocalVariables.0"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                              <children xsi:type="literals:CharacterLiteral" value="48"/>
                              <additiveOperators xsi:type="operators:Subtraction"/>
                            </value>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:WhileLoop">
                          <comments>// {min,max}</comments>
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable/@additionalLocalVariables.0"/>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="expressions:MultiplicativeExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable/@additionalLocalVariables.0"/>
                                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
                                    <multiplicativeOperators xsi:type="operators:Multiplication"/>
                                  </children>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                                  <children xsi:type="literals:CharacterLiteral" value="48"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                  <additiveOperators xsi:type="operators:Subtraction"/>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Throw">
                                <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                                  <arguments xsi:type="references:StringReference" value="parser.quantifier.5"/>
                                  <arguments xsi:type="references:SelfReference">
                                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                                    <self xsi:type="literals:This"/>
                                  </arguments>
                                </throwable>
                              </statement>
                              <condition xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable/@additionalLocalVariables.0"/>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                <relationOperators xsi:type="operators:LessThan"/>
                              </condition>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:ConditionalAndExpression">
                            <children xsi:type="expressions:RelationExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.0/@variable"/>
                              <children xsi:type="references:SelfReference">
                                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                                <self xsi:type="literals:This"/>
                              </children>
                              <relationOperators xsi:type="operators:LessThan"/>
                            </children>
                            <children xsi:type="expressions:RelationExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AssignmentExpression">
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                                  <assignmentOperator xsi:type="operators:Assignment"/>
                                  <value xsi:type="references:SelfReference">
                                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                                        <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.0/@variable"/>
                                          <operator xsi:type="operators:PlusPlus"/>
                                        </arguments>
                                      </next>
                                    </next>
                                    <self xsi:type="literals:This"/>
                                  </value>
                                </expression>
                              </children>
                              <children xsi:type="literals:CharacterLiteral" value="48"/>
                              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                            </children>
                            <children xsi:type="expressions:RelationExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                              <children xsi:type="literals:CharacterLiteral" value="57"/>
                              <relationOperators xsi:type="operators:LessThanOrEqual"/>
                            </children>
                          </condition>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Throw">
                            <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                              <arguments xsi:type="references:StringReference" value="parser.quantifier.4"/>
                              <arguments xsi:type="references:SelfReference">
                                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                                <self xsi:type="literals:This"/>
                              </arguments>
                            </throwable>
                          </statement>
                          <condition xsi:type="expressions:RelationExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable/@additionalLocalVariables.0"/>
                            <relationOperators xsi:type="operators:GreaterThan"/>
                          </condition>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:ConditionalAndExpression">
                        <children xsi:type="expressions:RelationExpression">
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="references:SelfReference">
                                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                                    <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.0/@variable"/>
                                      <operator xsi:type="operators:PlusPlus"/>
                                    </arguments>
                                  </next>
                                </next>
                                <self xsi:type="literals:This"/>
                              </value>
                            </expression>
                          </children>
                          <children xsi:type="literals:CharacterLiteral" value="48"/>
                          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                        </children>
                        <children xsi:type="expressions:RelationExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                          <children xsi:type="literals:CharacterLiteral" value="57"/>
                          <relationOperators xsi:type="operators:LessThanOrEqual"/>
                        </children>
                      </condition>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable/@additionalLocalVariables.0">
                              <comments>// assume {min,}</comments>
                            </child>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:UnaryExpression">
                              <operators xsi:type="operators:Subtraction"/>
                              <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            </value>
                          </expression>
                        </statements>
                      </elseStatement>
                    </elseStatement>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                  <children xsi:type="literals:CharacterLiteral" value="44"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                    <arguments xsi:type="references:StringReference" value="parser.quantifier.2"/>
                    <arguments xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                      <self xsi:type="literals:This"/>
                    </arguments>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
                  <children xsi:type="literals:CharacterLiteral" value="125"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.1/@variable">
                        <comments>// off -> next of '}'</comments>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.68"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.1/@variable"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.0/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.67">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.0/@variable"/>
                  </next>
                  <self xsi:type="literals:This"/>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.67"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.1/@variable"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.0/@variable"/>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.92"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.93"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.5/@cases.3/@statements.0/@statement/@statements.1/@variable/@additionalLocalVariables.0"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
                  <self xsi:type="literals:This">
                    <comments>//System.err.println(&quot;CLOSURE: &quot;+min+&quot;, &quot;+max);</comments>
                  </self>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="literals:CharacterLiteral" value="123"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                  <self xsi:type="literals:This"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
            </condition>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@variable"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="parseAtom">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * atom ::= char | '.' | char-class | '(' regex ')' | '(?:' regex ')' | '\' [0-9]&#xA;     *          | '\w' | '\W' | '\d' | '\D' | '\s' | '\S' | category-block&#xA;     *          | '(?>' regex ')'&#xA;     * char ::= '\\' | '\' [efnrt] | bmp-code | character-1&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ch">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.68"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.69"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <comments>// '(?:'</comments>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.70"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <comments>// '(?('</comments>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.71"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <comments>// (?modifiers ... )</comments>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.72"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.1/@variable">
                <comments>// Skips '.'</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.24"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <comments>/**&#xA;             * char-class ::= '[' ( '^'? range ','?)+ ']'&#xA;             * range ::= '\d' | '\w' | '\s' | category-block | range-char&#xA;             *           | range-char '-' range-char&#xA;             * range-char ::= '\[' | '\]' | '\\' | '\' [,-efnrtv] | bmp-code | character-2&#xA;             * bmp-char ::= '\' 'u' [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F]&#xA;             */</comments>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.84">
                <arguments xsi:type="literals:BooleanLiteral" value="true"/>
              </next>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.85"/>
              <self xsi:type="literals:This"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Switch">
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="100"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="68"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="119"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="87"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="115"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:SelfReference">
                    <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.86">
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                    </next>
                    <self xsi:type="literals:This"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
                  <self xsi:type="literals:This"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.1/@variable"/>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="83"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="101"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="102"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="110"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="114"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="116"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="117"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="118"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="ch2">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.87"/>
                      <self xsi:type="literals:This"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.1/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.75"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.2/@cases.8/@statements.0/@cases.13/@statements.0/@statements.0/@variable"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.2/@cases.8/@statements.0/@cases.13/@statements.0/@statements.0/@variable"/>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="65536"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.1/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.78"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="REUtil.class.xmi#//@classifiers.0/@members.6"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.2/@cases.8/@statements.0/@cases.13/@statements.0/@statements.0/@variable"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="REUtil.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                        </value>
                      </expression>
                    </statements>
                  </elseStatement>
                </statements>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="literals:CharacterLiteral" value="120"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.73"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="99"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.74"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="67"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.75"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="105"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.76"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="73"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.77"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="103"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.78"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="88"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="49"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="50"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="51"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="52"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="53"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="54"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="55"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="56"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.79"/>
                  <self xsi:type="literals:This"/>
                </returnValue>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="57"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="literals:CharacterLiteral" value="80"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="pstart">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.82">
                    <arguments xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                      <self xsi:type="literals:This"/>
                    </arguments>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="references:SelfReference">
                    <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                      <arguments xsi:type="references:StringReference" value="parser.atom.5"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.2/@cases.8/@statements.0/@cases.30/@statements.0/@variable"/>
                    </next>
                    <self xsi:type="literals:This"/>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.1/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="literals:CharacterLiteral" value="112"/>
            </cases>
            <cases xsi:type="statements:DefaultSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.75"/>
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                    </next>
                    <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                  </value>
                </expression>
              </statements>
            </cases>
            <variable xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
              <self xsi:type="literals:This"/>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                  <arguments xsi:type="references:StringReference" value="parser.atom.4"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                  </arguments>
                </next>
                <self xsi:type="literals:This"/>
              </throwable>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="literals:CharacterLiteral" value="93"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="literals:CharacterLiteral" value="123"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="literals:CharacterLiteral" value="125"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.75"/>
                  <arguments xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                    <self xsi:type="literals:This"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="high">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                <self xsi:type="literals:This"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="sur">
                  <typeReference xsi:type="types:Char"/>
                  <arrayDimensionsBefore/>
                  <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                    <typeReference xsi:type="types:Char"/>
                    <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.2/@cases.9/@statements.4/@statement/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Char"/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.2/@cases.9/@statements.2/@variable"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.2/@cases.9/@statements.4/@statement/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Char"/>
                    <child xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                      <self xsi:type="literals:This"/>
                    </child>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.66"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.78"/>
                          <arguments xsi:type="instantiations:NewConstructorCall">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.2/@cases.9/@statements.4/@statement/@statements.0/@variable"/>
                          </arguments>
                        </next>
                        <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                      </arguments>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
                  <self xsi:type="literals:This"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="REUtil.class.xmi#//@classifiers.0/@members.5"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.2/@cases.9/@statements.2/@variable"/>
                </next>
                <target xsi:type="classifiers:Class" href="REUtil.class.xmi#//@classifiers.0"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="REUtil.class.xmi#//@classifiers.0/@members.4"/>
                  <arguments xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                    <self xsi:type="literals:This"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="REUtil.class.xmi#//@classifiers.0"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.atom.4"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </next>
              <self xsi:type="literals:This"/>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.0/@variable"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processBacksolidus_pP">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="RangeToken.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
              <arguments xsi:type="references:StringReference" value="parser.atom.2"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                <additiveOperators xsi:type="operators:Subtraction"/>
              </arguments>
            </next>
            <self xsi:type="literals:This"/>
          </throwable>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
              <self xsi:type="literals:This"/>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
              <self xsi:type="literals:This"/>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="123"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="positive">
          <typeReference xsi:type="types:Boolean">
            <comments>// handle category escape</comments>
          </typeReference>
          <initialValue xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@parameters.0"/>
            <children xsi:type="literals:CharacterLiteral" value="112"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="namestart">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="nameend">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.46"/>
                <arguments xsi:type="literals:CharacterLiteral" value="125"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.3/@variable"/>
              </next>
            </next>
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
              <arguments xsi:type="references:StringReference" value="parser.atom.3"/>
              <arguments xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </arguments>
            </next>
            <self xsi:type="literals:This"/>
          </throwable>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.4/@variable"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pname">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.56"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.3/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.4/@variable"/>
              </next>
            </next>
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.4/@variable"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.110"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.6/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82/@statements.2/@variable"/>
            <arguments xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="RegularExpression.class.xmi#//@classifiers.0/@members.23"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="RegularExpression.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <self xsi:type="literals:This"/>
            </arguments>
          </next>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processCIinCharacterClass">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tok">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="RangeToken.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.87"/>
          <self xsi:type="literals:This"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="parseCharacterClass">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="RangeToken.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="useNrange">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * char-class ::= '[' ( '^'? range ','?)+ ']'&#xA;     * range ::= '\d' | '\w' | '\s' | category-block | range-char&#xA;     *           | range-char '-' range-char&#xA;     * range-char ::= '\[' | '\]' | '\\' | '\' [,-efnrtv] | bmp-code | character-2&#xA;     * bmp-code ::= '\' 'u' [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F]&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.46">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34"/>
          </next>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="nrange">
          <typeReference xsi:type="types:Boolean">
            <comments>// '['</comments>
          </typeReference>
          <initialValue xsi:type="literals:BooleanLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="base">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="RangeToken.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="RangeToken.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.2/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// '^'</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.74"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@parameters.0"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.73"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.8"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.22"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.73"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
              <self xsi:type="literals:This"/>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
              <self xsi:type="literals:This"/>
            </children>
            <children xsi:type="literals:CharacterLiteral" value="94"/>
          </children>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.73"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="type">
          <typeReference xsi:type="types:Int"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="firstloop">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
        </variable>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Break"/>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.6/@variable"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="literals:CharacterLiteral" value="93"/>
              </children>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.7/@variable"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.7/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="c">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                <self xsi:type="literals:This"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="end">
              <typeReference xsi:type="types:Boolean"/>
              <initialValue xsi:type="literals:BooleanLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// backsolidus</comments>
            <comments>// POSIX Character class such as [:alnum:]</comments>
            <statement xsi:type="statements:Block">
              <comments>// \ + c</comments>
              <statements xsi:type="statements:Switch">
                <cases xsi:type="statements:NormalSwitchCase">
                  <condition xsi:type="literals:CharacterLiteral" value="100"/>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <condition xsi:type="literals:CharacterLiteral" value="68"/>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <condition xsi:type="literals:CharacterLiteral" value="119"/>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <condition xsi:type="literals:CharacterLiteral" value="87"/>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <condition xsi:type="literals:CharacterLiteral" value="115"/>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.15"/>
                        <arguments xsi:type="references:SelfReference">
                          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.86">
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.2/@variable"/>
                          </next>
                          <self xsi:type="literals:This"/>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.3/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral" value="true"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Break"/>
                  <condition xsi:type="literals:CharacterLiteral" value="83"/>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <condition xsi:type="literals:CharacterLiteral" value="105"/>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <condition xsi:type="literals:CharacterLiteral" value="73"/>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <condition xsi:type="literals:CharacterLiteral" value="99"/>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.2/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:SelfReference">
                        <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.83">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.2/@variable"/>
                        </next>
                        <self xsi:type="literals:This"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.3/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="literals:BooleanLiteral" value="true"/>
                      </expression>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.2/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      <relationOperators xsi:type="operators:LessThan"/>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:Break"/>
                  <condition xsi:type="literals:CharacterLiteral" value="67"/>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <condition xsi:type="literals:CharacterLiteral" value="112"/>
                </cases>
                <cases xsi:type="statements:NormalSwitchCase">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="pstart">
                      <typeReference xsi:type="types:Int"/>
                      <initialValue xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="tok2">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="RangeToken.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <initialValue xsi:type="references:SelfReference">
                        <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.82">
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.2/@variable"/>
                        </next>
                        <self xsi:type="literals:This"/>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Throw">
                      <throwable xsi:type="references:SelfReference">
                        <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                          <arguments xsi:type="references:StringReference" value="parser.atom.5"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@statement/@statements.0/@cases.11/@statements.0/@variable"/>
                        </next>
                        <self xsi:type="literals:This"/>
                      </throwable>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@statement/@statements.0/@cases.11/@statements.1/@variable"/>
                      <children xsi:type="literals:NullLiteral"/>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.15"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@statement/@statements.0/@cases.11/@statements.1/@variable"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.3/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral" value="true"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Break"/>
                  <condition xsi:type="literals:CharacterLiteral" value="80"/>
                </cases>
                <cases xsi:type="statements:DefaultSwitchCase">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.2/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:SelfReference">
                        <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.87"/>
                        <self xsi:type="literals:This"/>
                      </value>
                    </expression>
                  </statements>
                </cases>
                <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.2/@variable"/>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.6/@variable"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="nameend">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.46"/>
                          <arguments xsi:type="literals:CharacterLiteral" value="58"/>
                          <arguments xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                            <self xsi:type="literals:This"/>
                          </arguments>
                        </next>
                      </next>
                      <self xsi:type="literals:This"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Throw">
                    <throwable xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                        <arguments xsi:type="references:StringReference" value="parser.cc.1"/>
                        <arguments xsi:type="references:SelfReference">
                          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                          <self xsi:type="literals:This"/>
                        </arguments>
                      </next>
                      <self xsi:type="literals:This"/>
                    </throwable>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@elseStatement/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="positive">
                    <typeReference xsi:type="types:Boolean"/>
                    <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:SelfReference">
                          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                          <self xsi:type="literals:This"/>
                        </child>
                        <operator xsi:type="operators:PlusPlus"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@elseStatement/@statement/@statements.2/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="literals:BooleanLiteral"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                          <arguments xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                            <self xsi:type="literals:This"/>
                          </arguments>
                        </next>
                      </next>
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="literals:CharacterLiteral" value="94"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="name">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.56"/>
                          <arguments xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                            <self xsi:type="literals:This"/>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@elseStatement/@statement/@statements.0/@variable"/>
                        </next>
                      </next>
                      <self xsi:type="literals:This"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="range">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="RangeToken.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.110"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@elseStatement/@statement/@statements.4/@variable"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@elseStatement/@statement/@statements.2/@variable"/>
                        <arguments xsi:type="references:SelfReference">
                          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="RegularExpression.class.xmi#//@classifiers.0/@members.23"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="RegularExpression.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                          <self xsi:type="literals:This"/>
                        </arguments>
                      </next>
                      <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Throw">
                    <throwable xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                        <arguments xsi:type="references:StringReference" value="parser.cc.3"/>
                        <arguments xsi:type="references:SelfReference">
                          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                          <self xsi:type="literals:This"/>
                        </arguments>
                      </next>
                      <self xsi:type="literals:This"/>
                    </throwable>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@elseStatement/@statement/@statements.5/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.15"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@elseStatement/@statement/@statements.5/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.3/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:BooleanLiteral" value="true"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Throw">
                    <throwable xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                        <arguments xsi:type="references:StringReference" value="parser.cc.1"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@elseStatement/@statement/@statements.0/@variable"/>
                      </next>
                      <self xsi:type="literals:This"/>
                    </throwable>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="expressions:RelationExpression">
                      <children xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@elseStatement/@statement/@statements.0/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </children>
                      <children xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                        <self xsi:type="literals:This"/>
                      </children>
                      <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
                    </children>
                    <children xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                            <arguments xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@elseStatement/@statement/@statements.0/@variable"/>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                            </arguments>
                          </next>
                        </next>
                        <self xsi:type="literals:This"/>
                      </children>
                      <children xsi:type="literals:CharacterLiteral" value="93"/>
                    </children>
                  </condition>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                      <self xsi:type="literals:This"/>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.4/@elseStatement/@statement/@statements.0/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.6/@variable"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
              </condition>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <comments>// if not shorthands...</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable">
                      <comments>// Here is no '-'.</comments>
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.8"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.2/@variable"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.2/@variable"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                  </children>
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="literals:CharacterLiteral" value="45"/>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
                      <self xsi:type="literals:This"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <comments>// Skips '-'</comments>
                    <statement xsi:type="statements:Throw">
                      <throwable xsi:type="references:SelfReference">
                        <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                          <arguments xsi:type="references:StringReference" value="parser.cc.2"/>
                          <arguments xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                            <self xsi:type="literals:This"/>
                          </arguments>
                        </next>
                        <self xsi:type="literals:This"/>
                      </throwable>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.6/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:SelfReference">
                            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                            <self xsi:type="literals:This"/>
                          </value>
                        </expression>
                      </children>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.8"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.2/@variable"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.2/@variable"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.8"/>
                            <arguments xsi:type="literals:CharacterLiteral" value="45"/>
                            <arguments xsi:type="literals:CharacterLiteral" value="45"/>
                          </next>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:ConditionalAndExpression">
                      <children xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.6/@variable"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                      </children>
                      <children xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:SelfReference">
                          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                          <self xsi:type="literals:This"/>
                        </children>
                        <children xsi:type="literals:CharacterLiteral" value="93"/>
                      </children>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="rangeend">
                          <typeReference xsi:type="types:Int"/>
                          <initialValue xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                            <self xsi:type="literals:This"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.6/@statement/@statements.0/@elseStatement/@statements.2/@elseStatement/@statements.0/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:SelfReference">
                              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.87"/>
                              <self xsi:type="literals:This"/>
                            </value>
                          </expression>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.6/@variable"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                        </condition>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:SelfReference">
                          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
                          <self xsi:type="literals:This"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.8"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.2/@variable"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.6/@statement/@statements.0/@elseStatement/@statements.2/@elseStatement/@statements.0/@variable"/>
                          </next>
                        </expression>
                      </statements>
                    </elseStatement>
                  </statements>
                </elseStatement>
              </statements>
            </statement>
            <condition xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.8/@statement/@statements.3/@variable"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
                <self xsi:type="literals:This"/>
              </expression>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="RegularExpression.class.xmi#//@classifiers.0/@members.24"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="RegularExpression.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="literals:CharacterLiteral" value="44"/>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.6/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                <self xsi:type="literals:This"/>
              </value>
            </expression>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
              <arguments xsi:type="references:StringReference" value="parser.cc.2"/>
              <arguments xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </arguments>
            </next>
            <self xsi:type="literals:This"/>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.16"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@parameters.0"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.2/@variable"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.13"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.14"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.46">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
          </next>
          <self xsi:type="literals:This">
            <comments>//tok.dumpRanges();</comments>
            <comments>/*&#xA;        if (this.isSet(RegularExpression.IGNORE_CASE))&#xA;            tok = RangeToken.createCaseInsensitiveToken(tok);&#xA;        */</comments>
          </self>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <comments>// Skips ']'</comments>
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="parseSetOperations">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="RangeToken.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * '(?[' ... ']' (('-' | '+' | '&amp;') '[' ... ']')? ')'&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="RangeToken.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.84">
              <arguments xsi:type="literals:BooleanLiteral"/>
            </next>
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="type">
          <typeReference xsi:type="types:Int"/>
        </variable>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="ch">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                <self xsi:type="literals:This"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
                  <self xsi:type="literals:This"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                    <arguments xsi:type="references:StringReference" value="parser.ope.1"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                </condition>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="t2">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="RangeToken.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:SelfReference">
                    <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.84">
                      <arguments xsi:type="literals:BooleanLiteral"/>
                    </next>
                    <self xsi:type="literals:This"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.15"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.2/@statement/@statements.1/@statement/@statements.2/@variable"/>
                    </next>
                  </expression>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.1/@variable"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.2/@statement/@statements.1/@statement/@statements.2/@variable"/>
                      </next>
                    </expression>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.2/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:CharacterLiteral" value="45"/>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="RangeToken.class.xmi#//@classifiers.0/@members.17"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.2/@statement/@statements.1/@statement/@statements.2/@variable"/>
                        </next>
                      </expression>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.2/@statement/@statements.0/@variable"/>
                      <children xsi:type="literals:CharacterLiteral" value="38"/>
                    </condition>
                    <elseStatement xsi:type="statements:Throw">
                      <throwable xsi:type="instantiations:NewConstructorCall">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/RuntimeException.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arguments xsi:type="references:StringReference" value="ASSERT"/>
                      </throwable>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.1/@variable"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.2/@statement/@statements.0/@variable"/>
                      <children xsi:type="literals:CharacterLiteral" value="45"/>
                    </children>
                    <children xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.2/@statement/@statements.0/@variable"/>
                      <children xsi:type="literals:CharacterLiteral" value="38"/>
                    </children>
                  </expression>
                </children>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.1/@variable"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                  <arguments xsi:type="references:StringReference" value="parser.ope.2"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                  </arguments>
                </throwable>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                <self xsi:type="literals:This"/>
              </value>
            </expression>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getTokenForShorthand">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ch">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tok">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:ConditionalExpression">
                <child xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="RegularExpression.class.xmi#//@classifiers.0/@members.19"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="RegularExpression.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                  <self xsi:type="literals:This"/>
                </child>
                <expressionIf xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.109"/>
                    <arguments xsi:type="references:StringReference" value="Nd"/>
                    <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </expressionIf>
                <expressionElse xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.25"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </expressionElse>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="100"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:ConditionalExpression">
                <child xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="RegularExpression.class.xmi#//@classifiers.0/@members.19"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="RegularExpression.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                  <self xsi:type="literals:This"/>
                </child>
                <expressionIf xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.109"/>
                    <arguments xsi:type="references:StringReference" value="Nd"/>
                    <arguments xsi:type="literals:BooleanLiteral"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </expressionIf>
                <expressionElse xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.27"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </expressionElse>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="68"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:ConditionalExpression">
                <child xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="RegularExpression.class.xmi#//@classifiers.0/@members.19"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="RegularExpression.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                  <self xsi:type="literals:This"/>
                </child>
                <expressionIf xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.109"/>
                    <arguments xsi:type="references:StringReference" value="IsWord"/>
                    <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </expressionIf>
                <expressionElse xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.26"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </expressionElse>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="119"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:ConditionalExpression">
                <child xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="RegularExpression.class.xmi#//@classifiers.0/@members.19"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="RegularExpression.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                  <self xsi:type="literals:This"/>
                </child>
                <expressionIf xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.109"/>
                    <arguments xsi:type="references:StringReference" value="IsWord"/>
                    <arguments xsi:type="literals:BooleanLiteral"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </expressionIf>
                <expressionElse xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.28"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </expressionElse>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="87"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:ConditionalExpression">
                <child xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="RegularExpression.class.xmi#//@classifiers.0/@members.19"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="RegularExpression.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                  <self xsi:type="literals:This"/>
                </child>
                <expressionIf xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.109"/>
                    <arguments xsi:type="references:StringReference" value="IsSpace"/>
                    <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </expressionIf>
                <expressionElse xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.29"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </expressionElse>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="115"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:ConditionalExpression">
                <child xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="RegularExpression.class.xmi#//@classifiers.0/@members.19"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="RegularExpression.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                  <self xsi:type="literals:This"/>
                </child>
                <expressionIf xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Token.class.xmi#//@classifiers.0/@members.109"/>
                    <arguments xsi:type="references:StringReference" value="IsSpace"/>
                    <arguments xsi:type="literals:BooleanLiteral"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </expressionIf>
                <expressionElse xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.30"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                </expressionElse>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="83"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/RuntimeException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="Internal Error: shorthands: \u"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/Integer.class.xmi#//@classifiers.0/@members.10"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@parameters.0"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@parameters.0"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="decodeEscaped">
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;     */</comments>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="ParseException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
            <arguments xsi:type="references:StringReference" value="parser.next.1"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <additiveOperators xsi:type="operators:Subtraction"/>
            </arguments>
          </throwable>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <self xsi:type="literals:This"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="c">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:HexIntegerLiteral" hexValue="27"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="101"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <comments>// ESCAPE U+001B</comments>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:CharacterLiteral" value="12"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="102"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <comments>// FORM FEED U+000C</comments>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:CharacterLiteral" value="10"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="110"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <comments>// LINE FEED U+000A</comments>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:CharacterLiteral" value="13"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="114"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <comments>// CRRIAGE RETURN U+000D</comments>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:CharacterLiteral" value="9"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="116"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <comments>// HORIZONTAL TABULATION U+0009</comments>
          <comments>//case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B</comments>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="v1">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="uv">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </variable>
              </statements>
              <statements xsi:type="statements:DoWhileLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
                      <self xsi:type="literals:This"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Throw">
                      <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                        <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                            <self xsi:type="literals:This"/>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <additiveOperators xsi:type="operators:Subtraction"/>
                        </arguments>
                      </throwable>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:SelfReference">
                        <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                        <self xsi:type="literals:This"/>
                      </children>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Break"/>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@statement/@statements.0/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.88">
                            <arguments xsi:type="references:SelfReference">
                              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                              <self xsi:type="literals:This"/>
                            </arguments>
                          </value>
                        </expression>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      <relationOperators xsi:type="operators:LessThan"/>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Throw">
                      <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                        <arguments xsi:type="references:StringReference" value="parser.descape.2"/>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                            <self xsi:type="literals:This"/>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <additiveOperators xsi:type="operators:Subtraction"/>
                        </arguments>
                      </throwable>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@statement/@statements.1/@variable"/>
                      <children xsi:type="expressions:MultiplicativeExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@statement/@statements.1/@variable"/>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                        <multiplicativeOperators xsi:type="operators:Multiplication"/>
                      </children>
                      <relationOperators xsi:type="operators:GreaterThan"/>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@statement/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="expressions:MultiplicativeExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@statement/@statements.1/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                          <multiplicativeOperators xsi:type="operators:Multiplication"/>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@statement/@statements.0/@variable"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="literals:BooleanLiteral" value="true"/>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                    <arguments xsi:type="references:StringReference" value="parser.descape.3"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:CharacterLiteral" value="125"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                    <arguments xsi:type="references:StringReference" value="parser.descape.4"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@statement/@statements.1/@variable"/>
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.22"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
                  </children>
                  <relationOperators xsi:type="operators:GreaterThan"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@statement/@statements.1/@variable"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:SelfReference">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                <self xsi:type="literals:This"/>
              </children>
              <children xsi:type="literals:CharacterLiteral" value="123"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="v1">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                    <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                  </children>
                  <children xsi:type="expressions:RelationExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@elseStatement/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.88">
                          <arguments xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                            <self xsi:type="literals:This"/>
                          </arguments>
                        </value>
                      </expression>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="uv">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@elseStatement/@statements.0/@variable"/>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
                  <self xsi:type="literals:This"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                    <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                        <self xsi:type="literals:This"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </arguments>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                  </children>
                  <children xsi:type="expressions:RelationExpression">
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@elseStatement/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.88">
                          <arguments xsi:type="references:SelfReference">
                            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                            <self xsi:type="literals:This"/>
                          </arguments>
                        </value>
                      </expression>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@elseStatement/@statements.2/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="expressions:MultiplicativeExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@elseStatement/@statements.2/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                      <multiplicativeOperators xsi:type="operators:Multiplication"/>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@elseStatement/@statements.0/@variable"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.5/@statements.2/@elseStatement/@statements.2/@variable"/>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="120"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="v1">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.88">
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                    </value>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="uv">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.88">
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                    </value>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.88">
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                    </value>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.88">
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                    </value>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="117"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.88">
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                    </value>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.88">
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                    </value>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.88">
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                    </value>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.88">
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                    </value>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.88">
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                    </value>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:SelfReference">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.48"/>
              <self xsi:type="literals:This"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.descape.1"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.88">
                      <arguments xsi:type="references:SelfReference">
                        <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                        <self xsi:type="literals:This"/>
                      </arguments>
                    </value>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="expressions:MultiplicativeExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                  <multiplicativeOperators xsi:type="operators:Multiplication"/>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.0/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:StringReference" value="parser.descappe.4"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:SelfReference">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </throwable>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Token.class.xmi#//@classifiers.0/@members.22"/>
                </next>
                <target xsi:type="classifiers:Class" href="Token.class.xmi#//@classifiers.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.2/@cases.6/@statements.3/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="118"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="literals:CharacterLiteral" value="65"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="literals:CharacterLiteral" value="90"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
              <arguments xsi:type="references:StringReference" value="parser.descape.5"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:SelfReference">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                  <self xsi:type="literals:This"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                <additiveOperators xsi:type="operators:Subtraction"/>
              </arguments>
            </throwable>
          </statements>
          <condition xsi:type="literals:CharacterLiteral" value="122"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase"/>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.1/@variable"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="hexChar">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ch">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Subtraction"/>
            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </returnValue>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.88/@parameters.0"/>
          <children xsi:type="literals:CharacterLiteral" value="48"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Subtraction"/>
            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </returnValue>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.88/@parameters.0"/>
          <children xsi:type="literals:CharacterLiteral" value="102"/>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.88/@parameters.0"/>
            <children xsi:type="literals:CharacterLiteral" value="48"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </returnValue>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.88/@parameters.0"/>
          <children xsi:type="literals:CharacterLiteral" value="57"/>
          <relationOperators xsi:type="operators:LessThanOrEqual"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Subtraction"/>
            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </returnValue>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.88/@parameters.0"/>
          <children xsi:type="literals:CharacterLiteral" value="65"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.88/@parameters.0"/>
            <children xsi:type="literals:CharacterLiteral" value="65"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </returnValue>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.88/@parameters.0"/>
          <children xsi:type="literals:CharacterLiteral" value="70"/>
          <relationOperators xsi:type="operators:LessThanOrEqual"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Subtraction"/>
            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </returnValue>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.88/@parameters.0"/>
          <children xsi:type="literals:CharacterLiteral" value="97"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:AdditiveExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.88/@parameters.0"/>
          <children xsi:type="literals:CharacterLiteral" value="97"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
          <additiveOperators xsi:type="operators:Subtraction"/>
          <additiveOperators xsi:type="operators:Addition"/>
        </returnValue>
      </statements>
    </members>
  </classifiers>
</containers:CompilationUnit>
