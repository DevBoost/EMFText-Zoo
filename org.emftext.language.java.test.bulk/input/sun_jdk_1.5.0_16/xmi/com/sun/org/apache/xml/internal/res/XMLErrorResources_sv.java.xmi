<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../../java.ecore#/5 http://www.emftext.org/java/literals ../../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../../java.ecore#/12 http://www.emftext.org/java/references ../../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../../java.ecore#/16" name="XMLErrorResources_sv.java">
  <comments>/*&#xA; * Copyright 1999-2004 The Apache Software Foundation.&#xA; *&#xA; * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#xA; * you may not use this file except in compliance with the License.&#xA; * You may obtain a copy of the License at&#xA; *&#xA; *     http://www.apache.org/licenses/LICENSE-2.0&#xA; *&#xA; * Unless required by applicable law or agreed to in writing, software&#xA; * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xA; * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; * See the License for the specific language governing permissions and&#xA; * limitations under the License.&#xA; */</comments>
  <comments>/*&#xA; * $Id: XMLErrorResources_sv.java,v 1.3 2004/02/17 04:14:26 minchau Exp $&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>xml</namespaces>
  <namespaces>internal</namespaces>
  <namespaces>res</namespaces>
  <classifiers xsi:type="classifiers:Class" name="XMLErrorResources_sv">
    <members xsi:type="members:Field" name="MAX_CODE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="61"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Maximum error messages, this is needed to keep track of the number of messages.    */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MAX_WARNING">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Maximum warnings, this is needed to keep track of the number of warnings.          */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MAX_OTHERS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Maximum misc strings.   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MAX_MESSAGES">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <additiveOperators xsi:type="operators:Addition"/>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Maximum total warnings and error messages.          */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="contents">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Error message ID that has a null message, but takes in a single object.    */</comments>
              <initialValues xsi:type="references:StringReference" value="ER0000"/>
              <initialValues xsi:type="references:StringReference" value="{0}"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** ER_FUNCTION_NOT_SUPPORTED          */</comments>
              <comments>//public static final int ER_FUNCTION_NOT_SUPPORTED = 80;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.4"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Funktion inte underst\u00f6dd:"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Can't overwrite cause         */</comments>
              <comments>//public static final int ER_CANNOT_OVERWRITE_CAUSE = 115;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.5"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Kan inte skriva \u00f6ver orsak"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  No default implementation found */</comments>
              <comments>//public static final int ER_NO_DEFAULT_IMPL = 156;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.6"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Standardimplementering saknas i:"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  ChunkedIntArray({0}) not currently supported */</comments>
              <comments>//public static final int ER_CHUNKEDINTARRAY_NOT_SUPPORTED = 157;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.7"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="ChunkedIntArray({0}) underst\u00f6ds f\u00f6r n\u00e4rvarande inte"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Offset bigger than slot */</comments>
              <comments>//public static final int ER_OFFSET_BIGGER_THAN_SLOT = 158;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.8"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Offset st\u00f6rre \u00e4n fack"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Coroutine not available, id= */</comments>
              <comments>//public static final int ER_COROUTINE_NOT_AVAIL = 159;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.9"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Sidorutin inte tillg\u00e4nglig, id={0}"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  CoroutineManager recieved co_exit() request */</comments>
              <comments>//public static final int ER_COROUTINE_CO_EXIT = 160;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.10"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="CoroutineManager mottog co_exit()-f\u00f6rfr\u00e5gan"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  co_joinCoroutineSet() failed */</comments>
              <comments>//public static final int ER_COJOINROUTINESET_FAILED = 161;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.11"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="co_joinCoroutineSet() misslyckades"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Coroutine parameter error () */</comments>
              <comments>//public static final int ER_COROUTINE_PARAM = 162;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.12"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Sidorutin fick parameterfel ({0})"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  UNEXPECTED: Parser doTerminate answers  */</comments>
              <comments>//public static final int ER_PARSER_DOTERMINATE_ANSWERS = 163;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.13"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="&#xA;OV\u00c4NTAT: Parser doTerminate-svar {0}"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  parse may not be called while parsing */</comments>
              <comments>//public static final int ER_NO_PARSE_CALL_WHILE_PARSING = 164;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.14"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="parse f\u00e5r inte anropas medan tolkning sker"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Error: typed iterator for axis  {0} not implemented  */</comments>
              <comments>//public static final int ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED = 165;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.15"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Fel: typad upprepare f\u00f6r axel {0} inte implementerad"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Error: iterator for axis {0} not implemented  */</comments>
              <comments>//public static final int ER_ITERATOR_AXIS_NOT_IMPLEMENTED = 166;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.16"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Fel: upprepare f\u00f6r axel {0} inte implementerad"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Iterator clone not supported  */</comments>
              <comments>//public static final int ER_ITERATOR_CLONE_NOT_SUPPORTED = 167;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.17"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Uppreparklon underst\u00f6ds inte"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Unknown axis traversal type  */</comments>
              <comments>//public static final int ER_UNKNOWN_AXIS_TYPE = 168;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.18"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Ok\u00e4nd axeltraverstyp: {0}"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Axis traverser not supported  */</comments>
              <comments>//public static final int ER_AXIS_NOT_SUPPORTED = 169;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.19"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Axeltravers underst\u00f6ds inte: {0}"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  No more DTM IDs are available  */</comments>
              <comments>//public static final int ER_NO_DTMIDS_AVAIL = 170;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.20"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Inga fler DTM-IDs \u00e4r tillg\u00e4ngliga"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Not supported  */</comments>
              <comments>//public static final int ER_NOT_SUPPORTED = 171;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.21"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Underst\u00f6ds inte: {0}"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  node must be non-null for getDTMHandleFromNode  */</comments>
              <comments>//public static final int ER_NODE_NON_NULL = 172;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.22"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Nod m\u00e5ste vara icke-null f\u00f6r getDTMHandleFromNode"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Could not resolve the node to a handle  */</comments>
              <comments>//public static final int ER_COULD_NOT_RESOLVE_NODE = 173;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.23"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Kunde inte l\u00f6sa nod till ett handtag"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  startParse may not be called while parsing */</comments>
              <comments>//public static final int ER_STARTPARSE_WHILE_PARSING = 174;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.24"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="startParse f\u00e5r inte anropas medan tolkning sker"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  startParse needs a non-null SAXParser  */</comments>
              <comments>//public static final int ER_STARTPARSE_NEEDS_SAXPARSER = 175;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.25"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="startParse beh\u00f6ver en SAXParser som \u00e4r icke-null"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  could not initialize parser with */</comments>
              <comments>//public static final int ER_COULD_NOT_INIT_PARSER = 176;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.26"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="kunde inte initialisera tolk med"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  exception creating new instance for pool  */</comments>
              <comments>//public static final int ER_EXCEPTION_CREATING_POOL = 178;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.27"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="undantag skapar ny instans f\u00f6r pool"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Path contains invalid escape sequence  */</comments>
              <comments>//public static final int ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE = 179;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.28"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="V\u00e4g inneh\u00e5ller ogiltig flyktsekvens"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Scheme is required!  */</comments>
              <comments>//public static final int ER_SCHEME_REQUIRED = 180;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.29"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Schema kr\u00e4vs!"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  No scheme found in URI  */</comments>
              <comments>//public static final int ER_NO_SCHEME_IN_URI = 181;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.30"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Schema saknas i URI: {0}"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  No scheme found in URI  */</comments>
              <comments>//public static final int ER_NO_SCHEME_INURI = 182;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.31"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Schema saknas i URI"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Path contains invalid character:   */</comments>
              <comments>//public static final int ER_PATH_INVALID_CHAR = 183;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.32"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="V\u00e4g inneh\u00e5ller ogiltigt tecken: {0}"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Cannot set scheme from null string  */</comments>
              <comments>//public static final int ER_SCHEME_FROM_NULL_STRING = 184;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.33"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Kan inte s\u00e4tta schema fr\u00e5n null-str\u00e4ng"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  The scheme is not conformant. */</comments>
              <comments>//public static final int ER_SCHEME_NOT_CONFORMANT = 185;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.34"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Schemat \u00e4r inte likformigt."/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Host is not a well formed address  */</comments>
              <comments>//public static final int ER_HOST_ADDRESS_NOT_WELLFORMED = 186;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.35"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="V\u00e4rd \u00e4r inte en v\u00e4lformulerad adress"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Port cannot be set when host is null  */</comments>
              <comments>//public static final int ER_PORT_WHEN_HOST_NULL = 187;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.36"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Port kan inte s\u00e4ttas n\u00e4r v\u00e4rd \u00e4r null"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Invalid port number  */</comments>
              <comments>//public static final int ER_INVALID_PORT = 188;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.37"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Ogiltigt portnummer"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Fragment can only be set for a generic URI  */</comments>
              <comments>//public static final int ER_FRAG_FOR_GENERIC_URI = 189;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.38"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Fragment kan bara s\u00e4ttas f\u00f6r en allm\u00e4n URI"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Fragment cannot be set when path is null  */</comments>
              <comments>//public static final int ER_FRAG_WHEN_PATH_NULL = 190;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.39"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Fragment kan inte s\u00e4ttas n\u00e4r v\u00e4g \u00e4r null"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Fragment contains invalid character  */</comments>
              <comments>//public static final int ER_FRAG_INVALID_CHAR = 191;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.40"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Fragment inneh\u00e5ller ogiltigt tecken"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Parser is already in use  */</comments>
              <comments>//public static final int ER_PARSER_IN_USE = 192;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.41"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Tolk anv\u00e4nds redan"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Parser is already in use  */</comments>
              <comments>//public static final int ER_CANNOT_CHANGE_WHILE_PARSING = 193;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.42"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Kan inte \u00e4ndra {0} {1} medan tolkning sker"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Self-causation not permitted  */</comments>
              <comments>//public static final int ER_SELF_CAUSATION_NOT_PERMITTED = 194;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.43"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Sj\u00e4lvorsakande inte till\u00e5ten"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Userinfo may not be specified if host is not specified   */</comments>
              <comments>//public static final int ER_NO_USERINFO_IF_NO_HOST = 198;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.44"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Userinfo f\u00e5r inte anges om v\u00e4rden inte \u00e4r angiven"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Port may not be specified if host is not specified   */</comments>
              <comments>//public static final int ER_NO_PORT_IF_NO_HOST = 199;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.45"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Port f\u00e5r inte anges om v\u00e4rden inte \u00e4r angiven"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Query string cannot be specified in path and query string   */</comments>
              <comments>//public static final int ER_NO_QUERY_STRING_IN_PATH = 200;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.46"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="F\u00f6rfr\u00e5gan-str\u00e4ng kan inte anges i v\u00e4g och f\u00f6rfr\u00e5gan-str\u00e4ng"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Fragment cannot be specified in both the path and fragment   */</comments>
              <comments>//public static final int ER_NO_FRAGMENT_STRING_IN_PATH = 201;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.47"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Fragment kan inte anges i b\u00e5de v\u00e4gen och fragmentet"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Cannot initialize URI with empty parameters   */</comments>
              <comments>//public static final int ER_CANNOT_INIT_URI_EMPTY_PARMS = 202;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.48"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Kan inte initialisera URI med tomma parametrar"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Method not yet supported    */</comments>
              <comments>//public static final int ER_METHOD_NOT_SUPPORTED = 210;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.49"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Metod \u00e4nnu inte underst\u00f6dd "/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** IncrementalSAXSource_Filter not currently restartable   */</comments>
              <comments>//public static final int ER_INCRSAXSRCFILTER_NOT_RESTARTABLE = 214;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.50"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="IncrementalSAXSource_Filter kan f\u00f6r n\u00e4rvarande inte startas om"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** IncrementalSAXSource_Filter not currently restartable   */</comments>
              <comments>//public static final int ER_XMLRDR_NOT_BEFORE_STARTPARSE = 215;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.51"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="XMLReader inte innan startParse-beg\u00e4ran"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>// Axis traverser not supported: {0}</comments>
              <comments>//public static final int ER_AXIS_TRAVERSER_NOT_SUPPORTED = 235;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.52"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Det g\u00e5r inte att v\u00e4nda axeln: {0}"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>// ListingErrorHandler created with null PrintWriter!</comments>
              <comments>//public static final int ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER = 236;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.53"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="ListingErrorHandler skapad med null PrintWriter!"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>//public static final int ER_SYSTEMID_UNKNOWN = 240;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.54"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="SystemId ok\u00e4nt"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>// Location of error unknown</comments>
              <comments>//public static final int ER_LOCATION_UNKNOWN = 241;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.55"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Platsen f\u00f6r felet \u00e4r ok\u00e4nd"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Field ER_PREFIX_MUST_RESOLVE          */</comments>
              <comments>//public static final int ER_PREFIX_MUST_RESOLVE = 52;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.56"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Prefix must resolve to a namespace: {0}"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Field ER_CREATEDOCUMENT_NOT_SUPPORTED          */</comments>
              <comments>//public static final int ER_CREATEDOCUMENT_NOT_SUPPORTED = 54;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.57"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="createDocument() underst\u00f6ds inte av XPathContext!"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Field ER_CHILD_HAS_NO_OWNER_DOCUMENT          */</comments>
              <comments>//public static final int ER_CHILD_HAS_NO_OWNER_DOCUMENT = 55;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.58"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Attributbarn saknar \u00e4gardokument!"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Field ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT          */</comments>
              <comments>//public static final int ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT = 56;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.59"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Attributbarn saknar \u00e4gardokumentelement!"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Field ER_CANT_OUTPUT_TEXT_BEFORE_DOC          */</comments>
              <comments>//public static final int ER_CANT_OUTPUT_TEXT_BEFORE_DOC = 63;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.60"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Varning: kan inte skriva ut text innan dokumentelement!  Ignorerar..."/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/** Field ER_CANT_HAVE_MORE_THAN_ONE_ROOT          */</comments>
              <comments>//public static final int ER_CANT_HAVE_MORE_THAN_ONE_ROOT = 64;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.61"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Kan inte ha mer \u00e4n en rot p\u00e5 en DOM!"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>/**  Argument 'localName' is null  */</comments>
              <comments>//public static final int ER_ARG_LOCALNAME_NULL = 70;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.62"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Argument 'localName' \u00e4r null"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>// Note to translators:  A QNAME has the syntactic form [NCName:]NCName</comments>
              <comments>// The localname is the portion after the optional colon; the message indicates</comments>
              <comments>// that there is a problem with that part of the QNAME.</comments>
              <comments>/** localname in QNAME should be a valid NCName */</comments>
              <comments>//public static final int ER_ARG_LOCALNAME_INVALID = 101;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.63"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Localname i QNAME b\u00f6r vara ett giltigt NCName"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <comments>// Note to translators:  A QNAME has the syntactic form [NCName:]NCName</comments>
              <comments>// The prefix is the portion before the optional colon; the message indicates</comments>
              <comments>// that there is a problem with that part of the QNAME.</comments>
              <comments>/** prefix in QNAME should be a valid NCName */</comments>
              <comments>//public static final int ER_ARG_PREFIX_INVALID = 102;</comments>
              <initialValues xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XMLErrorResources.class.xmi#//@classifiers.0/@members.64"/>
              </initialValues>
              <initialValues xsi:type="references:StringReference" value="Prefixet i QNAME b\u00f6r vara ett giltigt NCName"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="BAD_CODE"/>
              <initialValues xsi:type="references:StringReference" value="Parameter till createMessage ligger utanf\u00f6r till\u00e5tet intervall"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="FORMAT_FAILED"/>
              <initialValues xsi:type="references:StringReference" value="Undantag utl\u00f6st vid messageFormat-anrop"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="line"/>
              <initialValues xsi:type="references:StringReference" value="Rad #"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="column"/>
              <initialValues xsi:type="references:StringReference" value="Kolumn #"/>
            </arrayInitializer>
          </initialValues>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// Error messages...</comments>
        <comments>/** The lookup table for error messages.   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:ClassMethod" name="getContents">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * Get the association list.&#xA;   *&#xA;   * @return The association list.&#xA;   */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Set up error messages.&#xA; * We build a two dimensional array of message keys and&#xA; * message strings. In order to add a new message here,&#xA; * you need to first add a String constant. And you need&#xA; * to enter key, value pair as part of the contents&#xA; * array. You also need to update MAX_CODE for error strings&#xA; * and MAX_WARNING for warnings ( Needed for only information&#xA; * purpose )&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="XMLErrorResources.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
