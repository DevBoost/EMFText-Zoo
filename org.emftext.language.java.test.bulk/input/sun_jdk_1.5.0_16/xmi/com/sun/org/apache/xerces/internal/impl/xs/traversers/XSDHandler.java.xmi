<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../../../../../../java.ecore#/17" name="XSDHandler.java">
  <comments>/*&#xA; * The Apache Software License, Version 1.1&#xA; *&#xA; *&#xA; * Copyright (c) 1999-2004 The Apache Software Foundation.  All rights&#xA; * reserved.&#xA; *&#xA; * Redistribution and use in source and binary forms, with or without&#xA; * modification, are permitted provided that the following conditions&#xA; * are met:&#xA; *&#xA; * 1. Redistributions of source code must retain the above copyright&#xA; *    notice, this list of conditions and the following disclaimer.&#xA; *&#xA; * 2. Redistributions in binary form must reproduce the above copyright&#xA; *    notice, this list of conditions and the following disclaimer in&#xA; *    the documentation and/or other materials provided with the&#xA; *    distribution.&#xA; *&#xA; * 3. The end-user documentation included with the redistribution,&#xA; *    if any, must include the following acknowledgment:&#xA; *       &quot;This product includes software developed by the&#xA; *        Apache Software Foundation (http://www.apache.org/).&quot;&#xA; *    Alternately, this acknowledgment may appear in the software itself,&#xA; *    if and wherever such third-party acknowledgments normally appear.&#xA; *&#xA; * 4. The names &quot;Xerces&quot; and &quot;Apache Software Foundation&quot; must&#xA; *    not be used to endorse or promote products derived from this&#xA; *    software without prior written permission. For written&#xA; *    permission, please contact apache@apache.org.&#xA; *&#xA; * 5. Products derived from this software may not be called &quot;Apache&quot;,&#xA; *    nor may &quot;Apache&quot; appear in their name, without prior written&#xA; *    permission of the Apache Software Foundation.&#xA; *&#xA; * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED&#xA; * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES&#xA; * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE&#xA; * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR&#xA; * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,&#xA; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT&#xA; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF&#xA; * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND&#xA; * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,&#xA; * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT&#xA; * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF&#xA; * SUCH DAMAGE.&#xA; * ====================================================================&#xA; *&#xA; * This software consists of voluntary contributions made by many&#xA; * individuals on behalf of the Apache Software Foundation and was&#xA; * originally based on software copyright (c) 1999, International&#xA; * Business Machines, Inc., http://www.apache.org.  For more&#xA; * information on the Apache Software Foundation, please see&#xA; * &lt;http://www.apache.org/>.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>xerces</namespaces>
  <namespaces>internal</namespaces>
  <namespaces>impl</namespaces>
  <namespaces>xs</namespaces>
  <namespaces>traversers</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Stack.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>xml</namespaces>
    <namespaces>transform</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../../../javax/xml/transform/Source.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>xml</namespaces>
    <namespaces>transform</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/Transformer.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>xml</namespaces>
    <namespaces>transform</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/TransformerException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>xml</namespaces>
    <namespaces>transform</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/TransformerFactory.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>xml</namespaces>
    <namespaces>transform</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/dom/DOMSource.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>xml</namespaces>
    <namespaces>transform</namespaces>
    <namespaces>sax</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/sax/SAXSource.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>xml</namespaces>
    <namespaces>transform</namespaces>
    <namespaces>sax</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/sax/SAXResult.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>xml</namespaces>
    <namespaces>transform</namespaces>
    <namespaces>stream</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/stream/StreamSource.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../XMLEntityManager.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../XMLErrorReporter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../SchemaNamespaceSupport.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../XMLSchemaException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../XMLSchemaLoader.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../XSComplexTypeDecl.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../XSDeclarationPool.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../XSElementDecl.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../XSGrammarBucket.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../XSGroupDecl.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../XSMessageFormatter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../XSModelGroupImpl.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Class" href="../XSParticleDecl.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <namespaces>opti</namespaces>
    <classifier xsi:type="classifiers:Class" href="../opti/ElementImpl.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <namespaces>opti</namespaces>
    <classifier xsi:type="classifiers:Class" href="../opti/SchemaDOM.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <namespaces>opti</namespaces>
    <classifier xsi:type="classifiers:Class" href="../opti/SchemaDOMParser.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <namespaces>opti</namespaces>
    <classifier xsi:type="classifiers:Class" href="../opti/SchemaParsingConfig.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xs</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../util/SimpleLocator.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>parsers</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../parsers/SAXParser.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/SecurityManager.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/SAX2XNI.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/SymbolTable.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/XMLInputSourceAdaptor.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/XMLSymbols.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>grammars</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../xni/grammars/XMLGrammarPool.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../xni/parser/XMLEntityResolver.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../xni/parser/XMLErrorHandler.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../xs/XSObject.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Node.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>xml</namespaces>
    <namespaces>sax</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../../../org/xml/sax/XMLReader.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>xml</namespaces>
    <namespaces>sax</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../../org/xml/sax/SAXException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="XSDHandler">
    <members xsi:type="members:Field" name="ALLOW_JAVA_ENCODINGS">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.62"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.72"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Feature identifier:  allow java encodings */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="CONTINUE_AFTER_FATAL_ERROR">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.62"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.74"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Feature identifier:  continue after fatal error */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STANDARD_URI_CONFORMANT_FEATURE">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.62"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.85"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Feature identifier:  allow java encodings */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DISALLOW_DOCTYPE">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.62"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.73"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Feature: disallow doctype*/</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ERROR_HANDLER">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.95"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Property identifier: error handler. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JAXP_SCHEMA_SOURCE">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.26"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.27"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Property identifier: JAXP schema source. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ENTITY_RESOLVER">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.101"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Property identifier: entity resolver. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SECURE_PROCESSING">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.99"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ENTITY_MANAGER">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.97"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Property identifier: entity manager. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ERROR_REPORTER">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.94"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Property identifier: error reporter. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="XMLGRAMMAR_POOL">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.102"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Property identifier: grammar pool. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SYMBOL_TABLE">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.93"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Property identifier: symbol table. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SECURITY_MANAGER">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.99"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DEBUG_NODE_POOL">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Property identifier: security manager.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ATTRIBUTE_TYPE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>// Data</comments>
        <comments>// different sorts of declarations; should make lookup and</comments>
        <comments>// traverser calling more efficient/less bulky.</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="ATTRIBUTEGROUP_TYPE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="ELEMENT_TYPE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="GROUP_TYPE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="IDENTITYCONSTRAINT_TYPE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="NOTATION_TYPE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TYPEDECL_TYPE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="REDEF_IDENTIFIER">
      <initialValue xsi:type="references:StringReference" value="_fn3dktizrknc9pi"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// this string gets appended to redefined names; it's purpose is to be</comments>
        <comments>// as unlikely as possible to cause collisions.</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="fNotationRegistry">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>//</comments>
        <comments>//protected data that can be accessable by any traverser</comments>
        <comments>// stores &lt;notation> decl</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fDeclPool">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../XSDeclarationPool.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
    </members>
    <members xsi:type="members:Field" name="fAllowJavaEncodings">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// are java encodings allowed?</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fStrictURI">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// enforcing strict uri?</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fSecureProcessing">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../util/SecurityManager.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * &lt;p>Security manager in effect.&lt;/p>&#xA;     * &#xA;     * &lt;p>Protected to allow access by any traverser.&lt;/p>&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fUnparsedAttributeRegistry">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// These tables correspond to the symbol spaces defined in the</comments>
        <comments>// spec.</comments>
        <comments>// They are keyed with a QName (that is, String(&quot;URI,localpart) and</comments>
        <comments>// their values are nodes corresponding to the given name's decl.</comments>
        <comments>// By asking the node for its ownerDocument and looking in</comments>
        <comments>// XSDocumentInfoRegistry we can easily get the corresponding</comments>
        <comments>// XSDocumentInfo object.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fUnparsedAttributeGroupRegistry">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fUnparsedElementRegistry">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fUnparsedGroupRegistry">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fUnparsedIdentityConstraintRegistry">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fUnparsedNotationRegistry">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fUnparsedTypeRegistry">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fXSDocumentInfoRegistry">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// this is keyed with a documentNode (or the schemaRoot nodes</comments>
        <comments>// contained in the XSDocumentInfo objects) and its value is the</comments>
        <comments>// XSDocumentInfo object corresponding to that document.</comments>
        <comments>// Basically, the function of this registry is to be a link</comments>
        <comments>// between the nodes we fetch from calls to the fUnparsed*</comments>
        <comments>// arrays and the XSDocumentInfos they live in.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fDependencyMap">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// this hashtable is keyed on by XSDocumentInfo objects.  Its values</comments>
        <comments>// are Vectors containing the XSDocumentInfo objects &lt;include>d,</comments>
        <comments>// &lt;import>ed or &lt;redefine>d by the key XSDocumentInfo.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fImportMap">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// this hashtable is keyed on by a target namespace.  Its values</comments>
        <comments>// are Vectors containing namespaces imported by schema documents</comments>
        <comments>// with the key target namespace.</comments>
        <comments>// if an imprted schema has absent namespace, the value &quot;null&quot; is stored.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fAllTNSs">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// all namespaces that imports other namespaces</comments>
        <comments>// if the importing schema has absent namespace, empty string is stored.</comments>
        <comments>// (because the key of a hashtable can't be null.)</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fLocationPairs">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// stores instance document mappings between namespaces and schema hints</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="null2EmptyString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ns">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// convenience methods</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:ConditionalExpression">
          <child xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0"/>
            <children xsi:type="literals:NullLiteral"/>
          </child>
          <expressionIf xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../util/XMLSymbols.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../util/XMLSymbols.class.xmi#//@classifiers.0"/>
          </expressionIf>
          <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="emptyString2Null">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ns">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:ConditionalExpression">
          <child xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.0"/>
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../util/XMLSymbols.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../util/XMLSymbols.class.xmi#//@classifiers.0"/>
            </children>
          </child>
          <expressionIf xsi:type="literals:NullLiteral"/>
          <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:Field" name="fTraversed">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// This vector stores strings which are combinations of the</comments>
        <comments>// publicId and systemId of the inputSource corresponding to a</comments>
        <comments>// schema document.  This combination is used so that the user's</comments>
        <comments>// EntityResolver can provide a consistent way of identifying a</comments>
        <comments>// schema document that is included in multiple other schemas.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fDoc2SystemId">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// this hashtable contains a mapping from Document to its systemId</comments>
        <comments>// this is useful to resolve a uri relative to the referring document</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fRoot">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// the primary XSDocumentInfo we were called to parse</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fDoc2XSDocumentMap">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// This hashtable's job is to act as a link between the document</comments>
        <comments>// node at the root of the parsed schema's tree and its</comments>
        <comments>// XSDocumentInfo object.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fRedefine2XSDMap">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// map between &lt;redefine> elements and the XSDocumentInfo</comments>
        <comments>// objects that correspond to the documents being redefined.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fRedefine2NSSupport">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// map between &lt;redefine> elements and the namespace support</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fRedefinedRestrictedAttributeGroupRegistry">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// these objects store a mapping between the names of redefining</comments>
        <comments>// groups/attributeGroups and the groups/AttributeGroups which</comments>
        <comments>// they redefine by restriction (implicitly).  It is up to the</comments>
        <comments>// Group and AttributeGroup traversers to check these restrictions for</comments>
        <comments>// validity.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fRedefinedRestrictedGroupRegistry">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fLastSchemaWasDuplicate">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// a variable storing whether the last schema document</comments>
        <comments>// processed (by getSchema) was a duplicate.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fErrorReporter">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../XMLErrorReporter.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// the XMLErrorReporter</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fEntityResolver">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../xni/parser/XMLEntityResolver.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fAttributeChecker">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XSAttributeChecker.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// the XSAttributeChecker</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fSymbolTable">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../util/SymbolTable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// the symbol table</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fGrammarBucket">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../XSGrammarBucket.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// the GrammarResolver</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fSchemaGrammarDescription">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// the Grammar description</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fGrammarPool">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../xni/grammars/XMLGrammarPool.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// the Grammar Pool</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fAttributeGroupTraverser">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>//************ Traversers **********</comments>
          <target xsi:type="classifiers:Class" href="XSDAttributeGroupTraverser.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="fAttributeTraverser">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XSDAttributeTraverser.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="fComplexTypeTraverser">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XSDComplexTypeTraverser.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="fElementTraverser">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XSDElementTraverser.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="fGroupTraverser">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XSDGroupTraverser.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="fKeyrefTraverser">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XSDKeyrefTraverser.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="fNotationTraverser">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XSDNotationTraverser.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="fSimpleTypeTraverser">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XSDSimpleTypeTraverser.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="fUniqueOrKeyTraverser">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XSDUniqueOrKeyTraverser.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="fWildCardTraverser">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XSDWildcardTraverser.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="fSchemaParser">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>//DOMParser fSchemaParser;</comments>
          <target xsi:type="classifiers:Class" href="../opti/SchemaParsingConfig.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="INIT_STACK_SIZE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="30"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// these data members are needed for the deferred traversal</comments>
        <comments>// of local elements.</comments>
        <comments>// the initial size of the array to store deferred local elements</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="INC_STACK_SIZE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// the incremental size of the array to store deferred local elements</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="fLocalElemStackPos">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// current position of the array (# of deferred local elements)</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fParticle">
      <initialValue xsi:type="arrays:ArrayInstantiationBySize">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../XSParticleDecl.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.68"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../XSParticleDecl.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fLocalElementDecl">
      <initialValue xsi:type="arrays:ArrayInstantiationBySize">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.68"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fAllContext">
      <initialValue xsi:type="arrays:ArrayInstantiationBySize">
        <typeReference xsi:type="types:Int"/>
        <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.68"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fParent">
      <initialValue xsi:type="arrays:ArrayInstantiationBySize">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../xs/XSObject.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.68"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../xs/XSObject.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fLocalElemNamespaceContext">
      <initialValue xsi:type="arrays:ArrayInstantiationBySize">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.68"/>
        <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="INIT_KEYREF_STACK">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// these data members are needed for the deferred traversal</comments>
        <comments>// of keyrefs.</comments>
        <comments>// the initial size of the array to store deferred keyrefs</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="INC_KEYREF_STACK_AMOUNT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// the incremental size of the array to store deferred keyrefs</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="fKeyrefStackPos">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// current position of the array (# of deferred keyrefs)</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fKeyrefs">
      <initialValue xsi:type="arrays:ArrayInstantiationBySize">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fKeyrefElems">
      <initialValue xsi:type="arrays:ArrayInstantiationBySize">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../XSElementDecl.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../XSElementDecl.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fKeyrefNamespaceContext">
      <initialValue xsi:type="arrays:ArrayInstantiationBySize">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.76"/>
        <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Constructor" name="XSDHandler">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../opti/SchemaParsingConfig.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// Constructors</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="XSDHandler">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.83/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55">
            <comments>// Note: don't use SchemaConfiguration internally</comments>
            <comments>//       we will get stack overflaw because</comments>
            <comments>//       XMLSchemaValidator will be instantiating XSDHandler...</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gBucket">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../XSGrammarBucket.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// it should be possible to use the same XSDHandler to parse</comments>
        <comments>// multiple schema documents; this will allow one to be</comments>
        <comments>// constructed.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="parseSchema">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../javax/xml/transform/Source.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="desc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="locationPairs">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// end constructor</comments>
        <comments>/**&#xA;     * This method initiates the parse of a schema.  It will likely be&#xA;     * called from the Validator and it will make the&#xA;     * resulting grammar available; it returns a reference to this object just&#xA;     * in case.  A reset(XMLComponentManager) must be called before this methods is called.&#xA;     * @param is&#xA;     * @param desc&#xA;     * @param locationPairs&#xA;     * @return&#xA;     * @throws IOException&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@parameters.2"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../opti/SchemaParsingConfig.class.xmi#//@classifiers.0/@members.45"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="grammar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="schemaNamespace">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="referType">
          <typeReference xsi:type="types:Short"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.16"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// if loading using JAXP schemaSource property, or using grammar caching loadGrammar</comments>
        <comments>// the desc.targetNamespace is always null.</comments>
        <comments>// Therefore we should not attempt to find out if </comments>
        <comments>// the schema is already in the bucket, since in the case we have</comments>
        <comments>// no namespace schema in the bucket, findGrammar will always return the </comments>
        <comments>// no namespace schema.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.2/@variable">
                <comments>// first try to find it in the bucket/pool, return if one is found</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.86">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@parameters.1"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.2/@variable"/>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@parameters.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.17"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// handle empty string URI as null</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../util/SymbolTable.class.xmi#//@classifiers.0/@members.5"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable"/>
                    </next>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable"/>
          <children xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.104">
          <comments>// before parsing a schema, need to clear registries associated with</comments>
          <comments>// parsing schemas</comments>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="schemaRoot">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// first phase:  construct trees.</comments>
              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.102">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@parameters.0"/>
            <arguments xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.4"/>
                </next>
                <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
              </children>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable"/>
            <arguments xsi:type="literals:NullLiteral"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <comments>// something went wrong right off the hop</comments>
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.7/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="schemaElem">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.31"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.7/@variable"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.9/@statement/@statements.0/@variable"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.76"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable">
                    <comments>// Since now we've discovered a namespace, we need to update xsd key</comments>
                    <comments>// and store this schema in traversed schemas bucket</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../util/SymbolTable.class.xmi#//@classifiers.0/@members.5"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable"/>
                    </next>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@parameters.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.26"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                  </next>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:GreaterThan"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:NullLiteral"/>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.2/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.86">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@parameters.1"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.2/@variable"/>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="schemaId">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../javax/xml/transform/Source.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="key">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.123"/>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.123"/>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.9/@statement/@statements.5/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.3/@variable"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.9/@statement/@statements.6/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.7/@variable"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.7/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.9/@statement/@statements.5/@variable"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.9/@statement/@statements.5/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.4/@variable"/>
          <children xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.105">
          <comments>// before constructing trees and traversing a schema, need to reset</comments>
          <comments>// all traversers and clear all registries</comments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.89">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.7/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../javax/xml/transform/Source.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@parameters.1"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.90">
          <comments>// second phase:  fill global registries.</comments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.91">
          <comments>// third phase:  call traversers</comments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.108">
          <comments>// fourth phase: handle local element decls</comments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.98">
          <comments>// fifth phase:  handle Keyrefs</comments>
        </expression>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <comments>// sixth phase:  validate attribute of non-schema namespaces</comments>
        <comments>// REVISIT: skip this for now. we really don't want to do it.</comments>
        <comments>//fAttributeChecker.checkNonSchemaAttributes(fGrammarBucket);</comments>
        <comments>// seventh phase:  store imported grammars</comments>
        <comments>// for all grammars with &lt;import>s</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="tns">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// get its target namespace</comments>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.22"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@init"/>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="ins">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// get all namespaces it imports</comments>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.0/@variable"/>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="sg">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// get the grammar</comments>
                  <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../XSGrammarBucket.class.xmi#//@classifiers.0/@members.3"/>
                  <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.40">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.0/@variable"/>
                  </arguments>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Continue"/>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="isg">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="count">
              <typeReference xsi:type="types:Int">
                <comments>// for imported namespace</comments>
              </typeReference>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.4/@variable">
                    <comments>// get imported grammar</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../XSGrammarBucket.class.xmi#//@classifiers.0/@members.3"/>
                      <arguments xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.22"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.6/@init"/>
                          </next>
                        </child>
                      </arguments>
                    </next>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <comments>// reuse the same vector</comments>
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.25"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.4/@variable"/>
                      <arguments xsi:type="expressions:SuffixUnaryModificationExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.5/@variable"/>
                        <operator xsi:type="operators:PlusPlus"/>
                      </arguments>
                    </next>
                  </expression>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.4/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.6/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.14"/>
                </next>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="j">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.6/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.5/@variable"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.2/@variable">
              <comments>// set the imported grammars</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.44"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@statement/@statements.1/@variable"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@init"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.14"/>
              </next>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValue>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84/@statements.17/@init"/>
          <operator xsi:type="operators:MinusMinus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <comments>// and return.</comments>
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../XSGrammarBucket.class.xmi#//@classifiers.0/@members.3"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
              </next>
            </arguments>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getGrammar">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>// end parseSchema</comments>
          <comments>/**&#xA;     * Pull the grammar out of the bucket simply using&#xA;     * its TNS as a key&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tns">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../XSGrammarBucket.class.xmi#//@classifiers.0/@members.3"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85/@parameters.0"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="findGrammar">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="desc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * First try to find a grammar in the bucket, if failed, consult the&#xA;     * grammar pool. If a grammar is found in the pool, then add it (and all&#xA;     * imported ones) into the bucket.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sg">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../XSGrammarBucket.class.xmi#//@classifiers.0/@members.3"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.17"/>
                </next>
              </arguments>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.56">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../xni/grammars/XMLGrammarPool.class.xmi#//@classifiers.0/@members.2"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@parameters.0"/>
                      </next>
                    </child>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <comments>// put this grammar into the bucket, along with grammars</comments>
                    <comments>// imported by it (directly or indirectly)</comments>
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.122">
                          <comments>// REVISIT: a conflict between new grammar(s) and grammars</comments>
                          <comments>// in the bucket. What to do? A warning? An exception?</comments>
                          <arguments xsi:type="references:StringReference" value="GrammarConflict"/>
                          <arguments xsi:type="literals:NullLiteral"/>
                          <arguments xsi:type="literals:NullLiteral"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@statements.0/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="literals:NullLiteral"/>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../XSGrammarBucket.class.xmi#//@classifiers.0/@members.5"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@statements.0/@variable"/>
                          <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                        </next>
                      </child>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@statements.0/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.56"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@statements.0/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:Field" name="NS_ERROR_CODES">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="src-include.2.1"/>
              <initialValues xsi:type="references:StringReference" value="src-include.2.1"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="src-redefine.3.1"/>
              <initialValues xsi:type="references:StringReference" value="src-redefine.3.1"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="src-import.3.1"/>
              <initialValues xsi:type="references:StringReference" value="src-import.3.2"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="TargetNamespace.1"/>
              <initialValues xsi:type="references:StringReference" value="TargetNamespace.2"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="TargetNamespace.1"/>
              <initialValues xsi:type="references:StringReference" value="TargetNamespace.2"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="TargetNamespace.1"/>
              <initialValues xsi:type="references:StringReference" value="TargetNamespace.2"/>
            </arrayInitializer>
          </initialValues>
          <initialValues xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="TargetNamespace.1"/>
              <initialValues xsi:type="references:StringReference" value="TargetNamespace.2"/>
            </arrayInitializer>
          </initialValues>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// may wish to have setter methods for ErrorHandler,</comments>
        <comments>// EntityResolver...</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ELE_ERROR_CODES">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="references:StringReference" value="src-include.1"/>
          <initialValues xsi:type="references:StringReference" value="src-redefine.2"/>
          <initialValues xsi:type="references:StringReference" value="src-import.2"/>
          <initialValues xsi:type="references:StringReference" value="schema_reference.4"/>
          <initialValues xsi:type="references:StringReference" value="schema_reference.4"/>
          <initialValues xsi:type="references:StringReference" value="schema_reference.4"/>
          <initialValues xsi:type="references:StringReference" value="schema_reference.4"/>
          <initialValues xsi:type="references:StringReference" value="schema_reference.4"/>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:ClassMethod" name="constructTrees">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="schemaRoot">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="locationHint">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="desc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// This method does several things:</comments>
        <comments>// It constructs an instance of an XSDocumentInfo object using the</comments>
        <comments>// schemaRoot node.  Then, for each &lt;include>,</comments>
        <comments>// &lt;redefine>, and &lt;import> children, it attempts to resolve the</comments>
        <comments>// requested schema document, initiates a DOM parse, and calls</comments>
        <comments>// itself recursively on that document's root.  It also records in</comments>
        <comments>// the DependencyMap object what XSDocumentInfo objects its XSDocumentInfo</comments>
        <comments>// depends on.</comments>
        <comments>// It also makes sure the targetNamespace of the schema it was</comments>
        <comments>// called to parse is correct.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="literals:NullLiteral"/>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="callerTNS">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.2">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.17"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="referType">
          <typeReference xsi:type="types:Short"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.2">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.16"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="currSchemaInfo">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
              <comments>// note that attributes are freed at end of traverseSchemas()</comments>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53"/>
            </value>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.88">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.2/@variable"/>
                </arraySelectors>
              </arguments>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.1"/>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.31"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </arguments>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
          <parameter name="se">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../XMLSchemaException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// targetNamespace=&quot;&quot; is not valid, issue a warning, and ignore it</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.122">
              <arguments xsi:type="references:StringReference" value="EmptyTargetNamespace"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.1"/>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.31"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </arguments>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
              </next>
            </children>
            <children xsi:type="literals:NullLiteral"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                </next>
                <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
              </next>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// now there is no caller/expected NS, it's an error for the referred</comments>
        <comments>// document to have a target namespace, unless we are preparsing a schema</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="secondIdx">
              <typeReference xsi:type="types:Int">
                <comments>// the second index to the NS_ERROR_CODES array</comments>
                <comments>// if the caller/expected NS is not absent, we use the first column</comments>
              </typeReference>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// for include and redefine</comments>
            <comments>// for instance and import, the two NS's must be the same</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <comments>// if the referred document has no targetNamespace,</comments>
                <comments>// it's a chameleon schema</comments>
                <comments>// if the referred document has a target namespace differing</comments>
                <comments>// from the caller, it's an error</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.1/@variable"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.8"/>
                        </next>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:BooleanLiteral" value="true"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                    </next>
                  </children>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.2/@variable"/>
                          </arraySelectors>
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.6/@statement/@statements.0/@variable"/>
                          </arraySelectors>
                        </arguments>
                        <arguments xsi:type="arrays:ArrayInstantiationByValues">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <arrayDimensionsBefore/>
                          <arrayInitializer>
                            <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.1/@variable"/>
                            <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                              </next>
                            </initialValues>
                          </arrayInitializer>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.31"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.0"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="literals:NullLiteral"/>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.1/@variable"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                      </next>
                    </children>
                  </condition>
                </elseStatement>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.2/@variable"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
                </children>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.2/@variable"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
                </children>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.2/@variable"/>
                      </arraySelectors>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.6/@statement/@statements.0/@variable"/>
                      </arraySelectors>
                    </arguments>
                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arrayDimensionsBefore/>
                      <arrayInitializer>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.1/@variable"/>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                          </next>
                        </initialValues>
                      </arrayInitializer>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.31"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.0"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </expression>
                </statements>
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="literals:NullLiteral"/>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.2/@variable"/>
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.4"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
                  </children>
                </children>
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.1/@variable"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                    </next>
                  </children>
                </children>
              </condition>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.1/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <comments>// set the target namespace of the description</comments>
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.2">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.26"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.1/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                      </next>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.2/@variable"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="secondIdx">
                    <typeReference xsi:type="types:Int">
                      <comments>// the second index to the NS_ERROR_CODES array</comments>
                      <comments>// if the caller/expected NS is absent, we use the second column</comments>
                    </typeReference>
                    <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.2/@variable"/>
                      </arraySelectors>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.6/@elseStatement/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                      </arraySelectors>
                    </arguments>
                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arrayDimensionsBefore/>
                      <arrayInitializer>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.1/@variable"/>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                          </next>
                        </initialValues>
                      </arrayInitializer>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.31"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.0"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </expression>
                </statements>
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="literals:NullLiteral"/>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
              </next>
            </children>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
          <comments>// the other cases (callerTNS == currSchemaInfo.fTargetNamespce == null)</comments>
          <comments>// are valid</comments>
          <comments>// a schema document can always access it's own target namespace</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
              </next>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sg">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.8/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../XSGrammarBucket.class.xmi#//@classifiers.0/@members.3"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                    </next>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.2/@variable"/>
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
            </children>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.2/@variable"/>
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.2"/>
              </next>
              <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
            </children>
          </children>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.8/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.2">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.32"/>
                  </next>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../XSGrammarBucket.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.8/@variable"/>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.8/@variable">
          <comments>// store the document and its location</comments>
          <comments>// REVISIT: don't expose the DOM tree</comments>
          <comments>//sg.addDocument(currSchemaInfo.fSchemaDoc, (String)fDoc2SystemId.get(currSchemaInfo));</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.74"/>
            <arguments xsi:type="literals:NullLiteral"/>
            <arguments xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </arguments>
                </next>
              </child>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="dependencies">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rootNode">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.31"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="newSchemaRoot">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="schemaNamespace">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="literals:NullLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="schemaHint">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="literals:NullLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="localName">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="refType">
              <typeReference xsi:type="types:Short"/>
              <initialValue xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Subtraction"/>
                <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Continue"/>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.2/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.3/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.3"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="importAttrs">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <comments>// have to handle some validation here too!</comments>
                        <comments>// call XSAttributeChecker to fill in attrs</comments>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="XSAttributeChecker.class.xmi#//@classifiers.0/@members.103"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                        <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.1/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.1/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="XSAttributeChecker.class.xmi#//@classifiers.0/@members.31"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="XSAttributeChecker.class.xmi#//@classifiers.0"/>
                          </position>
                        </arraySelectors>
                      </child>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.1/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="XSAttributeChecker.class.xmi#//@classifiers.0/@members.23"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="XSAttributeChecker.class.xmi#//@classifiers.0"/>
                          </position>
                        </arraySelectors>
                      </child>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../util/SymbolTable.class.xmi#//@classifiers.0/@members.5"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.0/@variable"/>
                        </next>
                      </value>
                    </expression>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:Condition">
                  <comments>// a document can't import another document with the same namespace</comments>
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                        <arguments xsi:type="references:StringReference" value="src-import.1.1"/>
                        <arguments xsi:type="arrays:ArrayInstantiationByValues">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <arrayDimensionsBefore/>
                          <arrayInitializer>
                            <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.0/@variable"/>
                          </arrayInitializer>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.0/@variable"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                      </next>
                    </children>
                  </condition>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="importChild">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <comments>// check contents and process optional annotations</comments>
                        <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.2"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="importComponentType">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <initialValue xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.6/@variable"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.8/@variable">
                            <comments>// promoting annotations to parent component</comments>
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.89"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="XSDAbstractTraverser.class.xmi#//@classifiers.0/@members.15"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.6/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.1/@variable"/>
                                  <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable"/>
                                </next>
                              </arguments>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.7/@statement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.7"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                          </arguments>
                        </next>
                      </condition>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                            <arguments xsi:type="references:StringReference" value="s4s-elt-must-match.1"/>
                            <arguments xsi:type="arrays:ArrayInstantiationByValues">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <arrayDimensionsBefore/>
                              <arrayInitializer>
                                <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.2/@variable"/>
                                <initialValues xsi:type="references:StringReference" value="annotation?"/>
                                <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.7/@statement/@statements.0/@variable"/>
                              </arrayInitializer>
                            </arguments>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                          </expression>
                        </statements>
                      </elseStatement>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                            <arguments xsi:type="references:StringReference" value="s4s-elt-must-match.1"/>
                            <arguments xsi:type="arrays:ArrayInstantiationByValues">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <arrayDimensionsBefore/>
                              <arrayInitializer>
                                <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.2/@variable"/>
                                <initialValues xsi:type="references:StringReference" value="annotation?"/>
                                <initialValues xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.6"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.6/@variable"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                </initialValues>
                              </arrayInitializer>
                            </arguments>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:NotEqual"/>
                        <children xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.6"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.6/@variable"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                        </children>
                        <children xsi:type="literals:NullLiteral"/>
                      </condition>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.6/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="XSAttributeChecker.class.xmi#//@classifiers.0/@members.110"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.1/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <comments>// if this namespace has been imported by this document,</comments>
                  <comments>// ignore the &lt;import> statement</comments>
                  <statement xsi:type="statements:Continue"/>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.21"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.0/@variable"/>
                    </next>
                  </condition>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                    <comments>// a schema document can access it's imported namespaces</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.0/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="tns">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <comments>// also record the fact that one namespace imports another one</comments>
                        <comments>// convert null to &quot;&quot;</comments>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.39">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                      </arguments>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="ins">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <comments>// get all namespaces imported by this one</comments>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.11/@variable"/>
                        </next>
                      </child>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <comments>// if no namespace was imported, create new Vector</comments>
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37">
                        <comments>// record that this one imports other(s)</comments>
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.28"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.11/@variable"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.12/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="instantiations:NewConstructorCall">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                        </value>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.11/@variable"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.12/@variable"/>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.12/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.28"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.0/@variable"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.12/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.12/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.28"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.0/@variable"/>
                          </next>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@statement/@statements.12/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.17"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.0/@variable"/>
                        </next>
                      </child>
                    </condition>
                  </elseStatement>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.31"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.25"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.3"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../util/XMLResourceIdentifierImpl.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.0"/>
                          </next>
                        </child>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.27"/>
                      <arguments xsi:type="arrays:ArrayInstantiationByValues">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arrayDimensionsBefore/>
                        <arrayInitializer>
                          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.1/@variable"/>
                        </arrayInitializer>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.26"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.0/@variable"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <comments>// if a grammar with the same namespace exists (or being</comments>
                  <comments>// built), ignore this one (don't traverse it).</comments>
                  <statement xsi:type="statements:Continue"/>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.86">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55"/>
                    </children>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.14/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.101">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55"/>
                      <arguments xsi:type="literals:BooleanLiteral"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.23"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="includeAttrs">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <comments>// validation for redefine/include will be the same here; just</comments>
                          <comments>// make sure TNS is right (don't care about redef contents</comments>
                          <comments>// yet).</comments>
                          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arrayDimensionsBefore/>
                      <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="XSAttributeChecker.class.xmi#//@classifiers.0/@members.103"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                          <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable"/>
                        </next>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.1/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="XSAttributeChecker.class.xmi#//@classifiers.0/@members.31"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="XSAttributeChecker.class.xmi#//@classifiers.0"/>
                            </position>
                          </arraySelectors>
                        </child>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <comments>// store the namespace decls of the redefine element</comments>
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                            <arguments xsi:type="instantiations:NewConstructorCall">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../SchemaNamespaceSupport.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.0"/>
                                </next>
                              </arguments>
                            </arguments>
                          </next>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.37"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <comments>// check annotations.  Must do this here to avoid having to</comments>
                    <comments>// re-parse attributes later</comments>
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="includeChild">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.2"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:LocalVariableStatement">
                            <variable name="includeComponentType">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <initialValue xsi:type="references:IdentifierReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@statement/@statements.0/@variable"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                              </initialValue>
                            </variable>
                          </statements>
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.8/@variable">
                                  <comments>// promoting annotations to parent component</comments>
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.89"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="XSDAbstractTraverser.class.xmi#//@classifiers.0/@members.15"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@statement/@statements.0/@variable"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                                        <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable"/>
                                      </next>
                                    </arguments>
                                  </next>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@statement/@statements.1/@statement/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.7"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                </arguments>
                              </next>
                            </condition>
                            <elseStatement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                                  <arguments xsi:type="references:StringReference" value="s4s-elt-must-match.1"/>
                                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                      <classifierReferences>
                                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                      </classifierReferences>
                                    </typeReference>
                                    <arrayDimensionsBefore/>
                                    <arrayInitializer>
                                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.2/@variable"/>
                                      <initialValues xsi:type="references:StringReference" value="annotation?"/>
                                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@statement/@statements.1/@statement/@statements.0/@variable"/>
                                    </arrayInitializer>
                                  </arguments>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                                </expression>
                              </statements>
                            </elseStatement>
                          </statements>
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                                  <arguments xsi:type="references:StringReference" value="s4s-elt-must-match.1"/>
                                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                      <classifierReferences>
                                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                      </classifierReferences>
                                    </typeReference>
                                    <arrayDimensionsBefore/>
                                    <arrayInitializer>
                                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.2/@variable"/>
                                      <initialValues xsi:type="references:StringReference" value="annotation?"/>
                                      <initialValues xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                                          <arguments xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.6"/>
                                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@statement/@statements.0/@variable"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                          </arguments>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                      </initialValues>
                                    </arrayInitializer>
                                  </arguments>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:NotEqual"/>
                              <children xsi:type="references:IdentifierReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.6"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@statement/@statements.0/@variable"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                              </children>
                              <children xsi:type="literals:NullLiteral"/>
                            </condition>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:NotEqual"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@statement/@statements.0/@variable"/>
                          <children xsi:type="literals:NullLiteral"/>
                        </condition>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.24"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:ForLoop">
                        <statement xsi:type="statements:Block">
                          <comments>// catch all other content errors later</comments>
                          <statements xsi:type="statements:LocalVariableStatement">
                            <variable name="redefinedComponentType">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <initialValue xsi:type="references:IdentifierReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@elseStatement/@statements.0/@init"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                              </initialValue>
                            </variable>
                          </statements>
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.8/@variable">
                                  <comments>// promoting annotations to parent component</comments>
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.89"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="XSDAbstractTraverser.class.xmi#//@classifiers.0/@members.15"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@elseStatement/@statements.0/@init"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                                        <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable"/>
                                      </next>
                                    </arguments>
                                  </next>
                                </expression>
                              </statements>
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.8"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@elseStatement/@statements.0/@init"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@elseStatement/@statements.0/@statement/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.7"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                </arguments>
                              </next>
                            </condition>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:NotEqual"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@elseStatement/@statements.0/@init"/>
                          <children xsi:type="literals:NullLiteral"/>
                        </condition>
                        <init xsi:type="variables:LocalVariable" name="redefinedChild">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.2"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                          </initialValue>
                        </init>
                        <updates xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@elseStatement/@statements.0/@init"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.6"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.3/@elseStatement/@statements.0/@init"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                          </value>
                        </updates>
                      </statements>
                    </elseStatement>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="XSAttributeChecker.class.xmi#//@classifiers.0/@members.110"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <comments>// schemaLocation is required on &lt;include> and &lt;redefine></comments>
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                          <arguments xsi:type="references:StringReference" value="s4s-att-must-appear"/>
                          <arguments xsi:type="arrays:ArrayInstantiationByValues">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arrayDimensionsBefore/>
                            <arrayInitializer>
                              <initialValues xsi:type="references:StringReference" value="&lt;include> or &lt;redefine>"/>
                              <initialValues xsi:type="references:StringReference" value="schemaLocation"/>
                            </arrayInitializer>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.1/@variable"/>
                      <children xsi:type="literals:NullLiteral"/>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="mustResolve">
                      <typeReference xsi:type="types:Boolean">
                        <comments>// pass the systemId of the current document as the base systemId</comments>
                      </typeReference>
                      <initialValue xsi:type="literals:BooleanLiteral"/>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.3/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.6/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.116">
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                          </value>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.3/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.2"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
                          </value>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.37"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.31"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.25"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.3/@variable"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../util/XMLResourceIdentifierImpl.class.xmi#//@classifiers.0/@members.13"/>
                        <arguments xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@parameters.0"/>
                            </next>
                          </child>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.27"/>
                        <arguments xsi:type="arrays:ArrayInstantiationByValues">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <arrayDimensionsBefore/>
                          <arrayInitializer>
                            <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.1/@variable"/>
                          </arrayInitializer>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.26"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.1/@variable"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.14/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.101">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.6/@variable"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.24"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </expression>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.37"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </expression>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:Break">
                    <comments>// no more possibility of schema references in well-formed</comments>
                    <comments>// schema...</comments>
                  </statements>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="newSchemaInfo">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// If the schema is duplicate, we needn't call constructTrees() again.</comments>
                  <comments>// To handle mutual &lt;include>s</comments>
                  <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="literals:NullLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.5/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.14/@variable"/>
                      </next>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.5/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.89">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.14/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.1/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45">
                  <comments>// must record which schema we're redefining so that we can</comments>
                  <comments>// rename the right things later!</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.5/@variable"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.37"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.5/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.12/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.28"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.5/@variable"/>
                    </next>
                  </expression>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@statement/@statements.5/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.14/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:NullLiteral"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.14/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="child">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.2"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.13/@variable"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
          </initialValue>
        </init>
        <updates xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.6"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.15/@init"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
          </value>
        </updates>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.12/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89/@statements.3/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="buildGlobalNameRegistries">
      <comments>// while</comments>
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// end constructTrees</comments>
        <comments>// This method builds registries for all globally-referenceable</comments>
        <comments>// names.  A registry will be built for each symbol space defined</comments>
        <comments>// by the spec.  It is also this method's job to rename redefined</comments>
        <comments>// components, and to record which components redefine others (so</comments>
        <comments>// that implicit redefinitions of groups and attributeGroups can be handled).</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="schemasToProcess">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/* Starting with fRoot, we examine each child of the schema&#xA;         * element.  Skipping all imports and includes, we record the names&#xA;         * of all other global components (and children of &lt;redefine>).  We&#xA;         * also put &lt;redefine> names in a registry that we look through in&#xA;         * case something needs renaming.  Once we're done with a schema we&#xA;         * set its Document node to hidden so that we don't try to traverse&#xA;         * it again; then we look to its Dependency map entry.  We keep a&#xA;         * stack of schemas that we haven't yet finished processing; this&#xA;         * is a depth-first traversal.&#xA;         */</comments>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Stack.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Stack.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Stack.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="currSchemaDoc">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Stack.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="currDoc">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Continue">
                <comments>// must have processed this already!</comments>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.10"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.1/@variable"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="currRoot">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.31"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.1/@variable"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="dependenciesCanOccur">
              <typeReference xsi:type="types:Boolean">
                <comments>// process this schema's global decls</comments>
              </typeReference>
              <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <comments>// this loop makes sure the &lt;schema> element ordering is</comments>
                <comments>// also valid.</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Continue">
                    <comments>//skip it; traverse it later</comments>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                            <arguments xsi:type="references:StringReference" value="s4s-elt-invalid-content.3"/>
                            <arguments xsi:type="arrays:ArrayInstantiationByValues">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <arrayDimensionsBefore/>
                              <arrayInitializer>
                                <initialValues xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                </initialValues>
                              </arrayInitializer>
                            </arguments>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:UnaryExpression">
                        <operators xsi:type="operators:Negate"/>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.4/@variable"/>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference">
                        <comments>// we've dealt with this; mark as traversed</comments>
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.8"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.24"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                    </children>
                    <children xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.23"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                    </children>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <comments>// end march through &lt;redefine> children</comments>
                      <comments>// and now set as traversed</comments>
                      <comments>//DOMUtil.setHidden(globalComp);</comments>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                              <arguments xsi:type="references:StringReference" value="s4s-elt-invalid-content.3"/>
                              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <arrayDimensionsBefore/>
                                <arrayInitializer>
                                  <initialValues xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                  </initialValues>
                                </arrayInitializer>
                              </arguments>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:UnaryExpression">
                          <operators xsi:type="operators:Negate"/>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.4/@variable"/>
                        </condition>
                      </statements>
                      <statements xsi:type="statements:ForLoop">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:LocalVariableStatement">
                            <variable name="lName">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <initialValue xsi:type="references:IdentifierReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.36"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.65"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                              </initialValue>
                            </variable>
                          </statements>
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Continue">
                              <comments>// an error we'll catch later</comments>
                            </statement>
                            <condition xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:Equal"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                                </next>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                            </condition>
                          </statements>
                          <statements xsi:type="statements:LocalVariableStatement">
                            <variable name="qName">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <initialValue xsi:type="expressions:ConditionalExpression">
                                <child xsi:type="expressions:EqualityExpression">
                                  <equalityOperators xsi:type="operators:Equal"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                                    </next>
                                  </children>
                                  <children xsi:type="literals:NullLiteral"/>
                                </child>
                                <expressionIf xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="references:StringReference" value=","/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.0/@variable"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                </expressionIf>
                                <expressionElse xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                                    </next>
                                  </children>
                                  <children xsi:type="references:StringReference" value=","/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.0/@variable"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                </expressionElse>
                              </initialValue>
                            </variable>
                          </statements>
                          <statements xsi:type="statements:LocalVariableStatement">
                            <variable name="componentType">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <initialValue xsi:type="references:IdentifierReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                              </initialValue>
                            </variable>
                          </statements>
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.2/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                                </expression>
                              </statements>
                              <statements xsi:type="statements:LocalVariableStatement">
                                <variable name="targetLName">
                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                    <classifierReferences>
                                      <comments>// the check will have changed our name;</comments>
                                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                    </classifierReferences>
                                  </typeReference>
                                  <initialValue xsi:type="expressions:AdditiveExpression">
                                    <children xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.36"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.65"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                    </children>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                                    <additiveOperators xsi:type="operators:Addition"/>
                                  </initialValue>
                                </variable>
                              </statements>
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.112">
                                  <comments>// and all we need to do is error-check+rename our kkids:</comments>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.12"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.0/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.4/@statement/@statements.1/@variable"/>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.3/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.12"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                </arguments>
                              </next>
                            </condition>
                            <elseStatement xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.2/@variable"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                                  </expression>
                                </statements>
                                <statements xsi:type="statements:LocalVariableStatement">
                                  <variable name="targetLName">
                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                      <classifierReferences>
                                        <comments>// the check will have changed our name;</comments>
                                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                      </classifierReferences>
                                    </typeReference>
                                    <initialValue xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.36"/>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                                          <arguments xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.65"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                          </arguments>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                      </children>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                                      <additiveOperators xsi:type="operators:Addition"/>
                                    </initialValue>
                                  </variable>
                                </statements>
                                <statements xsi:type="statements:Condition">
                                  <comments>// and all we need to do is error-check+rename our kkids:</comments>
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.112">
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.15"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.0/@variable"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.4/@elseStatement/@statement/@statements.1/@variable"/>
                                      </expression>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.3/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.15"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </condition>
                                  <elseStatement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.112">
                                        <comments>// must be simpleType</comments>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.43"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.0/@variable"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.4/@elseStatement/@statement/@statements.1/@variable"/>
                                      </expression>
                                    </statements>
                                  </elseStatement>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:ConditionalOrExpression">
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.3/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.15"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </expression>
                                </children>
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.3/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.43"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </expression>
                                </children>
                              </condition>
                              <elseStatement xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.2/@variable"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="statements:LocalVariableStatement">
                                    <variable name="targetLName">
                                      <typeReference xsi:type="types:NamespaceClassifierReference">
                                        <classifierReferences>
                                          <comments>// the check will have changed our name;</comments>
                                          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                        </classifierReferences>
                                      </typeReference>
                                      <initialValue xsi:type="expressions:AdditiveExpression">
                                        <children xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.36"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                                            <arguments xsi:type="references:IdentifierReference">
                                              <next xsi:type="references:IdentifierReference">
                                                <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.65"/>
                                              </next>
                                              <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                            </arguments>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                        </children>
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                                        <additiveOperators xsi:type="operators:Addition"/>
                                      </initialValue>
                                    </variable>
                                  </statements>
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.112">
                                      <comments>// and all we need to do is error-check+rename our kids:</comments>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.22"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.0/@variable"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.4/@elseStatement/@elseStatement/@statement/@statements.1/@variable"/>
                                    </expression>
                                  </statements>
                                </statement>
                                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@statement/@statements.3/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.22"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </condition>
                              </elseStatement>
                            </elseStatement>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:NotEqual"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                          <children xsi:type="literals:NullLiteral"/>
                        </condition>
                        <init xsi:type="variables:LocalVariable" name="redefineComp">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.2"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                          </initialValue>
                        </init>
                        <updates xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.6"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@init"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                          </value>
                        </updates>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.37"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.4/@variable"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="literals:BooleanLiteral"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="lName">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.36"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.65"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                              </arguments>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Continue">
                          <comments>// an error we'll catch later</comments>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                            </next>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        </condition>
                      </statements>
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="qName">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="expressions:ConditionalExpression">
                            <child xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:Equal"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                                </next>
                              </children>
                              <children xsi:type="literals:NullLiteral"/>
                            </child>
                            <expressionIf xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="references:StringReference" value=","/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                            </expressionIf>
                            <expressionElse xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                                </next>
                              </children>
                              <children xsi:type="references:StringReference" value=","/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.1/@variable"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                            </expressionElse>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="componentType">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.3/@variable"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.4/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.11"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </condition>
                        <elseStatement xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.3/@variable"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.4/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.12"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                              </arguments>
                            </next>
                          </condition>
                          <elseStatement xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.3/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="expressions:ConditionalOrExpression">
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.4/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.15"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </expression>
                              </children>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.4/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.43"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </expression>
                              </children>
                            </condition>
                            <elseStatement xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.3/@variable"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.4/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.17"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                              </condition>
                              <elseStatement xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.3/@variable"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                                    </expression>
                                  </statements>
                                </statement>
                                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.4/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.22"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </condition>
                                <elseStatement xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.3/@variable"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                                      </expression>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@statement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statements.4/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.35"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </condition>
                                </elseStatement>
                              </elseStatement>
                            </elseStatement>
                          </elseStatement>
                        </elseStatement>
                      </statements>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="globalComp">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.2"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.3/@variable"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </initialValue>
            </init>
            <updates xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.6"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.5/@init"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </value>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <comments>// end for</comments>
              <comments>// now we're done with this one!</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.8"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.1/@variable"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="currSchemaDepends">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// now add the schemas this guy depends on</comments>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.0/@variable"/>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Stack.class.xmi#//@classifiers.0/@members.2"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.7/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.22"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.8/@init"/>
                      </next>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.8/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.7/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.14"/>
                </next>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.2/@statement/@statements.8/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Stack.class.xmi#//@classifiers.0/@members.5"/>
            </next>
          </child>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="traverseSchemas">
      <comments>// while</comments>
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// end buildGlobalNameRegistries</comments>
        <comments>// Beginning at the first schema processing was requested for</comments>
        <comments>// (fRoot), this method</comments>
        <comments>// examines each child (global schema information item) of each</comments>
        <comments>// schema document (and of each &lt;redefine> element)</comments>
        <comments>// corresponding to an XSDocumentInfo object.  If the</comments>
        <comments>// readOnly field on that node has not been set, it calls an</comments>
        <comments>// appropriate traverser to traverse it.  Once all global decls in</comments>
        <comments>// an XSDocumentInfo object have been traversed, it marks that object</comments>
        <comments>// as traversed (or hidden) in order to avoid infinite loops.  It completes</comments>
        <comments>// when it has visited all XSDocumentInfo objects in the</comments>
        <comments>// DependencyMap and marked them as traversed.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.117">
          <comments>// the process here is very similar to that in</comments>
          <comments>// buildGlobalRegistries, except we can't set our schemas as</comments>
          <comments>// hidden for a second time; so make them all visible again</comments>
          <comments>// first!</comments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="schemasToProcess">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Stack.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Stack.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.1/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Stack.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="currSchemaDoc">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Stack.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="currDoc">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="currSG">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../XSGrammarBucket.class.xmi#//@classifiers.0/@members.3"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                    </next>
                  </arguments>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Continue">
                <comments>// must have processed this already!</comments>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.10"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.1/@variable"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="currRoot">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.31"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.1/@variable"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <comments>// traverse this schema's global decls</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <comments>// We'll always want to set this as hidden!</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.8"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="componentType">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <comments>// includes and imports will not show up here!</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable">
                      <comments>// use the namespace decls for the redefine, instead of for the parent &lt;schema></comments>
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.17"/>
                        <arguments xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../SchemaNamespaceSupport.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                            </next>
                          </child>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ForLoop">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="redefinedComponentType">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@init"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.8"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@init"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="XSDAttributeGroupTraverser.class.xmi#//@classifiers.0/@members.2"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@init"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.2/@variable"/>
                              </next>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.12"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </condition>
                        <elseStatement xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="XSDComplexTypeTraverser.class.xmi#//@classifiers.0/@members.21"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@init"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.2/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.15"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                              </arguments>
                            </next>
                          </condition>
                          <elseStatement xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="XSDGroupTraverser.class.xmi#//@classifiers.0/@members.2"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@init"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.2/@variable"/>
                                  </next>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.22"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                </arguments>
                              </next>
                            </condition>
                            <elseStatement xsi:type="statements:Condition">
                              <comments>// annotations will have been processed already; this is now</comments>
                              <comments>// unnecessary</comments>
                              <comments>//else if (redefinedComponentType.equals(SchemaSymbols.ELT_ANNOTATION)) {</comments>
                              <comments>//    fElementTraverser.traverseAnnotationDecl(redefinedComp, null, true, currSchemaDoc);</comments>
                              <comments>//}</comments>
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.64">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="XSDSimpleTypeTraverser.class.xmi#//@classifiers.0/@members.3"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.2/@variable"/>
                                    </next>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.43"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                              </condition>
                              <elseStatement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                                    <arguments xsi:type="references:StringReference" value="s4s-elt-must-match.1"/>
                                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                      <typeReference xsi:type="types:NamespaceClassifierReference">
                                        <classifierReferences>
                                          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                        </classifierReferences>
                                      </typeReference>
                                      <arrayDimensionsBefore/>
                                      <arrayInitializer>
                                        <initialValues xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                        </initialValues>
                                        <initialValues xsi:type="references:StringReference" value="(annotation | (simpleType | complexType | group | attributeGroup))*"/>
                                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable"/>
                                      </arrayInitializer>
                                    </arguments>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@init"/>
                                  </expression>
                                </statements>
                              </elseStatement>
                            </elseStatement>
                          </elseStatement>
                        </elseStatement>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@init"/>
                      <children xsi:type="literals:NullLiteral"/>
                    </condition>
                    <init xsi:type="variables:LocalVariable" name="redefinedComp">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <initialValue xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.3"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                      </initialValue>
                    </init>
                    <updates xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@init"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.7"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.2/@statement/@statements.1/@init"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                      </value>
                    </updates>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable">
                      <comments>// end march through &lt;redefine> children</comments>
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.18"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.37"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="XSDAttributeTraverser.class.xmi#//@classifiers.0/@members.2"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.2/@variable"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.11"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="XSDAttributeGroupTraverser.class.xmi#//@classifiers.0/@members.2"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.2/@variable"/>
                          </next>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.12"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </condition>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="XSDComplexTypeTraverser.class.xmi#//@classifiers.0/@members.21"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.2/@variable"/>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.15"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                          </arguments>
                        </next>
                      </condition>
                      <elseStatement xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="XSDElementTraverser.class.xmi#//@classifiers.0/@members.5"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.2/@variable"/>
                              </next>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.17"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </condition>
                        <elseStatement xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="XSDGroupTraverser.class.xmi#//@classifiers.0/@members.2"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.2/@variable"/>
                                </next>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.1/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.22"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                              </arguments>
                            </next>
                          </condition>
                          <elseStatement xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="XSDNotationTraverser.class.xmi#//@classifiers.0/@members.1"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.2/@variable"/>
                                  </next>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.1/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.35"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                </arguments>
                              </next>
                            </condition>
                            <elseStatement xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.64">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="XSDSimpleTypeTraverser.class.xmi#//@classifiers.0/@members.3"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.2/@variable"/>
                                    </next>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.1/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.43"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                              </condition>
                              <elseStatement xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.2/@variable">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.89"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="XSDAbstractTraverser.class.xmi#//@classifiers.0/@members.15"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.23"/>
                                              </next>
                                            </arguments>
                                            <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable"/>
                                          </next>
                                        </arguments>
                                      </next>
                                    </expression>
                                  </statements>
                                </statement>
                                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@statement/@statements.1/@variable">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.7"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </condition>
                                <elseStatement xsi:type="statements:Block">
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                                      <arguments xsi:type="references:StringReference" value="s4s-elt-invalid-content.1"/>
                                      <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                        <typeReference xsi:type="types:NamespaceClassifierReference">
                                          <classifierReferences>
                                            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                          </classifierReferences>
                                        </typeReference>
                                        <arrayDimensionsBefore/>
                                        <arrayInitializer>
                                          <initialValues xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.39"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                          </initialValues>
                                          <initialValues xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                          </initialValues>
                                        </arrayInitializer>
                                      </arguments>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                                    </expression>
                                  </statements>
                                </elseStatement>
                              </elseStatement>
                            </elseStatement>
                          </elseStatement>
                        </elseStatement>
                      </elseStatement>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="globalComp">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.3"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.4/@variable"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </initialValue>
            </init>
            <updates xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.7"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.5/@init"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </value>
            </updates>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable">
              <comments>// end for</comments>
              <comments>// now we're done with this one!</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.24"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.8"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.1/@variable"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="currSchemaDepends">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// now add the schemas this guy depends on</comments>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.0/@variable"/>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Stack.class.xmi#//@classifiers.0/@members.2"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.8/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.22"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.9/@init"/>
                      </next>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.9/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.8/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.14"/>
                </next>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.3/@statement/@statements.9/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Stack.class.xmi#//@classifiers.0/@members.5"/>
            </next>
          </child>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:Field" name="fReportedTNS">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// end traverseSchemas</comments>
        <comments>// store whether we have reported an error about that no grammar</comments>
        <comments>// is found for the given namespace uri</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="needReportTNSError">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="uri">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// check whether we need to report an error against the given uri.</comments>
        <comments>// if we have reported an error, then we don't need to report again;</comments>
        <comments>// otherwise we reported the error, and remember this fact.</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.92"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </value>
          </expression>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.92"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.92">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.93/@parameters.0"/>
            </next>
          </condition>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.92">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.28"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.93/@parameters.0"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
      </statements>
    </members>
    <members xsi:type="members:Field" name="COMP_TYPE">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <initialValues xsi:type="literals:NullLiteral"/>
          <initialValues xsi:type="references:StringReference" value="attribute declaration">
            <comments>// index 0</comments>
          </initialValues>
          <initialValues xsi:type="references:StringReference" value="attribute group"/>
          <initialValues xsi:type="references:StringReference" value="element declaration"/>
          <initialValues xsi:type="references:StringReference" value="group"/>
          <initialValues xsi:type="references:StringReference" value="identity constraint"/>
          <initialValues xsi:type="references:StringReference" value="notation"/>
          <initialValues xsi:type="references:StringReference" value="type definition"/>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="CIRCULAR_CODES">
      <initialValue xsi:type="arrays:ArrayInstantiationByValues">
        <arrayInitializer>
          <comments>//or ct-props-correct.3</comments>
          <initialValues xsi:type="references:StringReference" value="Internal-Error"/>
          <initialValues xsi:type="references:StringReference" value="Internal-Error"/>
          <initialValues xsi:type="references:StringReference" value="src-attribute_group.3"/>
          <initialValues xsi:type="references:StringReference" value="e-props-correct.6"/>
          <initialValues xsi:type="references:StringReference" value="mg-props-correct.2"/>
          <initialValues xsi:type="references:StringReference" value="Internal-Error"/>
          <initialValues xsi:type="references:StringReference" value="Internal-Error"/>
          <initialValues xsi:type="references:StringReference" value="st-props-correct.2"/>
        </arrayInitializer>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:ClassMethod" name="getGlobalDecl">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="currSchema">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="declType">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="declToTraverse">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="elmNode">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// since it is forbidden for traversers to talk to each other</comments>
        <comments>// directly (except wen a traverser encounters a local declaration),</comments>
        <comments>// this provides a generic means for a traverser to call</comments>
        <comments>// for the traversal of some declaration.  An XSDocumentInfo is</comments>
        <comments>// required because the XSDocumentInfo that the traverser is traversing</comments>
        <comments>// may bear no relation to the one the handler is operating on.</comments>
        <comments>// This method will:</comments>
        <comments>// 1.  See if a global definition matching declToTraverse exists;</comments>
        <comments>// 2. if so, determine if there is a path from currSchema to the</comments>
        <comments>// schema document where declToTraverse lives (i.e., do a lookup</comments>
        <comments>// in DependencyMap);</comments>
        <comments>// 3. depending on declType (which will be relevant to step 1 as</comments>
        <comments>// well), call the appropriate traverser with the appropriate</comments>
        <comments>// XSDocumentInfo object.</comments>
        <comments>// This method returns whatever the traverser it called returned;</comments>
        <comments>// this will be an Object of some kind</comments>
        <comments>// that lives in the Grammar.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="TRAVERSE_GL: "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.13"/>
                      </next>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// from the schema spec, all built-in types are present in all schemas,</comments>
        <comments>// so if the requested component is a type, and could be found in the</comments>
        <comments>// default schema grammar, we should return that type.</comments>
        <comments>// otherwise (since we would support user-defined schema grammar) we'll</comments>
        <comments>// use the normal way to get the decl</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="retObj">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.59"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                        </arguments>
                      </next>
                      <target xsi:type="members:Field" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.32"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Return">
                  <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.1/@statement/@statements.0/@statement/@statements.0/@variable"/>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.1/@statement/@statements.0/@statement/@statements.0/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.1"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </children>
            <children xsi:type="literals:NullLiteral"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.5"/>
              </next>
              <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
            </children>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// now check whether this document can access the requsted namespace</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <comments>// cannot get to this schema from the one containing the requesting decl</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="code">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="expressions:ConditionalExpression">
                    <child xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                        </next>
                      </children>
                      <children xsi:type="literals:NullLiteral"/>
                    </child>
                    <expressionIf xsi:type="references:StringReference" value="src-resolve.4.1"/>
                    <expressionElse xsi:type="references:StringReference" value="src-resolve.4.2"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.2/@statement/@statements.0/@statement/@statements.0/@variable"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.0">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.9"/>
                            </next>
                          </arguments>
                        </next>
                      </initialValues>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                        </next>
                      </initialValues>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.2"/>
                        </next>
                      </initialValues>
                    </arrayInitializer>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.3"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </arguments>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.21"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </arguments>
            </next>
          </child>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sGrammar">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// check whether there is grammar for the requested namespace</comments>
              <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../XSGrammarBucket.class.xmi#//@classifiers.0/@members.3"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </arguments>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                <arguments xsi:type="references:StringReference" value="src-resolve"/>
                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arrayDimensionsBefore/>
                  <arrayInitializer>
                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.2"/>
                      </next>
                    </initialValues>
                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.94">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.1"/>
                      </arraySelectors>
                    </initialValues>
                  </arrayInitializer>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.3"/>
              </expression>
            </statement>
            <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.93">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </arguments>
            </condition>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="retObj">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// if there is such grammar, check whether the requested component is in the grammar</comments>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.54"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.55"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.56"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.57"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.60"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.58"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../SchemaGrammar.class.xmi#//@classifiers.0/@members.59"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.1"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// if the component is parsed, return it</comments>
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="schemaWithDecl">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="decl">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="declKey">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// the component is not parsed, try to find a DOM element for it</comments>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </children>
              <children xsi:type="literals:NullLiteral"/>
            </child>
            <expressionIf xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value=","/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
            </expressionIf>
            <expressionElse xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </children>
              <children xsi:type="references:StringReference" value=","/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </expressionElse>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.10/@variable"/>
                  </next>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.10/@variable"/>
                  </next>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.10/@variable"/>
                  </next>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.10/@variable"/>
                  </next>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.10/@variable"/>
                  </next>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.10/@variable"/>
                  </next>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.10/@variable"/>
                  </next>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
              <arguments xsi:type="references:StringReference" value="Internal-Error"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="XSDHandler asked to locate component of type "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.1"/>
                    <children xsi:type="references:StringReference" value="; it does not recognize this type!"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.3"/>
            </expression>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.1"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// no DOM element found, so the component can't be located</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
              <arguments xsi:type="references:StringReference" value="src-resolve"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </initialValues>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.94">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.1"/>
                    </arraySelectors>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.3"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.8/@variable">
            <comments>// get the schema doc containing the component to be parsed</comments>
            <comments>// it should always return non-null value, but since null-checking</comments>
            <comments>// comes for free, let's be safe and check again</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.115">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="code">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// cannot get to this schema from the one containing the requesting decl</comments>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:ConditionalExpression">
                <child xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                  </children>
                  <children xsi:type="literals:NullLiteral"/>
                </child>
                <expressionIf xsi:type="references:StringReference" value="src-resolve.4.1"/>
                <expressionElse xsi:type="references:StringReference" value="src-resolve.4.2"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.14/@statement/@statements.0/@variable"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.0">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.9"/>
                        </next>
                      </arguments>
                    </next>
                  </initialValues>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                  </initialValues>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.3"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.8/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// a component is hidden, meaning either it's traversed, or being traversed.</comments>
        <comments>// but we didn't find it in the grammar, so it's the latter case, and</comments>
        <comments>// a circular reference. error!</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="code">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.95">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.1"/>
                </arraySelectors>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.15/@statement/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:StringReference" value="ct-props-correct.3"/>
                  </expression>
                </statement>
                <condition xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                    <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.15"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.1"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
              <comments>// decl must not be null if we're here...</comments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.15/@statement/@statements.0/@variable"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                    </children>
                    <children xsi:type="references:StringReference" value=":"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.2">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.3"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.10"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <comments>// hide the element node before traversing it</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.8"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="nsSupport">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../SchemaNamespaceSupport.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="parent">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// if the parent is &lt;redefine> use the namespace delcs for it.</comments>
              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.29"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.17/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../SchemaNamespaceSupport.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.18/@variable"/>
                </next>
              </child>
            </value>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.37"/>
                </next>
                <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.18/@variable"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.8/@variable">
          <comments>// back up the current SchemaNamespaceSupport, because we need to provide</comments>
          <comments>// a fresh one to the traverseGlobal methods.</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.17/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Switch">
        <comments>// traverse the referenced global component</comments>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="XSDAttributeTraverser.class.xmi#//@classifiers.0/@members.2"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.8/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="XSDAttributeGroupTraverser.class.xmi#//@classifiers.0/@members.2"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.8/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="XSDElementTraverser.class.xmi#//@classifiers.0/@members.5"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.8/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="XSDGroupTraverser.class.xmi#//@classifiers.0/@members.2"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.8/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable">
                <comments>// identity constraints should have been parsed already...</comments>
                <comments>// we should never get here</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="XSDNotationTraverser.class.xmi#//@classifiers.0/@members.1"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.8/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="XSDComplexTypeTraverser.class.xmi#//@classifiers.0/@members.21"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.8/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable"/>
                  </next>
                </value>
              </expression>
            </statement>
            <condition xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.15"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
            </condition>
            <elseStatement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.64">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="XSDSimpleTypeTraverser.class.xmi#//@classifiers.0/@members.3"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.9/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.8/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.3/@variable"/>
                  </next>
                </value>
              </expression>
            </elseStatement>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@parameters.1"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.8/@variable">
          <comments>// restore the previous SchemaNamespaceSupport, so that the caller can get</comments>
          <comments>// proper namespace binding.</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.18"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96/@statements.5/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getGrpOrAttrGrpRedefinedByRestriction">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>// getGlobalDecl(XSDocumentInfo, int, QName):  Object</comments>
          <comments>// This method determines whether there is a group</comments>
          <comments>// (attributeGroup) which the given one has redefined by</comments>
          <comments>// restriction.  If so, it returns it; else it returns null.</comments>
          <comments>// @param type:  whether what's been redefined is an</comments>
          <comments>// attributeGroup or a group;</comments>
          <comments>// @param name:  the QName of the component doing the redefining.</comments>
          <comments>// @param currSchema:  schema doc in which the redefining component lives.</comments>
          <comments>// @return:  Object representing decl redefined if present, null</comments>
          <comments>// otherwise.</comments>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="currSchema">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="elmNode">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="realName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@parameters.1">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </children>
              <children xsi:type="literals:NullLiteral"/>
            </child>
            <expressionIf xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@parameters.1">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </children>
              <children xsi:type="references:StringReference" value=","/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@parameters.1">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </expressionIf>
            <expressionElse xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value=","/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@parameters.1">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
            </expressionElse>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="nameToFind">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.0/@variable"/>
                  </next>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.0/@variable"/>
                  </next>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@parameters.0"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="literals:NullLiteral"/>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.1/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="commaPos">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.49"/>
              <arguments xsi:type="references:StringReference" value=","/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="qNameToFind">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../util/XMLSymbols.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../util/XMLSymbols.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.55"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.4/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.55"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.4/@variable"/>
              </next>
            </arguments>
            <arguments xsi:type="expressions:ConditionalExpression">
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.4/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </expression>
              </child>
              <expressionIf xsi:type="literals:NullLiteral"/>
              <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.56"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.4/@variable"/>
                </next>
              </expressionElse>
            </arguments>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="retObj">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.96">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.5/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@parameters.3"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Switch">
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                  <arguments xsi:type="references:StringReference" value="src-redefine.7.2.1"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@parameters.1">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                      </initialValues>
                    </arrayInitializer>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@parameters.3"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                  <arguments xsi:type="references:StringReference" value="src-redefine.6.2.1"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@parameters.1">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                      </initialValues>
                    </arrayInitializer>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@parameters.3"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
            </cases>
            <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@parameters.0"/>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.6/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97/@statements.6/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="resolveKeyRefs">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// getGrpOrAttrGrpRedefinedByRestriction(int, QName, XSDocumentInfo):  Object</comments>
        <comments>// Since ID constraints can occur in local elements, unless we</comments>
        <comments>// wish to completely traverse all our DOM trees looking for ID</comments>
        <comments>// constraints while we're building our global name registries,</comments>
        <comments>// which seems terribly inefficient, we need to resolve keyrefs</comments>
        <comments>// after all parsing is complete.  This we can simply do by running through</comments>
        <comments>// fIdentityConstraintRegistry and calling traverseKeyRef on all</comments>
        <comments>// of the KeyRef nodes.  This unfortunately removes this knowledge</comments>
        <comments>// from the elementTraverser class (which must ignore keyrefs),</comments>
        <comments>// but there seems to be no efficient way around this...</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="keyrefDoc">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98/@statements.0/@init"/>
                    </arraySelectors>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="keyrefSchemaDoc">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98/@statements.0/@statement/@statements.0/@variable"/>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98/@statements.0/@statement/@statements.1/@variable">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../SchemaNamespaceSupport.class.xmi#//@classifiers.0/@members.4"/>
                </next>
                <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98/@statements.0/@statement/@statements.1/@variable">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../SchemaNamespaceSupport.class.xmi#//@classifiers.0/@members.2"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98/@statements.0/@init"/>
                    </arraySelectors>
                  </arguments>
                </next>
                <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="keyrefGrammar">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../XSGrammarBucket.class.xmi#//@classifiers.0/@members.3"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98/@statements.0/@statement/@statements.1/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                    </next>
                  </arguments>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <comments>// need to set &lt;keyref> to hidden before traversing it,</comments>
              <comments>// because it has global scope</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.8"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98/@statements.0/@init"/>
                  </arraySelectors>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="XSDKeyrefTraverser.class.xmi#//@classifiers.0/@members.1"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98/@statements.0/@init"/>
                  </arraySelectors>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98/@statements.0/@init"/>
                  </arraySelectors>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98/@statements.0/@statement/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98/@statements.0/@statement/@statements.4/@variable"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98/@statements.0/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98/@statements.0/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getIDRegistry">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// end resolveKeyRefs</comments>
        <comments>// an accessor method.  Just makes sure callers</comments>
        <comments>// who want the Identity constraint registry vaguely know what they're about.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="storeKeyRef">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyrefToStore">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="schemaDoc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="currElemDecl">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../XSElementDecl.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// This method squirrels away &lt;keyref> declarations--along with the element</comments>
        <comments>// decls and namespace bindings they might find handy.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="keyrefName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.36"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.65"/>
                </next>
                <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="keyrefQName">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:ConditionalExpression">
                <child xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@parameters.1">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                    </next>
                  </children>
                  <children xsi:type="literals:NullLiteral"/>
                </child>
                <expressionIf xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value=","/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@statements.0/@variable"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </expressionIf>
                <expressionElse xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@parameters.1">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                    </next>
                  </children>
                  <children xsi:type="references:StringReference" value=","/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@statements.0/@variable"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </expressionElse>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@statements.1/@statement/@statements.0/@variable"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@parameters.1"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
            </next>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// now set up all the registries we'll need...</comments>
        <comments>// check array sizes</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="elemArray">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <sizes xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </sizes>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@statements.2/@statement/@statements.0/@variable"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@statements.2/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="declArray">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../XSElementDecl.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../XSElementDecl.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <sizes xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </sizes>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@statements.2/@statement/@statements.3/@variable"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@statements.2/@statement/@statements.3/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="stringArray">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arrayDimensionsBefore/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <sizes xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.77"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </sizes>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@statements.2/@statement/@statements.6/@variable"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@statements.2/@statement/@statements.6/@variable"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79">
            <next xsi:type="references:IdentifierReference"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@parameters.2"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81">
            <arraySelectors>
              <position xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78"/>
                <operator xsi:type="operators:PlusPlus"/>
              </position>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100/@parameters.1">
            <next xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../SchemaNamespaceSupport.class.xmi#//@classifiers.0/@members.3"/>
              </next>
              <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </value>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="resolveSchema">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="desc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mustResolve">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="referElement">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// storeKeyref (Element, XSDocumentInfo, XSElementDecl): void</comments>
        <comments>/**&#xA;     * resolveSchema method is responsible for resolving location of the schema (using XMLEntityResolver), &#xA;     * and if it was succefully resolved getting the schema Document.&#xA;     * @param desc&#xA;     * @param mustResolve&#xA;     * @param referElement&#xA;     * @return A schema Document or null.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="schemaSource">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101/@statements.0/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../XMLSchemaLoader.class.xmi#//@classifiers.0/@members.60"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51"/>
              </next>
              <target xsi:type="classifiers:Class" href="../XMLSchemaLoader.class.xmi#//@classifiers.0"/>
            </value>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                  <arguments xsi:type="references:StringReference" value="schema_reference.4"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          </arraySelectors>
                          <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.18"/>
                        </next>
                      </initialValues>
                    </arrayInitializer>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101/@parameters.2"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101/@parameters.1"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.122">
                  <arguments xsi:type="references:StringReference" value="schema_reference.4"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <arraySelectors>
                            <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          </arraySelectors>
                          <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.18"/>
                        </next>
                      </initialValues>
                    </arrayInitializer>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101/@parameters.2"/>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <parameter name="ex">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.102">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.17"/>
            </next>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../xni/parser/XMLInputSource.class.xmi#//@classifiers.0/@members.23"/>
            </next>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101/@parameters.1"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../XSDDescription.class.xmi#//@classifiers.0/@members.16"/>
            </next>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101/@parameters.2"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getSchema">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="schemaNamespace">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="schemaSource">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../javax/xml/transform/Source.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="mustResolve">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="referType">
        <typeReference xsi:type="types:Short"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="referElement">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// getSchema(String, String, String, boolean, short):  Document</comments>
        <comments>/**&#xA;     * getSchemaDocument method uses XMLInputSource to parse a schema document. &#xA;     * @param schemaNamespace&#xA;     * @param schemaSource&#xA;     * @param mustResolve&#xA;     * @param referType&#xA;     * @param referElement&#xA;     * @return A schema Document.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="hasInput">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="schemaDoc">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// contents of this method will depend on the system we adopt for entity resolution--i.e., XMLEntityHandler, EntityHandler, etc.</comments>
              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:Condition">
          <comments>// when the system id and byte stream and character stream</comments>
          <comments>// of the input source are all null, it's</comments>
          <comments>// impossible to find the schema document. so we skip in</comments>
          <comments>// this case. otherwise we'll receive some NPE or</comments>
          <comments>// file not found errors. but schemaHint==&quot;&quot; is perfectly</comments>
          <comments>// legal for import.</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="key">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.123">
                    <comments>// When the system id of the input source is used, first try to</comments>
                    <comments>// expand it, and check whether the same document has been</comments>
                    <comments>// parsed before. If so, return the document corresponding to</comments>
                    <comments>// that system id.</comments>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="literals:NullLiteral"/>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="schemaId">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="literals:NullLiteral"/>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.1/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../javax/xml/transform/Source.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences target="//@classifiers.0/@members.123"/>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.1/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.3"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.0"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="literals:BooleanLiteral" value="true"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.1/@variable"/>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.1/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.0/@variable"/>
                            </next>
                          </child>
                        </value>
                      </expression>
                    </children>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.3"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
                </children>
              </condition>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67">
                    <comments>// If this is the first schema this Handler has</comments>
                    <comments>// parsed, it has to construct a DOMParser</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../opti/SchemaParsingConfig.class.xmi#//@classifiers.0/@members.39"/>
                      <arguments xsi:type="expressions:NestedExpression">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../util/XMLInputSourceAdaptor.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                        <expression xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../util/XMLInputSourceAdaptor.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1"/>
                        </expression>
                      </arguments>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.1/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../opti/SchemaParsingConfig.class.xmi#//@classifiers.0/@members.44"/>
                      </next>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:InstanceOfExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../util/XMLInputSourceAdaptor.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1"/>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:TryBlock">
                    <comments>// Xerces needs a special kind of DOM, so</comments>
                    <comments>// we have to clone it into that form otherwise</comments>
                    <comments>// things won't work.</comments>
                    <comments>// TODO: this dependency to a particular DOM implementation</comments>
                    <comments>// should be fixed.</comments>
                    <comments>// but then SchemaDOM doesn't support importNode,</comments>
                    <comments>// so here we just rely on IdentityTransformer</comments>
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="t">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/Transformer.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <initialValue xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../javax/xml/transform/TransformerFactory.class.xmi#//@classifiers.0/@members.3"/>
                            </next>
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../javax/xml/transform/TransformerFactory.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/TransformerFactory.class.xmi#//@classifiers.0"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="p">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../opti/SchemaDOMParser.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <initialValue xsi:type="instantiations:NewConstructorCall">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../opti/SchemaDOMParser.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@statement/@statements.0/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../javax/xml/transform/Transformer.class.xmi#//@classifiers.0/@members.2"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1"/>
                          <arguments xsi:type="instantiations:NewConstructorCall">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/sax/SAXResult.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arguments xsi:type="instantiations:NewConstructorCall">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../util/SAX2XNI.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@statement/@statements.0/@statements.1/@variable"/>
                            </arguments>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.1/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@statement/@statements.0/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../opti/SchemaDOMParser.class.xmi#//@classifiers.0/@members.19"/>
                          </next>
                        </value>
                      </expression>
                    </statements>
                    <catcheBlocks>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@statement/@statements.0/@catcheBlocks.0/@parameter">
                          <comments>// impossible.</comments>
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../javax/xml/transform/TransformerException.class.xmi#//@classifiers.0/@members.14"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Throw">
                        <throwable xsi:type="instantiations:NewConstructorCall">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/InternalError.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                        </throwable>
                      </statements>
                      <parameter name="e">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/TransformerException.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                      </parameter>
                    </catcheBlocks>
                  </statements>
                </statement>
                <condition xsi:type="expressions:InstanceOfExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/dom/DOMSource.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1"/>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../opti/SchemaParsingConfig.class.xmi#//@classifiers.0/@members.39"/>
                          <arguments xsi:type="instantiations:NewConstructorCall">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arguments xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/stream/StreamSource.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1"/>
                            </arguments>
                          </arguments>
                        </next>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.1/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../opti/SchemaParsingConfig.class.xmi#//@classifiers.0/@members.44"/>
                          </next>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:InstanceOfExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/stream/StreamSource.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1"/>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="ss">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/sax/SAXSource.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="expressions:CastExpression">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/sax/SAXSource.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="reader">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/xml/sax/XMLReader.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../javax/xml/transform/sax/SAXSource.class.xmi#//@classifiers.0/@members.7"/>
                            </next>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@variable"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="instantiations:NewConstructorCall">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../parsers/SAXParser.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                              </value>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:TryBlock">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/xml/sax/XMLReader.class.xmi#//@classifiers.0/@members.1"/>
                                  <arguments xsi:type="references:StringReference" value="http://xml.org/sax/features/namespaces"/>
                                  <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                                </next>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/xml/sax/XMLReader.class.xmi#//@classifiers.0/@members.1"/>
                                  <arguments xsi:type="references:StringReference" value="http://xml.org/sax/features/namespace-prefixes"/>
                                  <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                                </next>
                              </expression>
                            </statements>
                            <catcheBlocks>
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.2/@statement/@statements.1/@catcheBlocks.0/@parameter">
                                  <comments>// impossible</comments>
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.14"/>
                                  </next>
                                </expression>
                              </statements>
                              <statements xsi:type="statements:Throw">
                                <throwable xsi:type="instantiations:NewConstructorCall">
                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                    <classifierReferences>
                                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/InternalError.class.xmi#//@classifiers.0"/>
                                    </classifierReferences>
                                  </typeReference>
                                </throwable>
                              </statements>
                              <parameter name="e">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../../../../../../../org/xml/sax/SAXException.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                              </parameter>
                            </catcheBlocks>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@variable"/>
                          <children xsi:type="literals:NullLiteral"/>
                        </condition>
                      </statements>
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="p">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../opti/SchemaDOMParser.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="instantiations:NewConstructorCall">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../opti/SchemaDOMParser.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/xml/sax/XMLReader.class.xmi#//@classifiers.0/@members.8"/>
                            <arguments xsi:type="instantiations:NewConstructorCall">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../util/SAX2XNI.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.3/@variable"/>
                            </arguments>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/xml/sax/XMLReader.class.xmi#//@classifiers.0/@members.10"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../XMLErrorReporter.class.xmi#//@classifiers.0/@members.34"/>
                              </next>
                            </arguments>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:TryBlock">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/xml/sax/XMLReader.class.xmi#//@classifiers.0/@members.12"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../javax/xml/transform/sax/SAXSource.class.xmi#//@classifiers.0/@members.9"/>
                                </next>
                              </arguments>
                            </next>
                          </expression>
                        </statements>
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.1/@variable"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.3/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.3/@variable">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../opti/SchemaDOMParser.class.xmi#//@classifiers.0/@members.19"/>
                              </next>
                            </value>
                          </expression>
                        </statements>
                        <catcheBlocks>
                          <comments>// should have already been reported.</comments>
                          <statements xsi:type="statements:EmptyStatement"/>
                          <parameter name="e">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../../../org/xml/sax/SAXException.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                          </parameter>
                        </catcheBlocks>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:InstanceOfExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../../../javax/xml/transform/sax/SAXSource.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1"/>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:Throw">
                        <throwable xsi:type="instantiations:NewConstructorCall">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1">
                            <next xsi:type="references:MethodCall">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/Class.class.xmi#//@classifiers.0/@members.44"/>
                              </next>
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.2"/>
                            </next>
                          </arguments>
                        </throwable>
                      </statements>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </statements>
            <statements xsi:type="statements:Condition">
              <comments>// now we need to store the mapping information from system id</comments>
              <comments>// to the document. also from the document to the system id.</comments>
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.0/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.1/@variable"/>
                  </next>
                </expression>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.1/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.1/@variable"/>
                  </next>
                </expression>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.2/@statements.0/@statement/@statements.1/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral"/>
              </expression>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.1/@variable"/>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral"/>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <catcheBlocks>
          <parameter name="ex">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// either an error occured (exception), or empty input source was</comments>
        <comments>// returned, we need to report an error or a warning</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                  <arguments xsi:type="references:StringReference" value="schema_reference.4"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../javax/xml/transform/Source.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                      </initialValues>
                    </arrayInitializer>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.4"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@statements.0/@variable"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                  <arguments xsi:type="references:StringReference" value="schema_reference.4"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="expressions:ConditionalExpression">
                        <child xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1"/>
                          <children xsi:type="literals:NullLiteral"/>
                        </child>
                        <expressionIf xsi:type="references:StringReference" value=""/>
                        <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.1">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../javax/xml/transform/Source.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                        </expressionElse>
                      </initialValues>
                    </arrayInitializer>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.4"/>
                </expression>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102/@parameters.2"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:NullLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createTraversers">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// getSchema(String, XMLInputSource, boolean, boolean): Document</comments>
        <comments>// initialize all the traversers.</comments>
        <comments>// this should only need to be called once during the construction</comments>
        <comments>// of this object; it creates the traversers that will be used to</comments>
        <comments>// construct schemaGrammars.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XSAttributeChecker.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XSDAttributeGroupTraverser.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XSDAttributeTraverser.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XSDComplexTypeTraverser.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XSDElementTraverser.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XSDGroupTraverser.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XSDKeyrefTraverser.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XSDNotationTraverser.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.64"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XSDSimpleTypeTraverser.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XSDUniqueOrKeyTraverser.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XSDWildcardTraverser.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52"/>
          </value>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="prepareForParse">
      <typeReference xsi:type="types:Void">
        <comments>// createTraversers()</comments>
        <comments>// before parsing a schema, need to clear registries associated with</comments>
        <comments>// parsing schemas</comments>
      </typeReference>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="prepareForTraverse">
      <typeReference xsi:type="types:Void">
        <comments>// before traversing a schema's parse tree, need to reset all traversers and</comments>
        <comments>// clear all registries</comments>
      </typeReference>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <comments>// clear local element stack</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.105/@statements.15/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.105/@statements.15/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.75">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.105/@statements.15/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.105/@statements.15/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.105/@statements.15/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <comments>// and do same for keyrefs.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.79">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.105/@statements.17/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.105/@statements.17/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.105/@statements.17/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.105/@statements.17/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.105/@statements.17/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// create traversers if necessary</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.103"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52">
          <comments>// reset traversers</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSAttributeChecker.class.xmi#//@classifiers.0/@members.102"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSDAbstractTraverser.class.xmi#//@classifiers.0/@members.14"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSDAbstractTraverser.class.xmi#//@classifiers.0/@members.14"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSDAbstractTraverser.class.xmi#//@classifiers.0/@members.14"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSDElementTraverser.class.xmi#//@classifiers.0/@members.7"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSDAbstractTraverser.class.xmi#//@classifiers.0/@members.14"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSDAbstractTraverser.class.xmi#//@classifiers.0/@members.14"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSDAbstractTraverser.class.xmi#//@classifiers.0/@members.14"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.64">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSDAbstractTraverser.class.xmi#//@classifiers.0/@members.14"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSDAbstractTraverser.class.xmi#//@classifiers.0/@members.14"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="XSDAbstractTraverser.class.xmi#//@classifiers.0/@members.14"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.30"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setDeclPool">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="declPool">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../XSDeclarationPool.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.106/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="reset">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="componentManager">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53">
            <comments>// set symbol table</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../util/SymbolTable.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0/@members.1"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
              </next>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../util/SecurityManager.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0/@members.1"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                    </next>
                  </child>
                </value>
              </expression>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:EmptyStatement"/>
              <parameter name="xmlConfigurationException">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51">
            <comments>//set entity resolver</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../xni/parser/XMLEntityResolver.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0/@members.1"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
              </next>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="er">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../xni/parser/XMLEntityResolver.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../xni/parser/XMLEntityResolver.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0/@members.1"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
              </next>
            </child>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../parsers/BasicParserConfiguration.class.xmi#//@classifiers.0/@members.26"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@statements.4/@variable"/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@statements.4/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50">
            <comments>// set error reporter</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../XMLErrorReporter.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0/@members.1"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
              </next>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="currErrorHandler">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../xni/parser/XMLErrorHandler.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../XMLErrorReporter.class.xmi#//@classifiers.0/@members.33"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// Setting a parser property can be much more expensive</comments>
          <comments>// than checking its value.  Don't set the ERROR_HANDLER</comments>
          <comments>// property unless it's actually changed.</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../parsers/BasicParserConfiguration.class.xmi#//@classifiers.0/@members.31"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@statements.7/@statements.0/@variable"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@statements.7/@statements.0/@variable"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.13"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              </next>
            </children>
          </condition>
        </statements>
        <catcheBlocks>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../parsers/BasicParserConfiguration.class.xmi#//@classifiers.0/@members.30"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../XMLErrorReporter.class.xmi#//@classifiers.0/@members.28"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <catcheBlocks>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../parsers/BasicParserConfiguration.class.xmi#//@classifiers.0/@members.30"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0/@members.0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <catcheBlocks>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../parsers/BasicParserConfiguration.class.xmi#//@classifiers.0/@members.30"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0/@members.0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <catcheBlocks>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.56"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../xni/grammars/XMLGrammarPool.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0/@members.1"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                </next>
              </child>
            </value>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.56"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <comments>// security features</comments>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../parsers/BasicParserConfiguration.class.xmi#//@classifiers.0/@members.30"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0/@members.0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
                </next>
              </arguments>
            </next>
          </expression>
        </statements>
        <catcheBlocks>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="security">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0/@members.1"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../parsers/BasicParserConfiguration.class.xmi#//@classifiers.0/@members.31"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@statements.13/@statements.0/@variable"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107/@statements.13/@statements.0/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <catcheBlocks>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="traverseLocalElements">
      <typeReference xsi:type="types:Void">
        <comments>// reset(XMLComponentManager)</comments>
        <comments>/**&#xA;     * Traverse all the deferred local elements. This method should be called&#xA;     * by traverseSchemas after we've done with all the global declarations.&#xA;     */</comments>
      </typeReference>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="XSDElementTraverser.class.xmi#//@classifiers.0/@members.1"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="currElem">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@init"/>
                </arraySelectors>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="currSchema">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.30"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@statement/@statements.0/@variable"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="currGrammar">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../SchemaGrammar.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../XSGrammarBucket.class.xmi#//@classifiers.0/@members.3"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@statement/@statements.1/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                    </next>
                  </arguments>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="XSDElementTraverser.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@init"/>
                  </arraySelectors>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@statement/@statements.0/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@statement/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@statement/@statements.2/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@init"/>
                  </arraySelectors>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.74">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@init"/>
                  </arraySelectors>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// If it's an empty particle, remove it from the containing component.</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="group">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../XSModelGroupImpl.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@statement/@statements.4/@statement/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../XSModelGroupImpl.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="expressions:NestedExpression">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:InterfaceMethod" href="../../../xs/XSParticle.class.xmi#//@classifiers.0/@members.3"/>
                          </next>
                          <target xsi:type="members:ClassMethod" href="../XSComplexTypeDecl.class.xmi#//@classifiers.0/@members.47"/>
                        </next>
                        <expression xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../XSComplexTypeDecl.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.74">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@init"/>
                            </arraySelectors>
                          </child>
                        </expression>
                      </child>
                    </value>
                  </expression>
                </statement>
                <condition xsi:type="expressions:InstanceOfExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../XSComplexTypeDecl.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.74">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@init"/>
                    </arraySelectors>
                  </child>
                </condition>
                <elseStatement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@statement/@statements.4/@statement/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:NestedExpression">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../XSGroupDecl.class.xmi#//@classifiers.0/@members.2"/>
                      </next>
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../XSGroupDecl.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.74">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@init"/>
                          </arraySelectors>
                        </child>
                      </expression>
                    </value>
                  </expression>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.109">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@statement/@statements.4/@statement/@statements.0/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@init"/>
                    </arraySelectors>
                  </arguments>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../XSParticleDecl.class.xmi#//@classifiers.0/@members.7"/>
                </next>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@init"/>
                </arraySelectors>
              </children>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../XSParticleDecl.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="../XSParticleDecl.class.xmi#//@classifiers.0"/>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108/@statements.1/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="removeParticle">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="group">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../XSModelGroupImpl.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="particle">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../XSParticleDecl.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="member">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../XSParticleDecl.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@parameters.0">
                <next xsi:type="references:IdentifierReference">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@statements.1/@init"/>
                  </arraySelectors>
                  <target xsi:type="members:Field" href="../XSModelGroupImpl.class.xmi#//@classifiers.0/@members.4"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@parameters.0">
                      <next xsi:type="references:IdentifierReference">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@statements.1/@statement/@statements.1/@statement/@statements.0/@init"/>
                        </arraySelectors>
                        <target xsi:type="members:Field" href="../XSModelGroupImpl.class.xmi#//@classifiers.0/@members.4"/>
                      </next>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@parameters.0">
                      <next xsi:type="references:IdentifierReference">
                        <arraySelectors>
                          <position xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@statements.1/@statement/@statements.1/@statement/@statements.0/@init"/>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </position>
                        </arraySelectors>
                        <target xsi:type="members:Field" href="../XSModelGroupImpl.class.xmi#//@classifiers.0/@members.4"/>
                      </next>
                    </value>
                  </expression>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@statements.1/@statement/@statements.1/@statement/@statements.0/@init"/>
                  <children xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@parameters.0">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../XSModelGroupImpl.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="j">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@statements.1/@init"/>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@statements.1/@statement/@statements.1/@statement/@statements.0/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@parameters.0">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../XSModelGroupImpl.class.xmi#//@classifiers.0/@members.5"/>
                    </next>
                  </child>
                  <operator xsi:type="operators:MinusMinus"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@statements.0/@variable"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@parameters.1"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Return">
                  <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
                </statement>
                <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.109">
                  <arguments xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../XSModelGroupImpl.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../XSParticleDecl.class.xmi#//@classifiers.0/@members.8"/>
                      </next>
                    </child>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@parameters.1"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../XSParticleDecl.class.xmi#//@classifiers.0/@members.7"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../XSParticleDecl.class.xmi#//@classifiers.0/@members.3"/>
                </next>
                <target xsi:type="classifiers:Class" href="../XSParticleDecl.class.xmi#//@classifiers.0"/>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@statements.1/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@parameters.0">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../XSModelGroupImpl.class.xmi#//@classifiers.0/@members.5"/>
            </next>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109/@statements.1/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="fillInLocalElemInfo">
      <typeReference xsi:type="types:Void">
        <comments>// the purpose of this method is to keep up-to-date structures</comments>
        <comments>// we'll need for the feferred traversal of local elements.</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="elmDecl">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="schemaDoc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="allContextFlags">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../xs/XSObject.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="particle">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../XSParticleDecl.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <statements xsi:type="statements:Condition">
        <comments>// if the stack is full, increase the size</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="newStackP">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// increase size</comments>
                  <target xsi:type="classifiers:Class" href="../XSParticleDecl.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../XSParticleDecl.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <sizes xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </sizes>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@statements.0/@statement/@statements.0/@variable"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@statements.0/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="newStackE">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <sizes xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </sizes>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@statements.0/@statement/@statements.3/@variable"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@statements.0/@statement/@statements.3/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="newStackI">
              <typeReference xsi:type="types:Int"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Int"/>
                <sizes xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </sizes>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@statements.0/@statement/@statements.6/@variable"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@statements.0/@statement/@statements.6/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="newStackC">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../xs/XSObject.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../xs/XSObject.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <sizes xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </sizes>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.74"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@statements.0/@statement/@statements.9/@variable"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.74"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@statements.0/@statement/@statements.9/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="newStackN">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arrayDimensionsBefore/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <sizes xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </sizes>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.75"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@statements.0/@statement/@statements.12/@variable"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.75"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@statements.0/@statement/@statements.12/@variable"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@parameters.4"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.72">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.73">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@parameters.2"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.74">
            <arraySelectors>
              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@parameters.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.75">
            <arraySelectors>
              <position xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
                <operator xsi:type="operators:PlusPlus"/>
              </position>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110/@parameters.1">
            <next xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../SchemaNamespaceSupport.class.xmi#//@classifiers.0/@members.3"/>
              </next>
              <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </value>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="checkForDuplicateNames">
      <typeReference xsi:type="types:Void">
        <comments>// end fillInLocalElemInfo(...)</comments>
        <comments>/** This method makes sure that&#xA;     * if this component is being redefined that it lives in the&#xA;     * right schema.  It then renames the component correctly.  If it&#xA;     * detects a collision--a duplicate definition--then it complains.&#xA;     * Note that redefines must be handled carefully:  if there&#xA;     * is a collision, it may be because we're redefining something we know about&#xA;     * or because we've found the thing we're redefining.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="qName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="registry">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="currComp">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="currSchema">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="objElem">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// REVISIT:  when we add derivation checking, we'll have to make</comments>
        <comments>// sure that ID constraint collisions don't necessarily result in error messages.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.1">
              <comments>// just add it in!</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.2"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.0"/>
                </next>
              </value>
            </expression>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="collidingElem">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.0/@variable"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Return"/>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.0/@variable"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.2"/>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="elemParent">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="literals:NullLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="redefinedSchema">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="literals:NullLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="collidedWithRedefine">
              <typeReference xsi:type="types:Boolean">
                <comments>// case where we've collided with a redefining element</comments>
                <comments>// (the parent of the colliding element is a redefine)</comments>
              </typeReference>
              <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <comments>// case where we're a redefining element.</comments>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.3/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.2/@variable"/>
                        </next>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:NestedExpression">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.37"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                  <arguments xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.2/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.29"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.0/@variable"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                      </value>
                    </expression>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </expression>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.3/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.30"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.0/@variable"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </expression>
                      </child>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.4/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:BooleanLiteral"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:NestedExpression">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.37"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.29"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.2"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                </expression>
              </condition>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <comments>//redefinition involved somehow</comments>
                <comments>// If both components belong to the same document then</comments>
                <comments>// report an error and return.</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                      <arguments xsi:type="references:StringReference" value="sch-props-correct.2"/>
                      <arguments xsi:type="arrays:ArrayInstantiationByValues">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arrayDimensionsBefore/>
                        <arrayInitializer>
                          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.0"/>
                        </arrayInitializer>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.2"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Return"/>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.30"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.0/@variable"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.3"/>
                </condition>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="newName">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.55"/>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.47"/>
                              <arguments xsi:type="literals:CharacterLiteral" value="44"/>
                            </next>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.2">
                      <comments>// object comp. okay here</comments>
                      <comments>// now have to do some renaming...</comments>
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0/@members.2"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.65"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.6/@statement/@statements.1/@variable"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.1">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:StringReference" value=","/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.6/@statement/@statements.1/@variable"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.2"/>
                        </next>
                      </expression>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.3">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                      </children>
                      <children xsi:type="literals:NullLiteral"/>
                    </condition>
                    <elseStatement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.1">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.3">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                              </next>
                            </children>
                            <children xsi:type="references:StringReference" value=","/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.6/@statement/@statements.1/@variable"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.2"/>
                        </next>
                      </expression>
                    </elseStatement>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <comments>// and take care of nested redefines by calling recursively:</comments>
                    <statement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:StringReference" value=","/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.6/@statement/@statements.1/@variable"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.1"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.2"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.3"/>
                      </expression>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.3">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                      </children>
                      <children xsi:type="literals:NullLiteral"/>
                    </condition>
                    <elseStatement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.3">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                            </next>
                          </children>
                          <children xsi:type="references:StringReference" value=","/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.6/@statement/@statements.1/@variable"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.1"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.2"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.3"/>
                      </expression>
                    </elseStatement>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.3/@variable"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.3"/>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <comments>// we may be redefining the wrong schema</comments>
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
                            <arguments xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="references:StringReference" value=","/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.6/@statement/@statements.1/@variable"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                            </arguments>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.1"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.2"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.3"/>
                          </expression>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.3">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                            </next>
                          </children>
                          <children xsi:type="literals:NullLiteral"/>
                        </condition>
                        <elseStatement xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.111">
                            <arguments xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.3">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                                </next>
                              </children>
                              <children xsi:type="references:StringReference" value=","/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.6/@statement/@statements.1/@variable"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                              <additiveOperators xsi:type="operators:Addition"/>
                            </arguments>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.1"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.2"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.3"/>
                          </expression>
                        </elseStatement>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.4/@variable"/>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                          <comments>// error that redefined element in wrong schema</comments>
                          <arguments xsi:type="references:StringReference" value="sch-props-correct.2"/>
                          <arguments xsi:type="arrays:ArrayInstantiationByValues">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arrayDimensionsBefore/>
                            <arrayInitializer>
                              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.0"/>
                            </arrayInitializer>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.2"/>
                        </expression>
                      </statements>
                    </elseStatement>
                  </statements>
                </elseStatement>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@statements.1/@elseStatement/@statements.3/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                  <comments>// we've just got a flat-out collision</comments>
                  <arguments xsi:type="references:StringReference" value="sch-props-correct.2"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.0"/>
                    </arrayInitializer>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111/@parameters.2"/>
                </expression>
              </statements>
            </elseStatement>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="renameRedefiningComponents">
      <comments>// if we get here then we must have reported an error and failed somewhere...</comments>
      <comments>//        return false;</comments>
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="currSchema">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="child">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="componentType">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// checkForDuplicateNames(String, Hashtable, Element, XSDocumentInfo):void</comments>
        <comments>// the purpose of this method is to take the component of the</comments>
        <comments>// specified type and rename references to itself so that they</comments>
        <comments>// refer to the object being redefined.  It takes special care of</comments>
        <comments>// &lt;group>s and &lt;attributeGroup>s to ensure that information</comments>
        <comments>// relating to implicit restrictions is preserved for those</comments>
        <comments>// traversers.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="grandKid">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.2"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                  <arguments xsi:type="references:StringReference" value="src-redefine.5.a.a"/>
                  <arguments xsi:type="literals:NullLiteral"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.1"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="grandKidName">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.0/@variable"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.6"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.0/@variable"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.1/@elseStatement/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.7"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                      <arguments xsi:type="references:StringReference" value="src-redefine.5.a.a"/>
                      <arguments xsi:type="literals:NullLiteral"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.1"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.0/@variable"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.1/@elseStatement/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.0/@variable"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                      </value>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                          <arguments xsi:type="references:StringReference" value="src-redefine.5.a.b"/>
                          <arguments xsi:type="arrays:ArrayInstantiationByValues">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arrayDimensionsBefore/>
                            <arrayInitializer>
                              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.1/@elseStatement/@statements.0/@variable"/>
                            </arrayInitializer>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.1"/>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.1/@elseStatement/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.38"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                          </arguments>
                        </next>
                      </child>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="attrs">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <arrayDimensionsBefore/>
                          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="XSAttributeChecker.class.xmi#//@classifiers.0/@members.103"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.0/@variable"/>
                              <arguments xsi:type="literals:BooleanLiteral"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0"/>
                            </next>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="derivedBase">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="expressions:CastExpression">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable">
                              <arraySelectors>
                                <position xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="XSAttributeChecker.class.xmi#//@classifiers.0/@members.7"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="XSAttributeChecker.class.xmi#//@classifiers.0"/>
                                </position>
                              </arraySelectors>
                            </child>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                              <arguments xsi:type="references:StringReference" value="src-redefine.5.a.c"/>
                              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <arrayDimensionsBefore/>
                                <arrayInitializer>
                                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.1/@elseStatement/@statements.0/@variable"/>
                                  <initialValues xsi:type="expressions:AdditiveExpression">
                                    <children xsi:type="expressions:NestedExpression">
                                      <expression xsi:type="expressions:ConditionalExpression">
                                        <child xsi:type="expressions:EqualityExpression">
                                          <equalityOperators xsi:type="operators:Equal"/>
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                                            </next>
                                          </children>
                                          <children xsi:type="literals:NullLiteral"/>
                                        </child>
                                        <expressionIf xsi:type="references:StringReference" value=""/>
                                        <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                                          </next>
                                        </expressionElse>
                                      </expression>
                                    </children>
                                    <children xsi:type="references:StringReference" value=","/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.3"/>
                                    <additiveOperators xsi:type="operators:Addition"/>
                                    <additiveOperators xsi:type="operators:Addition"/>
                                  </initialValues>
                                </arrayInitializer>
                              </arguments>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.1"/>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:ConditionalOrExpression">
                          <children xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:Equal"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.1/@variable"/>
                            <children xsi:type="literals:NullLiteral"/>
                          </children>
                          <children xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.1/@variable">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                              </next>
                            </children>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                              </next>
                            </children>
                          </children>
                          <children xsi:type="expressions:UnaryExpression">
                            <operators xsi:type="operators:Negate"/>
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.1/@variable">
                              <next xsi:type="references:IdentifierReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.3"/>
                                </next>
                                <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                              </next>
                            </child>
                          </children>
                        </condition>
                        <elseStatement xsi:type="statements:Block">
                          <comments>//                            return true;</comments>
                          <statements xsi:type="statements:Condition">
                            <comments>// now we have to do the renaming...</comments>
                            <statement xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0/@members.2"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.50"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                  <arguments xsi:type="expressions:AdditiveExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.1/@variable">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.0"/>
                                      </next>
                                    </children>
                                    <children xsi:type="references:StringReference" value=":"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.4"/>
                                    <additiveOperators xsi:type="operators:Addition"/>
                                    <additiveOperators xsi:type="operators:Addition"/>
                                  </arguments>
                                </next>
                              </expression>
                            </statement>
                            <condition xsi:type="expressions:ConditionalAndExpression">
                              <children xsi:type="expressions:EqualityExpression">
                                <equalityOperators xsi:type="operators:NotEqual"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.1/@variable">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.0"/>
                                  </next>
                                </children>
                                <children xsi:type="literals:NullLiteral"/>
                              </children>
                              <children xsi:type="expressions:RelationExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.1/@variable">
                                  <next xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                                    </next>
                                    <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.0"/>
                                  </next>
                                </children>
                                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                <relationOperators xsi:type="operators:GreaterThan"/>
                              </children>
                            </condition>
                            <elseStatement xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0/@members.2"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.50"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.4"/>
                                </next>
                              </expression>
                            </elseStatement>
                          </statements>
                        </elseStatement>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="XSAttributeChecker.class.xmi#//@classifiers.0/@members.110"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@statement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0"/>
                          </next>
                        </expression>
                      </statements>
                    </elseStatement>
                  </statements>
                </elseStatement>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.2">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.43"/>
              </next>
              <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="grandKid">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.2"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                    <arguments xsi:type="references:StringReference" value="src-redefine.5.b.a"/>
                    <arguments xsi:type="literals:NullLiteral"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.1"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.6"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.7"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                      <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                        <arguments xsi:type="references:StringReference" value="src-redefine.5.b.a"/>
                        <arguments xsi:type="literals:NullLiteral"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.1"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="greatGrandKid">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <comments>// have to go one more level down; let another pass worry whether complexType is valid.</comments>
                            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <initialValue xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.2"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                            <arguments xsi:type="references:StringReference" value="src-redefine.5.b.b"/>
                            <arguments xsi:type="literals:NullLiteral"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable"/>
                        <children xsi:type="literals:NullLiteral"/>
                      </condition>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="greatGrandKidName">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <initialValue xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable"/>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.6"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                </value>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.7"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                              </arguments>
                            </next>
                          </condition>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                                <arguments xsi:type="references:StringReference" value="src-redefine.5.b.b"/>
                                <arguments xsi:type="literals:NullLiteral"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.0/@variable"/>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:Equal"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable"/>
                            <children xsi:type="literals:NullLiteral"/>
                          </condition>
                          <elseStatement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable"/>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                                </value>
                              </expression>
                            </statements>
                            <statements xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                                    <arguments xsi:type="references:StringReference" value="src-redefine.5.b.c"/>
                                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                      <typeReference xsi:type="types:NamespaceClassifierReference">
                                        <classifierReferences>
                                          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                        </classifierReferences>
                                      </typeReference>
                                      <arrayDimensionsBefore/>
                                      <arrayInitializer>
                                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable"/>
                                      </arrayInitializer>
                                    </arguments>
                                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable"/>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:ConditionalAndExpression">
                                <children xsi:type="expressions:UnaryExpression">
                                  <operators xsi:type="operators:Negate"/>
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.38"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </child>
                                </children>
                                <children xsi:type="expressions:UnaryExpression">
                                  <operators xsi:type="operators:Negate"/>
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.19"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </child>
                                </children>
                              </condition>
                              <elseStatement xsi:type="statements:Block">
                                <statements xsi:type="statements:LocalVariableStatement">
                                  <variable name="attrs">
                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                      <classifierReferences>
                                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                      </classifierReferences>
                                    </typeReference>
                                    <arrayDimensionsBefore/>
                                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.52">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="XSAttributeChecker.class.xmi#//@classifiers.0/@members.103"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable"/>
                                        <arguments xsi:type="literals:BooleanLiteral"/>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0"/>
                                      </next>
                                    </initialValue>
                                  </variable>
                                </statements>
                                <statements xsi:type="statements:LocalVariableStatement">
                                  <variable name="derivedBase">
                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                      <classifierReferences>
                                        <target xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
                                      </classifierReferences>
                                    </typeReference>
                                    <initialValue xsi:type="expressions:CastExpression">
                                      <typeReference xsi:type="types:NamespaceClassifierReference">
                                        <classifierReferences>
                                          <target xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
                                        </classifierReferences>
                                      </typeReference>
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable">
                                        <arraySelectors>
                                          <position xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="XSAttributeChecker.class.xmi#//@classifiers.0/@members.7"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="XSAttributeChecker.class.xmi#//@classifiers.0"/>
                                          </position>
                                        </arraySelectors>
                                      </child>
                                    </initialValue>
                                  </variable>
                                </statements>
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:ExpressionStatement">
                                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                                        <arguments xsi:type="references:StringReference" value="src-redefine.5.b.d"/>
                                        <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                          <typeReference xsi:type="types:NamespaceClassifierReference">
                                            <classifierReferences>
                                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                            </classifierReferences>
                                          </typeReference>
                                          <arrayDimensionsBefore/>
                                          <arrayInitializer>
                                            <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable"/>
                                            <initialValues xsi:type="expressions:AdditiveExpression">
                                              <children xsi:type="expressions:NestedExpression">
                                                <expression xsi:type="expressions:ConditionalExpression">
                                                  <child xsi:type="expressions:EqualityExpression">
                                                    <equalityOperators xsi:type="operators:Equal"/>
                                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                                                      <next xsi:type="references:IdentifierReference">
                                                        <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                                                      </next>
                                                    </children>
                                                    <children xsi:type="literals:NullLiteral"/>
                                                  </child>
                                                  <expressionIf xsi:type="references:StringReference" value=""/>
                                                  <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                                                    <next xsi:type="references:IdentifierReference">
                                                      <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                                                    </next>
                                                  </expressionElse>
                                                </expression>
                                              </children>
                                              <children xsi:type="references:StringReference" value=","/>
                                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.3"/>
                                              <additiveOperators xsi:type="operators:Addition"/>
                                              <additiveOperators xsi:type="operators:Addition"/>
                                            </initialValues>
                                          </arrayInitializer>
                                        </arguments>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable"/>
                                      </expression>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="expressions:ConditionalOrExpression">
                                    <children xsi:type="expressions:EqualityExpression">
                                      <equalityOperators xsi:type="operators:Equal"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.1/@variable"/>
                                      <children xsi:type="literals:NullLiteral"/>
                                    </children>
                                    <children xsi:type="expressions:EqualityExpression">
                                      <equalityOperators xsi:type="operators:NotEqual"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.1/@variable">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.3"/>
                                        </next>
                                      </children>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                                        </next>
                                      </children>
                                    </children>
                                    <children xsi:type="expressions:UnaryExpression">
                                      <operators xsi:type="operators:Negate"/>
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.1/@variable">
                                        <next xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.3"/>
                                          </next>
                                          <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.1"/>
                                        </next>
                                      </child>
                                    </children>
                                  </condition>
                                  <elseStatement xsi:type="statements:Block">
                                    <comments>//                                    return true;</comments>
                                    <statements xsi:type="statements:Condition">
                                      <comments>// now we have to do the renaming...</comments>
                                      <statement xsi:type="statements:ExpressionStatement">
                                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0/@members.2"/>
                                            <arguments xsi:type="references:IdentifierReference">
                                              <next xsi:type="references:IdentifierReference">
                                                <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.50"/>
                                              </next>
                                              <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                            </arguments>
                                            <arguments xsi:type="expressions:AdditiveExpression">
                                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.1/@variable">
                                                <next xsi:type="references:IdentifierReference">
                                                  <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.0"/>
                                                </next>
                                              </children>
                                              <children xsi:type="references:StringReference" value=":"/>
                                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.4"/>
                                              <additiveOperators xsi:type="operators:Addition"/>
                                              <additiveOperators xsi:type="operators:Addition"/>
                                            </arguments>
                                          </next>
                                        </expression>
                                      </statement>
                                      <condition xsi:type="expressions:ConditionalAndExpression">
                                        <children xsi:type="expressions:EqualityExpression">
                                          <equalityOperators xsi:type="operators:NotEqual"/>
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.1/@variable">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.0"/>
                                            </next>
                                          </children>
                                          <children xsi:type="literals:NullLiteral"/>
                                        </children>
                                        <children xsi:type="expressions:RelationExpression">
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.2/@elseStatement/@statements.1/@elseStatement/@statements.1/@variable">
                                            <next xsi:type="references:IdentifierReference">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                                              </next>
                                              <target xsi:type="members:Field" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.0"/>
                                            </next>
                                          </children>
                                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                          <relationOperators xsi:type="operators:GreaterThan"/>
                                        </children>
                                      </condition>
                                      <elseStatement xsi:type="statements:ExpressionStatement">
                                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@statement/@statements.1/@elseStatement/@statements.1/@elseStatement/@statements.0/@variable">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0/@members.2"/>
                                            <arguments xsi:type="references:IdentifierReference">
                                              <next xsi:type="references:IdentifierReference">
                                                <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.50"/>
                                              </next>
                                              <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                            </arguments>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.4"/>
                                          </next>
                                        </expression>
                                      </elseStatement>
                                    </statements>
                                  </elseStatement>
                                </statements>
                              </elseStatement>
                            </statements>
                          </elseStatement>
                        </statements>
                      </elseStatement>
                    </statements>
                  </elseStatement>
                </statements>
              </elseStatement>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.2">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.15"/>
                </next>
                <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="processedBaseName">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="expressions:ConditionalExpression">
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                          </next>
                        </children>
                        <children xsi:type="literals:NullLiteral"/>
                      </expression>
                    </child>
                    <expressionIf xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value=","/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.3"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </expressionIf>
                    <expressionElse xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                      </children>
                      <children xsi:type="references:StringReference" value=","/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.3"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </expressionElse>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="attGroupRefsCount">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.114">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.2"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.4"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.1"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                      <arguments xsi:type="references:StringReference" value="src-redefine.7.1"/>
                      <arguments xsi:type="arrays:ArrayInstantiationByValues">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arrayDimensionsBefore/>
                        <arrayInitializer>
                          <initialValues xsi:type="instantiations:NewConstructorCall">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@variable"/>
                          </initialValues>
                        </arrayInitializer>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.1"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <relationOperators xsi:type="operators:GreaterThan"/>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <comments>//                return true;</comments>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@elseStatement/@statement/@statements.1/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:StringReference" value=","/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.4"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                      </expression>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                      </children>
                      <children xsi:type="literals:NullLiteral"/>
                    </condition>
                    <elseStatement xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                              </next>
                            </children>
                            <children xsi:type="references:StringReference" value=","/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.4"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                      </expression>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.2">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.12"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="processedBaseName">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="expressions:ConditionalExpression">
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                            </next>
                          </children>
                          <children xsi:type="literals:NullLiteral"/>
                        </expression>
                      </child>
                      <expressionIf xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value=","/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.3"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expressionIf>
                      <expressionElse xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                          </next>
                        </children>
                        <children xsi:type="references:StringReference" value=","/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.3"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </expressionElse>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="groupRefsCount">
                    <typeReference xsi:type="types:Int"/>
                    <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.114">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.2"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.4"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.1"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                        <arguments xsi:type="references:StringReference" value="src-redefine.6.1.1"/>
                        <arguments xsi:type="arrays:ArrayInstantiationByValues">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <arrayDimensionsBefore/>
                          <arrayInitializer>
                            <initialValues xsi:type="instantiations:NewConstructorCall">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@variable"/>
                            </initialValues>
                          </arrayInitializer>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.1"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <relationOperators xsi:type="operators:GreaterThan"/>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <comments>//                return true;</comments>
                    </statement>
                    <condition xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.1/@variable"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:StringReference" value=","/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.4"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </arguments>
                            </next>
                          </expression>
                        </statement>
                        <condition xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                            </next>
                          </children>
                          <children xsi:type="literals:NullLiteral"/>
                        </condition>
                        <elseStatement xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.0">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                                  </next>
                                </children>
                                <children xsi:type="references:StringReference" value=","/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.4"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </arguments>
                            </next>
                          </expression>
                        </elseStatement>
                      </statements>
                    </elseStatement>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.2">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.22"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                    <arguments xsi:type="references:StringReference" value="Internal-Error"/>
                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arrayDimensionsBefore/>
                      <arrayInitializer>
                        <initialValues xsi:type="references:StringReference" value="could not handle this particular &lt;redefine>; please submit your schemas and instance document in a bug report!"/>
                      </arrayInitializer>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112/@parameters.1"/>
                  </expression>
                </statements>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="findQName">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="schemaDoc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// renameRedefiningComponents(XSDocumentInfo, Element, String, String, String):void</comments>
        <comments>// this method takes a name of the form a:b, determines the URI mapped</comments>
        <comments>// to by a in the current SchemaNamespaceSupport object, and returns this</comments>
        <comments>// information in the form (nsURI,b) suitable for lookups in the global</comments>
        <comments>// decl Hashtables.</comments>
        <comments>// REVISIT: should have it return QName, instead of String. this would</comments>
        <comments>//          save lots of string concatenation time. we can use</comments>
        <comments>//          QName#equals() to compare two QNames, and use QName directly</comments>
        <comments>//          as a key to the SymbolHash.</comments>
        <comments>//          And when the DV's are ready to return compiled values from</comments>
        <comments>//          validate() method, we should just call QNameDV.validate()</comments>
        <comments>//          in this method.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="currNSMap">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../SchemaNamespaceSupport.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@parameters.1">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="colonPtr">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.45"/>
              <arguments xsi:type="literals:CharacterLiteral" value="58"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="prefix">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../util/XMLSymbols.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../util/XMLSymbols.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.2/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.56"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.1/@variable"/>
              </next>
            </value>
          </expression>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.1/@variable"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="uri">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../util/NamespaceSupport.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/SymbolTable.class.xmi#//@classifiers.0/@members.5"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.2/@variable"/>
                </next>
              </arguments>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="localpart">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.1/@variable"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </expression>
            </child>
            <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@parameters.0"/>
            <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.55"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.1/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
            </expressionElse>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.4/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@parameters.1">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
              </next>
            </value>
          </expression>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.2/@variable"/>
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../util/XMLSymbols.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../util/XMLSymbols.class.xmi#//@classifiers.0"/>
            </children>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.4/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@parameters.1">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.8"/>
            </next>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value=","/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.5/@variable"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </returnValue>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.4/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:AdditiveExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.4/@variable"/>
          <children xsi:type="references:StringReference" value=","/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113/@statements.5/@variable"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="changeRedefineGroup">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="originalQName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="elementSought">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="curr">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="schemaDoc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// findQName(String, XSDocumentInfo):  String</comments>
        <comments>// This function looks among the children of curr for an element of type elementSought.</comments>
        <comments>// If it finds one, it evaluates whether its ref attribute contains a reference</comments>
        <comments>// to originalQName.  If it does, it returns 1 + the value returned by</comments>
        <comments>// calls to itself on all other children.  In all other cases it returns 0 plus</comments>
        <comments>// the sum of the values returned by calls to itself on curr's children.</comments>
        <comments>// It also resets the value of ref so that it will refer to the renamed type from the schema</comments>
        <comments>// being redefined.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="result">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="name">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@init"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.114">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@parameters.0"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@parameters.1"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@parameters.2"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@init"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@parameters.4"/>
                </value>
              </expression>
            </statement>
            <condition xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@parameters.1"/>
                </next>
              </child>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <comments>// if ref was null some other stage of processing will flag the error</comments>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="ref">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@init">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0/@members.1"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.69"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="processedRef">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.113">
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.0/@variable"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@parameters.4"/>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="prefix">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../../util/XMLSymbols.class.xmi#//@classifiers.0/@members.0"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../util/XMLSymbols.class.xmi#//@classifiers.0"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="colonptr">
                          <typeReference xsi:type="types:Int"/>
                          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.0/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.49"/>
                              <arguments xsi:type="references:StringReference" value=":"/>
                            </next>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.1/@statement/@statements.1/@statement/@statements.0/@variable"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.56"/>
                                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.1/@statement/@statements.1/@statement/@statements.1/@variable"/>
                                </next>
                              </value>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@init">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0/@members.2"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.69"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                </arguments>
                                <arguments xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.1/@statement/@statements.1/@statement/@statements.0/@variable"/>
                                  <children xsi:type="references:StringReference" value=":"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@parameters.2"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                </arguments>
                              </next>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:RelationExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.1/@statement/@statements.1/@statement/@statements.1/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          <relationOperators xsi:type="operators:GreaterThan"/>
                        </condition>
                        <elseStatement xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@init">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0/@members.2"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.69"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                              </arguments>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@parameters.2"/>
                            </next>
                          </expression>
                        </elseStatement>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.0/@variable"/>
                          <operator xsi:type="operators:PlusPlus"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:LocalVariableStatement">
                            <variable name="minOccurs">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@init">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0/@members.1"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.63"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                              </initialValue>
                            </variable>
                          </statements>
                          <statements xsi:type="statements:LocalVariableStatement">
                            <variable name="maxOccurs">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@init">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:InterfaceMethod" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0/@members.1"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.61"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                              </initialValue>
                            </variable>
                          </statements>
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.121">
                                  <arguments xsi:type="references:StringReference" value="src-redefine.6.1.2"/>
                                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                      <classifierReferences>
                                        <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                      </classifierReferences>
                                    </typeReference>
                                    <arrayDimensionsBefore/>
                                    <arrayInitializer>
                                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.0/@variable"/>
                                    </arrayInitializer>
                                  </arguments>
                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@init"/>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="expressions:UnaryExpression">
                              <operators xsi:type="operators:Negate"/>
                              <child xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ConditionalAndExpression">
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ConditionalOrExpression">
                                      <children xsi:type="expressions:EqualityExpression">
                                        <equalityOperators xsi:type="operators:Equal"/>
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.1/@statement/@statements.1/@statement/@statements.4/@statement/@statements.1/@variable">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                                          </next>
                                        </children>
                                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                      </children>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.1/@statement/@statements.1/@statement/@statements.4/@statement/@statements.1/@variable">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                          <arguments xsi:type="references:StringReference" value="1"/>
                                        </next>
                                      </children>
                                    </expression>
                                  </children>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ConditionalOrExpression">
                                      <children xsi:type="expressions:EqualityExpression">
                                        <equalityOperators xsi:type="operators:Equal"/>
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.1/@statement/@statements.1/@statement/@statements.4/@statement/@statements.0/@variable">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                                          </next>
                                        </children>
                                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                      </children>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.1/@statement/@statements.1/@statement/@statements.4/@statement/@statements.0/@variable">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                                          <arguments xsi:type="references:StringReference" value="1"/>
                                        </next>
                                      </children>
                                    </expression>
                                  </children>
                                </expression>
                              </child>
                            </condition>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@parameters.1">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.22"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </condition>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.1/@statement/@statements.0/@variable"/>
                      </next>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@statement/@statements.1/@elseStatement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                    </next>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </condition>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@init"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="child">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.2"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@parameters.3"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
          </initialValue>
        </init>
        <updates xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@init"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.6"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.1/@init"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
          </value>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="findXSDocumentForDecl">
      <comments>/*********&#xA;        Logic here is unnecessary after schema WG's recent decision to allow&#xA;        schema components from one document to refer to components of any other,&#xA;        so long as there's some include/import/redefine path amongst them.&#xA;        If they rver reverse this decision the code's right here though...  - neilg&#xA;        // now look in fDependencyMap to see if this is reachable&#xA;        if(((Vector)fDependencyMap.get(currSchema)).contains(declDocInfo)) {&#xA;            return declDocInfo;&#xA;        }&#xA;        // obviously the requesting doc didn't include, redefine or&#xA;        // import the one containing decl...&#xA;        return null;&#xA;        **********/</comments>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="currSchema">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="decl">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// changeRedefineGroup</comments>
        <comments>// this method returns the XSDocumentInfo object that contains the</comments>
        <comments>// component corresponding to decl.  If components from this</comments>
        <comments>// document cannot be referred to from those of currSchema, this</comments>
        <comments>// method returns null; it's up to the caller to throw an error.</comments>
        <comments>// @param:  currSchema:  the XSDocumentInfo object containing the</comments>
        <comments>// decl ref'ing us.</comments>
        <comments>// @param:  decl:  the declaration being ref'd.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="DOCUMENT NS:"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.115/@parameters.0">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.7"/>
                      </next>
                    </children>
                    <children xsi:type="references:StringReference" value=" hashcode:"/>
                    <children xsi:type="expressions:NestedExpression">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.3"/>
                      </next>
                      <expression xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.115/@parameters.0">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.9"/>
                          </next>
                        </child>
                      </expression>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="declDoc">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.30"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.115/@parameters.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="temp">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.115/@statements.1/@variable"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <comments>// something went badly wrong; we don't know this doc?</comments>
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.115/@statements.2/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="declDocInfo">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.115/@statements.2/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.115/@statements.4/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="nonAnnotationContent">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="elem">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// findXSDocumentForDecl(XSDocumentInfo, Element):  XSDocumentInfo</comments>
        <comments>// returns whether more than &lt;annotation>s occur in children of elem</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Return">
              <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
            </statement>
            <condition xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../SchemaSymbols.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../SchemaSymbols.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.28"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.116/@statements.0/@init"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
                </expression>
              </child>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.116/@statements.0/@init"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="child">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.2"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.116/@parameters.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
          </initialValue>
        </init>
        <updates xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.116/@statements.0/@init"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.6"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.116/@statements.0/@init"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
          </value>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setSchemasVisible">
      <comments>// if it's visible already than so must be its children</comments>
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="startSchema">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// nonAnnotationContent(Element):  boolean</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <comments>// make it visible</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.9"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.117/@parameters.0">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.9"/>
                  </next>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="dependingSchemas">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.117/@parameters.0"/>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.117">
                  <arguments xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="XSDocumentInfo.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.117/@statements.0/@statement/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.22"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.117/@statements.0/@statement/@statements.2/@init"/>
                      </next>
                    </child>
                  </arguments>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.117/@statements.0/@statement/@statements.2/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.117/@statements.0/@statement/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.14"/>
                </next>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.117/@statements.0/@statement/@statements.2/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../util/DOMUtil.class.xmi#//@classifiers.0/@members.10"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.117/@parameters.0">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="XSDocumentInfo.class.xmi#//@classifiers.0/@members.9"/>
              </next>
            </arguments>
          </next>
          <target xsi:type="classifiers:Class" href="../../../util/DOMUtil.class.xmi#//@classifiers.0"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:Field" name="xl">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../util/SimpleLocator.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../util/SimpleLocator.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// setSchemasVisible(XSDocumentInfo): void</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="element2Locator">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../util/SimpleLocator.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="e">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Extract location information from an Element node, and create a&#xA;     * new SimpleLocator object from such information. Returning null means&#xA;     * no information can be retrieved from the element.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="literals:NullLiteral"/>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:InstanceOfExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../opti/ElementImpl.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.119/@parameters.0"/>
            </expression>
          </child>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="l">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../util/SimpleLocator.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../util/SimpleLocator.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:ConditionalExpression">
          <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.120">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.119/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.119/@statements.1/@variable"/>
          </child>
          <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.119/@statements.1/@variable"/>
          <expressionElse xsi:type="literals:NullLiteral"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="element2Locator">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="e">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="l">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../util/SimpleLocator.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Extract location information from an Element node, store such&#xA;     * information in the passed-in SimpleLocator object, then return&#xA;     * true. Returning false means can't extract or store such information.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Return">
          <returnValue xsi:type="literals:BooleanLiteral"/>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.120/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="ele">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../opti/ElementImpl.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../opti/ElementImpl.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.120/@parameters.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="doc">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// get system id from document object</comments>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Document.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.120/@statements.1/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../opti/ElementImpl.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="sid">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.120/@statements.1/@statement/@statements.1/@variable"/>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="line">
              <typeReference xsi:type="types:Int">
                <comments>// line/column numbers are stored in the element node</comments>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.120/@statements.1/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../opti/ElementImpl.class.xmi#//@classifiers.0/@members.26"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="column">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.120/@statements.1/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../opti/ElementImpl.class.xmi#//@classifiers.0/@members.27"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.120/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../util/SimpleLocator.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.120/@statements.1/@statement/@statements.2/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.120/@statements.1/@statement/@statements.2/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.120/@statements.1/@statement/@statements.3/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.120/@statements.1/@statement/@statements.4/@variable"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../opti/ElementImpl.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.120/@parameters.0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="reportSchemaError">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="key">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="args">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ele">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../XMLErrorReporter.class.xmi#//@classifiers.0/@members.24"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.118"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../XSMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../XSMessageFormatter.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.121/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.121/@parameters.1"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../XMLErrorReporter.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../XMLErrorReporter.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.120">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.121/@parameters.2"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.118"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../XMLErrorReporter.class.xmi#//@classifiers.0/@members.23"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../XSMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../XSMessageFormatter.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.121/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.121/@parameters.1"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../XMLErrorReporter.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../XMLErrorReporter.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="reportSchemaWarning">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="key">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="args">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ele">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../../../org/w3c/dom/Element.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../XMLErrorReporter.class.xmi#//@classifiers.0/@members.24"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.118"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../XSMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../XSMessageFormatter.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.122/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.122/@parameters.1"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../XMLErrorReporter.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../XMLErrorReporter.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.120">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.122/@parameters.2"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.118"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../XMLErrorReporter.class.xmi#//@classifiers.0/@members.23"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../XSMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../XSMessageFormatter.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.122/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.122/@parameters.1"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../XMLErrorReporter.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../XMLErrorReporter.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="classifiers:Class" name="XSDKey">
      <members xsi:type="members:Field" name="systemId">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </members>
      <members xsi:type="members:Field" name="referType">
        <typeReference xsi:type="types:Short"/>
      </members>
      <members xsi:type="members:Field" name="referNS">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <comments>// for inclue/redefine, this is the enclosing namespace</comments>
            <comments>// for import/preparse/instance, this is the target namespace</comments>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </members>
      <members xsi:type="members:Constructor" name="XSDKey">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.3/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.3/@parameters.1"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.2"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.3/@parameters.2"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="systemId">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="referType">
          <typeReference xsi:type="types:Short"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="referNS">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
      </members>
      <members xsi:type="members:ClassMethod" name="hashCode">
        <typeReference xsi:type="types:Int"/>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Return">
          <comments>// according to the description at the beginning of this class,</comments>
          <comments>// we use the hashcode of the namespace as the hashcoe of this key.</comments>
          <returnValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.2"/>
              <children xsi:type="literals:NullLiteral"/>
            </child>
            <expressionIf xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.2">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.44"/>
              </next>
            </expressionElse>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="equals">
        <typeReference xsi:type="types:Boolean"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="obj">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="literals:BooleanLiteral"/>
            </statements>
          </statement>
          <condition xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:InstanceOfExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.123"/>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.5/@parameters.0"/>
              </expression>
            </child>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="key">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.123"/>
            </typeReference>
            <initialValue xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0/@members.123"/>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.5/@parameters.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// condition 1: both are redefine</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Return">
                <returnValue xsi:type="literals:BooleanLiteral"/>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.1"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.5/@statements.1/@variable">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.1"/>
                </children>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalOrExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.1"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.2"/>
                </next>
                <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
              </children>
            </children>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.5/@statements.1/@variable">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.1"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../XSDDescription.class.xmi#//@classifiers.0/@members.2"/>
                </next>
                <target xsi:type="classifiers:Class" href="../XSDDescription.class.xmi#//@classifiers.0"/>
              </children>
            </children>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// condition 2: same namespace</comments>
          <statement xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.2"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.5/@statements.1/@variable">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.2"/>
            </children>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// condition 3: same non-null locatoin</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="literals:BooleanLiteral"/>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalOrExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.0"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.5/@statements.1/@variable">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123/@members.0"/>
                  </arguments>
                </next>
              </child>
            </children>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
        </statements>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * used to identify a reference to a schema document&#xA;     * if the same document is referenced twice with the same key, then&#xA;     * we only need to parse it once.&#xA;     * &#xA;     * When 2 XSDKey's are compared, the following table can be used to&#xA;     * determine whether they are equal:&#xA;     *      inc     red     imp     pre     ins&#xA;     * inc  N/L      ?      N/L     N/L     N/L&#xA;     * red   ?      N/L      ?       ?       ?&#xA;     * imp  N/L      ?      N/P     N/P     N/P&#xA;     * pre  N/L      ?      N/P     N/P     N/P&#xA;     * ins  N/L      ?      N/P     N/P     N/P&#xA;     * &#xA;     * Where: N/L: duplicate when they have the same namespace and location.&#xA;     *         ? : not clear from the spec.&#xA;     *             REVISIT: to simplify the process, also considering&#xA;     *             it's very rare, we treat them as not duplicate.&#xA;     *        N/P: not possible. imp/pre/ins are referenced by namespace.&#xA;     *             when the first time we encounter a schema document for a&#xA;     *             namespace, we create a grammar and store it in the grammar&#xA;     *             bucket. when we see another reference to the same namespace,&#xA;     *             we first check whether a grammar with the same namespace is&#xA;     *             already in the bucket, which is true in this case, so we&#xA;     *             won't create another XSDKey.&#xA;     *             &#xA;     * Conclusion from the table: two XSDKey's are duplicate only when all of&#xA;     * the following are true:&#xA;     * 1. They are both &quot;redefine&quot;, or neither is &quot;redefine&quot;;&#xA;     * 2. They have the same namespace;&#xA;     * 3. They have the same non-null location.&#xA;     * &#xA;     * About 3: if neither has a non-null location, then it's the case where&#xA;     * 2 input streams are provided, but no system ID is provided. We can't tell&#xA;     * whether the 2 streams have the same content, so we treat them as not&#xA;     * duplicate.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The purpose of this class is to co-ordinate the construction of a&#xA; * grammar object corresponding to a schema.  To do this, it must be&#xA; * prepared to parse several schema documents (for instance if the&#xA; * schema document originally referred to contains &lt;include> or&#xA; * &lt;redefined> information items).  If any of the schemas imports a&#xA; * schema, other grammars may be constructed as a side-effect.&#xA; *&#xA; * @author Neil Graham, IBM&#xA; * @author Pavani Mukthipudi, Sun Microsystems&#xA; * @version $Id: XSDHandler.java,v 1.75 2004/02/03 17:27:45 sandygao Exp $&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
