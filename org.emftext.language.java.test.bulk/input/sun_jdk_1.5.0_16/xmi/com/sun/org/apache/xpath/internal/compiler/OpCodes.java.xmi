<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../../java.ecore#/5 http://www.emftext.org/java/literals ../../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../../java.ecore#/12 http://www.emftext.org/java/types ../../../../../../../java.ecore#/16" name="OpCodes.java">
  <comments>/*&#xA; * Copyright 1999-2004 The Apache Software Foundation.&#xA; *&#xA; * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&#xA; * you may not use this file except in compliance with the License.&#xA; * You may obtain a copy of the License at&#xA; *&#xA; *     http://www.apache.org/licenses/LICENSE-2.0&#xA; *&#xA; * Unless required by applicable law or agreed to in writing, software&#xA; * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#xA; * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA; * See the License for the specific language governing permissions and&#xA; * limitations under the License.&#xA; */</comments>
  <comments>/*&#xA; * $Id: OpCodes.java,v 1.9 2004/02/17 04:32:48 minchau Exp $&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>xpath</namespaces>
  <namespaces>internal</namespaces>
  <namespaces>compiler</namespaces>
  <classifiers xsi:type="classifiers:Class" name="OpCodes">
    <members xsi:type="members:Field" name="ENDOP">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [ENDOP]&#xA;   * Some operators may like to have a terminator.&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="EMPTY">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [EMPTY]&#xA;   * Empty slot to indicate NULL.&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ELEMWILDCARD">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [ELEMWILDCARD]&#xA;   * Means ELEMWILDCARD (&quot;*&quot;), used instead&#xA;   * of string index in some places.&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_XPATH">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_XPATH]&#xA;   * [length]&#xA;   *  {expression}&#xA;   *&#xA;   * returns:&#xA;   *  XNodeSet&#xA;   *  XNumber&#xA;   *  XString&#xA;   *  XBoolean&#xA;   *  XRTree&#xA;   *  XObject&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_OR">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_OR]&#xA;   * [length]&#xA;   *  {boolean expression}&#xA;   *  {boolean expression}&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_AND">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_AND]&#xA;   * [length]&#xA;   *  {boolean expression}&#xA;   *  {boolean expression}&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_NOTEQUALS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_NOTEQUALS]&#xA;   * [length]&#xA;   *  {expression}&#xA;   *  {expression}&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_EQUALS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_EQUALS]&#xA;   * [length]&#xA;   *  {expression}&#xA;   *  {expression}&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_LTE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_LTE] (less-than-or-equals)&#xA;   * [length]&#xA;   *  {number expression}&#xA;   *  {number expression}&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_LT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_LT] (less-than)&#xA;   * [length]&#xA;   *  {number expression}&#xA;   *  {number expression}&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_GTE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_GTE] (greater-than-or-equals)&#xA;   * [length]&#xA;   *  {number expression}&#xA;   *  {number expression}&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_GT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_GT] (greater-than)&#xA;   * [length]&#xA;   *  {number expression}&#xA;   *  {number expression}&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_PLUS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_PLUS]&#xA;   * [length]&#xA;   *  {number expression}&#xA;   *  {number expression}&#xA;   *&#xA;   * returns:&#xA;   *  XNumber&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_MINUS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_MINUS]&#xA;   * [length]&#xA;   *  {number expression}&#xA;   *  {number expression}&#xA;   *&#xA;   * returns:&#xA;   *  XNumber&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_MULT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="12"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_MULT]&#xA;   * [length]&#xA;   *  {number expression}&#xA;   *  {number expression}&#xA;   *&#xA;   * returns:&#xA;   *  XNumber&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_DIV">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="13"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_DIV]&#xA;   * [length]&#xA;   *  {number expression}&#xA;   *  {number expression}&#xA;   *&#xA;   * returns:&#xA;   *  XNumber&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_MOD">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="14"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_MOD]&#xA;   * [length]&#xA;   *  {number expression}&#xA;   *  {number expression}&#xA;   *&#xA;   * returns:&#xA;   *  XNumber&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_QUO">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="15"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_QUO]&#xA;   * [length]&#xA;   *  {number expression}&#xA;   *  {number expression}&#xA;   *&#xA;   * returns:&#xA;   *  XNumber&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_NEG">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_NEG]&#xA;   * [length]&#xA;   *  {number expression}&#xA;   *&#xA;   * returns:&#xA;   *  XNumber&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_STRING">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="17"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_STRING] (cast operation)&#xA;   * [length]&#xA;   *  {expression}&#xA;   *&#xA;   * returns:&#xA;   *  XString&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_BOOL">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="18"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_BOOL] (cast operation)&#xA;   * [length]&#xA;   *  {expression}&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_NUMBER">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="19"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_NUMBER] (cast operation)&#xA;   * [length]&#xA;   *  {expression}&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_UNION">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="20"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_UNION]&#xA;   * [length]&#xA;   *  {PathExpr}+&#xA;   *&#xA;   * returns:&#xA;   *  XNodeSet&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_LITERAL">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="21"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_LITERAL]&#xA;   * [3]&#xA;   * [index to token]&#xA;   *&#xA;   * returns:&#xA;   *  XString&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FIRST_NODESET_OP">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="22"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>/** The low opcode for nodesets, needed by getFirstPredicateOpPos and &#xA;   *  getNextStepPos.          */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_VARIABLE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="22"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_VARIABLE]&#xA;   * [4]&#xA;   * [index to namespace token, or EMPTY]&#xA;   * [index to function name token]&#xA;   *&#xA;   * returns:&#xA;   *  XString&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_GROUP">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="23"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_GROUP]&#xA;   * [length]&#xA;   *  {expression}&#xA;   *&#xA;   * returns:&#xA;   *  XNodeSet&#xA;   *  XNumber&#xA;   *  XString&#xA;   *  XBoolean&#xA;   *  XRTree&#xA;   *  XObject&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_EXTFUNCTION">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_EXTFUNCTION] (Extension function.)&#xA;   * [length]&#xA;   * [index to namespace token]&#xA;   * [index to function name token]&#xA;   *  {OP_ARGUMENT}&#xA;   *&#xA;   * returns:&#xA;   *  XNodeSet&#xA;   *  XNumber&#xA;   *  XString&#xA;   *  XBoolean&#xA;   *  XRTree&#xA;   *  XObject&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_FUNCTION">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="25"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_FUNCTION]&#xA;   * [length]&#xA;   * [FUNC_name]&#xA;   *  {OP_ARGUMENT}&#xA;   * [ENDOP]&#xA;   *&#xA;   * returns:&#xA;   *  XNodeSet&#xA;   *  XNumber&#xA;   *  XString&#xA;   *  XBoolean&#xA;   *  XRTree&#xA;   *  XObject&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="LAST_NODESET_OP">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="25"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>/** The last opcode for stuff that can be a nodeset.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_ARGUMENT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="26"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_ARGUMENT] (Function argument.)&#xA;   * [length]&#xA;   *  {expression}&#xA;   *&#xA;   * returns:&#xA;   *  XNodeSet&#xA;   *  XNumber&#xA;   *  XString&#xA;   *  XBoolean&#xA;   *  XRTree&#xA;   *  XObject&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_NUMBERLIT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="27"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_NUMBERLIT] (Number literal.)&#xA;   * [3]&#xA;   * [index to token]&#xA;   *&#xA;   * returns:&#xA;   *  XString&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_LOCATIONPATH">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="28"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_LOCATIONPATH]&#xA;   * [length]&#xA;   *   {FROM_stepType}&#xA;   * | {function}&#xA;   * {predicate}&#xA;   * [ENDOP]&#xA;   *&#xA;   * (Note that element and attribute namespaces and&#xA;   * names can be wildcarded '*'.)&#xA;   *&#xA;   * returns:&#xA;   *  XNodeSet&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_PREDICATE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="29"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// public static final int LOCATIONPATHEX_MASK = 0x0000FFFF;</comments>
        <comments>// public static final int LOCATIONPATHEX_ISSIMPLE = 0x00010000;</comments>
        <comments>// public static final int OP_LOCATIONPATH_EX = (28 | 0x00010000);</comments>
        <comments>/**&#xA;   * [OP_PREDICATE]&#xA;   * [length]&#xA;   *  {expression}&#xA;   * [ENDOP] (For safety)&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean or XNumber&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_MATCHPATTERN">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="30"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_MATCHPATTERN]&#xA;   * [length]&#xA;   *  {PathExpr}+&#xA;   *&#xA;   * returns:&#xA;   *  XNodeSet&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="OP_LOCATIONPATHPATTERN">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="31"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [OP_LOCATIONPATHPATTERN]&#xA;   * [length]&#xA;   *   {FROM_stepType}&#xA;   * | {function}{predicate}&#xA;   * [ENDOP]&#xA;   * returns:&#xA;   *  XNodeSet&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NODETYPE_COMMENT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1030"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [NODETYPE_COMMENT]&#xA;   * No size or arguments.&#xA;   * Note: must not overlap function OP number!&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NODETYPE_TEXT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1031"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [NODETYPE_TEXT]&#xA;   * No size or arguments.&#xA;   * Note: must not overlap function OP number!&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NODETYPE_PI">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1032"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [NODETYPE_PI]&#xA;   * [index to token]&#xA;   * Note: must not overlap function OP number!&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NODETYPE_NODE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1033"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [NODETYPE_NODE]&#xA;   * No size or arguments.&#xA;   * Note: must not overlap function OP number!&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NODENAME">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="34"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [NODENAME]&#xA;   * [index to ns token or EMPTY]&#xA;   * [index to name token]&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NODETYPE_ROOT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="35"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [NODETYPE_ROOT]&#xA;   * No size or arguments.&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NODETYPE_ANYELEMENT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="36"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [NODETYPE_ANY]&#xA;   * No size or arguments.&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NODETYPE_FUNCTEST">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1034"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [NODETYPE_ANY]&#xA;   * No size or arguments.&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="AXES_START_TYPES">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="37"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * [FROM_stepType]&#xA;   * [length, including predicates]&#xA;   * [length of just the step, without the predicates]&#xA;   * {node test}&#xA;   * {predicates}?&#xA;   *&#xA;   * returns:&#xA;   *  XBoolean&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_ANCESTORS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="37"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** ancestor axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_ANCESTORS_OR_SELF">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="38"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** ancestor-or-self axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_ATTRIBUTES">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="39"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** attribute axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_CHILDREN">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="40"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** children axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_DESCENDANTS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="41"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** descendants axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_DESCENDANTS_OR_SELF">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="42"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** descendants-of-self axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_FOLLOWING">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="43"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** following axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_FOLLOWING_SIBLINGS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="44"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** following-siblings axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_PARENT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="45"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** parent axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_PRECEDING">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="46"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** preceding axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_PRECEDING_SIBLINGS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="47"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** preceding-sibling axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_SELF">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="48"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** self axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_NAMESPACE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="49"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** namespace axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="FROM_ROOT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="50"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** '/' axes opcode.         */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MATCH_ATTRIBUTE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="51"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * For match patterns.&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MATCH_ANY_ANCESTOR">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="52"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * For match patterns.&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MATCH_IMMEDIATE_ANCESTOR">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="53"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * For match patterns.&#xA;   * @xsl.usage advanced&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="AXES_END_TYPES">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="53"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** The end of the axes types.    */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NEXT_FREE_ID">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="99"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** The next free ID.  Please keep this up to date.  */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Operations codes for XPath.&#xA; *&#xA; * Code for the descriptions of the operations codes:&#xA; * [UPPER CASE] indicates a literal value,&#xA; * [lower case] is a description of a value,&#xA; *      ([length] always indicates the length of the operation,&#xA; *       including the operations code and the length integer.)&#xA; * {UPPER CASE} indicates the given production,&#xA; * {description} is the description of a new production,&#xA; *      (For instance, {boolean expression} means some expression&#xA; *       that should be resolved to a boolean.)&#xA; *  * means that it occurs zero or more times,&#xA; *  + means that it occurs one or more times,&#xA; *  ? means that it is optional.&#xA; *&#xA; * returns: indicates what the production should return.&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
