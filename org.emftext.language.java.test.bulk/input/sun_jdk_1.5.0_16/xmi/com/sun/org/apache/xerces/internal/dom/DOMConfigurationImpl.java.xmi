<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../../../../java.ecore#/17" name="DOMConfigurationImpl.java">
  <comments>/*&#xA; * The Apache Software License, Version 1.1&#xA; *&#xA; *&#xA; * Copyright (c) 2001-2004 The Apache Software Foundation.&#xA; * All rights reserved.&#xA; *&#xA; * Redistribution and use in source and binary forms, with or without&#xA; * modification, are permitted provided that the following conditions&#xA; * are met:&#xA; *&#xA; * 1. Redistributions of source code must retain the above copyright&#xA; *    notice, this list of conditions and the following disclaimer.&#xA; *&#xA; * 2. Redistributions in binary form must reproduce the above copyright&#xA; *    notice, this list of conditions and the following disclaimer in&#xA; *    the documentation and/or other materials provided with the&#xA; *    distribution.&#xA; *&#xA; * 3. The end-user documentation included with the redistribution,&#xA; *    if any, must include the following acknowledgment:&#xA; *       &quot;This product includes software developed by the&#xA; *        Apache Software Foundation (http://www.apache.org/).&quot;&#xA; *    Alternately, this acknowledgment may appear in the software itself,&#xA; *    if and wherever such third-party acknowledgments normally appear.&#xA; *&#xA; * 4. The names &quot;Xerces&quot; and &quot;Apache Software Foundation&quot; must&#xA; *    not be used to endorse or promote products derived from this&#xA; *    software without prior written permission. For written&#xA; *    permission, please contact apache@apache.org.&#xA; *&#xA; * 5. Products derived from this software may not be called &quot;Apache&quot;,&#xA; *    nor may &quot;Apache&quot; appear in their name, without prior written&#xA; *    permission of the Apache Software Foundation.&#xA; *&#xA; * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED&#xA; * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES&#xA; * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE&#xA; * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR&#xA; * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,&#xA; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT&#xA; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF&#xA; * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND&#xA; * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,&#xA; * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT&#xA; * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF&#xA; * SUCH DAMAGE.&#xA; * ====================================================================&#xA; *&#xA; * This software consists of voluntary contributions made by many&#xA; * individuals on behalf of the Apache Software Foundation and was&#xA; * originally based on software copyright (c) 1999, International&#xA; * Business Machines, Inc., http://www.apache.org.  For more&#xA; * information on the Apache Software Foundation, please see&#xA; * &lt;http://www.apache.org/>.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>xerces</namespaces>
  <namespaces>internal</namespaces>
  <namespaces>dom</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/util/ArrayList.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/util/HashMap.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMConfiguration.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMErrorHandler.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMStringList.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <classifier xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <classifier xsi:type="classifiers:Class" href="../impl/XMLEntityManager.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <classifier xsi:type="classifiers:Class" href="../impl/XMLErrorReporter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>msg</namespaces>
    <classifier xsi:type="classifiers:Class" href="../impl/msg/XMLMessageFormatter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>validation</namespaces>
    <classifier xsi:type="classifiers:Class" href="../impl/validation/ValidationManager.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../util/DOMEntityResolverWrapper.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../util/DOMErrorHandlerWrapper.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../util/MessageFormatter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../util/SymbolTable.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../xni/XMLDTDContentModelHandler.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../xni/XMLDTDHandler.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../xni/XMLDocumentHandler.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <classifier xsi:type="classifiers:Class" href="../xni/XNIException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>grammars</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../xni/grammars/XMLGrammarPool.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../xni/parser/XMLComponent.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../xni/parser/XMLEntityResolver.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../xni/parser/XMLErrorHandler.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Class" href="../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <namespaces>parser</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <namespaces>ls</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSResourceResolver.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>dv</namespaces>
    <classifier xsi:type="classifiers:Class" href="../impl/dv/DTDDVFactory.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="DOMConfigurationImpl">
    <comments>// createDatatypeValidatorFactory():DatatypeValidatorFactory</comments>
    <members xsi:type="members:Field" name="XERCES_VALIDATION">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.2"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.6"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>//</comments>
        <comments>// Constants</comments>
        <comments>//</comments>
        <comments>// feature identifiers</comments>
        <comments>/** Feature identifier: validation. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="XERCES_NAMESPACES">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.2"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.3"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Feature identifier: namespaces. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SCHEMA">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.62"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.63"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DYNAMIC_VALIDATION">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.62"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.68"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NORMALIZE_DATA">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.62"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.64"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DATATYPE_VALIDATOR_FACTORY">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.103"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SEND_PSVI">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.62"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.67"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** sending psvi in the pipeline */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ENTITY_MANAGER">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.97"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// property identifiers</comments>
        <comments>/** Property identifier: entity manager. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ERROR_REPORTER">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.94"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Property identifier: error reporter. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="XML_STRING">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.19"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.23"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Property identifier: xml string. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="SYMBOL_TABLE">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.93"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Property identifier: symbol table. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="GRAMMAR_POOL">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.102"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Property id: Grammar pool*/</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ERROR_HANDLER">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.95"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Property identifier: error handler. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="ENTITY_RESOLVER">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.101"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Property identifier: entity resolver. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JAXP_SCHEMA_LANGUAGE">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.28"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Property identifier: JAXP schema language / DOM schema-type. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="JAXP_SCHEMA_SOURCE">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.27"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Property identifier: JAXP schema source/ DOM schema-location. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VALIDATION_MANAGER">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.90"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <children xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.114"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
        </children>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="fDocumentHandler">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>//</comments>
          <comments>// Data</comments>
          <comments>//</comments>
          <target xsi:type="classifiers:Interface" href="../xni/XMLDocumentHandler.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="features">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Normalization features*/</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="NAMESPACES">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="DTNORMALIZATION">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="ENTITIES">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="CDATA">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="SPLITCDATA">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="COMMENTS">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="VALIDATE">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="PSVI">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="WELLFORMED">
      <initialValue xsi:type="expressions:ShiftExpression">
        <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
        <shiftOperators xsi:type="operators:LeftShift"/>
      </initialValue>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="INFOSET_TRUE_PARAMS">
      <initialValue xsi:type="expressions:InclusiveOrExpression">
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
      </initialValue>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="INFOSET_FALSE_PARAMS">
      <initialValue xsi:type="expressions:InclusiveOrExpression">
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
      </initialValue>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="INFOSET_MASK">
      <initialValue xsi:type="expressions:InclusiveOrExpression">
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
      </initialValue>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="fSymbolTable">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../util/SymbolTable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// components</comments>
        <comments>/** Symbol table. */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fDatatypeValidatorFactory">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../impl/dv/DTDDVFactory.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
    </members>
    <members xsi:type="members:Field" name="fComponents">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/util/ArrayList.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Components. */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fValidationManager">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../impl/validation/ValidationManager.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
    </members>
    <members xsi:type="members:Field" name="fLocale">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Locale. */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fErrorReporter">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../impl/XMLErrorReporter.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Error reporter */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fErrorHandlerWrapper">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../util/DOMErrorHandlerWrapper.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../util/DOMErrorHandlerWrapper.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="fRecognizedParameters">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMStringList.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// private data</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="DOMConfigurationImpl">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="literals:NullLiteral"/>
          <arguments xsi:type="literals:NullLiteral"/>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>//</comments>
        <comments>// Constructors</comments>
        <comments>//</comments>
        <comments>/** Default Constructor. */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="DOMConfigurationImpl">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.0"/>
          <arguments xsi:type="literals:NullLiteral"/>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="symbolTable">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../util/SymbolTable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// &lt;init>()</comments>
        <comments>/**&#xA;     * Constructs a parser configuration using the specified symbol table.&#xA;     *&#xA;     * @param symbolTable The symbol table to use.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="DOMConfigurationImpl">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.1"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <comments>// create storage for recognized features and properties</comments>
            <target xsi:type="members:Field" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.3"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/util/ArrayList.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.1"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/util/ArrayList.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <comments>// create table for features and properties</comments>
            <target xsi:type="members:Field" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.4"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/util/HashMap.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.2"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/util/HashMap.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="recognizedFeatures">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
            </arrayInitializer>
          </initialValue>
          <annotationsAndModifiers xsi:type="modifiers:Final">
            <comments>// add default recognized features</comments>
          </annotationsAndModifiers>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.8"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.5/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.53">
          <comments>// set state for default features</comments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          <arguments xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.53">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          <arguments xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.53">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          <arguments xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.53">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          <arguments xsi:type="literals:BooleanLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.53">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <arguments xsi:type="literals:BooleanLiteral" value="true"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.53">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
          <arguments xsi:type="literals:BooleanLiteral" value="true"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="recognizedProperties">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
            </arrayInitializer>
          </initialValue>
          <annotationsAndModifiers xsi:type="modifiers:Final">
            <comments>// add default recognized properties</comments>
          </annotationsAndModifiers>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.10"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.13/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18">
            <comments>// set default values for normalization features</comments>
          </child>
          <assignmentOperator xsi:type="operators:AssignmentOr"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
          <assignmentOperator xsi:type="operators:AssignmentOr"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
          <assignmentOperator xsi:type="operators:AssignmentOr"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
          <assignmentOperator xsi:type="operators:AssignmentOr"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
          <assignmentOperator xsi:type="operators:AssignmentOr"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
          <assignmentOperator xsi:type="operators:AssignmentOr"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../util/SymbolTable.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/util/ArrayList.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.54">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../impl/XMLErrorReporter.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.54">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.63">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="manager">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../impl/XMLEntityManager.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../impl/XMLEntityManager.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.54">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.28/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.63">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.28/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.64"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.54">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.65"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.54">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// add message formatters</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="xmft">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../impl/msg/XMLMessageFormatter.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../impl/msg/XMLMessageFormatter.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../impl/XMLErrorReporter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/msg/XMLMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/msg/XMLMessageFormatter.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.35/@statement/@statements.0/@variable"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../impl/XMLErrorReporter.class.xmi#//@classifiers.0/@members.20"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/msg/XMLMessageFormatter.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/msg/XMLMessageFormatter.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.35/@statement/@statements.0/@variable"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../impl/XMLErrorReporter.class.xmi#//@classifiers.0/@members.21"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/msg/XMLMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/msg/XMLMessageFormatter.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// REVISIT: try to include XML Schema formatter.</comments>
        <comments>//          This is a hack to allow DTD configuration to be build.</comments>
        <comments>//</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="xmft">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../util/MessageFormatter.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="literals:NullLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.36/@statement/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Interface" href="../util/MessageFormatter.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="ObjectFactory.class.xmi#//@classifiers.0/@members.10"/>
                        <arguments xsi:type="references:StringReference" value="com.sun.org.apache.xerces.internal.impl.xs.XSMessageFormatter"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="ObjectFactory.class.xmi#//@classifiers.0/@members.9"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="ObjectFactory.class.xmi#//@classifiers.0"/>
                        </arguments>
                        <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="ObjectFactory.class.xmi#//@classifiers.0"/>
                    </expression>
                  </child>
                </value>
              </expression>
            </statements>
            <catcheBlocks>
              <parameter name="exception">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Exception.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../impl/XMLErrorReporter.class.xmi#//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:StringReference" value="http://www.w3.org/TR/xml-schema-1"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.36/@statement/@statements.0/@variable"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.36/@statement/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../impl/XMLErrorReporter.class.xmi#//@classifiers.0/@members.21"/>
              <arguments xsi:type="references:StringReference" value="http://www.w3.org/TR/xml-schema-1"/>
            </next>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <comments>// set locale</comments>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.55">
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0/@members.35"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
            </arguments>
          </expression>
        </statements>
        <catcheBlocks>
          <comments>// do nothing</comments>
          <comments>// REVISIT: What is the right thing to do? -Ac</comments>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../xni/XNIException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="symbolTable">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../util/SymbolTable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parentSettings">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../xni/parser/XMLComponentManager.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// &lt;init>(SymbolTable)</comments>
        <comments>/**&#xA;     * Constructs a parser configuration using the specified symbol table&#xA;     * and parent settings.&#xA;     *&#xA;     * @param symbolTable    The symbol table to use.&#xA;     * @param parentSettings The parent settings.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="parse">
      <comments>// no-op</comments>
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inputSource">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../xni/parser/XMLInputSource.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../xni/XNIException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// &lt;init>(SymbolTable)</comments>
        <comments>//</comments>
        <comments>// XMLParserConfiguration methods</comments>
        <comments>//</comments>
        <comments>/**&#xA;     * Parse an XML document.&#xA;     * &lt;p>&#xA;     * The parser can use this method to instruct this configuration&#xA;     * to begin parsing an XML document from any valid input source&#xA;     * (a character stream, a byte stream, or a URI).&#xA;     * &lt;p>&#xA;     * Parsers may not invoke this method while a parse is in progress.&#xA;     * Once a parse is complete, the parser may then parse another XML&#xA;     * document.&#xA;     * &lt;p>&#xA;     * This method is synchronous: it will not return until parsing&#xA;     * has ended.  If a client application wants to terminate&#xA;     * parsing early, it should throw an exception.&#xA;     *&#xA;     * @param source The input source for the top-level of the&#xA;     *               XML document.&#xA;     *&#xA;     * @exception XNIException Any XNI exception, possibly wrapping&#xA;     *                         another exception.&#xA;     * @exception IOException  An IO exception from the parser, possibly&#xA;     *                         from a byte stream or character stream&#xA;     *                         supplied by the parser.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="setDocumentHandler">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="documentHandler">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../xni/XMLDocumentHandler.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the document handler on the last component in the pipeline&#xA;     * to receive information about the document.&#xA;     *&#xA;     * @param documentHandler   The document handler.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDocumentHandler">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../xni/XMLDocumentHandler.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// setDocumentHandler(XMLDocumentHandler)</comments>
        <comments>/** Returns the registered document handler. */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setDTDHandler">
      <comments>//no-op</comments>
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="dtdHandler">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../xni/XMLDTDHandler.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// getDocumentHandler():XMLDocumentHandler</comments>
        <comments>/**&#xA;     * Sets the DTD handler.&#xA;     *&#xA;     * @param dtdHandler The DTD handler.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="getDTDHandler">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../xni/XMLDTDHandler.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// setDTDHandler(XMLDTDHandler)</comments>
        <comments>/** Returns the registered DTD handler. */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:NullLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setDTDContentModelHandler">
      <comments>//no-op</comments>
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="handler">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../xni/XMLDTDContentModelHandler.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// getDTDHandler():XMLDTDHandler</comments>
        <comments>/**&#xA;     * Sets the DTD content model handler.&#xA;     *&#xA;     * @param handler The DTD content model handler.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="getDTDContentModelHandler">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../xni/XMLDTDContentModelHandler.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// setDTDContentModelHandler(XMLDTDContentModelHandler)</comments>
        <comments>/** Returns the registered DTD content model handler. */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:NullLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setEntityResolver">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="resolver">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../xni/parser/XMLEntityResolver.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// getDTDContentModelHandler():XMLDTDContentModelHandler</comments>
        <comments>/**&#xA;     * Sets the resolver used to resolve external entities. The EntityResolver&#xA;     * interface supports resolution of public and system identifiers.&#xA;     *&#xA;     * @param resolver The new entity resolver. Passing a null value will&#xA;     *                 uninstall the currently installed resolver.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/HashMap.class.xmi#//@classifiers.0/@members.31"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.0"/>
              </next>
              <target xsi:type="members:Field" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.2"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.49/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getEntityResolver">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../xni/parser/XMLEntityResolver.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// setEntityResolver(XMLEntityResolver)</comments>
        <comments>/**&#xA;     * Return the current entity resolver.&#xA;     *&#xA;     * @return The current entity resolver, or null if none&#xA;     *         has been registered.&#xA;     * @see #setEntityResolver&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../xni/parser/XMLEntityResolver.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/HashMap.class.xmi#//@classifiers.0/@members.27"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
            </next>
            <target xsi:type="members:Field" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.2"/>
          </child>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setErrorHandler">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="errorHandler">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../xni/parser/XMLErrorHandler.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// getEntityResolver():XMLEntityResolver</comments>
        <comments>/**&#xA;     * Allow an application to register an error event handler.&#xA;     *&#xA;     * &lt;p>If the application does not register an error handler, all&#xA;     * error events reported by the SAX parser will be silently&#xA;     * ignored; however, normal processing may not continue.  It is&#xA;     * highly recommended that all SAX applications implement an&#xA;     * error handler to avoid unexpected bugs.&lt;/p>&#xA;     *&#xA;     * &lt;p>Applications may register a new or different handler in the&#xA;     * middle of a parse, and the SAX parser must begin using the new&#xA;     * handler immediately.&lt;/p>&#xA;     *&#xA;     * @param errorHandler The error handler.&#xA;     * @exception java.lang.NullPointerException If the handler&#xA;     *            argument is null.&#xA;     * @see #getErrorHandler&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/HashMap.class.xmi#//@classifiers.0/@members.31"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0"/>
              </next>
              <target xsi:type="members:Field" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.2"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getErrorHandler">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../xni/parser/XMLErrorHandler.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// setErrorHandler(XMLErrorHandler)</comments>
        <comments>/**&#xA;     * Return the current error handler.&#xA;     *&#xA;     * @return The current error handler, or null if none&#xA;     *         has been registered.&#xA;     * @see #setErrorHandler&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../xni/parser/XMLErrorHandler.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/HashMap.class.xmi#//@classifiers.0/@members.27"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
            </next>
            <target xsi:type="members:Field" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.2"/>
          </child>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setFeature">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="featureId">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="state">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// getErrorHandler():XMLErrorHandler</comments>
        <comments>/**&#xA;     * Set the state of a feature.&#xA;     *&#xA;     * Set the state of any feature in a SAX2 parser.  The parser&#xA;     * might not recognize the feature, and if it does recognize&#xA;     * it, it might not be able to fulfill the request.&#xA;     *&#xA;     * @param featureId The unique identifier (URI) of the feature.&#xA;     * @param state The requested state of the feature (true or false).&#xA;     *&#xA;     * @exception com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException If the&#xA;     *            requested feature is not known.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.9"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.53/@parameters.1"/>
          </next>
          <self xsi:type="literals:Super">
            <comments>// save state if noone &quot;objects&quot;</comments>
          </self>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setProperty">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="propertyId">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// setFeature(String,boolean)</comments>
        <comments>/**&#xA;     * setProperty&#xA;     *&#xA;     * @param propertyId&#xA;     * @param value&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.11"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54/@parameters.1"/>
          </next>
          <self xsi:type="literals:Super">
            <comments>// store value if noone &quot;objects&quot;</comments>
          </self>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setLocale">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="locale">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../xni/XNIException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// setProperty(String,Object)</comments>
        <comments>/**&#xA;     * Set the locale to use for messages.&#xA;     *&#xA;     * @param locale The locale object to use for localization of messages.&#xA;     *&#xA;     * @exception XNIException Thrown if the parser does not support the&#xA;     *                         specified locale.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../impl/XMLErrorReporter.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.55/@parameters.0"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getLocale">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// setLocale(Locale)</comments>
        <comments>/** Returns the locale. */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setParameter">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// getLocale():Locale</comments>
        <comments>/**&#xA;     * DOM Level 3 WD - Experimental.&#xA;     * setParameter&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// REVISIT: Recognizes DOM L3 default features only.</comments>
        <comments>//          Does not yet recognize Xerces features.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="state">
              <typeReference xsi:type="types:Boolean"/>
              <initialValue xsi:type="expressions:NestedExpression">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.8"/>
                </next>
                <expression xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                </expression>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:Short"/>
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:ConditionalExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                        <expressionIf xsi:type="expressions:InclusiveOrExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                        </expressionIf>
                        <expressionElse xsi:type="expressions:AndExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                          <children xsi:type="expressions:UnaryExpression">
                            <operators xsi:type="operators:Complement"/>
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                          </children>
                        </expressionElse>
                      </expression>
                    </child>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.35"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.53">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:Short"/>
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ConditionalExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                          <expressionIf xsi:type="expressions:InclusiveOrExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
                          </expressionIf>
                          <expressionElse xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                            <children xsi:type="expressions:UnaryExpression">
                              <operators xsi:type="operators:Complement"/>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
                            </children>
                          </expressionElse>
                        </expression>
                      </child>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Short"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:InclusiveOrExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
                            </expression>
                          </child>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.37"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:Short"/>
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:ConditionalExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                            <expressionIf xsi:type="expressions:InclusiveOrExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
                            </expressionIf>
                            <expressionElse xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                              <children xsi:type="expressions:UnaryExpression">
                                <operators xsi:type="operators:Complement"/>
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
                              </children>
                            </expressionElse>
                          </expression>
                        </child>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.40"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:Short"/>
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:ConditionalExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                              <expressionIf xsi:type="expressions:InclusiveOrExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
                              </expressionIf>
                              <expressionElse xsi:type="expressions:AndExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                <children xsi:type="expressions:UnaryExpression">
                                  <operators xsi:type="operators:Complement"/>
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
                                </children>
                              </expressionElse>
                            </expression>
                          </child>
                        </value>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.34"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="expressions:CastExpression">
                            <typeReference xsi:type="types:Short"/>
                            <child xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:ConditionalExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                                <expressionIf xsi:type="expressions:InclusiveOrExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                                </expressionIf>
                                <expressionElse xsi:type="expressions:AndExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                  <children xsi:type="expressions:UnaryExpression">
                                    <operators xsi:type="operators:Complement"/>
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                                  </children>
                                </expressionElse>
                              </expression>
                            </child>
                          </value>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.38"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </condition>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="expressions:AssignmentExpression">
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                            <assignmentOperator xsi:type="operators:Assignment"/>
                            <value xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:Short"/>
                              <child xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:ConditionalExpression">
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                                  <expressionIf xsi:type="expressions:InclusiveOrExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
                                  </expressionIf>
                                  <expressionElse xsi:type="expressions:AndExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                    <children xsi:type="expressions:UnaryExpression">
                                      <operators xsi:type="operators:Complement"/>
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
                                    </children>
                                  </expressionElse>
                                </expression>
                              </child>
                            </value>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.50"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                          </arguments>
                        </next>
                      </condition>
                      <elseStatement xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="expressions:CastExpression">
                                <typeReference xsi:type="types:Short"/>
                                <child xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:ConditionalExpression">
                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                                    <expressionIf xsi:type="expressions:InclusiveOrExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
                                    </expressionIf>
                                    <expressionElse xsi:type="expressions:AndExpression">
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                      <children xsi:type="expressions:UnaryExpression">
                                        <operators xsi:type="operators:Complement"/>
                                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
                                      </children>
                                    </expressionElse>
                                  </expression>
                                </child>
                              </value>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.44"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </condition>
                        <elseStatement xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="expressions:AssignmentExpression">
                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                <assignmentOperator xsi:type="operators:Assignment"/>
                                <value xsi:type="expressions:CastExpression">
                                  <typeReference xsi:type="types:Short"/>
                                  <child xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:ConditionalExpression">
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                                      <expressionIf xsi:type="expressions:InclusiveOrExpression">
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
                                      </expressionIf>
                                      <expressionElse xsi:type="expressions:AndExpression">
                                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                        <children xsi:type="expressions:UnaryExpression">
                                          <operators xsi:type="operators:Complement"/>
                                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
                                        </children>
                                      </expressionElse>
                                    </expression>
                                  </child>
                                </value>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.49"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                              </arguments>
                            </next>
                          </condition>
                          <elseStatement xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:Condition">
                                <comments>// Setting to false has no effect.</comments>
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="expressions:AssignmentExpression">
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                      <assignmentOperator xsi:type="operators:Assignment"/>
                                      <value xsi:type="expressions:CastExpression">
                                        <typeReference xsi:type="types:Short"/>
                                        <child xsi:type="expressions:NestedExpression">
                                          <expression xsi:type="expressions:InclusiveOrExpression">
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                                          </expression>
                                        </child>
                                      </value>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="expressions:AssignmentExpression">
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                      <assignmentOperator xsi:type="operators:Assignment"/>
                                      <value xsi:type="expressions:CastExpression">
                                        <typeReference xsi:type="types:Short"/>
                                        <child xsi:type="expressions:NestedExpression">
                                          <expression xsi:type="expressions:AndExpression">
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                            <children xsi:type="expressions:UnaryExpression">
                                              <operators xsi:type="operators:Complement"/>
                                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
                                            </children>
                                          </expression>
                                        </child>
                                      </value>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.53">
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                                      <arguments xsi:type="literals:BooleanLiteral"/>
                                    </expression>
                                  </statements>
                                </statement>
                                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                              </statements>
                            </statement>
                            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.39"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                </arguments>
                              </next>
                            </condition>
                            <elseStatement xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:LocalVariableStatement">
                                      <variable name="msg">
                                        <typeReference xsi:type="types:NamespaceClassifierReference">
                                          <classifierReferences>
                                            <comments>// true is not supported</comments>
                                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                          </classifierReferences>
                                        </typeReference>
                                        <initialValue xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                            <arguments xsi:type="references:IdentifierReference">
                                              <next xsi:type="references:IdentifierReference">
                                                <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                              </next>
                                              <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                            </arguments>
                                            <arguments xsi:type="references:StringReference" value="FEATURE_NOT_SUPPORTED"/>
                                            <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                                <classifierReferences>
                                                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                                </classifierReferences>
                                              </typeReference>
                                              <arrayDimensionsBefore/>
                                              <arrayInitializer>
                                                <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
                                              </arrayInitializer>
                                            </arguments>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                        </initialValue>
                                      </variable>
                                    </statements>
                                    <statements xsi:type="statements:Throw">
                                      <throwable xsi:type="instantiations:NewConstructorCall">
                                        <typeReference xsi:type="types:NamespaceClassifierReference">
                                          <classifierReferences>
                                            <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                          </classifierReferences>
                                        </typeReference>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.1/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@variable"/>
                                      </throwable>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                                </statements>
                              </statement>
                              <condition xsi:type="expressions:ConditionalOrExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.47"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.33"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.43"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.48"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </children>
                              </condition>
                              <elseStatement xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:Condition">
                                    <statement xsi:type="statements:Block">
                                      <statements xsi:type="statements:LocalVariableStatement">
                                        <variable name="msg">
                                          <typeReference xsi:type="types:NamespaceClassifierReference">
                                            <classifierReferences>
                                              <comments>// false is not supported</comments>
                                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                            </classifierReferences>
                                          </typeReference>
                                          <initialValue xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                              <arguments xsi:type="references:IdentifierReference">
                                                <next xsi:type="references:IdentifierReference">
                                                  <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                                </next>
                                                <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                              </arguments>
                                              <arguments xsi:type="references:StringReference" value="FEATURE_NOT_SUPPORTED"/>
                                              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                                  <classifierReferences>
                                                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                                  </classifierReferences>
                                                </typeReference>
                                                <arrayDimensionsBefore/>
                                                <arrayInitializer>
                                                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
                                                </arrayInitializer>
                                              </arguments>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                          </initialValue>
                                        </variable>
                                      </statements>
                                      <statements xsi:type="statements:Throw">
                                        <throwable xsi:type="instantiations:NewConstructorCall">
                                          <typeReference xsi:type="types:NamespaceClassifierReference">
                                            <classifierReferences>
                                              <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                            </classifierReferences>
                                          </typeReference>
                                          <arguments xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                          </arguments>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.1/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@variable"/>
                                        </throwable>
                                      </statements>
                                    </statement>
                                    <condition xsi:type="expressions:UnaryExpression">
                                      <operators xsi:type="operators:Negate"/>
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                                    </condition>
                                  </statements>
                                </statement>
                                <condition xsi:type="expressions:ConditionalOrExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.41"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </children>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.45"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </children>
                                </condition>
                                <elseStatement xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:Condition">
                                      <comments>// REVISIT: turning augmentation of PSVI is not support,</comments>
                                      <comments>// because in this case we won't be able to retrieve element</comments>
                                      <comments>// default value.</comments>
                                      <statement xsi:type="statements:Block">
                                        <statements xsi:type="statements:LocalVariableStatement">
                                          <variable name="msg">
                                            <typeReference xsi:type="types:NamespaceClassifierReference">
                                              <classifierReferences>
                                                <comments>// false is not supported</comments>
                                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                              </classifierReferences>
                                            </typeReference>
                                            <initialValue xsi:type="references:IdentifierReference">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                                <arguments xsi:type="references:IdentifierReference">
                                                  <next xsi:type="references:IdentifierReference">
                                                    <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                                  </next>
                                                  <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                                </arguments>
                                                <arguments xsi:type="references:StringReference" value="FEATURE_NOT_SUPPORTED"/>
                                                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                                    <classifierReferences>
                                                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                                    </classifierReferences>
                                                  </typeReference>
                                                  <arrayDimensionsBefore/>
                                                  <arrayInitializer>
                                                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
                                                  </arrayInitializer>
                                                </arguments>
                                              </next>
                                              <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                            </initialValue>
                                          </variable>
                                        </statements>
                                        <statements xsi:type="statements:Throw">
                                          <throwable xsi:type="instantiations:NewConstructorCall">
                                            <typeReference xsi:type="types:NamespaceClassifierReference">
                                              <classifierReferences>
                                                <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                              </classifierReferences>
                                            </typeReference>
                                            <arguments xsi:type="references:IdentifierReference">
                                              <next xsi:type="references:IdentifierReference">
                                                <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                                              </next>
                                              <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                            </arguments>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.1/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@variable"/>
                                          </throwable>
                                        </statements>
                                      </statement>
                                      <condition xsi:type="expressions:UnaryExpression">
                                        <operators xsi:type="operators:Negate"/>
                                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                                      </condition>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                                    </next>
                                  </condition>
                                  <elseStatement xsi:type="statements:Condition">
                                    <statement xsi:type="statements:Block">
                                      <statements xsi:type="statements:ExpressionStatement">
                                        <expression xsi:type="expressions:AssignmentExpression">
                                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                          <assignmentOperator xsi:type="operators:Assignment"/>
                                          <value xsi:type="expressions:CastExpression">
                                            <typeReference xsi:type="types:Short"/>
                                            <child xsi:type="expressions:NestedExpression">
                                              <expression xsi:type="expressions:ConditionalExpression">
                                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.0/@variable"/>
                                                <expressionIf xsi:type="expressions:InclusiveOrExpression">
                                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                                                </expressionIf>
                                                <expressionElse xsi:type="expressions:AndExpression">
                                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                                  <children xsi:type="expressions:UnaryExpression">
                                                    <operators xsi:type="operators:Complement"/>
                                                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                                                  </children>
                                                </expressionElse>
                                              </expression>
                                            </child>
                                          </value>
                                        </expression>
                                      </statements>
                                    </statement>
                                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.61"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                      </next>
                                    </condition>
                                    <elseStatement xsi:type="statements:Block">
                                      <statements xsi:type="statements:LocalVariableStatement">
                                        <variable name="msg">
                                          <typeReference xsi:type="types:NamespaceClassifierReference">
                                            <classifierReferences>
                                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                            </classifierReferences>
                                          </typeReference>
                                          <initialValue xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                              <arguments xsi:type="references:IdentifierReference">
                                                <next xsi:type="references:IdentifierReference">
                                                  <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                                </next>
                                                <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                              </arguments>
                                              <arguments xsi:type="references:StringReference" value="FEATURE_NOT_FOUND"/>
                                              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                                  <classifierReferences>
                                                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                                  </classifierReferences>
                                                </typeReference>
                                                <arrayDimensionsBefore/>
                                                <arrayInitializer>
                                                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
                                                </arrayInitializer>
                                              </arguments>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                          </initialValue>
                                        </variable>
                                      </statements>
                                      <statements xsi:type="statements:Throw">
                                        <throwable xsi:type="instantiations:NewConstructorCall">
                                          <typeReference xsi:type="types:NamespaceClassifierReference">
                                            <classifierReferences>
                                              <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                            </classifierReferences>
                                          </typeReference>
                                          <arguments xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.8"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                          </arguments>
                                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@statement/@statements.1/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                                        </throwable>
                                      </statements>
                                    </elseStatement>
                                  </elseStatement>
                                </elseStatement>
                              </elseStatement>
                            </elseStatement>
                          </elseStatement>
                        </elseStatement>
                      </elseStatement>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <comments>// set properties</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../util/DOMErrorHandlerWrapper.class.xmi#//@classifiers.0/@members.9"/>
                        <arguments xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMErrorHandler.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:InstanceOfExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMErrorHandler.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                  </children>
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="msg">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <comments>// REVISIT: type mismatch</comments>
                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <initialValue xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                          </arguments>
                          <arguments xsi:type="references:StringReference" value="TYPE_MISMATCH_ERR"/>
                          <arguments xsi:type="arrays:ArrayInstantiationByValues">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arrayDimensionsBefore/>
                            <arrayInitializer>
                              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
                            </arrayInitializer>
                          </arguments>
                        </next>
                        <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:Throw">
                    <throwable xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@elseStatement/@statements.0/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                    </throwable>
                  </statements>
                </elseStatement>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.58"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:TryBlock">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.49">
                          <arguments xsi:type="instantiations:NewConstructorCall">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../util/DOMEntityResolverWrapper.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arguments xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSResourceResolver.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                            </arguments>
                          </arguments>
                        </expression>
                      </statements>
                      <catcheBlocks>
                        <parameter name="e">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                        </parameter>
                      </catcheBlocks>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalOrExpression">
                    <children xsi:type="expressions:InstanceOfExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSResourceResolver.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                    </children>
                    <children xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                      <children xsi:type="literals:NullLiteral"/>
                    </children>
                  </condition>
                  <elseStatement xsi:type="statements:Block">
                    <statements xsi:type="statements:LocalVariableStatement">
                      <variable name="msg">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <comments>// REVISIT: type mismatch</comments>
                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <initialValue xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                            </arguments>
                            <arguments xsi:type="references:StringReference" value="TYPE_MISMATCH_ERR"/>
                            <arguments xsi:type="arrays:ArrayInstantiationByValues">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <arrayDimensionsBefore/>
                              <arrayInitializer>
                                <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
                              </arrayInitializer>
                            </arguments>
                          </next>
                          <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                        </initialValue>
                      </variable>
                    </statements>
                    <statements xsi:type="statements:Throw">
                      <throwable xsi:type="instantiations:NewConstructorCall">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@elseStatement/@statements.0/@elseStatement/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                      </throwable>
                    </statements>
                  </elseStatement>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.57"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:TryBlock">
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="schemaType">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <initialValue xsi:type="expressions:CastExpression">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <child xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.13"/>
                                <arguments xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                  </children>
                                  <children xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.28"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                  </children>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                </arguments>
                              </child>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.54">
                                <comments>// map DOM schema-location to JAXP schemaSource property</comments>
                                <arguments xsi:type="expressions:AdditiveExpression">
                                  <children xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                  </children>
                                  <children xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.27"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                  </children>
                                  <additiveOperators xsi:type="operators:Addition"/>
                                </arguments>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:ConditionalOrExpression">
                            <children xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:Equal"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@statements.0/@variable"/>
                              <children xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.0"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                              </children>
                            </children>
                            <children xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:Equal"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                              <children xsi:type="literals:NullLiteral"/>
                            </children>
                          </condition>
                          <elseStatement xsi:type="statements:Block">
                            <statements xsi:type="statements:LocalVariableStatement">
                              <variable name="msg">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <comments>// schemaType must not be null.</comments>
                                    <comments>// REVISIT: allow pre-parsing DTD grammars</comments>
                                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <initialValue xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                    <arguments xsi:type="references:StringReference" value="FEATURE_NOT_SUPPORTED"/>
                                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                      <typeReference xsi:type="types:NamespaceClassifierReference">
                                        <classifierReferences>
                                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                        </classifierReferences>
                                      </typeReference>
                                      <arrayDimensionsBefore/>
                                      <arrayInitializer>
                                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
                                      </arrayInitializer>
                                    </arguments>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                </initialValue>
                              </variable>
                            </statements>
                            <statements xsi:type="statements:Throw">
                              <throwable xsi:type="instantiations:NewConstructorCall">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                </arguments>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@statements.1/@elseStatement/@statements.0/@variable"/>
                              </throwable>
                            </statements>
                          </elseStatement>
                        </statements>
                        <catcheBlocks>
                          <parameter name="e">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                          </parameter>
                        </catcheBlocks>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:ConditionalOrExpression">
                      <children xsi:type="expressions:InstanceOfExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                      </children>
                      <children xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                        <children xsi:type="literals:NullLiteral"/>
                      </children>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="msg">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <comments>// REVISIT: type mismatch</comments>
                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                              </arguments>
                              <arguments xsi:type="references:StringReference" value="TYPE_MISMATCH_ERR"/>
                              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <arrayDimensionsBefore/>
                                <arrayInitializer>
                                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
                                </arrayInitializer>
                              </arguments>
                            </next>
                            <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:Throw">
                        <throwable xsi:type="instantiations:NewConstructorCall">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                          </arguments>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                        </throwable>
                      </statements>
                    </elseStatement>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.60"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:TryBlock">
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.54">
                                  <arguments xsi:type="expressions:AdditiveExpression">
                                    <children xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </children>
                                    <children xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.28"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </children>
                                    <additiveOperators xsi:type="operators:Addition"/>
                                  </arguments>
                                  <arguments xsi:type="literals:NullLiteral"/>
                                </expression>
                              </statements>
                            </statement>
                            <condition xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:Equal"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                              <children xsi:type="literals:NullLiteral"/>
                            </condition>
                            <elseStatement xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:ExpressionStatement">
                                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.54">
                                    <comments>// REVISIT: when add support to DTD validation</comments>
                                    <arguments xsi:type="expressions:AdditiveExpression">
                                      <children xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </children>
                                      <children xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.28"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </children>
                                      <additiveOperators xsi:type="operators:Addition"/>
                                    </arguments>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.0"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </expression>
                                </statements>
                              </statement>
                              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.0"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                              </condition>
                              <elseStatement xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:LocalVariableStatement">
                                    <variable name="msg">
                                      <typeReference xsi:type="types:NamespaceClassifierReference">
                                        <classifierReferences>
                                          <comments>// REVISIT: revalidation against DTDs is not supported</comments>
                                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                        </classifierReferences>
                                      </typeReference>
                                      <initialValue xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                          <arguments xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                          </arguments>
                                          <arguments xsi:type="references:StringReference" value="FEATURE_NOT_SUPPORTED"/>
                                          <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                            <typeReference xsi:type="types:NamespaceClassifierReference">
                                              <classifierReferences>
                                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                              </classifierReferences>
                                            </typeReference>
                                            <arrayDimensionsBefore/>
                                            <arrayInitializer>
                                              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
                                            </arrayInitializer>
                                          </arguments>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                      </initialValue>
                                    </variable>
                                  </statements>
                                  <statements xsi:type="statements:Throw">
                                    <throwable xsi:type="instantiations:NewConstructorCall">
                                      <typeReference xsi:type="types:NamespaceClassifierReference">
                                        <classifierReferences>
                                          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                        </classifierReferences>
                                      </typeReference>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@statement/@statements.0/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                                    </throwable>
                                  </statements>
                                </statement>
                                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.1"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                  </next>
                                </condition>
                              </elseStatement>
                            </elseStatement>
                          </statements>
                          <catcheBlocks>
                            <parameter name="e">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                            </parameter>
                          </catcheBlocks>
                        </statements>
                      </statement>
                      <condition xsi:type="expressions:ConditionalOrExpression">
                        <children xsi:type="expressions:InstanceOfExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                        </children>
                        <children xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:Equal"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                          <children xsi:type="literals:NullLiteral"/>
                        </children>
                      </condition>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="msg">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <initialValue xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                </arguments>
                                <arguments xsi:type="references:StringReference" value="TYPE_MISMATCH_ERR"/>
                                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                    <classifierReferences>
                                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                    </classifierReferences>
                                  </typeReference>
                                  <arrayDimensionsBefore/>
                                  <arrayInitializer>
                                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
                                  </arrayInitializer>
                                </arguments>
                              </next>
                              <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:Throw">
                          <throwable xsi:type="instantiations:NewConstructorCall">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                            </arguments>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                          </throwable>
                        </statements>
                      </elseStatement>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.59"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Condition">
                        <comments>// Xerces Symbol Table</comments>
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.54">
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="expressions:InstanceOfExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../util/SymbolTable.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                        </condition>
                        <elseStatement xsi:type="statements:Block">
                          <statements xsi:type="statements:LocalVariableStatement">
                            <variable name="msg">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <comments>// REVISIT: type mismatch</comments>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <initialValue xsi:type="references:IdentifierReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                  <arguments xsi:type="references:StringReference" value="TYPE_MISMATCH_ERR"/>
                                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                    <typeReference xsi:type="types:NamespaceClassifierReference">
                                      <classifierReferences>
                                        <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                      </classifierReferences>
                                    </typeReference>
                                    <arrayDimensionsBefore/>
                                    <arrayInitializer>
                                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
                                    </arrayInitializer>
                                  </arguments>
                                </next>
                                <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                              </initialValue>
                            </variable>
                          </statements>
                          <statements xsi:type="statements:Throw">
                            <throwable xsi:type="instantiations:NewConstructorCall">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                              </arguments>
                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                            </throwable>
                          </statements>
                        </elseStatement>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                      </next>
                    </condition>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:ExpressionStatement">
                              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.54">
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                              </expression>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:InstanceOfExpression">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Interface" href="../xni/grammars/XMLGrammarPool.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.1"/>
                          </condition>
                          <elseStatement xsi:type="statements:Block">
                            <statements xsi:type="statements:LocalVariableStatement">
                              <variable name="msg">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <comments>// REVISIT: type mismatch</comments>
                                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <initialValue xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                    <arguments xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                    </arguments>
                                    <arguments xsi:type="references:StringReference" value="TYPE_MISMATCH_ERR"/>
                                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                      <typeReference xsi:type="types:NamespaceClassifierReference">
                                        <classifierReferences>
                                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                        </classifierReferences>
                                      </typeReference>
                                      <arrayDimensionsBefore/>
                                      <arrayInitializer>
                                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
                                      </arrayInitializer>
                                    </arguments>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                </initialValue>
                              </variable>
                            </statements>
                            <statements xsi:type="statements:Throw">
                              <throwable xsi:type="instantiations:NewConstructorCall">
                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                  <classifierReferences>
                                    <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                  </classifierReferences>
                                </typeReference>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.9"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                </arguments>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@elseStatement/@statements.0/@variable"/>
                              </throwable>
                            </statements>
                          </elseStatement>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                        </next>
                      </condition>
                      <elseStatement xsi:type="statements:Block">
                        <statements xsi:type="statements:LocalVariableStatement">
                          <variable name="msg">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <comments>// REVISIT: check if this is a boolean parameter -- type mismatch should be thrown.</comments>
                                <comments>//parameter is not recognized</comments>
                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <initialValue xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                </arguments>
                                <arguments xsi:type="references:StringReference" value="FEATURE_NOT_FOUND"/>
                                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                    <classifierReferences>
                                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                    </classifierReferences>
                                  </typeReference>
                                  <arrayDimensionsBefore/>
                                  <arrayInitializer>
                                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@parameters.0"/>
                                  </arrayInitializer>
                                </arguments>
                              </next>
                              <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                            </initialValue>
                          </variable>
                        </statements>
                        <statements xsi:type="statements:Throw">
                          <throwable xsi:type="instantiations:NewConstructorCall">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.8"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                            </arguments>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.57/@statements.0/@elseStatement/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                          </throwable>
                        </statements>
                      </elseStatement>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getParameter">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * DOM Level 3 WD - Experimental.&#xA;     * getParameter&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// REVISIT: Recognizes DOM L3 default features only.</comments>
        <comments>//          Does not yet recognize Xerces features.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:ConditionalExpression">
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </expression>
              </child>
              <expressionIf xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
              </expressionIf>
              <expressionElse xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
              </expressionElse>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.35"/>
              </next>
              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="expressions:ConditionalExpression">
                <child xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </child>
                <expressionIf xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                </expressionIf>
                <expressionElse xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                </expressionElse>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.40"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <comments>// REVISIT: datatype-normalization only takes effect if validation is on</comments>
                <returnValue xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AndExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
                      </expression>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </child>
                  <expressionIf xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                  </expressionIf>
                  <expressionElse xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                  </expressionElse>
                </returnValue>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.37"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:ConditionalExpression">
                    <child xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AndExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </child>
                    <expressionIf xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                    </expressionIf>
                    <expressionElse xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                    </expressionElse>
                  </returnValue>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.34"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:ConditionalExpression">
                      <child xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:NotEqual"/>
                        <children xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:AndExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                          </expression>
                        </children>
                        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </child>
                      <expressionIf xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                      </expressionIf>
                      <expressionElse xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                      </expressionElse>
                    </returnValue>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.38"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="expressions:ConditionalExpression">
                        <child xsi:type="expressions:EqualityExpression">
                          <equalityOperators xsi:type="operators:NotEqual"/>
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:AndExpression">
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
                            </expression>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        </child>
                        <expressionIf xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                        </expressionIf>
                        <expressionElse xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                        </expressionElse>
                      </returnValue>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.50"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Return">
                        <returnValue xsi:type="expressions:ConditionalExpression">
                          <child xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="expressions:NestedExpression">
                              <expression xsi:type="expressions:AndExpression">
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
                              </expression>
                            </children>
                            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          </child>
                          <expressionIf xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                          </expressionIf>
                          <expressionElse xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                          </expressionElse>
                        </returnValue>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.44"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </condition>
                    <elseStatement xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:Return">
                          <returnValue xsi:type="expressions:ConditionalExpression">
                            <child xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:NotEqual"/>
                              <children xsi:type="expressions:NestedExpression">
                                <expression xsi:type="expressions:AndExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
                                </expression>
                              </children>
                              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                            </child>
                            <expressionIf xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                            </expressionIf>
                            <expressionElse xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                            </expressionElse>
                          </returnValue>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.49"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                          </arguments>
                        </next>
                      </condition>
                      <elseStatement xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:Return">
                            <returnValue xsi:type="expressions:ConditionalExpression">
                              <child xsi:type="expressions:EqualityExpression">
                                <equalityOperators xsi:type="operators:Equal"/>
                                <children xsi:type="expressions:NestedExpression">
                                  <expression xsi:type="expressions:AndExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
                                  </expression>
                                </children>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                              </child>
                              <expressionIf xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                              </expressionIf>
                              <expressionElse xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                              </expressionElse>
                            </returnValue>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.39"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </condition>
                        <elseStatement xsi:type="statements:Condition">
                          <statement xsi:type="statements:Block">
                            <statements xsi:type="statements:Return">
                              <returnValue xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                              </returnValue>
                            </statements>
                          </statement>
                          <condition xsi:type="expressions:ConditionalOrExpression">
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.47"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                </arguments>
                              </next>
                            </children>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.33"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                </arguments>
                              </next>
                            </children>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.43"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                </arguments>
                              </next>
                            </children>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                <arguments xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.48"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                </arguments>
                              </next>
                            </children>
                          </condition>
                          <elseStatement xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:Return">
                                <returnValue xsi:type="references:IdentifierReference">
                                  <next xsi:type="references:IdentifierReference">
                                    <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                                  </next>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                                </returnValue>
                              </statements>
                            </statement>
                            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                              </next>
                            </condition>
                            <elseStatement xsi:type="statements:Condition">
                              <statement xsi:type="statements:Block">
                                <statements xsi:type="statements:Return">
                                  <returnValue xsi:type="expressions:ConditionalExpression">
                                    <child xsi:type="expressions:EqualityExpression">
                                      <equalityOperators xsi:type="operators:NotEqual"/>
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:AndExpression">
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                                        </expression>
                                      </children>
                                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                    </child>
                                    <expressionIf xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                                    </expressionIf>
                                    <expressionElse xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                                    </expressionElse>
                                  </returnValue>
                                </statements>
                              </statement>
                              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                  <arguments xsi:type="references:IdentifierReference">
                                    <next xsi:type="references:IdentifierReference">
                                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.61"/>
                                    </next>
                                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                  </arguments>
                                </next>
                              </condition>
                              <elseStatement xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:Return">
                                    <returnValue xsi:type="references:IdentifierReference">
                                      <next xsi:type="references:IdentifierReference">
                                        <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                                      </next>
                                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                                    </returnValue>
                                  </statements>
                                </statement>
                                <condition xsi:type="expressions:ConditionalOrExpression">
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.41"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </children>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.45"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </children>
                                </condition>
                                <elseStatement xsi:type="statements:Condition">
                                  <statement xsi:type="statements:Block">
                                    <statements xsi:type="statements:Return">
                                      <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../util/DOMErrorHandlerWrapper.class.xmi#//@classifiers.0/@members.10"/>
                                        </next>
                                      </returnValue>
                                    </statements>
                                  </statement>
                                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                                    <next xsi:type="references:MethodCall">
                                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                      <arguments xsi:type="references:IdentifierReference">
                                        <next xsi:type="references:IdentifierReference">
                                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.58"/>
                                        </next>
                                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                      </arguments>
                                    </next>
                                  </condition>
                                  <elseStatement xsi:type="statements:Condition">
                                    <statement xsi:type="statements:Block">
                                      <statements xsi:type="statements:LocalVariableStatement">
                                        <variable name="entityResolver">
                                          <typeReference xsi:type="types:NamespaceClassifierReference">
                                            <classifierReferences>
                                              <target xsi:type="classifiers:Interface" href="../xni/parser/XMLEntityResolver.class.xmi#//@classifiers.0"/>
                                            </classifierReferences>
                                          </typeReference>
                                          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.50"/>
                                        </variable>
                                      </statements>
                                      <statements xsi:type="statements:Condition">
                                        <statement xsi:type="statements:Block">
                                          <statements xsi:type="statements:Return">
                                            <returnValue xsi:type="expressions:NestedExpression">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="../util/DOMEntityResolverWrapper.class.xmi#//@classifiers.0/@members.6"/>
                                              </next>
                                              <expression xsi:type="expressions:CastExpression">
                                                <typeReference xsi:type="types:NamespaceClassifierReference">
                                                  <classifierReferences>
                                                    <target xsi:type="classifiers:Class" href="../util/DOMEntityResolverWrapper.class.xmi#//@classifiers.0"/>
                                                  </classifierReferences>
                                                </typeReference>
                                                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                                              </expression>
                                            </returnValue>
                                          </statements>
                                        </statement>
                                        <condition xsi:type="expressions:ConditionalAndExpression">
                                          <children xsi:type="expressions:EqualityExpression">
                                            <equalityOperators xsi:type="operators:NotEqual"/>
                                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                                            <children xsi:type="literals:NullLiteral"/>
                                          </children>
                                          <children xsi:type="expressions:InstanceOfExpression">
                                            <typeReference xsi:type="types:NamespaceClassifierReference">
                                              <classifierReferences>
                                                <target xsi:type="classifiers:Class" href="../util/DOMEntityResolverWrapper.class.xmi#//@classifiers.0"/>
                                              </classifierReferences>
                                            </typeReference>
                                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                                          </children>
                                        </condition>
                                      </statements>
                                      <statements xsi:type="statements:Return">
                                        <returnValue xsi:type="literals:NullLiteral"/>
                                      </statements>
                                    </statement>
                                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                                      <next xsi:type="references:MethodCall">
                                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                        <arguments xsi:type="references:IdentifierReference">
                                          <next xsi:type="references:IdentifierReference">
                                            <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.57"/>
                                          </next>
                                          <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                        </arguments>
                                      </next>
                                    </condition>
                                    <elseStatement xsi:type="statements:Condition">
                                      <statement xsi:type="statements:Block">
                                        <statements xsi:type="statements:Return">
                                          <returnValue xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.13"/>
                                            <arguments xsi:type="expressions:AdditiveExpression">
                                              <children xsi:type="references:IdentifierReference">
                                                <next xsi:type="references:IdentifierReference">
                                                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                                                </next>
                                                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                              </children>
                                              <children xsi:type="references:IdentifierReference">
                                                <next xsi:type="references:IdentifierReference">
                                                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.28"/>
                                                </next>
                                                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                              </children>
                                              <additiveOperators xsi:type="operators:Addition"/>
                                            </arguments>
                                          </returnValue>
                                        </statements>
                                      </statement>
                                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                          <arguments xsi:type="references:IdentifierReference">
                                            <next xsi:type="references:IdentifierReference">
                                              <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.59"/>
                                            </next>
                                            <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                          </arguments>
                                        </next>
                                      </condition>
                                      <elseStatement xsi:type="statements:Condition">
                                        <statement xsi:type="statements:Block">
                                          <statements xsi:type="statements:Return">
                                            <returnValue xsi:type="references:MethodCall">
                                              <target xsi:type="members:ClassMethod" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.13"/>
                                              <arguments xsi:type="expressions:AdditiveExpression">
                                                <children xsi:type="references:IdentifierReference">
                                                  <next xsi:type="references:IdentifierReference">
                                                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.26"/>
                                                  </next>
                                                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                                </children>
                                                <children xsi:type="references:IdentifierReference">
                                                  <next xsi:type="references:IdentifierReference">
                                                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.27"/>
                                                  </next>
                                                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                                </children>
                                                <additiveOperators xsi:type="operators:Addition"/>
                                              </arguments>
                                            </returnValue>
                                          </statements>
                                        </statement>
                                        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                                          <next xsi:type="references:MethodCall">
                                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                            <arguments xsi:type="references:IdentifierReference">
                                              <next xsi:type="references:IdentifierReference">
                                                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.60"/>
                                              </next>
                                              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                                            </arguments>
                                          </next>
                                        </condition>
                                        <elseStatement xsi:type="statements:Condition">
                                          <statement xsi:type="statements:Block">
                                            <statements xsi:type="statements:Return">
                                              <returnValue xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.13"/>
                                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                                              </returnValue>
                                            </statements>
                                          </statement>
                                          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                                            </next>
                                          </condition>
                                          <elseStatement xsi:type="statements:Condition">
                                            <statement xsi:type="statements:Block">
                                              <statements xsi:type="statements:Return">
                                                <returnValue xsi:type="references:MethodCall">
                                                  <target xsi:type="members:ClassMethod" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.13"/>
                                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                                                </returnValue>
                                              </statements>
                                            </statement>
                                            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0">
                                              <next xsi:type="references:MethodCall">
                                                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                                              </next>
                                            </condition>
                                            <elseStatement xsi:type="statements:Block">
                                              <statements xsi:type="statements:LocalVariableStatement">
                                                <variable name="msg">
                                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                                    <classifierReferences>
                                                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                                    </classifierReferences>
                                                  </typeReference>
                                                  <initialValue xsi:type="references:IdentifierReference">
                                                    <next xsi:type="references:MethodCall">
                                                      <target xsi:type="members:ClassMethod" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.8"/>
                                                      <arguments xsi:type="references:IdentifierReference">
                                                        <next xsi:type="references:IdentifierReference">
                                                          <target xsi:type="members:Field" href="DOMMessageFormatter.class.xmi#//@classifiers.0/@members.0"/>
                                                        </next>
                                                        <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                                      </arguments>
                                                      <arguments xsi:type="references:StringReference" value="FEATURE_NOT_FOUND"/>
                                                      <arguments xsi:type="arrays:ArrayInstantiationByValues">
                                                        <typeReference xsi:type="types:NamespaceClassifierReference">
                                                          <classifierReferences>
                                                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                                                          </classifierReferences>
                                                        </typeReference>
                                                        <arrayDimensionsBefore/>
                                                        <arrayInitializer>
                                                          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0"/>
                                                        </arrayInitializer>
                                                      </arguments>
                                                    </next>
                                                    <target xsi:type="classifiers:Class" href="DOMMessageFormatter.class.xmi#//@classifiers.0"/>
                                                  </initialValue>
                                                </variable>
                                              </statements>
                                              <statements xsi:type="statements:Throw">
                                                <throwable xsi:type="instantiations:NewConstructorCall">
                                                  <typeReference xsi:type="types:NamespaceClassifierReference">
                                                    <classifierReferences>
                                                      <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                                    </classifierReferences>
                                                  </typeReference>
                                                  <arguments xsi:type="references:IdentifierReference">
                                                    <next xsi:type="references:IdentifierReference">
                                                      <target xsi:type="members:Field" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0/@members.8"/>
                                                    </next>
                                                    <target xsi:type="classifiers:Class" href="../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
                                                  </arguments>
                                                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@statements.0/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@elseStatement/@statements.0/@variable"/>
                                                </throwable>
                                              </statements>
                                            </elseStatement>
                                          </elseStatement>
                                        </elseStatement>
                                      </elseStatement>
                                    </elseStatement>
                                  </elseStatement>
                                </elseStatement>
                              </elseStatement>
                            </elseStatement>
                          </elseStatement>
                        </elseStatement>
                      </elseStatement>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="canSetParameter">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * DOM Level 3 WD - Experimental.&#xA;     * Check if setting a parameter to a specific value is supported.&#xA;     *&#xA;     * @param name The name of the parameter to check.&#xA;     *&#xA;     * @param value An object. if null, the returned value is true.&#xA;     *&#xA;     * @return true if the parameter could be successfully set to the&#xA;     * specified value, or false if the parameter is not recognized or&#xA;     * the requested value is not supported. This does not change the&#xA;     * current value of the parameter itself.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <comments>//if null, the returned value is true.</comments>
            <comments>//REVISIT: I dont like this --- even for unrecognized parameter it would</comments>
            <comments>//return 'true'. I think it should return false in that case.</comments>
            <comments>// Application will be surprised to find that setParameter throws not</comments>
            <comments>//recognized exception when canSetParameter returns 'true' Then what is the use</comments>
            <comments>//of having canSetParameter ??? - nb.</comments>
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <comments>//features whose parameter value can be set either 'true' or 'false'</comments>
            <comments>// or they accept any boolean value -- so we just need to check that</comments>
            <comments>// its a boolean value..</comments>
            <comments>//features whose parameter value can not be set to 'true'</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.35"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.37"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.34"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.38"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.50"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.40"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.44"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.49"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.39"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <comments>//features whose parameter value can not be set to 'false'</comments>
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:ConditionalExpression">
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.1">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                          <arguments xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                          </arguments>
                        </next>
                      </expression>
                    </child>
                    <expressionIf xsi:type="literals:BooleanLiteral"/>
                    <expressionElse xsi:type="literals:BooleanLiteral" value="true"/>
                  </returnValue>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalOrExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.47"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.33"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.43"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.48"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <comments>// if name is not among the above listed above -- its not recognized. return false</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="expressions:ConditionalExpression">
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.1">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                            <arguments xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                            </arguments>
                          </next>
                        </expression>
                      </child>
                      <expressionIf xsi:type="literals:BooleanLiteral" value="true"/>
                      <expressionElse xsi:type="literals:BooleanLiteral"/>
                    </returnValue>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.41"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.45"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                    </next>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:Return">
                    <returnValue xsi:type="literals:BooleanLiteral"/>
                  </statements>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.1"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="expressions:ConditionalExpression">
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:InstanceOfExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMErrorHandler.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.1"/>
                  </expression>
                </child>
                <expressionIf xsi:type="literals:BooleanLiteral" value="true"/>
                <expressionElse xsi:type="literals:BooleanLiteral"/>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.58"/>
                </next>
                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="expressions:ConditionalExpression">
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:InstanceOfExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/ls/LSResourceResolver.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.1"/>
                    </expression>
                  </child>
                  <expressionIf xsi:type="literals:BooleanLiteral" value="true"/>
                  <expressionElse xsi:type="literals:BooleanLiteral"/>
                </returnValue>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.57"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="expressions:ConditionalExpression">
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:InstanceOfExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.1"/>
                      </expression>
                    </child>
                    <expressionIf xsi:type="literals:BooleanLiteral" value="true"/>
                    <expressionElse xsi:type="literals:BooleanLiteral"/>
                  </returnValue>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.60"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Return">
                    <comments>// REVISIT: should null value be supported?</comments>
                    <comments>//as of now we are only supporting W3C XML Schema</comments>
                    <returnValue xsi:type="expressions:ConditionalExpression">
                      <child xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ConditionalAndExpression">
                          <children xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:InstanceOfExpression">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.1"/>
                            </expression>
                          </children>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.1">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                              <arguments xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.0"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                              </arguments>
                            </next>
                          </children>
                        </expression>
                      </child>
                      <expressionIf xsi:type="literals:BooleanLiteral" value="true"/>
                      <expressionElse xsi:type="literals:BooleanLiteral"/>
                    </returnValue>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.59"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </condition>
                <elseStatement xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <comments>// Xerces Symbol Table</comments>
                      <returnValue xsi:type="expressions:ConditionalExpression">
                        <child xsi:type="expressions:NestedExpression">
                          <expression xsi:type="expressions:InstanceOfExpression">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../util/SymbolTable.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.1"/>
                          </expression>
                        </child>
                        <expressionIf xsi:type="literals:BooleanLiteral" value="true"/>
                        <expressionElse xsi:type="literals:BooleanLiteral"/>
                      </returnValue>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                    </next>
                  </condition>
                  <elseStatement xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Return">
                        <returnValue xsi:type="expressions:ConditionalExpression">
                          <child xsi:type="expressions:NestedExpression">
                            <expression xsi:type="expressions:InstanceOfExpression">
                              <typeReference xsi:type="types:NamespaceClassifierReference">
                                <classifierReferences>
                                  <target xsi:type="classifiers:Interface" href="../xni/grammars/XMLGrammarPool.class.xmi#//@classifiers.0"/>
                                </classifierReferences>
                              </typeReference>
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.1"/>
                            </expression>
                          </child>
                          <expressionIf xsi:type="literals:BooleanLiteral" value="true"/>
                          <expressionElse xsi:type="literals:BooleanLiteral"/>
                        </returnValue>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                      </next>
                    </condition>
                    <elseStatement xsi:type="statements:Block">
                      <statements xsi:type="statements:Return">
                        <comments>//false if the parameter is not recognized or the requested value is not supported.</comments>
                        <returnValue xsi:type="literals:BooleanLiteral"/>
                      </statements>
                    </elseStatement>
                  </elseStatement>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getParameterNames">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMStringList.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>//canSetParameter</comments>
        <comments>/**&#xA;     *  DOM Level 3 CR - Experimental.&#xA;     *&#xA;     *  The list of the parameters supported by this&#xA;     * &lt;code>DOMConfiguration&lt;/code> object and for which at least one value&#xA;     * can be set by the application. Note that this list can also contain&#xA;     * parameter names defined outside this specification.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="parameters">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <comments>//Add DOM recognized parameters</comments>
              <comments>//REVISIT: Would have been nice to have a list of</comments>
              <comments>//recognized paramters.</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.35"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.37"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.34"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.38"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.50"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.40"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.44"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.39"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.47"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.33"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.43"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.48"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.49"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.41"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.45"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.58"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.59"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.60"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.57"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="DOMStringListImpl.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statement/@statements.0/@variable"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.38"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="reset">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../xni/XNIException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>//getParameterNames</comments>
        <comments>//</comments>
        <comments>// Protected methods</comments>
        <comments>//</comments>
        <comments>/**&#xA;     * reset all components before parsing&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../impl/validation/ValidationManager.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </expression>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="count">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/ArrayList.class.xmi#//@classifiers.0/@members.8"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="c">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../xni/parser/XMLComponent.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../xni/parser/XMLComponent.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/ArrayList.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.2/@init"/>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.2/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLComponent.class.xmi#//@classifiers.0/@members.0"/>
                <arguments xsi:type="references:SelfReference">
                  <self xsi:type="literals:This"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.1/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="checkProperty">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="propertyId">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// reset()</comments>
        <comments>/**&#xA;     * Check a property. If the property is known and supported, this method&#xA;     * simply returns. Otherwise, the appropriate exception is thrown.&#xA;     *&#xA;     * @param propertyId The unique identifier (URI) of the property&#xA;     *                   being set.&#xA;     * @exception com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException If the&#xA;     *            requested feature is not known or supported.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// special cases</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="suffixLength">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                    </next>
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.19"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </children>
                <additiveOperators xsi:type="operators:Subtraction"/>
              </initialValue>
              <annotationsAndModifiers xsi:type="modifiers:Final"/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>//</comments>
            <comments>// http://xml.org/sax/properties/xml-string</comments>
            <comments>// Value type: String</comments>
            <comments>// Access: read-only</comments>
            <comments>//   Get the literal string of characters associated with the</comments>
            <comments>//   current event.  If the parser recognises and supports this</comments>
            <comments>//   property but is not currently parsing text, it should return</comments>
            <comments>//   null (this is a good way to check for availability before the</comments>
            <comments>//   parse begins).</comments>
            <comments>//</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="type">
                  <typeReference xsi:type="types:Short">
                    <comments>// REVISIT - we should probably ask xml-dev for a precise</comments>
                    <comments>// definition of what this is actually supposed to return, and</comments>
                    <comments>// in exactly which circumstances.</comments>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../xni/parser/XMLConfigurationException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.0/@statement/@statements.1/@statement/@statements.0/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.0"/>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@statements.0/@statement/@statements.0/@variable"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                    </next>
                    <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.23"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                </children>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.43"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.23"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.42"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../impl/Constants.class.xmi#//@classifiers.0/@members.19"/>
              </next>
              <target xsi:type="classifiers:Class" href="../impl/Constants.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.15"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.0"/>
          </next>
          <self xsi:type="literals:Super">
            <comments>// check property</comments>
          </self>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="addComponent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="component">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../xni/parser/XMLComponent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// checkProperty(String)</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// don't add a component more than once</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return"/>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/ArrayList.class.xmi#//@classifiers.0/@members.10"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63/@parameters.0"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../java/util/ArrayList.class.xmi#//@classifiers.0/@members.18"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63/@parameters.0"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="recognizedFeatures">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// register component's recognized features</comments>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLComponent.class.xmi#//@classifiers.0/@members.1"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.8"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63/@statements.2/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="recognizedProperties">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// register component's recognized properties</comments>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../xni/parser/XMLComponent.class.xmi#//@classifiers.0/@members.3"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0/@members.10"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63/@statements.4/@variable"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createValidationManager">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../impl/validation/ValidationManager.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// addComponent(XMLComponent)</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../impl/validation/ValidationManager.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createDatatypeValidatorFactory">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../impl/dv/DTDDVFactory.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../impl/dv/DTDDVFactory.class.xmi#//@classifiers.0/@members.1"/>
          </next>
          <target xsi:type="classifiers:Class" href="../impl/dv/DTDDVFactory.class.xmi#//@classifiers.0"/>
        </returnValue>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Xerces implementation of DOMConfiguration that maintains a table of recognized parameters.&#xA; *&#xA; * @author Elena Litani, IBM&#xA; * @author Neeraj Bajaj, Sun Microsystems.&#xA; * @version $Id: DOMConfigurationImpl.java,v 1.28 2004/04/14 15:54:06 mrglavas Exp $&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../xni/parser/XMLParserConfiguration.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../../../../../org/w3c/dom/DOMConfiguration.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="../util/ParserConfigurationSettings.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
