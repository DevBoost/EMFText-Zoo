<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../java.ecore#/4 http://www.emftext.org/java/members ../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../../../../java.ecore#/16" name="PSVIProvider.java">
  <comments>/*&#xA; * The Apache Software License, Version 1.1&#xA; *&#xA; *&#xA; * Copyright (c) 2003 The Apache Software Foundation.  All rights&#xA; * reserved.&#xA; *&#xA; * Redistribution and use in source and binary forms, with or without&#xA; * modification, are permitted provided that the following conditions&#xA; * are met:&#xA; *&#xA; * 1. Redistributions of source code must retain the above copyright&#xA; *    notice, this list of conditions and the following disclaimer.&#xA; *&#xA; * 2. Redistributions in binary form must reproduce the above copyright&#xA; *    notice, this list of conditions and the following disclaimer in&#xA; *    the documentation and/or other materials provided with the&#xA; *    distribution.&#xA; *&#xA; * 3. The end-user documentation included with the redistribution,&#xA; *    if any, must include the following acknowledgment:&#xA; *       &quot;This product includes software developed by the&#xA; *        Apache Software Foundation (http://www.apache.org/).&quot;&#xA; *    Alternately, this acknowledgment may appear in the software itself,&#xA; *    if and wherever such third-party acknowledgments normally appear.&#xA; *&#xA; * 4. The names &quot;Xerces&quot; and &quot;Apache Software Foundation&quot; must&#xA; *    not be used to endorse or promote products derived from this&#xA; *    software without prior written permission. For written&#xA; *    permission, please contact apache@apache.org.&#xA; *&#xA; * 5. Products derived from this software may not be called &quot;Apache&quot;,&#xA; *    nor may &quot;Apache&quot; appear in their name, without prior written&#xA; *    permission of the Apache Software Foundation.&#xA; *&#xA; * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED&#xA; * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES&#xA; * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE&#xA; * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR&#xA; * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,&#xA; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT&#xA; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF&#xA; * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND&#xA; * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,&#xA; * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT&#xA; * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF&#xA; * SUCH DAMAGE.&#xA; * ====================================================================&#xA; *&#xA; * This software consists of voluntary contributions made by many&#xA; * individuals on behalf of the Apache Software Foundation and was&#xA; * originally based on software copyright (c) 2003, International&#xA; * Business Machines, Inc., http://www.apache.org.  For more&#xA; * information on the Apache Software Foundation, please see&#xA; * &lt;http://www.apache.org/>.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>xerces</namespaces>
  <namespaces>internal</namespaces>
  <namespaces>xs</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="PSVIProvider">
    <members xsi:type="members:InterfaceMethod" name="getElementPSVI">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="ElementPSVI.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     *  Provides the post schema validation item for the current element &#xA;     * information item. The method must be called by an application while &#xA;     * in the scope of the methods which report the start and end of an &#xA;     * element. For example, for SAX the method must be called within the &#xA;     * scope of the document handler's &lt;code>startElement&lt;/code> or &#xA;     * &lt;code>endElement&lt;/code> call. If the method is called outside of the &#xA;     * specified scope, the return value is undefined. &#xA;     * @return The post schema validation infoset for the current element. If &#xA;     *   an element information item is valid, then in the &#xA;     *   post-schema-validation infoset the following properties must be &#xA;     *   available for the element information item: The following &#xA;     *   properties are available in the scope of the method that reports &#xA;     *   the start of an element: {element declaration}, {validation &#xA;     *   context}, {notation}. The {schema information} property is &#xA;     *   available for the validation root. The {error codes} property is &#xA;     *   available if any errors occured during validation.  The following &#xA;     *   properties are available in the scope of the method that reports &#xA;     *   the end of an element: {nil}, {schema specified}, {normalized &#xA;     *   value},{ member type definition}, {validity}, {validation attempted}&#xA;     *   . If the declaration has a value constraint, the property {schema &#xA;     *   default} is available. The {error codes} property is available if &#xA;     *   any errors occured during validation. Note: some processors may &#xA;     *   choose to provide all the PSVI properties in the scope of the &#xA;     *   method that reports the end of an element. &#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAttributePSVI">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="AttributePSVI.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="index">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Provides &lt;code>AttributePSVI&lt;/code> given the index of an attribute &#xA;     * information item in the current element's attribute list. The method &#xA;     * must be called by an application while in the scope of the methods &#xA;     * which report the start and end of an element at a point where the &#xA;     * attribute list is available. For example, for SAX the method must be &#xA;     * called while in the scope of the document handler's &#xA;     * &lt;code>startElement&lt;/code> call. If the method is called outside of &#xA;     * the specified scope, the return value is undefined.&#xA;     * @param index The attribute index. &#xA;     * @return The post schema validation properties of the attribute.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAttributePSVIByName">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="AttributePSVI.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="uri">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="localname">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Provides &lt;code>AttributePSVI&lt;/code> given the namespace name and the &#xA;     * local name of an attribute information item in the current element's &#xA;     * attribute list. The method must be called by an application while in &#xA;     * the scope of the methods which report the start and end of an element &#xA;     * at a point where the attribute list is available. For example, for &#xA;     * SAX the method must be called while in the scope of the document &#xA;     * handler's &lt;code>startElement&lt;/code> call. If the method is called &#xA;     * outside of the specified scope, the return value is undefined.&#xA;     * @param uri The namespace name of an attribute. &#xA;     * @param localname The local name of an attribute. &#xA;     * @return The post schema validation properties of the attribute.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This interface provides access to the post schema validation infoset for an &#xA; * API that provides a streaming document infoset, such as SAX, XNI, and &#xA; * others. &#xA; * &lt;p>For implementations that would like to provide access to the PSVI in a &#xA; * streaming model, a parser object should also implement the &#xA; * &lt;code>PSVIProvider&lt;/code> interface. Within the scope of the methods &#xA; * handling the start and end of an element, applications may use the &#xA; * &lt;code>PSVIProvider&lt;/code> to retrieve the PSVI related to the element and &#xA; * its attributes.&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
