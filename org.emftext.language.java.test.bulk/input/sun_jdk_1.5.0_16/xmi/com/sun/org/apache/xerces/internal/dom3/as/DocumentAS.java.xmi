<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../../../../../java.ecore#/16" name="DocumentAS.java">
  <comments>/*&#xA; * Copyright (c) 2001 World Wide Web Consortium,&#xA; * (Massachusetts Institute of Technology, Institut National de&#xA; * Recherche en Informatique et en Automatique, Keio University). All&#xA; * Rights Reserved. This program is distributed under the W3C's Software&#xA; * Intellectual Property License. This program is distributed in the&#xA; * hope that it will be useful, but WITHOUT ANY WARRANTY; without even&#xA; * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR&#xA; * PURPOSE.&#xA; * See W3C License http://www.w3.org/Consortium/Legal/ for more details.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>xerces</namespaces>
  <namespaces>internal</namespaces>
  <namespaces>dom3</namespaces>
  <namespaces>as</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>w3c</namespaces>
    <namespaces>dom</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="DocumentAS">
    <members xsi:type="members:InterfaceMethod" name="getActiveASModel">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="ASModel.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     *  The active external ASModel. Note that the active external &#xA;     * &lt;code>ASModel&lt;/code> is responsible for consulting the internal &#xA;     * ASModel, so if an attribute is declared in the internal &#xA;     * &lt;code>ASModel&lt;/code> and the corresponding &lt;code>ownerElements&lt;/code> &#xA;     * points to a &lt;code>ASElementDeclaration&lt;/code>s defined in the active &#xA;     * external ASModel, changing the active external ASModel will cause the &#xA;     * &lt;code>ownerElements&lt;/code> to be recomputed. If the &#xA;     * &lt;code>ownerElements&lt;/code> is not defined in the newly active &#xA;     * external ASModel, the &lt;code>ownerElements&lt;/code> will be an empty &#xA;     * node list. &#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setActiveASModel">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="activeASModel">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="ASModel.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     *  The active external ASModel. Note that the active external &#xA;     * &lt;code>ASModel&lt;/code> is responsible for consulting the internal &#xA;     * ASModel, so if an attribute is declared in the internal &#xA;     * &lt;code>ASModel&lt;/code> and the corresponding &lt;code>ownerElements&lt;/code> &#xA;     * points to a &lt;code>ASElementDeclaration&lt;/code>s defined in the active &#xA;     * external ASModel, changing the active external ASModel will cause the &#xA;     * &lt;code>ownerElements&lt;/code> to be recomputed. If the &#xA;     * &lt;code>ownerElements&lt;/code> is not defined in the newly active &#xA;     * external ASModel, the &lt;code>ownerElements&lt;/code> will be an empty &#xA;     * node list. &#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getBoundASModels">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="ASObjectList.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     *  A list of &lt;code>ASObject&lt;/code>s of type &lt;code>AS_MODEL&lt;/code>s &#xA;     * associated with a document. The &lt;code>addAS&lt;/code> method associates &#xA;     * a &lt;code>ASModel&lt;/code> with a document.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setBoundASModels">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="boundASModels">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="ASObjectList.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     *  A list of &lt;code>ASObject&lt;/code>s of type &lt;code>AS_MODEL&lt;/code>s &#xA;     * associated with a document. The &lt;code>addAS&lt;/code> method associates &#xA;     * a &lt;code>ASModel&lt;/code> with a document.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getInternalAS">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="ASModel.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Retrieve the internal &lt;code>ASModel&lt;/code> of a document. &#xA;     * @return &lt;code>ASModel&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setInternalAS">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="as">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="ASModel.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the internal subset &lt;code>ASModel&lt;/code> of a document. This could &#xA;     * be null as a mechanism for &quot;removal&quot;. &#xA;     * @param as &lt;code>ASModel&lt;/code> to be the internal subset of the &#xA;     *   document.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="addAS">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="as">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="ASModel.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Associate a &lt;code>ASModel&lt;/code> with a document. Can be invoked &#xA;     * multiple times to result in a list of &lt;code>ASModel&lt;/code>s. Note &#xA;     * that only one internal &lt;code>ASModel&lt;/code> is associated with the &#xA;     * document, however, and that only one of the possible list of &#xA;     * &lt;code>ASModel&lt;/code>s is active at any one time.&#xA;     * @param as &lt;code>ASModel&lt;/code> to be associated with the document.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="removeAS">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="as">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="ASModel.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Removes a &lt;code>ASModel&lt;/code> associated with a document. Can be &#xA;     * invoked multiple times to remove a number of these in the list of &#xA;     * &lt;code>ASModel&lt;/code>s.&#xA;     * @param as The &lt;code>ASModel&lt;/code> to be removed.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getElementDeclaration">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="ASElementDeclaration.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../org/w3c/dom/DOMException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the AS editing object describing this elementThis method needs to &#xA;     * be changed and others added.&#xA;     * @return ASElementDeclaration object if the implementation supports &quot;&#xA;     *   &lt;code>AS-EDIT&lt;/code>&quot; feature. Otherwise &lt;code>null&lt;/code>.&#xA;     * @exception DOMException&#xA;     *   NOT_FOUND_ERR: Raised if no &lt;code>ASModel&lt;/code> is present.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="validate">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="DOMASException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Validates the document against the &lt;code>ASModel&lt;/code>.&#xA;     * @exception DOMASException&#xA;     *   &#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * @deprecated&#xA; * This interface extends the &lt;code>Document&lt;/code> interface with additional &#xA; * methods for both document and AS editing.&#xA; * &lt;p>See also the &lt;a href='http://www.w3.org/TR/2001/WD-DOM-Level-3-ASLS-20011025'>Document Object Model (DOM) Level 3 Abstract Schemas and Load&#xA;and Save Specification&lt;/a>.&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
