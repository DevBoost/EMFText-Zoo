<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../../../../../java.ecore#/16" name="Subroutine.java">
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>bcel</namespaces>
  <namespaces>internal</namespaces>
  <namespaces>verifier</namespaces>
  <namespaces>structurals</namespaces>
  <imports xsi:type="imports:PackageImport">
    <comments>/* ====================================================================&#xA; * The Apache Software License, Version 1.1&#xA; *&#xA; * Copyright (c) 2001 The Apache Software Foundation.  All rights&#xA; * reserved.&#xA; *&#xA; * Redistribution and use in source and binary forms, with or without&#xA; * modification, are permitted provided that the following conditions&#xA; * are met:&#xA; *&#xA; * 1. Redistributions of source code must retain the above copyright&#xA; *    notice, this list of conditions and the following disclaimer.&#xA; *&#xA; * 2. Redistributions in binary form must reproduce the above copyright&#xA; *    notice, this list of conditions and the following disclaimer in&#xA; *    the documentation and/or other materials provided with the&#xA; *    distribution.&#xA; *&#xA; * 3. The end-user documentation included with the redistribution,&#xA; *    if any, must include the following acknowledgment:&#xA; *       &quot;This product includes software developed by the&#xA; *        Apache Software Foundation (http://www.apache.org/).&quot;&#xA; *    Alternately, this acknowledgment may appear in the software itself,&#xA; *    if and wherever such third-party acknowledgments normally appear.&#xA; *&#xA; * 4. The names &quot;Apache&quot; and &quot;Apache Software Foundation&quot; and&#xA; *    &quot;Apache BCEL&quot; must not be used to endorse or promote products&#xA; *    derived from this software without prior written permission. For&#xA; *    written permission, please contact apache@apache.org.&#xA; *&#xA; * 5. Products derived from this software may not be called &quot;Apache&quot;,&#xA; *    &quot;Apache BCEL&quot;, nor may &quot;Apache&quot; appear in their name, without&#xA; *    prior written permission of the Apache Software Foundation.&#xA; *&#xA; * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED&#xA; * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES&#xA; * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE&#xA; * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR&#xA; * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,&#xA; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT&#xA; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF&#xA; * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND&#xA; * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,&#xA; * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT&#xA; * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF&#xA; * SUCH DAMAGE.&#xA; * ====================================================================&#xA; *&#xA; * This software consists of voluntary contributions made by many&#xA; * individuals on behalf of the Apache Software Foundation.  For more&#xA; * information on the Apache Software Foundation, please see&#xA; * &lt;http://www.apache.org/>.&#xA; */</comments>
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>bcel</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>generic</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="Subroutine">
    <members xsi:type="members:InterfaceMethod" name="getEnteringJsrInstructions">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../generic/InstructionHandle.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns all the JsrInstructions that have the&#xA;&#x9; * first instruction of this subroutine as their target.&#xA;&#x9; * &lt;B>Must not be invoked on the 'top-level subroutine'.&lt;/B>&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getLeavingRET">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../generic/InstructionHandle.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns the one and only RET that leaves the subroutine.&#xA;&#x9; * Note that JustIce has a pretty rigid notion of a subroutine.&#xA;&#x9; * &lt;B>Must not be invoked on the 'top-level subroutine'.&lt;/B>&#xA;&#x9; *&#xA;&#x9; * @see com.sun.org.apache.bcel.internal.verifier.structurals.Subroutines&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getInstructions">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../generic/InstructionHandle.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns all instructions that together form this subroutine.&#xA;&#x9; * Note that an instruction is part of exactly one subroutine&#xA;&#x9; * (the top-level code is considered to be a special subroutine) -&#xA;&#x9; * else it is not reachable at all (dead code).&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="contains">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="inst">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../generic/InstructionHandle.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns if the given InstructionHandle refers to an instruction&#xA;&#x9; * that is part of this subroutine. This is a convenience method&#xA;&#x9; * that saves iteration over the InstructionHandle objects returned&#xA;&#x9; * by getInstructions().&#xA;&#x9; *&#xA;&#x9; * @see #getInstructions()&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAccessedLocalsIndices">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns an int[] containing the indices of the local variable slots&#xA;&#x9; * accessed by this Subroutine (read-accessed, write-accessed or both);&#xA;&#x9; * local variables referenced by subroutines of this subroutine are&#xA;&#x9; * not included.&#xA;&#x9; *&#xA;&#x9; * @see #getRecursivelyAccessedLocalsIndices()&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getRecursivelyAccessedLocalsIndices">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns an int[] containing the indices of the local variable slots&#xA;&#x9; * accessed by this Subroutine (read-accessed, write-accessed or both);&#xA;&#x9; * local variables referenced by subroutines of this subroutine are&#xA;&#x9; * included.&#xA;&#x9; *&#xA;&#x9; * @see #getAccessedLocalsIndices()&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="subSubs">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns the subroutines that are directly called from this subroutine.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This interface defines properties of JVM bytecode subroutines.&#xA; * Note that it is 'abused' to maintain the top-level code in a&#xA; * consistent fashion, too.&#xA; *&#xA; * @version $Id: Subroutine.java,v 1.1.1.1 2001/10/29 20:00:42 jvanzyl Exp $&#xA; * @author &lt;A HREF=&quot;http://www.inf.fu-berlin.de/~ehaase&quot;/>Enver Haase&lt;/A>&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
