<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../../../../../../java.ecore#/17" name="XPathMatcher.java">
  <comments>/*&#xA; * The Apache Software License, Version 1.1&#xA; *&#xA; *&#xA; * Copyright (c) 2001, 2002 The Apache Software Foundation.&#xA; * All rights reserved.&#xA; *&#xA; * Redistribution and use in source and binary forms, with or without&#xA; * modification, are permitted provided that the following conditions&#xA; * are met:&#xA; *&#xA; * 1. Redistributions of source code must retain the above copyright&#xA; *    notice, this list of conditions and the following disclaimer.&#xA; *&#xA; * 2. Redistributions in binary form must reproduce the above copyright&#xA; *    notice, this list of conditions and the following disclaimer in&#xA; *    the documentation and/or other materials provided with the&#xA; *    distribution.&#xA; *&#xA; * 3. The end-user documentation included with the redistribution,&#xA; *    if any, must include the following acknowledgment:&#xA; *       &quot;This product includes software developed by the&#xA; *        Apache Software Foundation (http://www.apache.org/).&quot;&#xA; *    Alternately, this acknowledgment may appear in the software itself,&#xA; *    if and wherever such third-party acknowledgments normally appear.&#xA; *&#xA; * 4. The names &quot;Xerces&quot; and &quot;Apache Software Foundation&quot; must&#xA; *    not be used to endorse or promote products derived from this&#xA; *    software without prior written permission. For written&#xA; *    permission, please contact apache@apache.org.&#xA; *&#xA; * 5. Products derived from this software may not be called &quot;Apache&quot;,&#xA; *    nor may &quot;Apache&quot; appear in their name, without prior written&#xA; *    permission of the Apache Software Foundation.&#xA; *&#xA; * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED&#xA; * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES&#xA; * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE&#xA; * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR&#xA; * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,&#xA; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT&#xA; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF&#xA; * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND&#xA; * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,&#xA; * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT&#xA; * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF&#xA; * SUCH DAMAGE.&#xA; * ====================================================================&#xA; *&#xA; * This software consists of voluntary contributions made by many&#xA; * individuals on behalf of the Apache Software Foundation and was&#xA; * originally based on software copyright (c) 1999, International&#xA; * Business Machines, Inc., http://www.apache.org.  For more&#xA; * information on the Apache Software Foundation, please see&#xA; * &lt;http://www.apache.org/>.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>org</namespaces>
  <namespaces>apache</namespaces>
  <namespaces>xerces</namespaces>
  <namespaces>internal</namespaces>
  <namespaces>impl</namespaces>
  <namespaces>xs</namespaces>
  <namespaces>identity</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>xpath</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../xpath/XPath.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../xs/XSTypeDefinition.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../util/IntStack.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xni</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../xni/XMLAttributes.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>org</namespaces>
    <namespaces>apache</namespaces>
    <namespaces>xerces</namespaces>
    <namespaces>internal</namespaces>
    <namespaces>xs</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../xs/AttributePSVI.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="XPathMatcher">
    <comments>//</comments>
    <comments>// MAIN</comments>
    <comments>//</comments>
    <comments>// NOTE: The main of this class is here for debugging purposes.</comments>
    <comments>//       However, javac (JDK 1.1.8) has an internal compiler</comments>
    <comments>//       error when compiling. Jikes has no problem, though.</comments>
    <comments>//</comments>
    <comments>//       If you want to use this main, use Jikes to compile but</comments>
    <comments>//       *never* check in this code to CVS without commenting it</comments>
    <comments>//       out. -Ac</comments>
    <comments>/** Main program. */</comments>
    <comments>/***&#xA;    public static void main(String[] argv) throws XNIException {&#xA;&#xA;        if (DEBUG_ANY) {&#xA;            for (int i = 0; i &lt; argv.length; i++) {&#xA;                final String expr = argv[i];&#xA;                final XPath xpath = new XPath(expr, symbols, null);&#xA;                final XPathMatcher matcher = new XPathMatcher(xpath, true);&#xA;                com.sun.org.apache.xerces.internal.parsers.SAXParser parser =&#xA;                    new com.sun.org.apache.xerces.internal.parsers.SAXParser(symbols) {&#xA;                    public void startDocument() throws XNIException {&#xA;                        matcher.startDocumentFragment(symbols, null);&#xA;                    }&#xA;                    public void startElement(QName element, XMLAttrList attributes, int handle) throws XNIException {&#xA;                        matcher.startElement(element, attributes, handle);&#xA;                    }&#xA;                    public void characters(char[] ch, int offset, int length) throws XNIException {&#xA;                        matcher.characters(ch, offset, length);&#xA;                    }&#xA;                    public void endElement(QName element) throws XNIException {&#xA;                        matcher.endElement(element);&#xA;                    }&#xA;                    public void endDocument() throws XNIException {&#xA;                        matcher.endDocumentFragment();&#xA;                    }&#xA;                };&#xA;                System.out.println(&quot;#### argv[&quot;+i+&quot;]: \&quot;&quot;+expr+&quot;\&quot; -> \&quot;&quot;+xpath.toString()+'&quot;');&#xA;                final String uri = argv[++i];&#xA;                System.out.println(&quot;#### argv[&quot;+i+&quot;]: &quot;+uri);&#xA;                parser.parse(uri);&#xA;            }&#xA;        }&#xA;&#xA;    } // main(String[])&#xA;    /***/</comments>
    <members xsi:type="members:Field" name="DEBUG_ALL">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>//</comments>
        <comments>// Constants</comments>
        <comments>//</comments>
        <comments>// debugging</comments>
        <comments>/** Compile to true to debug everything. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DEBUG_METHODS">
      <initialValue xsi:type="expressions:ConditionalOrExpression">
        <children xsi:type="literals:BooleanLiteral"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </initialValue>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Compile to true to debug method callbacks. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DEBUG_METHODS2">
      <initialValue xsi:type="expressions:ConditionalOrExpression">
        <children xsi:type="literals:BooleanLiteral"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </initialValue>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Compile to true to debug important method callbacks. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DEBUG_METHODS3">
      <initialValue xsi:type="expressions:ConditionalOrExpression">
        <children xsi:type="literals:BooleanLiteral"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </initialValue>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Compile to true to debug the &lt;em>really&lt;/em> important methods. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DEBUG_MATCH">
      <initialValue xsi:type="expressions:ConditionalOrExpression">
        <children xsi:type="literals:BooleanLiteral"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </initialValue>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Compile to true to debug match. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DEBUG_STACK">
      <initialValue xsi:type="expressions:ConditionalOrExpression">
        <children xsi:type="literals:BooleanLiteral"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </initialValue>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Compile to true to debug step index stack. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="DEBUG_ANY">
      <initialValue xsi:type="expressions:ConditionalOrExpression">
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
      </initialValue>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** Don't touch this value unless you add more debug constants. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MATCHED">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// constants describing whether a match was made,</comments>
        <comments>// and if so how.  </comments>
        <comments>// matched any way</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MATCHED_ATTRIBUTE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// matched on the attribute axis</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MATCHED_DESCENDANT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// matched on the descendant-or-self axixs</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="MATCHED_DESCENDANT_PREVIOUS">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="13"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// matched some previous (ancestor) node on the descendant-or-self-axis, but not this node</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="fLocationPaths">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>XPath</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../xpath/XPath$LocationPath.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>//</comments>
        <comments>// Data</comments>
        <comments>//</comments>
        <comments>/** XPath location path. */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fMatched">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** True if XPath has been matched. */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fMatchedString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/** The matching string. */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fStepIndexes">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../util/IntStack.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** Integer stack of step indexes. */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fCurrentStep">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** Current step. */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fNoMatchDepth">
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * No match depth. The value of this field will be zero while&#xA;     * matching is successful for the given xpath expression.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="fQName">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="fCurrMatchedType">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../xs/XSTypeDefinition.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Constructor" name="XPathMatcher">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../xpath/XPath.class.xmi#//@classifiers.0/@members.7"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../util/IntStack.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
              <next xsi:type="references:IdentifierReference"/>
            </sizes>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.2/@init"/>
              </arraySelectors>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../util/IntStack.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </value>
          </expression>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Int"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
              <next xsi:type="references:IdentifierReference"/>
            </sizes>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Int"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
              <next xsi:type="references:IdentifierReference"/>
            </sizes>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Int"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
              <next xsi:type="references:IdentifierReference"/>
            </sizes>
          </value>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="xpath">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../xpath/XPath.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>//</comments>
        <comments>// Constructors</comments>
        <comments>//</comments>
        <comments>/**&#xA;     * Constructs an XPath matcher that implements a document fragment&#xA;     * handler.&#xA;     *&#xA;     * @param xpath   The xpath.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="isMatched">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// &lt;init>(XPath)</comments>
        <comments>//</comments>
        <comments>// Public methods</comments>
        <comments>//</comments>
        <comments>/** &#xA;     * Returns value of first member of fMatched that&#xA;     * is nonzero.  &#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ForLoop">
        <comments>// xpath has been matched if any one of the members of the union have matched.</comments>
        <statement xsi:type="statements:Condition">
          <statement xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@init"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                  </expression>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@init"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                  </expression>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:ConditionalOrExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@init"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </expression>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:AndExpression">
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@init"/>
                          </arraySelectors>
                        </children>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                      </expression>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                  </expression>
                </children>
              </expression>
            </children>
          </condition>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="handleContent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../xs/XSTypeDefinition.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="nillable">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// isMatched():int</comments>
        <comments>//</comments>
        <comments>// Protected methods</comments>
        <comments>//</comments>
        <comments>// a place-holder method; to be overridden by subclasses</comments>
        <comments>// that care about matching element content.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="matched">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="actualValue">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="isNil">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * This method is called when the XPath handler matches the&#xA;     * XPath expression. Subclasses can override this method to&#xA;     * provide default handling upon a match.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                    <children xsi:type="references:StringReference" value="#matched(&quot;"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.0"/>
                    <children xsi:type="references:StringReference" value="&quot;)"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="startDocumentFragment">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// matched(String content, XSSimpleType val)</comments>
        <comments>//</comments>
        <comments>// ~XMLDocumentFragmentHandler methods</comments>
        <comments>//</comments>
        <comments>/**&#xA;     * The start of the document fragment.&#xA;     *&#xA;     * @param context The namespace scope in effect at the&#xA;     *                start of this document fragment.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                    <children xsi:type="references:StringReference" value="#startDocumentFragment("/>
                    <children xsi:type="references:StringReference" value=")"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
            <comments>// reset state</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/IntStack.class.xmi#//@classifiers.0/@members.8"/>
              </next>
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.2/@init"/>
              </arraySelectors>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.2/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.2/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.2/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="startElement">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="element">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="attributes">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../xni/XMLAttributes.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// startDocumentFragment(SymbolTable)</comments>
        <comments>/**&#xA;     * The start of an element. If the document specifies the start element&#xA;     * by using an empty tag, then the startElement method will immediately&#xA;     * be followed by the endElement method, with no intervening methods.&#xA;     *&#xA;     * @param element    The name of the element.&#xA;     * @param attributes The element attributes.&#xA;     * @param type: The element's type&#xA;     *&#xA;     * @throws SAXException Thrown by handler to signal an error.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                    <children xsi:type="references:StringReference" value="#startElement("/>
                    <children xsi:type="references:StringReference" value="element={"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
                    <children xsi:type="references:StringReference" value="},"/>
                    <children xsi:type="references:StringReference" value="attributes=..."/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                    <children xsi:type="references:StringReference" value=")"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="startStep">
              <typeReference xsi:type="types:Int">
                <comments>// push context</comments>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                </arraySelectors>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../util/IntStack.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.0/@variable"/>
              </next>
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
              </arraySelectors>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// try next xpath, if not matching</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                    </arraySelectors>
                  </child>
                  <operator xsi:type="operators:PlusPlus"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Continue"/>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                  </expression>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                  </arraySelectors>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <relationOperators xsi:type="operators:GreaterThan"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                </expression>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                        <children xsi:type="references:StringReference" value=": "/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                          </arraySelectors>
                        </children>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                    <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="steps">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <comments>// consume self::node() steps</comments>
                <namespaces>XPath</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../xpath/XPath$Step.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../xpath/XPath$LocationPath.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                </arraySelectors>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="step">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <namespaces>XPath</namespaces>
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../xpath/XPath$Step.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                            </arraySelectors>
                          </position>
                        </arraySelectors>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                            <children xsi:type="references:StringReference" value=" [SELF] MATCHED!"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                    </arraySelectors>
                  </child>
                  <operator xsi:type="operators:PlusPlus"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                  </arraySelectors>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../xpath/XPath$Axis.class.xmi#//@classifiers.0/@members.4"/>
                    </next>
                    <target xsi:type="members:Field" href="../../xpath/XPath$Step.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                      </arraySelectors>
                    </position>
                  </arraySelectors>
                </children>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../xpath/XPath$Axis.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../xpath/XPath$Axis.class.xmi#//@classifiers.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../xpath/XPath.class.xmi#//@classifiers.0"/>
                </children>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                            <children xsi:type="references:StringReference" value=" XPath MATCHED!"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Continue"/>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                </arraySelectors>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                <next xsi:type="references:IdentifierReference"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="descendantStep">
              <typeReference xsi:type="types:Int">
                <comments>// now if the current step is a descendant step, we let the next</comments>
                <comments>// step do its thing; if it fails, we reset ourselves</comments>
                <comments>// to look at this step for next time we're called.</comments>
                <comments>// so first consume all descendants:</comments>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                </arraySelectors>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="step">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <namespaces>XPath</namespaces>
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../xpath/XPath$Step.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                            </arraySelectors>
                          </position>
                        </arraySelectors>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                            <children xsi:type="references:StringReference" value=" [DESCENDANT] MATCHED!"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                    </arraySelectors>
                  </child>
                  <operator xsi:type="operators:PlusPlus"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                  </arraySelectors>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../xpath/XPath$Axis.class.xmi#//@classifiers.0/@members.4"/>
                    </next>
                    <target xsi:type="members:Field" href="../../xpath/XPath$Step.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                      </arraySelectors>
                    </position>
                  </arraySelectors>
                </children>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../xpath/XPath$Axis.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../xpath/XPath$Axis.class.xmi#//@classifiers.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../xpath/XPath.class.xmi#//@classifiers.0"/>
                </children>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="sawDescendant">
              <typeReference xsi:type="types:Boolean"/>
              <initialValue xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                  </arraySelectors>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.8/@variable"/>
                <relationOperators xsi:type="operators:GreaterThan"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                            <children xsi:type="references:StringReference" value=" XPath DIDN'T MATCH!"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                    </arraySelectors>
                  </child>
                  <operator xsi:type="operators:PlusPlus"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                            <children xsi:type="references:StringReference" value=" [CHILD] after NO MATCH"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              </statements>
              <statements xsi:type="statements:Continue"/>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                </arraySelectors>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                <next xsi:type="references:IdentifierReference"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// match child::... step, if haven't consumed any self::node()</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="step">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <namespaces>XPath</namespaces>
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../xpath/XPath$Step.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                        </arraySelectors>
                      </position>
                    </arraySelectors>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="nodeTest">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <namespaces>XPath</namespaces>
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../xpath/XPath$NodeTest.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.12/@statement/@statements.0/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../xpath/XPath$Step.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                            <children xsi:type="references:StringReference" value=" [CHILD] before"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:AssignmentExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                                </arraySelectors>
                              </child>
                              <assignmentOperator xsi:type="operators:Assignment"/>
                              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.8/@variable"/>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:Continue"/>
                        </statement>
                        <condition xsi:type="expressions:RelationExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                            </arraySelectors>
                          </children>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.8/@variable"/>
                          <relationOperators xsi:type="operators:GreaterThan"/>
                        </condition>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                            </arraySelectors>
                          </child>
                          <operator xsi:type="operators:PlusPlus"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                                  <arguments xsi:type="expressions:AdditiveExpression">
                                    <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                                    <children xsi:type="references:StringReference" value=" [CHILD] after NO MATCH"/>
                                    <additiveOperators xsi:type="operators:Addition"/>
                                  </arguments>
                                </next>
                                <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                            </expression>
                          </statements>
                        </statement>
                        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                      </statements>
                      <statements xsi:type="statements:Continue"/>
                    </statement>
                    <condition xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.12/@statement/@statements.1/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.12"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0"/>
                          </next>
                          <target xsi:type="members:Field" href="../../xpath/XPath$NodeTest.class.xmi#//@classifiers.0/@members.5"/>
                        </next>
                      </child>
                    </condition>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.12/@statement/@statements.1/@variable">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../xpath/XPath$NodeTest.class.xmi#//@classifiers.0/@members.4"/>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../xpath/XPath$NodeTest.class.xmi#//@classifiers.0/@members.0"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../xpath/XPath$NodeTest.class.xmi#//@classifiers.0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../xpath/XPath.class.xmi#//@classifiers.0"/>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                    </arraySelectors>
                  </child>
                  <operator xsi:type="operators:PlusPlus"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                            <children xsi:type="references:StringReference" value=" [CHILD] after MATCHED!"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.0/@variable"/>
                  </children>
                  <children xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.8/@variable"/>
                    <relationOperators xsi:type="operators:GreaterThan"/>
                  </children>
                </expression>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../xpath/XPath$Axis.class.xmi#//@classifiers.0/@members.4"/>
                    </next>
                    <target xsi:type="members:Field" href="../../xpath/XPath$Step.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                      </arraySelectors>
                    </position>
                  </arraySelectors>
                </children>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../xpath/XPath$Axis.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../xpath/XPath$Axis.class.xmi#//@classifiers.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../xpath/XPath.class.xmi#//@classifiers.0"/>
                </children>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.8/@variable"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.10/@variable"/>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:Continue"/>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                </arraySelectors>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                <next xsi:type="references:IdentifierReference"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// match attribute::... step</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                            <children xsi:type="references:StringReference" value=" [ATTRIBUTE] before"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="attrCount">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../xni/XMLAttributes.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:LocalVariableStatement">
                    <variable name="nodeTest">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <namespaces>XPath</namespaces>
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../xpath/XPath$NodeTest.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../xpath/XPath$Step.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                            </arraySelectors>
                          </position>
                        </arraySelectors>
                      </initialValue>
                    </variable>
                  </statements>
                  <statements xsi:type="statements:ForLoop">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:InterfaceMethod" href="../../../xni/XMLAttributes.class.xmi#//@classifiers.0/@members.7"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.2/@statement/@statements.1/@init"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Condition">
                        <statement xsi:type="statements:Block">
                          <statements xsi:type="statements:ExpressionStatement">
                            <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                                </arraySelectors>
                              </child>
                              <operator xsi:type="operators:PlusPlus"/>
                            </expression>
                          </statements>
                          <statements xsi:type="statements:Condition">
                            <statement xsi:type="statements:Block">
                              <statements xsi:type="statements:ExpressionStatement">
                                <expression xsi:type="expressions:AssignmentExpression">
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                                    <arraySelectors>
                                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                                    </arraySelectors>
                                  </child>
                                  <assignmentOperator xsi:type="operators:Assignment"/>
                                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                                </expression>
                              </statements>
                              <statements xsi:type="statements:LocalVariableStatement">
                                <variable name="j">
                                  <typeReference xsi:type="types:Int"/>
                                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                                </variable>
                              </statements>
                              <statements xsi:type="statements:ForLoop">
                                <statement xsi:type="statements:EmptyStatement"/>
                                <condition xsi:type="expressions:ConditionalAndExpression">
                                  <children xsi:type="expressions:RelationExpression">
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.2/@statement/@statements.1/@statement/@statements.1/@statement/@statements.1/@statement/@statements.1/@variable"/>
                                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                                    <relationOperators xsi:type="operators:LessThan"/>
                                  </children>
                                  <children xsi:type="expressions:NestedExpression">
                                    <expression xsi:type="expressions:EqualityExpression">
                                      <equalityOperators xsi:type="operators:NotEqual"/>
                                      <children xsi:type="expressions:NestedExpression">
                                        <expression xsi:type="expressions:AndExpression">
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                                            <arraySelectors>
                                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.2/@statement/@statements.1/@statement/@statements.1/@statement/@statements.1/@statement/@statements.1/@variable"/>
                                            </arraySelectors>
                                          </children>
                                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                                        </expression>
                                      </children>
                                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                                    </expression>
                                  </children>
                                </condition>
                                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.2/@statement/@statements.1/@statement/@statements.1/@statement/@statements.1/@statement/@statements.1/@variable"/>
                                  <operator xsi:type="operators:PlusPlus"/>
                                </updates>
                              </statements>
                              <statements xsi:type="statements:Condition">
                                <statement xsi:type="statements:Block">
                                  <statements xsi:type="statements:LocalVariableStatement">
                                    <variable name="attrPSVI">
                                      <typeReference xsi:type="types:NamespaceClassifierReference">
                                        <classifierReferences>
                                          <target xsi:type="classifiers:Interface" href="../../../xs/AttributePSVI.class.xmi#//@classifiers.0"/>
                                        </classifierReferences>
                                      </typeReference>
                                      <initialValue xsi:type="expressions:CastExpression">
                                        <typeReference xsi:type="types:NamespaceClassifierReference">
                                          <classifierReferences>
                                            <target xsi:type="classifiers:Interface" href="../../../xs/AttributePSVI.class.xmi#//@classifiers.0"/>
                                          </classifierReferences>
                                        </typeReference>
                                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1">
                                          <next xsi:type="references:MethodCall">
                                            <next xsi:type="references:MethodCall">
                                              <target xsi:type="members:InterfaceMethod" href="../../../xni/Augmentations.class.xmi#//@classifiers.0/@members.1"/>
                                              <arguments xsi:type="references:IdentifierReference">
                                                <next xsi:type="references:IdentifierReference">
                                                  <target xsi:type="members:Field" href="../../Constants.class.xmi#//@classifiers.0/@members.117"/>
                                                </next>
                                                <target xsi:type="classifiers:Class" href="../../Constants.class.xmi#//@classifiers.0"/>
                                              </arguments>
                                            </next>
                                            <target xsi:type="members:InterfaceMethod" href="../../../xni/XMLAttributes.class.xmi#//@classifiers.0/@members.24"/>
                                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.2/@statement/@statements.1/@init"/>
                                          </next>
                                        </child>
                                      </initialValue>
                                    </variable>
                                  </statements>
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="expressions:AssignmentExpression">
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
                                      <assignmentOperator xsi:type="operators:Assignment"/>
                                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.2/@statement/@statements.1/@statement/@statements.1/@statement/@statements.1/@statement/@statements.3/@statement/@statements.0/@variable">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:InterfaceMethod" href="../../../xs/ItemPSVI.class.xmi#//@classifiers.0/@members.11"/>
                                        </next>
                                      </value>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="expressions:AssignmentExpression">
                                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                                      <assignmentOperator xsi:type="operators:Assignment"/>
                                      <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.2/@statement/@statements.1/@statement/@statements.1/@statement/@statements.1/@statement/@statements.3/@statement/@statements.0/@variable">
                                        <next xsi:type="references:MethodCall">
                                          <target xsi:type="members:InterfaceMethod" href="../../../xs/ItemPSVI.class.xmi#//@classifiers.0/@members.14"/>
                                        </next>
                                      </value>
                                    </expression>
                                  </statements>
                                  <statements xsi:type="statements:ExpressionStatement">
                                    <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22">
                                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
                                      <arguments xsi:type="literals:BooleanLiteral"/>
                                    </expression>
                                  </statements>
                                </statement>
                                <condition xsi:type="expressions:EqualityExpression">
                                  <equalityOperators xsi:type="operators:Equal"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.2/@statement/@statements.1/@statement/@statements.1/@statement/@statements.1/@statement/@statements.1/@variable"/>
                                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                                </condition>
                              </statements>
                            </statement>
                            <condition xsi:type="expressions:EqualityExpression">
                              <equalityOperators xsi:type="operators:Equal"/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                                <arraySelectors>
                                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                                </arraySelectors>
                              </children>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                                <next xsi:type="references:IdentifierReference"/>
                              </children>
                            </condition>
                          </statements>
                          <statements xsi:type="statements:Break"/>
                        </statement>
                        <condition xsi:type="expressions:ConditionalOrExpression">
                          <children xsi:type="expressions:EqualityExpression">
                            <equalityOperators xsi:type="operators:NotEqual"/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.2/@statement/@statements.0/@variable">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="../../xpath/XPath$NodeTest.class.xmi#//@classifiers.0/@members.4"/>
                              </next>
                            </children>
                            <children xsi:type="references:IdentifierReference">
                              <next xsi:type="references:IdentifierReference">
                                <next xsi:type="references:IdentifierReference">
                                  <target xsi:type="members:Field" href="../../xpath/XPath$NodeTest.class.xmi#//@classifiers.0/@members.0"/>
                                </next>
                                <target xsi:type="classifiers:Class" href="../../xpath/XPath$NodeTest.class.xmi#//@classifiers.0"/>
                              </next>
                              <target xsi:type="classifiers:Class" href="../../xpath/XPath.class.xmi#//@classifiers.0"/>
                            </children>
                          </children>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.2/@statement/@statements.0/@variable">
                            <next xsi:type="references:IdentifierReference">
                              <next xsi:type="references:MethodCall">
                                <target xsi:type="members:ClassMethod" href="../../../xni/QName.class.xmi#//@classifiers.0/@members.12"/>
                                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
                              </next>
                              <target xsi:type="members:Field" href="../../xpath/XPath$NodeTest.class.xmi#//@classifiers.0/@members.5"/>
                            </next>
                          </children>
                        </condition>
                      </statements>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.2/@statement/@statements.1/@init"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.1/@variable"/>
                      <relationOperators xsi:type="operators:LessThan"/>
                    </condition>
                    <init xsi:type="variables:LocalVariable" name="aIndex">
                      <typeReference xsi:type="types:Int"/>
                      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </init>
                    <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.2/@statement/@statements.1/@init"/>
                      <operator xsi:type="operators:PlusPlus"/>
                    </updates>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.14/@statement/@statements.1/@variable"/>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  <relationOperators xsi:type="operators:GreaterThan"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="expressions:AssignmentExpression">
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                            </arraySelectors>
                          </child>
                          <assignmentOperator xsi:type="operators:Assignment"/>
                          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.8/@variable"/>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Continue"/>
                    </statement>
                    <condition xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                        </arraySelectors>
                      </children>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.8/@variable"/>
                      <relationOperators xsi:type="operators:GreaterThan"/>
                    </condition>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                        </arraySelectors>
                      </child>
                      <operator xsi:type="operators:PlusPlus"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Condition">
                    <statement xsi:type="statements:Block">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                                <children xsi:type="references:StringReference" value=" [ATTRIBUTE] after"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </arguments>
                            </next>
                            <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                        </expression>
                      </statements>
                    </statement>
                    <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
                  </statements>
                  <statements xsi:type="statements:Continue"/>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                        </arraySelectors>
                      </children>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                    </expression>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                            <children xsi:type="references:StringReference" value=" [ATTRIBUTE] after MATCHED!"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                        <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                  </arraySelectors>
                </children>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@statement/@statements.5/@variable">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../xpath/XPath$Axis.class.xmi#//@classifiers.0/@members.4"/>
                    </next>
                    <target xsi:type="members:Field" href="../../xpath/XPath$Step.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
                      </arraySelectors>
                    </position>
                  </arraySelectors>
                </children>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../xpath/XPath$Axis.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../xpath/XPath$Axis.class.xmi#//@classifiers.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../xpath/XPath.class.xmi#//@classifiers.0"/>
                </children>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="endElement">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="element">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../xni/QName.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../xs/XSTypeDefinition.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="nillable">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// startElement(QName,XMLAttrList,int)</comments>
        <comments>/**&#xA;       * @param element&#xA;       *        name of the element.&#xA;       * @param type&#xA;       *        content type of this element. IOW, the XML schema type&#xA;       *        of the &lt;tt>value&lt;/tt>. Note that this may not be the type declared&#xA;       *        in the element declaration, but it is &quot;the actual type&quot;. For example,&#xA;       *        if the XML is &amp;lt;foo xsi:type=&quot;xs:string&quot;>aaa&amp;lt;/foo>, this&#xA;       *        parameter will be &quot;xs:string&quot;.&#xA;       * @param nillable - nillable&#xA;       *        true if the element declaration is nillable.&#xA;       * @param value - actual value&#xA;       *        the typed value of the content of this element. &#xA;       */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                    <children xsi:type="references:StringReference" value="#endElement("/>
                    <children xsi:type="references:StringReference" value="element={"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0"/>
                    <children xsi:type="references:StringReference" value="},"/>
                    <children xsi:type="references:StringReference" value=")"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                <comments>// go back a step</comments>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@init"/>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../util/IntStack.class.xmi#//@classifiers.0/@members.7"/>
                </next>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@init"/>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// don't do anything, if not matching</comments>
            <comments>// signal match, if appropriate</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@init"/>
                    </arraySelectors>
                  </child>
                  <operator xsi:type="operators:MinusMinus"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@init"/>
                </arraySelectors>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="j">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </variable>
              </statements>
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:EmptyStatement"/>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@statement/@statements.1/@elseStatement/@statements.0/@variable"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@init"/>
                    <relationOperators xsi:type="operators:LessThan"/>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AndExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@statement/@statements.1/@elseStatement/@statements.0/@variable"/>
                            </arraySelectors>
                          </children>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                        </expression>
                      </children>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                    </expression>
                  </children>
                </condition>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@statement/@statements.1/@elseStatement/@statements.0/@variable"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Continue"/>
                </statement>
                <condition xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@statement/@statements.1/@elseStatement/@statements.0/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@init"/>
                      <relationOperators xsi:type="operators:LessThan"/>
                    </expression>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@statement/@statements.1/@elseStatement/@statements.0/@variable"/>
                        </arraySelectors>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </expression>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AndExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                            <arraySelectors>
                              <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@statement/@statements.1/@elseStatement/@statements.0/@variable"/>
                            </arraySelectors>
                          </children>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                        </expression>
                      </children>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                    </expression>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.21">
                  <comments>// only certain kinds of matchers actually</comments>
                  <comments>// match element content.  This permits</comments>
                  <comments>// them a way to override this to do nothing</comments>
                  <comments>// and hopefully save a few operations.</comments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.1"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.2"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.3"/>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@init"/>
                    </arraySelectors>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.26"/>
                        <children xsi:type="references:StringReference" value=": "/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@init"/>
                          </arraySelectors>
                        </children>
                        <additiveOperators xsi:type="operators:Addition"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                    <target xsi:type="members:Field" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.1/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="toString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// endElement(QName)</comments>
        <comments>//</comments>
        <comments>// Object methods</comments>
        <comments>//</comments>
        <comments>/** Returns a string representation of this object. */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="str">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>/***&#xA;        return fLocationPath.toString();&#xA;        /***/</comments>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="s">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:SelfReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.6"/>
            </next>
            <self xsi:type="literals:Super"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="index2">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.47"/>
              <arguments xsi:type="literals:CharacterLiteral" value="46"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.55"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.2/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.2/@variable"/>
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Subtraction"/>
            <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.1/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                <arguments xsi:type="literals:CharacterLiteral" value="91"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="steps">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>XPath</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../xpath/XPath$Step.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../xpath/XPath$LocationPath.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@init"/>
                </arraySelectors>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                        <arguments xsi:type="literals:CharacterLiteral" value="94"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@statement/@statements.2/@init"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@init"/>
                    </arraySelectors>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@statement/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../xpath/XPath$Step.class.xmi#//@classifiers.0/@members.4"/>
                      </next>
                      <arraySelectors>
                        <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@statement/@statements.2/@init"/>
                      </arraySelectors>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                        <arguments xsi:type="literals:CharacterLiteral" value="47"/>
                      </next>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@statement/@statements.2/@init"/>
                  <children xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@statement/@statements.1/@variable">
                      <next xsi:type="references:IdentifierReference"/>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@statement/@statements.2/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@statement/@statements.1/@variable">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="j">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@statement/@statements.2/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                    <arguments xsi:type="literals:CharacterLiteral" value="94"/>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@init"/>
                </arraySelectors>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@statement/@statements.1/@variable">
                <next xsi:type="references:IdentifierReference"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                <arguments xsi:type="literals:CharacterLiteral" value="93"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                <arguments xsi:type="literals:CharacterLiteral" value="44"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.5/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="normalize">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// toString():String</comments>
        <comments>//</comments>
        <comments>// Private methods</comments>
        <comments>//</comments>
        <comments>/** Normalizes text. */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="str">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="length">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="c">
              <typeReference xsi:type="types:Char"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.23"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.2/@init"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Switch">
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                      <arguments xsi:type="references:StringReference" value="\n"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Break"/>
              </statements>
              <condition xsi:type="literals:CharacterLiteral" value="10"/>
            </cases>
            <cases xsi:type="statements:DefaultSwitchCase">
              <statements xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.2/@statement/@statements.0/@variable"/>
                    </next>
                  </expression>
                </statements>
              </statements>
            </cases>
            <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.2/@statement/@statements.0/@variable"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.1/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../../../java/lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getCurrentMatchedType">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../xs/XSTypeDefinition.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// normalize(String):String</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * XPath matcher.&#xA; *&#xA; * @author Andy Clark, IBM&#xA; *&#xA; * @version $Id: XPathMatcher.java,v 1.22 2004/02/10 21:26:03 kohsuke Exp $&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
