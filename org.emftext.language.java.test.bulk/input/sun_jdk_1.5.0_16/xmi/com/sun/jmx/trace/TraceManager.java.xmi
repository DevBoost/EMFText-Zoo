<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/literals ../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../java.ecore#/16" name="TraceManager.java">
  <comments>/*&#xA; * @(#)TraceManager.java&#x9;1.16 03/12/19&#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>jmx</namespaces>
  <namespaces>trace</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <namespaces>logging</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/util/logging/Level.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <namespaces>logging</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="TraceManager">
    <members xsi:type="members:ClassMethod" name="getLevel">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Level.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="level">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;   * Returns the {@link Level} corresponding to the integer value passed as&#xA;   * argument. This value is assumed to be part of the log levels defined by&#xA;   * class {@link TraceTags}.&#xA;   *&#xA;   * @return &#xA;   *   &lt;ul>&#xA;   *     &lt;li>{@link Level#FINEST} if value is {@link TraceTags#LEVEL_DEBUG}&lt;/li>&#xA;   *     &lt;li>{@link Level#FINER} if value is {@link TraceTags#LEVEL_TRACE}&lt;/li>&#xA;   *     &lt;li>{@link Level#SEVERE} if value is {@link TraceTags#LEVEL_ERROR}&lt;/li>&#xA;   *     &lt;li>&lt;code>null&lt;/code> otherwise&lt;/li>&#xA;   *   &lt;/ul>&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../java/util/logging/Level.class.xmi#//@classifiers.0/@members.12"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Level.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="TraceTags.class.xmi#//@classifiers.0/@members.2"/>
            </next>
            <target xsi:type="classifiers:Interface" href="TraceTags.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../java/util/logging/Level.class.xmi#//@classifiers.0/@members.11"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Level.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="TraceTags.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Interface" href="TraceTags.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../java/util/logging/Level.class.xmi#//@classifiers.0/@members.6"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Level.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="TraceTags.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Interface" href="TraceTags.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.0"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getLogger">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;   * Returns the {@link Logger} corresponding to the integer value passed as&#xA;   * argument. This value is assumed to be part of the log types defined by&#xA;   * class {@link TraceTags}.&#xA;   *&#xA;   * @return &#xA;   *   &lt;ul>&#xA;   *     &lt;li>&lt;code>Logger.getLogger(&lt;b>&quot;javax.management.mbeanserver&quot;&lt;/b>)&lt;/code>if value is {@link TraceTags#INFO_MBEANSERVER}&lt;/li>&#xA;   *     &lt;li>&lt;code>Logger.getLogger(&lt;b>&quot;javax.management.mlet&quot;&lt;/b>)&lt;/code>if value is {@link TraceTags#INFO_MLET}&lt;/li>&#xA;   *     &lt;li>&lt;code>Logger.getLogger(&lt;b>&quot;javax.management.monitor&quot;&lt;/b>)&lt;/code>if value is {@link TraceTags#INFO_MONITOR}&lt;/li>&#xA;   *     &lt;li>&lt;code>Logger.getLogger(&lt;b>&quot;javax.management.timer&quot;&lt;/b>)&lt;/code>if value is {@link TraceTags#INFO_TIMER}&lt;/li>&#xA;   *     &lt;li>&lt;code>Logger.getLogger(&lt;b>&quot;javax.management.misc&quot;&lt;/b>)&lt;/code>if value is {@link TraceTags#INFO_MISC}&lt;/li>&#xA;   *     &lt;li>&lt;code>Logger.getLogger(&lt;b>&quot;javax.management.notification&quot;&lt;/b>)&lt;/code>if value is {@link TraceTags#INFO_NOTIFICATION}&lt;/li>&#xA;   *     &lt;li>&lt;code>Logger.getLogger(&lt;b>&quot;javax.management.relation&quot;&lt;/b>)&lt;/code>if value is {@link TraceTags#INFO_RELATION}&lt;/li>&#xA;   *     &lt;li>&lt;code>Logger.getLogger(&lt;b>&quot;javax.management.modelmbean&quot;&lt;/b>)&lt;/code>if value is {@link TraceTags#INFO_MODELMBEAN}&lt;/li>&#xA;   *     &lt;li>&lt;code>Logger.getLogger(&lt;b>&quot;com.sun.jmx.snmp.daemon&quot;&lt;/b>)&lt;/code>if value is {@link TraceTags#INFO_ADAPTOR_SNMP}&lt;/li>&#xA;   *     &lt;li>&lt;code>Logger.getLogger(&lt;b>&quot;com.sun.jmx.snmp&quot;&lt;/b>)&lt;/code>if value is {@link TraceTags#INFO_SNMP}&lt;/li>&#xA;   *     &lt;li>&lt;code>null&lt;/code> otherwise&lt;/li>&#xA;   *   &lt;/ul>&#xA;   */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:StringReference" value="javax.management.mbeanserver"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="TraceTags.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <target xsi:type="classifiers:Interface" href="TraceTags.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:StringReference" value="com.sun.jmx.snmp.daemon"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="TraceTags.class.xmi#//@classifiers.0/@members.11"/>
            </next>
            <target xsi:type="classifiers:Interface" href="TraceTags.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:StringReference" value="com.sun.jmx.snmp"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="TraceTags.class.xmi#//@classifiers.0/@members.12"/>
            </next>
            <target xsi:type="classifiers:Interface" href="TraceTags.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:StringReference" value="javax.management.mlet"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="TraceTags.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Interface" href="TraceTags.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:StringReference" value="javax.management.monitor"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="TraceTags.class.xmi#//@classifiers.0/@members.5"/>
            </next>
            <target xsi:type="classifiers:Interface" href="TraceTags.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:StringReference" value="javax.management.timer"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="TraceTags.class.xmi#//@classifiers.0/@members.6"/>
            </next>
            <target xsi:type="classifiers:Interface" href="TraceTags.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:StringReference" value="javax.management.misc"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="TraceTags.class.xmi#//@classifiers.0/@members.7"/>
            </next>
            <target xsi:type="classifiers:Interface" href="TraceTags.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:StringReference" value="javax.management.notification"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="TraceTags.class.xmi#//@classifiers.0/@members.8"/>
            </next>
            <target xsi:type="classifiers:Interface" href="TraceTags.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:StringReference" value="javax.management.relation"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="TraceTags.class.xmi#//@classifiers.0/@members.9"/>
            </next>
            <target xsi:type="classifiers:Interface" href="TraceTags.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:StringReference" value="javax.management.modelmbean"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="TraceTags.class.xmi#//@classifiers.0/@members.10"/>
            </next>
            <target xsi:type="classifiers:Interface" href="TraceTags.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:NullLiteral"/>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.0"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isSelected">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="level">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * @see TraceDestination#isSelected&#xA;   */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="logger">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lvl">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Level.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.60"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.1/@variable"/>
              </next>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.1">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.1"/>
                  </value>
                </expression>
              </children>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.0">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
                  </value>
                </expression>
              </children>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="send">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="level">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="className">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="methodName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="info">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * Note that the provided log type and log level have to be part of the&#xA;   * enumerated values defined in class {@link TraceTags}. Otherwise, nothing is&#xA;   * logged. &#xA;   * @see TraceDestination#send(int, int, String, String, String)&#xA;   */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.0">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.2"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.3"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.4"/>
              </next>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.1"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
        </statement>
        <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.2">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3/@parameters.1"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="send">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="level">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="className">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="methodName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="exception">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/Throwable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * Note that the provided log type and log level have to be part of the&#xA;   * enumerated values defined in class {@link TraceTags}. Otherwise, nothing is&#xA;   * logged. &#xA;   * @see TraceDestination#send(int, int, String, String, Throwable)&#xA;   */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.35"/>
                <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.0">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.0"/>
                </arguments>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.2"/>
                  <children xsi:type="references:StringReference" value=": Exception occured in "/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.3"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.4"/>
              </next>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
        </statement>
        <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.2">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="reset">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;   * Not implemented, as the control over log levels and output handler is&#xA;   * deferred to the J2SE logging API.&#xA;   * @see TraceDestination#reset&#xA;   **/</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="warning">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Logs a warning message.&#xA;     * This is equivalent to &#xA;     * &lt;code>Logger.getLogger(loggerName).warning(msg);&lt;/code>&#xA;     *&#xA;     * @since.unbundled JMX RI 1.2.1&#xA;     **/</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="loggerName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="msg">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.52"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.1"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.22"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="fine">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Logs a fine message.&#xA;     * This is equivalent to &#xA;     * &lt;code>Logger.getLogger(loggerName).fine(msg);&lt;/code>&#xA;     *&#xA;     * @since.unbundled JMX RI 1.2.1&#xA;     **/</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="loggerName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="msg">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.55"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.1"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0/@members.22"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../../../java/util/logging/Logger.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Provides an implementation of the {@link com.sun.jmx.trace.TraceDestination}&#xA; * interface which uses the J2SE logging API. &#xA; * &lt;br>&lt;br>&#xA; * Note that this implementation can be used only with J2SE version 1.4 or&#xA; * higher.  &#xA; * &lt;br>&lt;br>&#xA; * All {@link Logger}s are contained in the &lt;code>javax.management&lt;/code> namespace, which corresponds&#xA; * to the name of the root package hosting all public JMX interfaces. For each log type&#xA; * defined in {@link TraceTags}, we use a dedicated {@link Logger} with the same name&#xA; * under &lt;code>javax.management&lt;/code>. &#xA; * &lt;br>&lt;br>&#xA; * The table below shows the list of {@link Logger} objects used in this implementation and&#xA; * their corresponding category of activity. &#xA; * &lt;br>&lt;br>&#xA; *  &lt;table cols=&quot;3&quot; width=&quot;100%&quot; border=&quot;1&quot; align=&quot;center&quot;>&#xA; *    &lt;tr>&#xA; *      &lt;th>Logger Name&lt;/th>                                  &#xA; *      &lt;th>JMX log type&lt;/th>                                &#xA; *      &lt;th>Information logged&lt;/th>&#xA; *    &lt;/tr>&#xA; *    &lt;tr>&#xA; *      &lt;td>&lt;code>javax.management.mbeanserver&lt;/code>&lt;/td>    &#xA; *      &lt;td>{@link TraceTags#INFO_MBEANSERVER}&lt;/td>                                  &#xA; *      &lt;td>Information about the MBean Server&lt;/td>&#xA; *    &lt;/tr>&#xA; *    &lt;tr>&#xA; *      &lt;td>&lt;code>com.sun.jmx.snmp.daemon&lt;/code>&lt;/td>    &#xA; *      &lt;td>{@link TraceTags#INFO_ADAPTOR_SNMP}&lt;/td>                                  &#xA; *      &lt;td>Information about the SNMP Adaptor&lt;/td>&#xA; *    &lt;/tr>&#xA; *    &lt;tr>&#xA; *      &lt;td>&lt;code>com.sun.jmx.snmp&lt;/code>&lt;/td>    &#xA; *      &lt;td>{@link TraceTags#INFO_SNMP}&lt;/td>                                  &#xA; *      &lt;td>Information about SNMP&lt;/td>&#xA; *    &lt;/tr>&#xA; *    &lt;tr>&#xA; *      &lt;td>&lt;code>javax.management.mlet&lt;/code>&lt;/td> &#xA; *      &lt;td>{@link TraceTags#INFO_MLET}&lt;/td>                                &#xA; *      &lt;td>Information from an MLet service&lt;/td>&#xA; *    &lt;/tr>&#xA; *    &lt;tr>&#xA; *      &lt;td>&lt;code>javax.management.monitor&lt;/code>&lt;/td>  &#xA; *      &lt;td>{@link TraceTags#INFO_MONITOR}&lt;/td>                     &#xA; *      &lt;td>Information from a monitor&lt;/td>&#xA; *    &lt;/tr>&#xA; *    &lt;tr>&#xA; *      &lt;td>&lt;code>javax.management.timer&lt;/code>&lt;/td>   &#xA; *      &lt;td>{@link TraceTags#INFO_TIMER}&lt;/td>                       &#xA; *      &lt;td>Information from a timer&lt;/td>&#xA; *    &lt;/tr>&#xA; *    &lt;tr>&#xA; *      &lt;td>&lt;code>javax.management.notification&lt;/code>&lt;/td> &#xA; *      &lt;td>{@link TraceTags#INFO_NOTIFICATION}&lt;/td>                                 &#xA; *      &lt;td>Information from the notification mechanism&lt;/td>&#xA; *    &lt;/tr>&#xA; *    &lt;tr>&#xA; *      &lt;td>&lt;code>javax.management.relation&lt;/code>&lt;/td>  &#xA; *      &lt;td>{@link TraceTags#INFO_RELATION}&lt;/td>                                 &#xA; *      &lt;td>Information from the Relation Service&lt;/td>&#xA; *    &lt;/tr>&#xA; *    &lt;tr>&#xA; *      &lt;td>&lt;code>javax.management.modelmbean&lt;/code>&lt;/td>  &#xA; *      &lt;td>{@link TraceTags#INFO_MODELMBEAN}&lt;/td>                                &#xA; *      &lt;td>Information from the Model MBean components&lt;/td>&#xA; *    &lt;/tr>&#xA; *    &lt;tr>&#xA; *      &lt;td>&lt;code>javax.management.misc&lt;/code>&lt;/td>   &#xA; *      &lt;td>{@link TraceTags#INFO_MISC}&lt;/td>                                &#xA; *      &lt;td>Information sent from any other class&lt;/td>&#xA; *    &lt;/tr>                  &#xA; *  &lt;/table>&#xA; * &lt;br>&lt;br>&#xA; * The mapping for the JMX log levels is the following:&#xA; * &lt;br>&lt;br>&#xA; * &lt;table cols=&quot;2&quot; width=&quot;50%&quot; border=&quot;1&quot; align=&quot;center&quot;>&#xA; *   &lt;tr>&#xA; *     &lt;th>JMX log level&lt;/th>                                  &#xA; *     &lt;th>J2SE logging API log level&lt;/th>&#xA; *   &lt;/tr>&#xA; *   &lt;tr>&#xA; *     &lt;td>&lt;center>{@link TraceTags#LEVEL_DEBUG}&lt;/center>&lt;/td>                                  &#xA; *     &lt;td>&lt;center>{@link Level#FINEST}&lt;/center>&lt;/td>&#xA; *   &lt;/tr>  &#xA; *   &lt;tr>&#xA; *     &lt;td>&lt;center>{@link TraceTags#LEVEL_TRACE}&lt;/center>&lt;/td>                                  &#xA; *     &lt;td>&lt;center>{@link Level#FINER}&lt;/center>&lt;/td>&#xA; *   &lt;/tr>  &#xA; *   &lt;tr>&#xA; *     &lt;td>&lt;center>{@link TraceTags#LEVEL_ERROR}&lt;/center>&lt;/td>                                  &#xA; *     &lt;td>&lt;center>{@link Level#SEVERE}&lt;/center>&lt;/td>&#xA; *   &lt;/tr>               &#xA; * &lt;/table>&#xA; *&#xA; * @since 1.5&#xA; * @since.unbundled JMX RI 1.2&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="TraceDestination.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
