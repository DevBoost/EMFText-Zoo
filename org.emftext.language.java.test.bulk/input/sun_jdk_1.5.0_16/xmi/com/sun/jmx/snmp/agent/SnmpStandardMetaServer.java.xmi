<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../../java.ecore#/16" name="SnmpStandardMetaServer.java">
  <comments>/* &#xA; * @(#)file      SnmpStandardMetaServer.java &#xA; * @(#)author    Sun Microsystems, Inc. &#xA; * @(#)version   1.6 &#xA; * @(#)date      08/05/28 &#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>jmx</namespaces>
  <namespaces>snmp</namespaces>
  <namespaces>agent</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <comments>// jmx imports</comments>
    <comments>//</comments>
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>snmp</namespaces>
    <classifier xsi:type="classifiers:Class" href="../SnmpValue.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>snmp</namespaces>
    <classifier xsi:type="classifiers:Class" href="../SnmpStatusException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="SnmpStandardMetaServer">
    <members xsi:type="members:InterfaceMethod" name="get">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../SnmpValue.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="arc">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="userData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../SnmpStatusException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the value of the scalar object identified by the given&#xA;     * OID arc.&#xA;     *&#xA;     * @param arc OID arc of the querried scalar object.&#xA;     *&#xA;     * @return The &lt;CODE>SnmpValue&lt;/CODE> of the scalar object identified &#xA;     *         by &lt;CODE>arc&lt;/CODE>.&#xA;     *&#xA;     * @param userData A contextual object containing user-data.&#xA;     *        This object is allocated through the &lt;code>&#xA;     *        {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}&lt;/code>&#xA;     *        for each incoming SNMP request.&#xA;     *&#xA;     * @exception SnmpStatusException If the arc is not valid, or if&#xA;     *    access is denied.&#xA;     *&#xA;     **/</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="set">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../SnmpValue.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../SnmpValue.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="arc">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="userData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../SnmpStatusException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the value of the scalar object identified by the given&#xA;     * OID arc.&#xA;     *&#xA;     * @param x New value for the scalar object identified by &#xA;     *    &lt;CODE>arc&lt;/CODE>&#xA;     *&#xA;     * @param arc OID arc of the scalar object whose value is set.&#xA;     *&#xA;     * @return The new &lt;CODE>SnmpValue&lt;/CODE> of the scalar object &#xA;     *    identified by &lt;CODE>arc&lt;/CODE>.&#xA;     *&#xA;     * @param userData A contextual object containing user-data.&#xA;     *        This object is allocated through the &lt;code>&#xA;     *        {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}&lt;/code>&#xA;     *        for each incoming SNMP request.&#xA;     *&#xA;     * @exception SnmpStatusException If the arc is not valid, or if&#xA;     *    access is denied.&#xA;     *&#xA;     **/</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="check">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../SnmpValue.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="arc">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="userData">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../SnmpStatusException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Checks that the new desired value of the scalar object identified &#xA;     * by the given OID arc is valid.&#xA;     *&#xA;     * @param x New value for the scalar object identified by &#xA;     *    &lt;CODE>arc&lt;/CODE>&#xA;     *&#xA;     * @param arc OID arc of the scalar object whose value is set.&#xA;     *&#xA;     * @param userData A contextual object containing user-data.&#xA;     *        This object is allocated through the &lt;code>&#xA;     *        {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}&lt;/code>&#xA;     *        for each incoming SNMP request.&#xA;     *&#xA;     * @exception SnmpStatusException If the arc is not valid, or if&#xA;     *    access is denied, or if the new desired value is not valid.&#xA;     *&#xA;     **/</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;p>&#xA; * This interface defines the methods that must be implemented by an&#xA; * SNMP metadata object that needs to interact with an&#xA; * {@link com.sun.jmx.snmp.agent.SnmpStandardObjectServer} object.&#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * All these methods are usually generated by &lt;code>mibgen&lt;/code> when&#xA; * run in standard-metadata mode (default).&#xA; * &lt;/p>&#xA; * &lt;p>&lt;b>&lt;i>&#xA; * This interface is used internally between the generated Metadata and &#xA; * the SNMP runtime and you shouldn't need to worry about it, because &#xA; * you will never have to use it directly.&#xA; * &lt;/b>&lt;/i>&lt;/p>&#xA; *&#xA; * &lt;p>&lt;b>This API is a Sun Microsystems internal API  and is subject &#xA; * to change without notice.&lt;/b>&lt;/p>&#xA; **/</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
