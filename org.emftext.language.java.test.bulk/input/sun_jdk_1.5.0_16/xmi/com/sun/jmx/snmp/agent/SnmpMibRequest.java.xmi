<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../../java.ecore#/16" name="SnmpMibRequest.java">
  <comments>/* &#xA; * @(#)file      SnmpMibRequest.java &#xA; * @(#)author    Sun Microsystems, Inc. &#xA; * @(#)version   1.15 &#xA; * @(#)date      08/05/28 &#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>jmx</namespaces>
  <namespaces>snmp</namespaces>
  <namespaces>agent</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../java/util/Enumeration.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>snmp</namespaces>
    <classifier xsi:type="classifiers:Class" href="../SnmpVarBind.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>snmp</namespaces>
    <classifier xsi:type="classifiers:Class" href="../SnmpPdu.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>snmp</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../SnmpEngine.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="SnmpMibRequest">
    <members xsi:type="members:InterfaceMethod" name="getElements">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../java/util/Enumeration.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the list of varbind to be handled by the SNMP mib node.&#xA;     *&#xA;     * @return The element of the enumeration are instances of &#xA;     *         {@link com.sun.jmx.snmp.SnmpVarBind} &#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getSubList">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the vector of varbind to be handled by the SNMP mib node.&#xA;     * The caller shall not modify this vector.&#xA;     *&#xA;     * @return The element of the vector are instances of &#xA;     *         {@link com.sun.jmx.snmp.SnmpVarBind}&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getVersion">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the SNMP protocol version of the original request. If SNMP V1 request are received, the version is upgraded to SNMP V2.&#xA;     *&#xA;     * @return The SNMP protocol version of the original request.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getRequestPduVersion">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the SNMP protocol version of the original request. No translation is done on the version. The actual received request SNMP version is returned.&#xA;     *&#xA;     * @return The SNMP protocol version of the original request.&#xA;     *&#xA;     * @since 1.5&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getEngine">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../SnmpEngine.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the local engine. This parameter is returned only if &lt;CODE> SnmpV3AdaptorServer &lt;/CODE> is the adaptor receiving this request. Otherwise null is returned.&#xA;     * @return the local engine.&#xA;     *&#xA;     * @since 1.5&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getPrincipal">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the incoming request principal. This parameter is returned only if &lt;CODE> SnmpV3AdaptorServer &lt;/CODE> is the adaptor receiving this request. Otherwise null is returned.&#xA;     * @return The request principal.&#xA;     *&#xA;     * @since 1.5&#xA;     **/</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getSecurityLevel">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the incoming request security level. This level is defined in {@link com.sun.jmx.snmp.SnmpEngine SnmpEngine}. This parameter is returned only if &lt;CODE> SnmpV3AdaptorServer &lt;/CODE> is the adaptor receiving this request. Otherwise -1 is returned.&#xA;     * @return The security level.&#xA;     *&#xA;     * @since 1.5&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getSecurityModel">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the incoming request security model. This parameter is returned only if &lt;CODE> SnmpV3AdaptorServer &lt;/CODE> is the adaptor receiving this request. Otherwise -1 is returned.&#xA;     * @return The security model.&#xA;     *&#xA;     * @since 1.5&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getContextName">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the incoming request context name. This parameter is returned only if &lt;CODE> SnmpV3AdaptorServer &lt;/CODE> is the adaptor receiving this request. Otherwise null is returned.&#xA;     * @return The context name.&#xA;     *&#xA;     * @since 1.5&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAccessContextName">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the incoming request context name used by Access Control Model in order to allow or deny the access to OIDs. This parameter is returned only if &lt;CODE> SnmpV3AdaptorServer &lt;/CODE> is the adaptor receiving this request. Otherwise null is returned.&#xA;     * @return The checked context name.&#xA;     *&#xA;     * @since 1.5&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getUserData">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a handle on a user allocated contextual object.&#xA;     * This contextual object is allocated through the SnmpUserDataFactory&#xA;     * on a per SNMP request basis, and is handed back to the user via&#xA;     * SnmpMibRequest (and derivative) objects. It is never accessed by&#xA;     * the system, but might be handed back in multiple threads. It is thus &#xA;     * the user responsibility to make sure he handles this object in a&#xA;     * thread safe manner.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getVarIndex">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="varbind">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../SnmpVarBind.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the varbind index that should be embedded in an&#xA;     * SnmpStatusException for this particular varbind.&#xA;     * This does not necessarily correspond to the &quot;real&quot;&#xA;     * index value that will be returned in the result PDU.&#xA;     *&#xA;     * @param varbind The varbind for which the index value is&#xA;     *        querried. Note that this varbind &lt;b>must&lt;/b> have &#xA;     *        been obtained from the enumeration returned by&#xA;     *        &lt;CODE>getElements()&lt;/CODE>, or from the vector&#xA;     *        returned by &lt;CODE>getSublist()&lt;/CODE>.&#xA;     *&#xA;     * @return The varbind index that should be embedded in an&#xA;     *         SnmpStatusException for this particular varbind.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="addVarBind">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="varbind">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../SnmpVarBind.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Adds a varbind to this request sublist. This method is used for&#xA;     * internal purposes and you should never need to call it directly.&#xA;     *&#xA;     * @param varbind The varbind to be added in the sublist.&#xA;     *&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getSize">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the number of elements (varbinds) in this request sublist.&#xA;     *&#xA;     * @return The number of elements in the sublist.&#xA;     *&#xA;     **/</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getPdu">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../SnmpPdu.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * Returns the SNMP PDU attached to the request. &#xA;     * @return The SNMP PDU.&#xA;     *&#xA;     * @since 1.5&#xA;     **/</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This interface models the part of a SNMP request that involves &#xA; * a specific MIB. One object implementing this interface will be created &#xA; * for every MIB involved in a SNMP request, and that object will be passed&#xA; * to the SnmpMibAgent in charge of handling that MIB.&#xA; * &#xA; * Objects implementing this interface will be allocated by the SNMP engine. &#xA; * You will never need to implement this interface. You will only use it.&#xA; *&#xA; * &lt;p>&lt;b>This API is a Sun Microsystems internal API  and is subject &#xA; * to change without notice.&lt;/b>&lt;/p>&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
