<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/types ../../../../java.ecore#/16" name="SnmpEngine.java">
  <comments>/*&#xA; * @(#)file      SnmpEngine.java&#xA; * @(#)author    Sun Microsystems, Inc.&#xA; * @(#)version   1.19&#xA; * @(#)date      08/05/28&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; *&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>jmx</namespaces>
  <namespaces>snmp</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="SnmpEngine">
    <members xsi:type="members:InterfaceMethod" name="getEngineTime">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the engine time in seconds. This is the time from the last reboot.&#xA;     * @return The time from the last reboot.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getEngineId">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="SnmpEngineId.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the engine Id. This is unique for each engine.&#xA;     * @return The engine Id object.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getEngineBoots">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the engine boot number. This is the number of time this engine has rebooted. Each time an &lt;CODE>SnmpEngine&lt;/CODE> is instantiated, it will read this value in its Lcd, and store back the value incremented by one.&#xA;     * @return The engine's number of reboot.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getUsmKeyHandler">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="SnmpUsmKeyHandler.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the Usm key handler.&#xA;     * @return The key handler.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This engine is conformant with the RFC 2571. It is the main object within an SNMP entity (agent, manager...). &#xA; * To an engine is associated an {@link SnmpEngineId}.&#xA; * Engine instantiation is based on a factory {@link com.sun.jmx.snmp.SnmpEngineFactory  SnmpEngineFactory}.&#xA; * When an &lt;CODE> SnmpEngine &lt;/CODE> is created, a User based Security Model (USM) is initialized. The security configuration is located in a text file.&#xA; * The text file is read when the engine is created. &#xA; * &lt;p>Note that the engine is not used when the agent is SNMPv1/SNMPv2 only.&#xA;&lt;P> The USM configuration text file is remotely updatable using the USM Mib.&lt;/P>&#xA;&lt;P> User that are configured in the Usm text file are nonVolatile. &lt;/P>&#xA;&lt;P> Usm Mib userEntry supported storage type values are : volatile or nonVolatile only. Other values are rejected and a wrongValue is returned) &lt;/P>&#xA;&lt;ul>&#xA;&lt;li> volatile means that user entry is not flushed in security file &lt;/li>&#xA;&lt;li> nonVolatile means that user entry is flushed in security file &lt;/li>&#xA;&lt;li> If a nonVolatile row is set to be volatile, it will be not flushed in the file &lt;/li>&#xA;&lt;li>If a volatile row created from the UsmMib is set to nonVolatile, it will be flushed in the file (if the file exist and is writable otherwise an inconsistentValue is returned)&lt;/li>&#xA;&lt;/ul>&#xA; * &lt;p>&lt;b>This API is a Sun Microsystems internal API  and is subject &#xA; * to change without notice.&lt;/b>&lt;/p>&#xA; * @since 1.5&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
