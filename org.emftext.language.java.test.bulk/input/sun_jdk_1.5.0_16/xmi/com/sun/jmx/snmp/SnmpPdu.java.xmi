<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../java.ecore#/7 http://www.emftext.org/java/literals ../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../java.ecore#/16" name="SnmpPdu.java">
  <comments>/*&#xA; * @(#)file      SnmpPdu.java&#xA; * @(#)author    Sun Microsystems, Inc.&#xA; * @(#)version   1.10&#xA; * @(#)date      08/05/28&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; *&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>jmx</namespaces>
  <namespaces>snmp</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../java/io/Serializable.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>net</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../java/net/InetAddress.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="SnmpPdu">
    <members xsi:type="members:Field" name="type">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * PDU type. Types are defined in &#xA;     * {@link com.sun.jmx.snmp.SnmpDefinitions SnmpDefinitions}.&#xA;     * @serial&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="version">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Protocol version. Versions are defined in &#xA;     * {@link com.sun.jmx.snmp.SnmpDefinitions SnmpDefinitions}.&#xA;     * @serial&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="varBindList">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="SnmpVarBind.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * List of variables.&#xA;     * @serial&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="requestId">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Request identifier.&#xA;     * Note that this field is not used by &lt;CODE>SnmpPduTrap&lt;/CODE>.&#xA;     * @serial&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="address">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/net/InetAddress.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Source or destination address.&#xA;     * &lt;P>For an incoming PDU it's the source.&#xA;     * &lt;BR>For an outgoing PDU it's the destination.&#xA;     * @serial&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="port">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Source or destination port.&#xA;     * &lt;P>For an incoming PDU it's the source.&#xA;     * &lt;BR>For an outgoing PDU it's the destination.&#xA;     * @serial&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="pduTypeToString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="cmd">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the &lt;CODE>String&lt;/CODE> representation of a PDU type. &#xA;     * For instance, if the PDU type is &lt;CODE>SnmpDefinitions.pduGetRequestPdu&lt;/CODE>, &#xA;     * the method will return &quot;SnmpGet&quot;.&#xA;     * @param cmd The integer representation of the PDU type.&#xA;     * @return The &lt;CODE>String&lt;/CODE> representation of the PDU type.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="SnmpGet"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="SnmpDefinitions.class.xmi#//@classifiers.0/@members.11"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="SnmpGetNext"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="SnmpDefinitions.class.xmi#//@classifiers.0/@members.12"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="SnmpWalk(*)"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="SnmpDefinitions.class.xmi#//@classifiers.0/@members.16"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="SnmpSet"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="SnmpDefinitions.class.xmi#//@classifiers.0/@members.14"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="SnmpResponse"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="SnmpDefinitions.class.xmi#//@classifiers.0/@members.13"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="SnmpV1Trap"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="SnmpDefinitions.class.xmi#//@classifiers.0/@members.17"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="SnmpV2Trap"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="SnmpDefinitions.class.xmi#//@classifiers.0/@members.18"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="SnmpGetBulk"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="SnmpDefinitions.class.xmi#//@classifiers.0/@members.15"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="SnmpInform"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="SnmpDefinitions.class.xmi#//@classifiers.0/@members.19"/>
          </condition>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:AdditiveExpression">
          <children xsi:type="references:StringReference" value="Unknown Command = "/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
          <additiveOperators xsi:type="operators:Addition"/>
        </returnValue>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Is the fully decoded representation of an SNMP packet.&#xA; * &lt;P>&#xA; * Classes are derived from &lt;CODE>SnmpPdu&lt;/CODE> to&#xA; * represent the different forms of SNMP packets&#xA; * ({@link com.sun.jmx.snmp.SnmpPduPacket SnmpPduPacket},&#xA; * {@link com.sun.jmx.snmp.SnmpScopedPduPacket SnmpScopedPduPacket})&#xA; * &lt;BR>The &lt;CODE>SnmpPdu&lt;/CODE> class defines the attributes &#xA; * common to every form of SNMP packets.&#xA; * &#xA; * &#xA; * &lt;p>&lt;b>This API is a Sun Microsystems internal API  and is subject &#xA; * to change without notice.&lt;/b>&lt;/p>&#xA; * @see SnmpMessage&#xA; * @see SnmpPduFactory&#xA; *&#xA; * @since 1.5&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="SnmpDefinitions.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../../java/io/Serializable.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
