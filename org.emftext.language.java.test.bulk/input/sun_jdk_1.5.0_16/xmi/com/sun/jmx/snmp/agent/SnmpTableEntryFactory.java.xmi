<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../../java.ecore#/16" name="SnmpTableEntryFactory.java">
  <comments>/* &#xA; * @(#)file      SnmpTableEntryFactory.java &#xA; * @(#)author    Sun Microsystems, Inc. &#xA; * @(#)version   1.9 &#xA; * @(#)date      08/05/28 &#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>jmx</namespaces>
  <namespaces>snmp</namespaces>
  <namespaces>agent</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>snmp</namespaces>
    <classifier xsi:type="classifiers:Class" href="../SnmpStatusException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>snmp</namespaces>
    <classifier xsi:type="classifiers:Class" href="../SnmpOid.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>snmp</namespaces>
    <namespaces>agent</namespaces>
    <classifier xsi:type="classifiers:Class" href="SnmpMibTable.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>snmp</namespaces>
    <namespaces>agent</namespaces>
    <classifier xsi:type="classifiers:Interface" href="SnmpMibSubRequest.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="SnmpTableEntryFactory">
    <members xsi:type="members:InterfaceMethod" name="createNewEntry">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="request">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="SnmpMibSubRequest.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="rowOid">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../SnmpOid.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="depth">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="meta">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="SnmpMibTable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../SnmpStatusException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This method is called by the SNMP runtime whenever a new entry&#xA;     * creation is requested by a remote manager.&#xA;     *&#xA;     * The factory is responsible for instantiating the appropriate MBean&#xA;     * and for registering it with the appropriate metadata object.&#xA;     *&#xA;     * Usually this method will:&#xA;     * &lt;ul>&#xA;     * &lt;li>Check whether the creation can be accepted&#xA;     * &lt;li>Instantiate a new entry&#xA;     * &lt;li>Possibly register this entry with the MBeanServer, if needed.&#xA;     * &lt;li>Call &lt;code>addEntry()&lt;/code> on the given &lt;code>meta&lt;/code> object.&#xA;     * &lt;/ul>&#xA;     * This method is usually generated by &lt;code>mibgen&lt;/code> on table&#xA;     * objects (inheriting from &#xA;     * {@link com.sun.jmx.snmp.agent.SnmpTableSupport}). &lt;br>&#xA;     *&#xA;     * &lt;p>&lt;b>&lt;i>&#xA;     * This method is called internally by the SNMP runtime whenever a &#xA;     * new entry creation is requested by a remote SNMP manager.&#xA;     * You should never need to call this method directlty.&#xA;     * &lt;/i>&lt;/b>&lt;/p>&#xA;     *&#xA;     * @param request The SNMP subrequest containing the sublist of varbinds&#xA;     *                for the new entry.&#xA;     * @param rowOid  The OID indexing the conceptual row (entry) for which &#xA;     *                the creation was requested.&#xA;     * @param depth   The depth reached in the OID tree (the position at&#xA;     *                which the columnar object ids start in the OIDs&#xA;     *                included in the varbind).&#xA;     * @param meta    The metadata object impacted by the subrequest&#xA;     *&#xA;     * @exception SnmpStatusException The new entry cannot be created.&#xA;     *&#xA;     **/</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This interface is implemented by mibgen generated table objects&#xA; * inheriting from {@link com.sun.jmx.snmp.agent.SnmpTableSupport}.&#xA; * &lt;p>&#xA; * It is used internally by the metadata whenever a remote SNMP manager&#xA; * requests the creation of a new entry through an SNMP SET.&#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * At creation, the mibgen generated table object retrieves its &#xA; * corresponding metadata from the MIB and registers with &#xA; * this metadata as a SnmpTableEntryFactory.&#xA; * &lt;/p>&#xA; *&#xA; * &lt;p>&lt;b>This API is a Sun Microsystems internal API  and is subject &#xA; * to change without notice.&lt;/b>&lt;/p>&#xA; **/</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="SnmpTableCallbackHandler.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
