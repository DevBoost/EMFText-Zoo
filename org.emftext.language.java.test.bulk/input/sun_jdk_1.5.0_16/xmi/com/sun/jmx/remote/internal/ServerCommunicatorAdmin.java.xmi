<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../java.ecore#/16" name="ServerCommunicatorAdmin.java">
  <comments>/*&#xA; * @(#)ServerCommunicatorAdmin.java&#x9;1.18 05/01/04&#xA; * &#xA; * Copyright 2005 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>jmx</namespaces>
  <namespaces>remote</namespaces>
  <namespaces>internal</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>jmx</namespaces>
    <namespaces>remote</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../util/ClassLogger.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="ServerCommunicatorAdmin">
    <members xsi:type="members:Constructor" name="ServerCommunicatorAdmin">
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                <arguments xsi:type="references:StringReference" value="Constructor"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="Creates a new ServerCommunicatorAdmin object "/>
                  <children xsi:type="references:StringReference" value="with the timeout "/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.0"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.4"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="timeoutTask">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../java/lang/Runnable.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.5"/>
                </typeReference>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="t">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../java/lang/Thread.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../java/lang/Thread.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.3/@statement/@statements.0/@variable"/>
              </initialValue>
              <annotationsAndModifiers xsi:type="modifiers:Final"/>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.3/@statement/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.62"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="JMX server connection timeout "/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.3/@statement/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.85"/>
                    </next>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.3/@statement/@statements.1/@variable">
              <comments>// If you change this name you will need to change a unit test</comments>
              <comments>// (NoServerTimeoutTest)</comments>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.72"/>
                <arguments xsi:type="literals:BooleanLiteral" value="true"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@statements.3/@statement/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.46"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@parameters.0"/>
          <children xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../../../java/lang/Long.class.xmi#//@classifiers.0/@members.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../../../java/lang/Long.class.xmi#//@classifiers.0"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="timeout">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <members xsi:type="members:ClassMethod" name="reqIncoming">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Tells that a new request message is received.&#xA;     * A caller of this method should always call the method &#xA;     * &lt;code>rspOutgoing&lt;/code> to inform that a response is sent out &#xA;     * for the received request.&#xA;     * @return the value of the termination flag:&#xA;     * &lt;ul>&lt;code>true&lt;/code> if the connection is already being terminated,&#xA;     * &lt;br>&lt;code>false&lt;/code> otherwise.&lt;/ul>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                <arguments xsi:type="references:StringReference" value="reqIncoming"/>
                <arguments xsi:type="references:StringReference" value="Receive a new request."/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.4"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:SynchronizedBlock">
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.36"/>
                  <arguments xsi:type="references:StringReference" value="reqIncoming"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="The server has decided to close "/>
                    <children xsi:type="references:StringReference" value="this client connection."/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:PrefixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
            <operator xsi:type="operators:PlusPlus"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
        </statements>
        <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="rspOutgoing">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Tells that a response is sent out for a received request.&#xA;     * @return the value of the termination flag:&#xA;     * &lt;ul>&lt;code>true&lt;/code> if the connection is already being terminated,&#xA;     * &lt;br>&lt;code>false&lt;/code> otherwise.&lt;/ul>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                <arguments xsi:type="references:StringReference" value="reqIncoming"/>
                <arguments xsi:type="references:StringReference" value="Finish a request."/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.4"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:SynchronizedBlock">
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.18"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.6">
                <arguments xsi:type="references:StringReference" value="Admin: Timestamp="/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                <comments>// tells the adminor to restart waiting with timeout</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.7"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="expressions:PrefixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
              <operator xsi:type="operators:MinusMinus"/>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
        </statements>
        <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
      </statements>
    </members>
    <members xsi:type="members:InterfaceMethod" name="doStop">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Called by this class to tell an implementation to do stop.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:ClassMethod" name="terminate">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Terminates this object.&#xA;     * Called only by outside, so do not need to call doStop&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                <arguments xsi:type="references:StringReference" value="terminate"/>
                <arguments xsi:type="references:StringReference" value="terminate the ServerCommunicatorAdmin object."/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.4"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:SynchronizedBlock">
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return"/>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="literals:BooleanLiteral" value="true"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
            <comments>// tell Timeout to terminate</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.7"/>
            </next>
          </expression>
        </statements>
        <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
      </statements>
    </members>
    <members xsi:type="classifiers:Class" name="Timeout">
      <members xsi:type="members:ClassMethod" name="run">
        <typeReference xsi:type="types:Void"/>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="stopping">
            <typeReference xsi:type="types:Boolean"/>
            <initialValue xsi:type="literals:BooleanLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:SynchronizedBlock">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.18"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                </value>
              </expression>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.6">
              <arguments xsi:type="references:StringReference" value="Admin: timeout="/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.6">
              <arguments xsi:type="references:StringReference" value="Admin: Timestamp="/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
            </expression>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:TryBlock">
                <statements xsi:type="statements:WhileLoop">
                  <comments>// wait until there is no more job</comments>
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                              <arguments xsi:type="references:StringReference" value="Timeout-run"/>
                              <arguments xsi:type="references:StringReference" value="Waiting without timeout."/>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.4"/>
                        </next>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.11"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                    </children>
                    <children xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:NotEqual"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </children>
                  </condition>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Return"/>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="remaining">
                    <typeReference xsi:type="types:Long"/>
                    <initialValue xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:IdentifierReference">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.18"/>
                            </next>
                            <target xsi:type="classifiers:Class" href="../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                          </children>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                          <additiveOperators xsi:type="operators:Subtraction"/>
                        </expression>
                      </children>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </initialValue>
                    <annotationsAndModifiers xsi:type="modifiers:Final"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.6">
                    <arguments xsi:type="references:StringReference" value="Admin: remaining timeout="/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@members.0/@statements.1/@statements.3/@statement/@statements.0/@statements.2/@variable"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                              <arguments xsi:type="references:StringReference" value="Timeout-run"/>
                              <arguments xsi:type="expressions:AdditiveExpression">
                                <children xsi:type="references:StringReference" value="Waiting with timeout: "/>
                                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@members.0/@statements.1/@statements.3/@statement/@statements.0/@statements.2/@variable"/>
                                <children xsi:type="references:StringReference" value=" ms remaining"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                                <additiveOperators xsi:type="operators:Addition"/>
                              </arguments>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.4"/>
                        </next>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.9"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@members.0/@statements.1/@statements.3/@statement/@statements.0/@statements.2/@variable"/>
                        </next>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@members.0/@statements.1/@statements.3/@statement/@statements.0/@statements.2/@variable"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:GreaterThan"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Continue"/>
                  <condition xsi:type="expressions:RelationExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <relationOperators xsi:type="operators:GreaterThan"/>
                  </condition>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="elapsed">
                    <typeReference xsi:type="types:Long"/>
                    <initialValue xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.18"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                      </children>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </initialValue>
                    <annotationsAndModifiers xsi:type="modifiers:Final"/>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.6">
                    <arguments xsi:type="references:StringReference" value="Admin: elapsed="/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@members.0/@statements.1/@statements.3/@statement/@statements.0/@statements.6/@variable"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:Block">
                        <statements xsi:type="statements:ExpressionStatement">
                          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                              <arguments xsi:type="references:StringReference" value="Timeout-run"/>
                              <arguments xsi:type="references:StringReference" value="timeout elapsed"/>
                            </next>
                          </expression>
                        </statements>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.4"/>
                        </next>
                      </condition>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.6">
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:StringReference" value="Admin: timeout elapsed! "/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@members.0/@statements.1/@statements.3/@statement/@statements.0/@statements.6/@variable"/>
                          <children xsi:type="references:StringReference" value=">"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
                          <comments>// stopping</comments>
                        </child>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="literals:BooleanLiteral" value="true"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:AssignmentExpression">
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@members.0/@statements.0/@variable"/>
                        <assignmentOperator xsi:type="operators:Assignment"/>
                        <value xsi:type="literals:BooleanLiteral" value="true"/>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:Break"/>
                  </statement>
                  <condition xsi:type="expressions:ConditionalAndExpression">
                    <children xsi:type="expressions:UnaryExpression">
                      <operators xsi:type="operators:Negate"/>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                    </children>
                    <children xsi:type="expressions:RelationExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@members.0/@statements.1/@statements.3/@statement/@statements.0/@statements.6/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                      <relationOperators xsi:type="operators:GreaterThan"/>
                    </children>
                  </condition>
                </statements>
                <catcheBlocks>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.36"/>
                        <arguments xsi:type="references:StringReference" value="Timeout-run"/>
                        <arguments xsi:type="expressions:AdditiveExpression">
                          <children xsi:type="references:StringReference" value="Unexpected Exception: "/>
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@members.0/@statements.1/@statements.3/@statement/@statements.0/@catcheBlocks.0/@parameter"/>
                          <additiveOperators xsi:type="operators:Addition"/>
                        </arguments>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.12"/>
                        <arguments xsi:type="references:StringReference" value="Timeout-run"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@members.0/@statements.1/@statements.3/@statement/@statements.0/@catcheBlocks.0/@parameter"/>
                      </next>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:Return"/>
                  <parameter name="ire">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../java/lang/InterruptedException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </parameter>
                </catcheBlocks>
              </statements>
            </statement>
            <condition xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
            </condition>
          </statements>
          <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
                      <arguments xsi:type="references:StringReference" value="Timeout-run"/>
                      <arguments xsi:type="references:StringReference" value="Call the doStop."/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.4"/>
                </next>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.3"/>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@members.0/@statements.0/@variable"/>
        </statements>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// --------------------------------------------------------------</comments>
        <comments>// private classes </comments>
        <comments>// --------------------------------------------------------------</comments>
      </annotationsAndModifiers>
      <implements xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../java/lang/Runnable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </implements>
    </members>
    <members xsi:type="members:ClassMethod" name="logtime">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="desc">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="time">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../util/ClassLogger.class.xmi#//@classifiers.0/@members.15"/>
            <arguments xsi:type="references:StringReference" value="synchro"/>
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.1"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:Field" name="timestamp">
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// --------------------------------------------------------------</comments>
        <comments>// private variables</comments>
        <comments>// --------------------------------------------------------------</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="lock">
      <initialValue xsi:type="arrays:ArrayInstantiationBySize">
        <typeReference xsi:type="types:Int"/>
        <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="currentJobs">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="timeout">
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="terminated">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// state issue</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="logger">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../util/ClassLogger.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arguments xsi:type="references:StringReference" value="javax.management.remote.misc"/>
        <arguments xsi:type="references:StringReference" value="ServerCommunicatorAdmin"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../util/ClassLogger.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="timelogger">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../util/ClassLogger.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arguments xsi:type="references:StringReference" value="javax.management.remote.timeout"/>
        <arguments xsi:type="references:StringReference" value="ServerCommunicatorAdmin"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../util/ClassLogger.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public"/>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
  </classifiers>
</containers:CompilationUnit>
