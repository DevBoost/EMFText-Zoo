<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:generics="http://www.emftext.org/java/generics" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../java.ecore#/5 http://www.emftext.org/java/generics ../../../../../java.ecore#/6 http://www.emftext.org/java/imports ../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../../java.ecore#/17" name="KeyStoreLoginModule.java">
  <comments>/*&#xA; * @(#)KeyStoreLoginModule.java&#x9;1.18 04/05/05&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>security</namespaces>
  <namespaces>auth</namespaces>
  <namespaces>module</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>x500</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/security/auth/x500/X500Principal.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/io/File.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/io/InputStream.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/io/PushbackInputStream.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>net</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/net/MalformedURLException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>net</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/net/URL.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/security/AuthProvider.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/security/GeneralSecurityException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../java/security/Key.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/security/KeyStore.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/security/KeyStoreException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/security/NoSuchAlgorithmException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/security/NoSuchProviderException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../java/security/Principal.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../java/security/PrivateKey.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/security/Provider.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/security/UnrecoverableKeyException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <namespaces>cert</namespaces>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <namespaces>cert</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/security/cert/X509Certificate.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/util/Arrays.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/util/LinkedList.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../java/util/Map.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../javax/security/auth/Destroyable.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/security/auth/DestroyFailedException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/security/auth/Subject.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>x500</namespaces>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/security/auth/Subject.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>x500</namespaces>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>callback</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../javax/security/auth/callback/Callback.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>callback</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../javax/security/auth/callback/CallbackHandler.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>callback</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>callback</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/NameCallback.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>callback</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/PasswordCallback.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>callback</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/TextOutputCallback.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>callback</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/UnsupportedCallbackException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>login</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/FailedLoginException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>login</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>javax</namespaces>
    <namespaces>security</namespaces>
    <namespaces>auth</namespaces>
    <namespaces>spi</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../javax/security/auth/spi/LoginModule.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>sun</namespaces>
    <namespaces>security</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../sun/security/util/AuthResources.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>sun</namespaces>
    <namespaces>security</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../sun/security/util/Password.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="KeyStoreLoginModule">
    <members xsi:type="members:Field" name="rb">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0/@members.19"/>
              <arguments xsi:type="references:StringReference" value="sun.security.util.AuthResources"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0"/>
          </next>
        </next>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>java</namespaces>
        <namespaces>util</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="UNINITIALIZED">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/* -- Fields -- */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="INITIALIZED">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="AUTHENTICATED">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="LOGGED_IN">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="PROTECTED_PATH">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="TOKEN">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NORMAL">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="NONE">
      <initialValue xsi:type="references:StringReference" value="NONE"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="P11KEYSTORE">
      <initialValue xsi:type="references:StringReference" value="PKCS11"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="bannerCallback">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/TextOutputCallback.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arguments xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../../../../javax/security/auth/callback/TextOutputCallback.class.xmi#//@classifiers.0/@members.1"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/TextOutputCallback.class.xmi#//@classifiers.0"/>
        </arguments>
        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0/@members.11"/>
            <arguments xsi:type="references:StringReference" value="Please enter keystore information"/>
          </next>
        </arguments>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/TextOutputCallback.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="confirmationCallback">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arguments xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0/@members.9"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0"/>
        </arguments>
        <arguments xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0/@members.4"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0"/>
        </arguments>
        <arguments xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0/@members.8"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0"/>
        </arguments>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="subject">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/Subject.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="callbackHandler">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../javax/security/auth/callback/CallbackHandler.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="sharedState">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../java/util/Map.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="options">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../java/util/Map.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="keyStorePassword">
      <typeReference xsi:type="types:Char"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="privateKeyPassword">
      <typeReference xsi:type="types:Char"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="keyStore">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/security/KeyStore.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="keyStoreURL">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="keyStoreType">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="keyStoreProvider">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="keyStoreAlias">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="keyStorePasswordURL">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="privateKeyPasswordURL">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="debug">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="principal">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>javax</namespaces>
        <namespaces>security</namespaces>
        <namespaces>auth</namespaces>
        <namespaces>x500</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/x500/X500Principal.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="fromKeyStore">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/security/cert/Certificate.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="certP">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>java</namespaces>
        <namespaces>security</namespaces>
        <namespaces>cert</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/security/cert/CertPath.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="privateCredential">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/x500/X500PrivateCredential.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="status">
      <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="nullStream">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="token">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="protectedPath">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="subject">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/Subject.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="callbackHandler">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../javax/security/auth/callback/CallbackHandler.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="sharedState">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Interface" href="../../../../../java/util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="options">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Interface" href="../../../../../java/util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/* -- Methods -- */</comments>
        <comments>/**&#xA;     * Initialize this &lt;code>LoginModule&lt;/code>.&#xA;     *&#xA;     * &lt;p>&#xA;     *&#xA;     * @param subject the &lt;code>Subject&lt;/code> to be authenticated. &lt;p>&#xA;     *&#xA;     * @param callbackHandler a &lt;code>CallbackHandler&lt;/code> for communicating&#xA;     *&#x9;&#x9;&#x9;with the end user (prompting for usernames and&#xA;     *&#x9;&#x9;&#x9;passwords, for example),&#xA;     *&#x9;&#x9;&#x9;which may be &lt;code>null&lt;/code>. &lt;p>&#xA;     *&#xA;     * @param sharedState shared &lt;code>LoginModule&lt;/code> state. &lt;p>&#xA;     *&#xA;     * @param options options specified in the login&#xA;     *&#x9;&#x9;&#x9;&lt;code>Configuration&lt;/code> for this particular&#xA;     *&#x9;&#x9;&#x9;&lt;code>LoginModule&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.2"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.35"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="processOptions">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:StringReference" value="keyStoreURL"/>
              </next>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="file:"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.59"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../java/io/File.class.xmi#//@classifiers.0/@members.3"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../java/io/File.class.xmi#//@classifiers.0"/>
                      </arguments>
                      <arguments xsi:type="literals:CharacterLiteral" value="47"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:StringReference" value="user.home"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
                </children>
                <children xsi:type="literals:CharacterLiteral" value="47"/>
                <children xsi:type="references:StringReference" value=".keystore"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="literals:BooleanLiteral" value="true"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.33"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
            </next>
          </condition>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:StringReference" value="keyStoreType"/>
              </next>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../java/security/KeyStore.class.xmi#//@classifiers.0/@members.9"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../java/security/KeyStore.class.xmi#//@classifiers.0"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral" value="true"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:StringReference" value="keyStoreProvider"/>
              </next>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:StringReference" value="keyStoreAlias"/>
              </next>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:StringReference" value="keyStorePasswordURL"/>
              </next>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:StringReference" value="privateKeyPasswordURL"/>
              </next>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:StringReference" value="true">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
              <arguments xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                    <arguments xsi:type="references:StringReference" value="protected"/>
                  </next>
                </child>
              </arguments>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:StringReference" value="true">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.36"/>
              <arguments xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                    <arguments xsi:type="references:StringReference" value="debug"/>
                  </next>
                </child>
              </arguments>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
              <arguments xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="keyStoreURL="/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="keyStoreType="/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="keyStoreProvider="/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="keyStoreAlias="/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="keyStorePasswordURL="/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="privateKeyPasswordURL="/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="protectedPath="/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
              <arguments xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="login">
      <typeReference xsi:type="types:Boolean"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Authenticate the user.&#xA;     *&#xA;     * &lt;p> Get the Keystore alias and relevant passwords.&#xA;     * Retrieve the alias's principal and credentials from the Keystore.&#xA;     *&#xA;     * &lt;p>&#xA;     *&#xA;     * @exception FailedLoginException if the authentication fails. &lt;p>&#xA;     *&#xA;     * @return true in all cases (this &lt;code>LoginModule&lt;/code>&#xA;     *&#x9;&#x9;should not be ignored).&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="The login module is not initialized"/>
            </throwable>
          </statements>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="if keyStoreType is "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                    <children xsi:type="references:StringReference" value=" then keyStoreURL must be "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="if keyStoreType is "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                    <children xsi:type="references:StringReference" value=" then privateKeyPasswordURL must not be specified"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                <children xsi:type="literals:NullLiteral"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="if protected is true then keyStorePasswordURL and "/>
                    <children xsi:type="references:StringReference" value="privateKeyPasswordURL must not be specified"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:ConditionalOrExpression">
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </children>
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </children>
                </expression>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// get relevant alias and password info</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.37">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33"/>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.37">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32"/>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.37">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                  </expression>
                </statements>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <comments>// log into KeyStore to retrieve data,</comments>
            <comments>// then clear passwords</comments>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.45"/>
            </statements>
            <finallyBlock>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../java/util/Arrays.class.xmi#//@classifiers.0/@members.81"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
                        <arguments xsi:type="literals:CharacterLiteral"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../java/util/Arrays.class.xmi#//@classifiers.0"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:NullLiteral"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </children>
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../java/util/Arrays.class.xmi#//@classifiers.0/@members.81"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:CharacterLiteral"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../java/util/Arrays.class.xmi#//@classifiers.0"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:NullLiteral"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
                  <children xsi:type="literals:NullLiteral"/>
                </condition>
              </statements>
            </finallyBlock>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getAliasAndPasswords">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="env">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** Get the alias and passwords to use for looking up in the KeyStore. */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Switch">
            <comments>// No callback handler - check for alias and password options</comments>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.38"/>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.38"/>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.39"/>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.38"/>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.39"/>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.40"/>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
            </cases>
            <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@parameters.0"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="aliasCallback">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// Callback handler available - prompt for alias and passwords</comments>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/NameCallback.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@statements.0/@elseStatement/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/NameCallback.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0/@members.11"/>
                        <arguments xsi:type="references:StringReference" value="Keystore alias: "/>
                      </next>
                    </arguments>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
                <children xsi:type="literals:NullLiteral"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../java/lang/String.class.xmi#//@classifiers.0/@members.22"/>
                  </next>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@statements.0/@elseStatement/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/NameCallback.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0/@members.11"/>
                        <arguments xsi:type="references:StringReference" value="Keystore alias: "/>
                      </next>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
                  </value>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="storePassCallback">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/PasswordCallback.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="literals:NullLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="keyPassCallback">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/PasswordCallback.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="literals:NullLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:Switch">
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@statements.0/@elseStatement/@statements.3/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/PasswordCallback.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0/@members.11"/>
                        <arguments xsi:type="references:StringReference" value="Private key password (optional): "/>
                      </next>
                    </arguments>
                    <arguments xsi:type="literals:BooleanLiteral"/>
                  </value>
                </expression>
              </statements>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <comments>// fall thru</comments>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@statements.0/@elseStatement/@statements.2/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/PasswordCallback.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../java/util/ResourceBundle.class.xmi#//@classifiers.0/@members.11"/>
                        <arguments xsi:type="references:StringReference" value="Keystore password: "/>
                      </next>
                    </arguments>
                    <arguments xsi:type="literals:BooleanLiteral"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
            </cases>
            <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@parameters.0"/>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.41">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@statements.0/@elseStatement/@statements.0/@variable"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@statements.0/@elseStatement/@statements.2/@variable"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@statements.0/@elseStatement/@statements.3/@variable"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="alias="/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="checkAlias">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="Need to specify an alias option to use "/>
                <children xsi:type="references:StringReference" value="KeyStoreLoginModule non-interactively."/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="checkStorePass">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="Need to specify keyStorePasswordURL option to use "/>
                <children xsi:type="references:StringReference" value="KeyStoreLoginModule non-interactively."/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="in">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/io/InputStream.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../java/net/URL.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/net/URL.class.xmi#//@classifiers.0/@members.45"/>
              </next>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../sun/security/util/Password.class.xmi#//@classifiers.0/@members.1"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.1/@statements.0/@variable"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../sun/security/util/Password.class.xmi#//@classifiers.0"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.1/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../java/io/InputStream.class.xmi#//@classifiers.0/@members.8"/>
            </next>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="le">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="Problem accessing keystore password &quot;"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
                  <children xsi:type="references:StringReference" value="&quot;"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.1/@catcheBlocks.0/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.1/@catcheBlocks.0/@parameter"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.1/@catcheBlocks.0/@statements.0/@variable"/>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="checkKeyPass">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="in">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../java/io/InputStream.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../java/net/URL.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../java/net/URL.class.xmi#//@classifiers.0/@members.45"/>
                  </next>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../sun/security/util/Password.class.xmi#//@classifiers.0/@members.1"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@elseStatement/@statements.0/@statements.0/@variable"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../sun/security/util/Password.class.xmi#//@classifiers.0"/>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@elseStatement/@statements.0/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../java/io/InputStream.class.xmi#//@classifiers.0/@members.8"/>
                </next>
              </expression>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="le">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Problem accessing private key password &quot;"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
                      <children xsi:type="references:StringReference" value="&quot;"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@elseStatement/@statements.0/@catcheBlocks.0/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@elseStatement/@statements.0/@catcheBlocks.0/@parameter"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@elseStatement/@statements.0/@catcheBlocks.0/@statements.0/@variable"/>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="prompt">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="aliasCallback">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/NameCallback.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="storePassCallback">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/PasswordCallback.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyPassCallback">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/PasswordCallback.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:TryBlock">
            <comments>// only prompt for alias</comments>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../javax/security/auth/callback/CallbackHandler.class.xmi#//@classifiers.0/@members.0"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="../../../../../javax/security/auth/callback/Callback.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0"/>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                    </arrayInitializer>
                  </arguments>
                </next>
              </expression>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="le">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:StringReference" value="Problem retrieving keystore alias"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@statement/@statements.0/@catcheBlocks.0/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@statement/@statements.0/@catcheBlocks.0/@parameter"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@statement/@statements.0/@catcheBlocks.0/@statements.0/@variable"/>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
            <catcheBlocks>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Error: "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@statement/@statements.0/@catcheBlocks.1/@parameter">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.6"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/callback/UnsupportedCallbackException.class.xmi#//@classifiers.0/@members.4"/>
                      </next>
                    </children>
                    <children xsi:type="references:StringReference" value=" is not available to retrieve authentication "/>
                    <children xsi:type="references:StringReference" value=" information from the user"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </throwable>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/UnsupportedCallbackException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="confirmationResult">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0/@members.28"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:StringReference" value="Login cancelled"/>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@statement/@statements.1/@variable"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0/@members.7"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.42">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:TryBlock">
              <comments>// prompt for alias and key store password</comments>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../javax/security/auth/callback/CallbackHandler.class.xmi#//@classifiers.0/@members.0"/>
                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Interface" href="../../../../../javax/security/auth/callback/Callback.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arrayDimensionsBefore/>
                      <arrayInitializer>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0"/>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.1"/>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                      </arrayInitializer>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <catcheBlocks>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="le">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:StringReference" value="Problem retrieving keystore alias and password"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@elseStatement/@statement/@statements.0/@catcheBlocks.0/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@elseStatement/@statement/@statements.0/@catcheBlocks.0/@parameter"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Throw">
                  <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@elseStatement/@statement/@statements.0/@catcheBlocks.0/@statements.0/@variable"/>
                </statements>
                <parameter name="e">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameter>
              </catcheBlocks>
              <catcheBlocks>
                <statements xsi:type="statements:Throw">
                  <throwable xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Error: "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@elseStatement/@statement/@statements.0/@catcheBlocks.1/@parameter">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.6"/>
                          </next>
                          <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/callback/UnsupportedCallbackException.class.xmi#//@classifiers.0/@members.4"/>
                        </next>
                      </children>
                      <children xsi:type="references:StringReference" value=" is not available to retrieve authentication "/>
                      <children xsi:type="references:StringReference" value=" information from the user"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </throwable>
                </statements>
                <parameter name="e">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/UnsupportedCallbackException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameter>
              </catcheBlocks>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="confirmationResult">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0/@members.28"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Throw">
                  <throwable xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:StringReference" value="Login cancelled"/>
                  </throwable>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@elseStatement/@statement/@statements.1/@variable"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0"/>
                </children>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.42">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.1"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.2"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:TryBlock">
              <comments>// prompt for alias, key store password, and key password</comments>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../javax/security/auth/callback/CallbackHandler.class.xmi#//@classifiers.0/@members.0"/>
                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Interface" href="../../../../../javax/security/auth/callback/Callback.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arrayDimensionsBefore/>
                      <arrayInitializer>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0"/>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.1"/>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.2"/>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
                      </arrayInitializer>
                    </arguments>
                  </next>
                </expression>
              </statements>
              <catcheBlocks>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="le">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:StringReference" value="Problem retrieving keystore alias and passwords"/>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@elseStatement/@elseStatement/@statements.0/@catcheBlocks.0/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@elseStatement/@elseStatement/@statements.0/@catcheBlocks.0/@parameter"/>
                    </next>
                  </expression>
                </statements>
                <statements xsi:type="statements:Throw">
                  <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@elseStatement/@elseStatement/@statements.0/@catcheBlocks.0/@statements.0/@variable"/>
                </statements>
                <parameter name="e">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameter>
              </catcheBlocks>
              <catcheBlocks>
                <statements xsi:type="statements:Throw">
                  <throwable xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Error: "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@elseStatement/@elseStatement/@statements.0/@catcheBlocks.1/@parameter">
                        <next xsi:type="references:MethodCall">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.6"/>
                          </next>
                          <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/callback/UnsupportedCallbackException.class.xmi#//@classifiers.0/@members.4"/>
                        </next>
                      </children>
                      <children xsi:type="references:StringReference" value=" is not available to retrieve authentication "/>
                      <children xsi:type="references:StringReference" value=" information from the user"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </throwable>
                </statements>
                <parameter name="e">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/UnsupportedCallbackException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameter>
              </catcheBlocks>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="confirmationResult">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0/@members.28"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Throw">
                  <throwable xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:StringReference" value="Login cancelled"/>
                  </throwable>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.0/@elseStatement/@elseStatement/@statements.1/@variable"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/ConfirmationCallback.class.xmi#//@classifiers.0"/>
                </children>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.42">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.43">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.1"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.44">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.2"/>
              </expression>
            </statements>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="saveAlias">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="cb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/NameCallback.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/callback/NameCallback.class.xmi#//@classifiers.0/@members.9"/>
            </next>
          </value>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="saveStorePass">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/PasswordCallback.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/callback/PasswordCallback.class.xmi#//@classifiers.0/@members.8"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                <comments>/* Treat a NULL password as an empty password */</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Char"/>
                <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/callback/PasswordCallback.class.xmi#//@classifiers.0/@members.9"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="saveKeyPass">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="c">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/callback/PasswordCallback.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/callback/PasswordCallback.class.xmi#//@classifiers.0/@members.8"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17">
                <comments>/*&#xA;&#x9;     * Use keystore password if no private key password is&#xA;&#x9;     * specified.&#xA;&#x9;     */</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
            <children xsi:type="literals:NullLiteral"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17">
              <next xsi:type="references:IdentifierReference"/>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/callback/PasswordCallback.class.xmi#//@classifiers.0/@members.9"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getKeyStoreInfo">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** Get the credentials from the KeyStore. */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <comments>/* Get KeyStore instance */</comments>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../java/security/KeyStore.class.xmi#//@classifiers.0/@members.6"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../java/security/KeyStore.class.xmi#//@classifiers.0"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../java/security/KeyStore.class.xmi#//@classifiers.0/@members.7"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../java/security/KeyStore.class.xmi#//@classifiers.0"/>
                </value>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="le">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:StringReference" value="The specified keystore type was not available"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.0/@catcheBlocks.0/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.0/@catcheBlocks.0/@parameter"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.0/@catcheBlocks.0/@statements.0/@variable"/>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/security/KeyStoreException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <catcheBlocks>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="le">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:StringReference" value="The specified keystore provider was not available"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.0/@catcheBlocks.1/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.0/@catcheBlocks.1/@parameter"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.0/@catcheBlocks.1/@statements.0/@variable"/>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/security/NoSuchProviderException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <comments>/* Load KeyStore contents from file */</comments>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18">
                <comments>// if using protected auth path, keyStorePassword will be null</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../java/security/KeyStore.class.xmi#//@classifiers.0/@members.28"/>
                  <arguments xsi:type="literals:NullLiteral"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.31"/>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="in">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../java/io/InputStream.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../java/net/URL.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../java/net/URL.class.xmi#//@classifiers.0/@members.45"/>
                  </next>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../java/security/KeyStore.class.xmi#//@classifiers.0/@members.28"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@statements.0/@elseStatement/@statements.0/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@statements.0/@elseStatement/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../java/io/InputStream.class.xmi#//@classifiers.0/@members.8"/>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="le">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:StringReference" value="Incorrect keyStoreURL option"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@catcheBlocks.0/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@catcheBlocks.0/@parameter"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@catcheBlocks.0/@statements.0/@variable"/>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/net/MalformedURLException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <catcheBlocks>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="le">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:StringReference" value="Error initializing keystore"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@catcheBlocks.1/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@catcheBlocks.1/@parameter"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@catcheBlocks.1/@statements.0/@variable"/>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/security/GeneralSecurityException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <catcheBlocks>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="le">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:StringReference" value="Error initializing keystore"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@catcheBlocks.2/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@catcheBlocks.2/@parameter"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.1/@catcheBlocks.2/@statements.0/@variable"/>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <comments>/* Get certificate chain and create a certificate path */</comments>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/security/KeyStore.class.xmi#//@classifiers.0/@members.13"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
              </next>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Throw">
              <throwable xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/FailedLoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:StringReference" value="Unable to find X.509 certificate chain in keystore"/>
              </throwable>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalOrExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </children>
            <children xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:InstanceOfExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../java/security/cert/X509Certificate.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </arraySelectors>
                  </child>
                </expression>
              </child>
            </children>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="certList">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../java/util/LinkedList.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../java/util/LinkedList.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ForLoop">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@statements.1/@elseStatement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../java/util/LinkedList.class.xmi#//@classifiers.0/@members.13"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@statements.1/@elseStatement/@statements.1/@init"/>
                        </arraySelectors>
                      </arguments>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@statements.1/@elseStatement/@statements.1/@init"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                  <next xsi:type="references:IdentifierReference"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <init xsi:type="variables:LocalVariable" name="i">
                <typeReference xsi:type="types:Int"/>
                <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </init>
              <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@statements.1/@elseStatement/@statements.1/@init"/>
                <operator xsi:type="operators:PlusPlus"/>
              </updates>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="certF">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../java/security/cert/CertificateFactory.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../java/security/cert/CertificateFactory.class.xmi#//@classifiers.0/@members.4"/>
                    <arguments xsi:type="references:StringReference" value="X.509"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../java/security/cert/CertificateFactory.class.xmi#//@classifiers.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@statements.1/@elseStatement/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../java/security/cert/CertificateFactory.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@statements.1/@elseStatement/@statements.0/@variable"/>
                  </next>
                </value>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="le">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:StringReference" value="Error using keystore"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@catcheBlocks.0/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@catcheBlocks.0/@parameter"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@catcheBlocks.0/@statements.0/@variable"/>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/security/KeyStoreException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <catcheBlocks>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="le">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:StringReference" value="Error: X.509 Certificate type unavailable"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@catcheBlocks.1/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@catcheBlocks.1/@parameter"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.2/@catcheBlocks.1/@statements.0/@variable"/>
          </statements>
          <parameter name="ce">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/security/cert/CertificateException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <comments>/* Get principal and keys */</comments>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="certificate">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/security/cert/X509Certificate.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../java/security/cert/X509Certificate.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </arraySelectors>
              </child>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>javax</namespaces>
                <namespaces>security</namespaces>
                <namespaces>auth</namespaces>
                <namespaces>x500</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/x500/X500Principal.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../java/security/Principal.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../../java/security/cert/X509Certificate.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </arguments>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="privateKey">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <comments>// if token, privateKeyPassword will be null</comments>
                <target xsi:type="classifiers:Interface" href="../../../../../java/security/Key.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/security/KeyStore.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Throw">
              <throwable xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/FailedLoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:StringReference" value="Unable to recover key from keystore"/>
              </throwable>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalOrExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@statements.2/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:InstanceOfExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Interface" href="../../../../../java/security/PrivateKey.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@statements.2/@variable"/>
                </expression>
              </child>
            </children>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/x500/X500PrivateCredential.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@statements.0/@variable"/>
              <arguments xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../java/security/PrivateKey.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@statements.2/@variable"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
            </value>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="le">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:StringReference" value="Error using keystore"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@catcheBlocks.0/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@catcheBlocks.0/@parameter"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@catcheBlocks.0/@statements.0/@variable"/>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/security/KeyStoreException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <catcheBlocks>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="le">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:StringReference" value="Error using keystore"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@catcheBlocks.1/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@catcheBlocks.1/@parameter"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@catcheBlocks.1/@statements.0/@variable"/>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/security/NoSuchAlgorithmException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <catcheBlocks>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="fle">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/FailedLoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/FailedLoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:StringReference" value="Unable to recover key from keystore"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@catcheBlocks.2/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@catcheBlocks.2/@parameter"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@statements.3/@catcheBlocks.2/@statements.0/@variable"/>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/security/UnrecoverableKeyException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="principal="/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                <children xsi:type="references:StringReference" value="&#xA; certificate="/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/x500/X500PrivateCredential.class.xmi#//@classifiers.0/@members.5"/>
                  </next>
                </children>
                <children xsi:type="references:StringReference" value="&#xA; alias ="/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/x500/X500PrivateCredential.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="commit">
      <typeReference xsi:type="types:Boolean"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Abstract method to commit the authentication process (phase 2).&#xA;     *&#xA;     * &lt;p> This method is called if the LoginContext's&#xA;     * overall authentication succeeded&#xA;     * (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules&#xA;     * succeeded).&#xA;     *&#xA;     * &lt;p> If this LoginModule's own authentication attempt&#xA;     * succeeded (checked by retrieving the private state saved by the&#xA;     * &lt;code>login&lt;/code> method), then this method associates a&#xA;     * &lt;code>X500Principal&lt;/code> for the subject distinguished name of the &#xA;     * first certificate in the alias's credentials in the subject's&#xA;     * principals,the alias's certificate path in the subject's public &#xA;     * credentials, and a&lt;code>X500PrivateCredential&lt;/code> whose certificate&#xA;     * is the first  certificate in the alias's certificate path and whose&#xA;     * private key is the alias's private key in the subject's private&#xA;     * credentials.  If this LoginModule's own&#xA;     * authentication attempted failed, then this method removes&#xA;     * any state that was originally saved.&#xA;     *&#xA;     * &lt;p>&#xA;     *&#xA;     * @exception LoginException if the commit fails&#xA;     *&#xA;     * @return true if this LoginModule's own login and commit&#xA;     *&#x9;&#x9;attempts succeeded, or false otherwise.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="The login module is not initialized"/>
            </throwable>
          </statements>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.50"/>
          </statements>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Authentication failed"/>
            </throwable>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
              </statements>
            </statement>
            <condition xsi:type="references:MethodCall" target="//@classifiers.0/@members.47"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.50"/>
              </statements>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:StringReference" value="Unable to retrieve certificates"/>
                </throwable>
              </statements>
            </elseStatement>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="commitInternal">
      <typeReference xsi:type="types:Boolean"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <comments>/* If the subject is not readonly add to the principal and credentials&#xA;&#x9; * set; otherwise just return true&#xA;&#x9; */</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Subject is set readonly"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/Subject.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Set.class.xmi#//@classifiers.0/@members.6"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/Subject.class.xmi#//@classifiers.0/@members.18"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Set.class.xmi#//@classifiers.0/@members.6"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/Subject.class.xmi#//@classifiers.0/@members.20"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Set.class.xmi#//@classifiers.0/@members.6"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/Subject.class.xmi#//@classifiers.0/@members.21"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="abort">
      <typeReference xsi:type="types:Boolean"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;p> This method is called if the LoginContext's&#xA;     * overall authentication failed.&#xA;     * (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules&#xA;     * did not succeed).&#xA;     *&#xA;     * &lt;p> If this LoginModule's own authentication attempt&#xA;     * succeeded (checked by retrieving the private state saved by the&#xA;     * &lt;code>login&lt;/code> and &lt;code>commit&lt;/code> methods),&#xA;     * then this method cleans up any state that was originally saved.&#xA;     *&#xA;     * &lt;p> If the loaded KeyStore's provider extends&#xA;     * &lt;code>java.security.AuthProvider&lt;/code>,&#xA;     * then the provider's &lt;code>logout&lt;/code> method is invoked.&#xA;     *&#xA;     * &lt;p>&#xA;     *&#xA;     * @exception LoginException if the abort fails.&#xA;     *&#xA;     * @return false if this LoginModule's own login and/or commit attempts&#xA;     *&#x9;&#x9;failed, and true otherwise.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.50"/>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.50"/>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="logout">
      <typeReference xsi:type="types:Boolean"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Logout a user.&#xA;     *&#xA;     * &lt;p> This method removes the Principals, public credentials and the&#xA;     * private credentials that were added by the &lt;code>commit&lt;/code> method.&#xA;     *&#xA;     * &lt;p> If the loaded KeyStore's provider extends&#xA;     * &lt;code>java.security.AuthProvider&lt;/code>,&#xA;     * then the provider's &lt;code>logout&lt;/code> method is invoked.&#xA;     *&#xA;     * &lt;p>&#xA;     *&#xA;     * @exception LoginException if the logout fails.&#xA;     *&#xA;     * @return true in all cases since this &lt;code>LoginModule&lt;/code>&#xA;     *&#x9;&#x9;should not be ignored.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="Entering logout "/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
          </expression>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="The login module is not initialized"/>
            </throwable>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Return">
            <comments>// impossible for LoginModule to be in AUTHENTICATED </comments>
            <comments>// state</comments>
            <comments>// assert status != AUTHENTICATED;</comments>
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.50"/>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="logoutInternal">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
              <arguments xsi:type="references:StringReference" value="Entering logoutInternal"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="logoutException">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// assumption is that KeyStore.load did a login -</comments>
              <comments>// perform explicit logout if possible</comments>
              <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="provider">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../java/security/Provider.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../java/security/KeyStore.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="ap">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../java/security/AuthProvider.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../java/security/AuthProvider.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.2/@variable"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.3/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../java/security/AuthProvider.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
                    <arguments xsi:type="references:StringReference" value="logged out of KeyStore AuthProvider"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.1/@variable">
                    <comments>// save but continue below</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.3/@statement/@statements.1/@catcheBlocks.0/@parameter"/>
                </expression>
              </statements>
              <parameter name="le">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../java/security/AuthProvider.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.2/@variable"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26">
                <comments>// attempt to destroy the private credential</comments>
                <comments>// even if the Subject is read-only</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="it">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// destroy the private credential</comments>
                  <target xsi:type="classifiers:Interface" href="../../../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Set.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/Subject.class.xmi#//@classifiers.0/@members.21"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="obj">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.4/@statement/@statements.3/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:NullLiteral"/>
                    </expression>
                  </statements>
                  <statements xsi:type="statements:TryBlock">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="expressions:NestedExpression">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../javax/security/auth/Destroyable.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                        <expression xsi:type="expressions:CastExpression">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Interface" href="../../../../../javax/security/auth/Destroyable.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.4/@statement/@statements.4/@statement/@statements.0/@variable"/>
                        </expression>
                      </expression>
                    </statements>
                    <statements xsi:type="statements:Condition">
                      <statement xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.51">
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:StringReference" value="Destroyed private credential, "/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.4/@statement/@statements.4/@statement/@statements.0/@variable">
                              <next xsi:type="references:MethodCall">
                                <next xsi:type="references:MethodCall">
                                  <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Class.class.xmi#//@classifiers.0/@members.44"/>
                                </next>
                                <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.2"/>
                              </next>
                            </children>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </expression>
                      </statement>
                      <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
                    </statements>
                    <statements xsi:type="statements:Break"/>
                    <catcheBlocks>
                      <statements xsi:type="statements:LocalVariableStatement">
                        <variable name="le">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                          <initialValue xsi:type="instantiations:NewConstructorCall">
                            <typeReference xsi:type="types:NamespaceClassifierReference">
                              <classifierReferences>
                                <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                              </classifierReferences>
                            </typeReference>
                            <arguments xsi:type="expressions:AdditiveExpression">
                              <children xsi:type="references:StringReference" value="Unable to destroy private credential, "/>
                              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.4/@statement/@statements.4/@statement/@statements.0/@variable">
                                <next xsi:type="references:MethodCall">
                                  <next xsi:type="references:MethodCall">
                                    <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Class.class.xmi#//@classifiers.0/@members.44"/>
                                  </next>
                                  <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.2"/>
                                </next>
                              </children>
                              <additiveOperators xsi:type="operators:Addition"/>
                            </arguments>
                          </initialValue>
                        </variable>
                      </statements>
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.4/@statement/@statements.4/@statement/@statements.1/@statement/@statements.1/@catcheBlocks.0/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Throwable.class.xmi#//@classifiers.0/@members.12"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.4/@statement/@statements.4/@statement/@statements.1/@statement/@statements.1/@catcheBlocks.0/@parameter"/>
                          </next>
                        </expression>
                      </statements>
                      <statements xsi:type="statements:Throw">
                        <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.4/@statement/@statements.4/@statement/@statements.1/@statement/@statements.1/@catcheBlocks.0/@statements.0/@variable"/>
                      </statements>
                      <parameter name="dfe">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/DestroyFailedException.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                      </parameter>
                    </catcheBlocks>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.4/@statement/@statements.4/@statement/@statements.0/@variable"/>
                  </next>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.4/@statement/@statements.3/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:Throw">
            <comments>// throw an exception because we can not remove</comments>
            <comments>// the principal and public credential from this</comments>
            <comments>// read-only Subject</comments>
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../javax/security/auth/login/LoginException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value="Unable to remove Principal ("/>
                <children xsi:type="references:StringReference" value="X500Principal "/>
                <children xsi:type="references:StringReference" value=") and public credential (certificatepath) "/>
                <children xsi:type="references:StringReference" value="from read-only Subject"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/Subject.class.xmi#//@classifiers.0/@members.11"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Set.class.xmi#//@classifiers.0/@members.7"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/Subject.class.xmi#//@classifiers.0/@members.18"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Set.class.xmi#//@classifiers.0/@members.7"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/Subject.class.xmi#//@classifiers.0/@members.20"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../java/util/Set.class.xmi#//@classifiers.0/@members.7"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../javax/security/auth/Subject.class.xmi#//@classifiers.0/@members.21"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:NullLiteral"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// throw pending logout exception if there is one</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.1/@variable"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.50/@statements.1/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="debugPrint">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="message">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <comments>// we should switch to logging API</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.34"/>
                </next>
                <target xsi:type="members:Field" href="../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.2"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../java/io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Debug KeyStoreLoginModule: "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@parameters.0"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="members:Field" href="../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.2"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Provides a JAAS login module that prompts for a key store alias and&#xA; * populates the subject with the alias's principal and credentials. Stores&#xA; * an &lt;code>X500Principal&lt;/code> for the subject distinguished name of the &#xA; * first certificate in the alias's credentials in the subject's principals,&#xA; * the alias's certificate path in the subject's public credentials, and a&#xA; * &lt;code>X500PrivateCredential&lt;/code> whose certificate is the first&#xA; * certificate in the alias's certificate path and whose private key is the&#xA; * alias's private key in the subject's private credentials. &lt;p>&#xA; *&#xA; * Recognizes the following options in the configuration file:&#xA; * &lt;dl>&#xA; *&#xA; * &lt;dt> &lt;code>keyStoreURL&lt;/code> &lt;/dt>&#xA; * &lt;dd> A URL that specifies the location of the key store.  Defaults to&#xA; *&#x9;a URL pointing to the .keystore file in the directory specified by the&#xA; *&#x9;&lt;code>user.home&lt;/code> system property.  The input stream from this&#xA; *&#x9;URL is passed to the &lt;code>KeyStore.load&lt;/code> method.&#xA; *&#x9;&quot;NONE&quot; may be specified if a &lt;code>null&lt;/code> stream must be&#xA; *&#x9;passed to the &lt;code>KeyStore.load&lt;/code> method.&#xA; *&#x9;&quot;NONE&quot; should be specified if the KeyStore resides&#xA; *&#x9;on a hardware token device, for example.&lt;/dd>&#xA; *&#xA; * &lt;dt> &lt;code>keyStoreType&lt;/code> &lt;/dt>&#xA; * &lt;dd> The key store type.  If not specified, defaults to the result of&#xA; *      calling &lt;code>KeyStore.getDefaultType()&lt;/code>.&#xA; *&#x9;If the type is &quot;PKCS11&quot;, then keyStoreURL must be &quot;NONE&quot;&#xA; *&#x9;and privateKeyPasswordURL must not be specified.&lt;/dd>&#xA; *&#xA; * &lt;dt> &lt;code>keyStoreProvider&lt;/code> &lt;/dt>&#xA; * &lt;dd> The key store provider.  If not specified, uses the standard search&#xA; *      order to find the provider. &lt;/dd>&#xA; *&#xA; * &lt;dt> &lt;code>keyStoreAlias&lt;/code> &lt;/dt>&#xA; * &lt;dd> The alias in the key store to login as.  Required when no callback&#xA; *&#x9;handler is provided.  No default value. &lt;/dd>&#xA; *&#xA; * &lt;dt> &lt;code>keyStorePasswordURL&lt;/code> &lt;/dt>&#xA; * &lt;dd> A URL that specifies the location of the key store password.  Required&#xA; *&#x9;when no callback handler is provided and&#xA; *&#x9;&lt;code>protected&lt;/code> is false.&#xA; *&#x9;No default value. &lt;/dd>&#xA; *&#xA; * &lt;dt> &lt;code>privateKeyPasswordURL&lt;/code> &lt;/dt>&#xA; * &lt;dd> A URL that specifies the location of the specific private key password&#xA; *&#x9;needed to access the private key for this alias.  &#xA; *      The keystore password&#xA; *&#x9;is used if this value is needed and not specified. &lt;/dd>&#xA; *&#xA; * &lt;dt> &lt;code>protected&lt;/code> &lt;/dt>&#xA; * &lt;dd> This value should be set to &quot;true&quot; if the KeyStore&#xA; *&#x9;has a separate, protected authentication path&#xA; *&#x9;(for example, a dedicated PIN-pad attached to a smart card).&#xA; *&#x9;Defaults to &quot;false&quot;. If &quot;true&quot; keyStorePasswordURL and&#xA; *&#x9;privateKeyPasswordURL must not be specified.&lt;/dd>&#xA; *&#xA; * &lt;/dl>&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../../../javax/security/auth/spi/LoginModule.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
