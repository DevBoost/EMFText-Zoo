<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../java.ecore#/4 http://www.emftext.org/java/literals ../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../../java.ecore#/16" name="JPEGDecodeParam.java">
  <comments>/*&#xA; * @(#)JPEGDecodeParam.java&#x9;1.8 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <comments>/**********************************************************************&#xA; **********************************************************************&#xA; **********************************************************************&#xA; *** COPYRIGHT (c) 1997-1998 Eastman Kodak Company.                 ***&#xA; *** As  an unpublished  work pursuant to Title 17 of the United    ***&#xA; *** States Code.  All rights reserved.                             ***&#xA; **********************************************************************&#xA; **********************************************************************&#xA; **********************************************************************/</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>image</namespaces>
  <namespaces>codec</namespaces>
  <namespaces>jpeg</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="JPEGDecodeParam">
    <members xsi:type="members:Field" name="COLOR_ID_UNKNOWN">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Unknown or Undefined Color ID */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="COLOR_ID_GRAY">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Monochrome */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="COLOR_ID_RGB">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Red, Green, and Blue */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="COLOR_ID_YCbCr">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** YCbCr */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="COLOR_ID_CMYK">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** CMYK */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="COLOR_ID_PYCC">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** PhotoYCC */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="COLOR_ID_RGBA">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** RGB-Alpha */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="COLOR_ID_YCbCrA">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** YCbCr-Alpha */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="COLOR_ID_RGBA_INVERTED">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** RGB-Alpha with R, G, and B inverted.*/</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="COLOR_ID_YCbCrA_INVERTED">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** YCbCr-Alpha with Y, Cb, and Cr inverted.*/</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="COLOR_ID_PYCCA">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** PhotoYCC-Alpha */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="COLOR_ID_YCCK">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** YCbCrK */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="NUM_COLOR_ID">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="12"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/** Number of color ids defined. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="NUM_TABLES">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/** Number of allowed Huffman and Quantization Tables */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="DENSITY_UNIT_ASPECT_RATIO">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** The X and Y units simply indicate the aspect ratio of the pixels. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="DENSITY_UNIT_DOTS_INCH">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Pixel density is in pixels per inch. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="DENSITY_UNIT_DOTS_CM">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Pixel density is in pixels per centemeter. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="NUM_DENSITY_UNIT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/** The max known value for DENSITY_UNIT */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APP0_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="224"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APP0 marker - JFIF info */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APP1_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="225"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APP1 marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APP2_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="226"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APP2 marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APP3_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="227"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APP3 marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APP4_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="228"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APP4 marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APP5_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="229"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APP5 marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APP6_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="230"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APP6 marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APP7_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="231"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APP7 marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APP8_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="232"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APP8 marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APP9_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="233"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APP9 marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APPA_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="234"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APPA marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APPB_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="235"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APPB marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APPC_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="236"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APPC marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APPD_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="237"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APPD marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APPE_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="238"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APPE marker - Adobe info */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="APPF_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="239"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** APPF marker */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="COMMENT_MARKER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="254"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Adobe marker indicates presence/need for Adobe marker. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="clone">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getWidth">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Get the image width&#xA;&#x9; * @return int the width of the image data in pixels.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getHeight">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Get the image height&#xA;&#x9; * @return The height of the image data in pixels.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getHorizontalSubsampling">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="component">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Return the Horizontal subsampling factor for requested&#xA;&#x9; * Component.  The Subsample factor is the number of input pixels&#xA;&#x9; * that contribute to each output pixel.  This is distinct from&#xA;&#x9; * the way the JPEG to each output pixel.  This is distinct from&#xA;&#x9; * the way the JPEG standard defines this quantity, because&#xA;&#x9; * fractional subsampling factors are not allowed, and it was felt&#xA;&#x9; * @param component The component of the encoded image to return&#xA;&#x9; * the subsampling factor for.&#xA;&#x9; * @return The subsample factor.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getVerticalSubsampling">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="component">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Return the Vertical subsampling factor for requested&#xA;&#x9; * Component.  The Subsample factor is the number of input pixels&#xA;&#x9; * that contribute to each output pixel.  This is distinct from&#xA;&#x9; * the way the JPEG to each output pixel.  This is distinct from&#xA;&#x9; * the way the JPEG standard defines this quantity, because&#xA;&#x9; * fractional subsampling factors are not allowed, and it was felt&#xA;&#x9; * @param component The component of the encoded image to return&#xA;&#x9; * the subsampling factor for.&#xA;&#x9; * @return The subsample factor.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getQTable">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JPEGQTable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tableNum">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Returns the coefficient quantization tables or NULL if not&#xA;&#x9; * defined. tableNum must range in value from 0 - 3.&#xA;&#x9; * @param tableNum the index of the table to be returned.&#xA;&#x9; * @return Quantization table stored at index tableNum.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getQTableForComponent">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JPEGQTable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="component">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns the Quantization table for the requested component.&#xA;&#x9; * @param component the image component of interest.&#xA;&#x9; * @return Quantization table associated with component&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getDCHuffmanTable">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JPEGHuffmanTable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tableNum">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Returns the DC Huffman coding table requested or null if&#xA;&#x9; * not defined&#xA;&#x9; * @param tableNum the index of the table to be returned.&#xA;&#x9; * @return Huffman table stored at index tableNum.  &#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getDCHuffmanTableForComponent">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JPEGHuffmanTable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="component">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns the DC Huffman coding table for the requested component.&#xA;&#x9; * @param component the image component of interest.&#xA;&#x9; * @return Huffman table associated with component&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getACHuffmanTable">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JPEGHuffmanTable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="tableNum">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Returns the AC Huffman coding table requested or null if&#xA;&#x9; * not defined&#xA;&#x9; * @param tableNum the index of the table to be returned.&#xA;&#x9; * @return Huffman table stored at index tableNum.  &#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getACHuffmanTableForComponent">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="JPEGHuffmanTable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="component">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#x9; &#xA;&#x9; * Returns the AC Huffman coding table for the requested component.&#xA;&#x9; * @param component the image component of interest.&#xA;&#x9; * @return Huffman table associated with component&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getDCHuffmanComponentMapping">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="component">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Get the number of the DC Huffman table that will be used for&#xA;&#x9; * a particular component.&#xA;&#x9; * @param component The Component of interest.&#xA;&#x9; * @return The table number of the DC Huffman table for component.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getACHuffmanComponentMapping">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="component">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Get the number of the AC Huffman table that will be used for&#xA;&#x9; * a particular component.&#xA;&#x9; * @param component The Component of interest.&#xA;&#x9; * @return The table number of the AC Huffman table for component.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getQTableComponentMapping">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="component">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Get the number of the quantization table that will be used for&#xA;&#x9; * a particular component.&#xA;&#x9; * @param component The Component of interest.&#xA;&#x9; * @return The table number of the Quantization table for component.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isImageInfoValid">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns true if the image information in the ParamBlock is&#xA;&#x9; * currently valid.  This indicates if image data was read from&#xA;&#x9; * the stream for decoding and weather image data should be&#xA;&#x9; * written when encoding.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isTableInfoValid">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Returns true if the tables in the ParamBlock are currently&#xA;&#x9; * valid.  This indicates that tables were read from the stream&#xA;&#x9; * for decoding. When encoding this indicates wether tables should&#xA;&#x9; * be written to the stream.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getMarker">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="marker">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Returns true if at least one instance of the marker is present&#xA;&#x9; * in the Parameter object.  For encoding returns true if there&#xA;&#x9; * is at least one instance of the marker to be written.&#xA;&#x9; * @param marker The marker of interest.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getMarkerData">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="marker">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns a 'byte[][]' associated with the requested marker in&#xA;&#x9; * the parameter object.  Each entry in the 'byte[][]' is the data&#xA;&#x9; * associated with one instance of the marker (each marker can&#xA;&#x9; * theoretically appear any number of times in a stream).&#xA;&#x9; * @param marker The marker of interest.&#xA;&#x9; * @return The 'byte[][]' for this marker or null if none&#xA;&#x9; *         available.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getEncodedColorID">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Returns the JPEG Encoded color id. This is generally&#xA;&#x9; * speaking only used if you are decoding into Rasters.  Note&#xA;&#x9; * that when decoding into a Raster no color conversion is&#xA;&#x9; * performed.&#xA;&#x9; * @return The value of the JPEG encoded data's color id.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getNumComponents">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;&#x9; * Returns the number of components for the current encoding&#xA;&#x9; * COLOR_ID.&#xA;&#x9; * @return the number of Components&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getRestartInterval">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Get the MCUs per restart marker.&#xA;&#x9; * @return The number of MCUs between restart markers.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getDensityUnit">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Get the code for pixel size units This value is copied from the&#xA;&#x9; * APP0 marker. It isn't used by the JPEG codec.  If the APP0&#xA;&#x9; * marker wasn't present then you can not rely on this value.&#xA;&#x9; * @return Value indicating the density unit one of the&#xA;&#x9; * DENSITY_UNIT_* constants.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getXDensity">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Get the horizontal pixel density This value is copied from the&#xA;&#x9; * APP0 marker. It isn't used by the JPEG code.  If the APP0&#xA;&#x9; * marker wasn't present then you can not rely on this value.&#xA;&#x9; * @return The horizontal pixel density, in units described by&#xA;&#x9; * @see #getDensityUnit()&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getYDensity">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Get the vertical pixel density This value is copied into the&#xA;&#x9; * APP0 marker. It isn't used by the JPEG code. If the APP0 marker&#xA;&#x9; * wasn't present then you can not rely on this value.&#xA;&#x9; * @return The verticle pixel density, in units described by&#xA;&#x9; * @see #getDensityUnit()&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/** &#xA;&#xA; * JPEGDecodeParam encapsulates tables and options necessary to&#xA; * control decoding JPEG datastreams. Parameters are either set explicitly&#xA; * by the application for encoding, or read from the JPEG header for&#xA; * decoding.  In the case of decoding abbreviated data streams the&#xA; * application may need to set some/all of the values it's self.  &lt;p>&#xA;&#xA; * When working with BufferedImages (@see&#xA; * JPEGImageDecoder.decodeBufferedImage), the codec will attempt to&#xA; * generate an appropriate ColorModel for the JPEG COLOR_ID. This is&#xA; * not always possible (example mappings are listed below) .  In cases&#xA; * where unsupported conversions are required, or unknown encoded&#xA; * COLOR_ID's are in use, the user must request the data as a Raster&#xA; * and perform the transformations themselves.  When decoding into a&#xA; * raster (@see JPEGImageDecoder.decodeRaster) no ColorSpace&#xA; * adjustments are made.&#xA; &#xA; * Note: The color ids described herein are simply enumerated values&#xA; * that influence data processing by the JPEG codec.  JPEG compression&#xA; * is by definition color blind.  These values are used as hints when&#xA; * decompressing JPEG data.  Of particular interest is the default&#xA; * conversion from YCbCr to sRGB when decoding buffered Images.&lt;P>&#xA;&#xA; * Note: because JPEG is mostly color-blind color fidelity can not be&#xA; * garunteed.  This will hopefully be rectified in the near future by&#xA; * the wide spread inclusion of ICC-profiles in the JPEG data stream&#xA; * (as a special marker).&#xA;&#xA; * The following is an example of the conversions that take place.&#xA; * This is only a guide to the types of conversions that are allowed.&#xA; * This list is likely to change in the future so it is&#xA; * &lt;B>strongly&lt;/B> recommended that you check for thrown&#xA; * ImageFormatExceptions and check the actual ColorModel associated&#xA; * with the BufferedImage returned rather than make assumtions.&#xA; * &lt;pre>&#xA;    DECODING:&#xA;    &#xA;    JPEG (Encoded) Color ID         BufferedImage ColorSpace&#xA;    =======================         ========================&#xA;    COLOR_ID_UNKNOWN                ** Invalid **&#xA;    COLOR_ID_GRAY                   CS_GRAY&#xA;    COLOR_ID_RGB                    CS_sRGB&#xA;    COLOR_ID_YCbCr                  CS_sRGB&#xA;    COLOR_ID_CMYK                   ** Invalid **&#xA;    COLOR_ID_PYCC                   CS_PYCC&#xA;    COLOR_ID_RGBA                   CS_sRGB (w/ alpha)&#xA;    COLOR_ID_YCbCrA                 CS_sRGB (w/ alpha)&#xA;    COLOR_ID_RGBA_INVERTED          ** Invalid **&#xA;    COLOR_ID_YCbCrA_INVERTED        ** Invalid **&#xA;    COLOR_ID_PYCCA                  CS_PYCC (w/ alpha)&#xA;    COLOR_ID_YCCK                   ** Invalid **&#xA;&#x9;&lt;/pre>&#xA;&#xA; * If the user needs better control over conversion, the user must&#xA; * request the data as a Raster and handle the conversion of the image&#xA; * data themselves.&lt;p>&#xA;&#xA; * When decoding JFIF files the encoded COLOR_ID will always be one&#xA; * of: COLOR_ID_UNKNOWN, COLOR_ID_GRAY, COLOR_ID_RGB, COLOR_ID_YCbCr,&#xA; * COLOR_ID_CMYK, or COLOR_ID_YCCK&#xA; * &lt;p>&#xA; * Note that the classes in the com.sun.image.codec.jpeg package are not&#xA; * part of the core Java APIs.  They are a part of Sun's JDK and JRE&#xA; * distributions.  Although other licensees may choose to distribute these&#xA; * classes, developers cannot depend on their availability in non-Sun&#xA; * implementations.  We expect that equivalent functionality will eventually&#xA; * be available in a core API or standard extension.&#xA; * &lt;p>&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../../../java/lang/Cloneable.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
