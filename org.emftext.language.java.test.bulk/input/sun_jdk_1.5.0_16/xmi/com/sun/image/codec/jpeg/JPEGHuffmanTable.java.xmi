<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../../java.ecore#/17" name="JPEGHuffmanTable.java">
  <comments>/*&#xA; * @(#)JPEGHuffmanTable.java&#x9;1.10 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <comments>/**********************************************************************&#xA; **********************************************************************&#xA; **********************************************************************&#xA; *** COPYRIGHT (c) 1997-1998 Eastman Kodak Company.                 ***&#xA; *** As  an unpublished  work pursuant to Title 17 of the United    ***&#xA; *** States Code.  All rights reserved.                             ***&#xA; **********************************************************************&#xA; **********************************************************************&#xA; **********************************************************************/</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>image</namespaces>
  <namespaces>codec</namespaces>
  <namespaces>jpeg</namespaces>
  <classifiers xsi:type="classifiers:Class" name="JPEGHuffmanTable">
    <members xsi:type="members:Field" name="HUFF_MAX_LEN">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="17"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** &#xA;&#x9; * The maximum number of symbol lengths&#xA;&#x9; * (max symbol length in bits = 16) &#xA;&#x9; */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="HUFF_MAX_SYM">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="256"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** the maximum number of symbols */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="lengths">
      <typeReference xsi:type="types:Short"/>
      <arrayDimensionsAfter/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** bits[k] = number of symbols with length k bits&#x9;*/</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="symbols">
      <typeReference xsi:type="types:Short"/>
      <arrayDimensionsAfter/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** Symbols in order of increasing length */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="StdDCLuminance">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Standard Huffman table ( JPEG standard section K.3 ) */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="statements:Block">
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lengths">
          <typeReference xsi:type="types:Short"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0">
                <comments>// 0-base</comments>
              </initialValues>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </arrayInitializer>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="symbols">
          <typeReference xsi:type="types:Short"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
            </arrayInitializer>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.0/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@statements.1/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.14"/>
        </expression>
      </statements>
      <modifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="StdDCChrominance">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Standard Huffman table ( JPEG standard section K.3 ) */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="statements:Block">
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lengths">
          <typeReference xsi:type="types:Short"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0">
                <comments>// 0-base</comments>
              </initialValues>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </arrayInitializer>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="symbols">
          <typeReference xsi:type="types:Short"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
            </arrayInitializer>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.1/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.14"/>
        </expression>
      </statements>
      <modifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="StdACLuminance">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Standard Huffman table ( JPEG standard section K.3 ) */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="statements:Block">
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lengths">
          <typeReference xsi:type="types:Short"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0">
                <comments>// 0-base</comments>
              </initialValues>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="125"/>
            </arrayInitializer>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="symbols">
          <typeReference xsi:type="types:Short"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="2"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="3"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="4"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="17"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="5"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="18"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="33"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="49"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="65"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="6"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="19"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="81"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="97"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="7"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="34"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="113"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="20"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="50"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="129"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="145"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="161"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="8"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="35"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="66"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="177"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="193"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="21"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="82"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="209"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="240"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="36"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="51"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="98"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="114"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="130"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="9"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="10"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="22"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="23"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="24"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="25"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="26"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="37"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="38"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="39"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="40"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="41"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="42"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="52"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="53"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="54"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="55"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="56"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="57"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="58"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="67"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="68"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="69"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="70"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="71"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="72"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="73"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="74"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="83"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="84"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="85"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="86"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="87"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="88"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="89"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="90"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="99"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="100"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="101"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="102"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="103"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="104"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="105"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="106"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="115"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="116"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="117"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="118"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="119"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="120"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="121"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="122"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="131"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="132"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="133"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="134"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="135"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="136"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="137"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="138"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="146"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="147"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="148"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="149"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="150"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="151"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="152"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="153"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="154"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="162"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="163"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="164"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="165"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="166"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="167"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="168"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="169"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="170"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="178"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="179"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="180"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="181"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="182"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="183"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="184"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="185"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="186"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="194"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="195"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="196"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="197"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="198"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="199"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="200"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="201"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="202"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="210"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="211"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="212"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="213"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="214"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="215"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="216"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="217"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="218"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="225"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="226"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="227"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="228"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="229"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="230"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="231"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="232"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="233"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="234"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="241"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="242"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="243"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="244"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="245"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="246"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="247"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="248"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="249"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="250"/>
            </arrayInitializer>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.1/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.14"/>
        </expression>
      </statements>
      <modifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="StdACChrominance">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Standard Huffman table ( JPEG standard section K.3 ) */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="statements:Block">
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lengths">
          <typeReference xsi:type="types:Short"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0">
                <comments>// 0-base</comments>
              </initialValues>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              <initialValues xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="119"/>
            </arrayInitializer>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="symbols">
          <typeReference xsi:type="types:Short"/>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="2"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="3"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="17"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="4"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="5"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="33"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="49"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="6"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="18"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="65"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="81"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="7"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="97"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="113"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="19"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="34"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="50"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="129"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="8"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="20"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="66"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="145"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="161"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="177"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="193"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="9"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="35"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="51"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="82"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="240"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="21"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="98"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="114"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="209"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="10"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="22"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="36"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="52"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="225"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="37"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="241"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="23"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="24"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="25"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="26"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="38"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="39"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="40"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="41"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="42"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="53"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="54"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="55"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="56"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="57"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="58"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="67"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="68"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="69"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="70"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="71"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="72"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="73"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="74"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="83"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="84"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="85"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="86"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="87"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="88"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="89"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="90"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="99"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="100"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="101"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="102"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="103"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="104"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="105"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="106"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="115"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="116"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="117"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="118"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="119"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="120"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="121"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="122"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="130"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="131"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="132"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="133"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="134"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="135"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="136"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="137"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="138"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="146"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="147"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="148"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="149"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="150"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="151"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="152"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="153"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="154"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="162"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="163"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="164"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="165"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="166"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="167"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="168"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="169"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="170"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="178"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="179"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="180"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="181"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="182"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="183"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="184"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="185"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="186"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="194"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="195"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="196"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="197"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="198"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="199"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="200"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="201"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="202"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="210"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="211"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="212"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="213"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="214"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="215"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="216"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="217"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="218"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="226"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="227"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="228"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="229"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="230"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="231"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="232"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="233"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="234"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="242"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="243"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="244"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="245"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="246"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="247"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="248"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="249"/>
              <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="250"/>
            </arrayInitializer>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.0/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@variable"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.14"/>
        </expression>
      </statements>
      <modifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Constructor" name="JPEGHuffmanTable">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;&#x9; * Private constructor used to construct the Standard Huffman tables&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="JPEGHuffmanTable">
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:StringReference" value="lengths array is too long"/>
          </throwable>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Condition">
          <statement xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Values in lengths array must be non-negative."/>
            </throwable>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.1/@init"/>
              </arraySelectors>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.1/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.1/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:StringReference" value="symbols array is too long"/>
          </throwable>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Condition">
          <statement xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="Values in symbols array must be non-negative."/>
            </throwable>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1">
              <arraySelectors>
                <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.3/@init"/>
              </arraySelectors>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.3/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.3/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Short"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
              <next xsi:type="references:IdentifierReference"/>
            </sizes>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Short"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1">
              <next xsi:type="references:IdentifierReference"/>
            </sizes>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
              <next xsi:type="references:IdentifierReference"/>
            </arguments>
          </next>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1">
              <next xsi:type="references:IdentifierReference"/>
            </arguments>
          </next>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.14"/>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="lengths">
        <typeReference xsi:type="types:Short"/>
        <arrayDimensionsAfter/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="symbols">
        <typeReference xsi:type="types:Short"/>
        <arrayDimensionsAfter/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * Creates a Huffman Table and initializes it.&#xA;     * @param lengths lengths[k] = # of symbols with codes of length k&#xA;     * bits; lengths[0] is ignored&#xA;     * @param symbols symbols in order of increasing code length&#xA;     * @exception IllegalArgumentException if the length of &#xA;     * &lt;code>lengths&lt;/code> is greater than 17&#xA;     * @exception IllegalArgumentException if the length of&#xA;     * &lt;code>symbols&lt;/code> is greater than 256&#xA;     * @exception IllegalArgumentException if any of the values in &#xA;     * &lt;code>lengths&lt;/code> or &lt;code>symbols&lt;/code> is less than zero&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="checkTable">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;&#x9; * This checks that the table they gave us isn't 'illegal' It&#xA;&#x9; * checks that the symbol length counts are possible, and that&#xA;&#x9; * they gave us at least enough symbols for the symbol length&#xA;&#x9; * counts. Eventually this might check that there aren't duplicate&#xA;&#x9; * symbols.&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="numVals">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sum">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.2/@init"/>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentMinus"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.2/@init"/>
                </arraySelectors>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentMultiplication"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>//System.out.println(&quot;NumVals: &quot; + numVals);</comments>
        <comments>//System.out.println(&quot;Sum: &quot; + sum + &quot; Symbols: &quot; + symbols.length);</comments>
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:StringReference" value="Invalid Huffman Table provided, lengths are incorrect."/>
          </throwable>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.0/@variable"/>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// I'll let them go if they gave us 'extra' symbols...</comments>
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../java/lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:StringReference" value="Invalid Huffman Table provided, not enough symbols."/>
          </throwable>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.1/@variable"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getLengths">
      <typeReference xsi:type="types:Short"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Return a copy of the array containing the number of symbols&#xA;&#x9; * for each length in the Huffman table.&#xA;&#x9; * @return A short array where array[k] = # of symbols in the&#xA;&#x9; *         table of length k. array[0] is unused&#xA;&#x9; */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ret">
          <typeReference xsi:type="types:Short"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Short"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
              <next xsi:type="references:IdentifierReference"/>
            </sizes>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.0/@variable"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
              <next xsi:type="references:IdentifierReference"/>
            </arguments>
          </next>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getSymbols">
      <typeReference xsi:type="types:Short"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;&#x9; * Return an array containing the Huffman symbols arranged by&#xA;&#x9; * increasing length.  To make use of this array you must refer&#xA;&#x9; * the the lengths array.&#xA;&#x9; * @return A short array of Huffman symbols&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ret">
          <typeReference xsi:type="types:Short"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Short"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:IdentifierReference"/>
            </sizes>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../java/lang/System.class.xmi#//@classifiers.0/@members.20"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@statements.0/@variable"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3">
              <next xsi:type="references:IdentifierReference"/>
            </arguments>
          </next>
          <target xsi:type="classifiers:Class" href="../../../../../java/lang/System.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@statements.0/@variable"/>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/** A class to encapsulate a JPEG Huffman table.&#xA; * &lt;p>&#xA; * Note that the classes in the com.sun.image.codec.jpeg package are not&#xA; * part of the core Java APIs.  They are a part of Sun's JDK and JRE&#xA; * distributions.  Although other licensees may choose to distribute these&#xA; * classes, developers cannot depend on their availability in non-Sun&#xA; * implementations.  We expect that equivalent functionality will eventually&#xA; * be available in a core API or standard extension.&#xA; * &lt;p>&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
