<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../../java.ecore#/16" name="MessageBase.java">
  <comments>/*&#xA; * @(#)MessageBase.java&#x9;1.19 04/06/21&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>corba</namespaces>
  <namespaces>se</namespaces>
  <namespaces>impl</namespaces>
  <namespaces>protocol</namespaces>
  <namespaces>giopmsgheaders</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>lang</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/lang/Class.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>lang</namespaces>
    <namespaces>reflect</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/lang/reflect/Constructor.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>nio</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>CORBA</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>CORBA</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/INTERNAL.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>CORBA</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/MARSHAL.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>CORBA</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/Principal.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>CORBA</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/SystemException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>IOP</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/IOP/TaggedProfile.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>pept</namespaces>
    <namespaces>transport</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../pept/transport/ByteBufferPool.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectKey.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectId.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/IOR.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectKeyFactory.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <namespaces>iiop</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/iiop/IIOPProfile.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <namespaces>iiop</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/ior/iiop/IIOPFactories.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <namespaces>iiop</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/iiop/IIOPProfileTemplate.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <namespaces>iiop</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <namespaces>iiop</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/iiop/RequestPartitioningComponent.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>logging</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/logging/CORBALogDomains.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>orb</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>transport</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/transport/CorbaConnection.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>transport</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/transport/ReadTimeouts.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>servicecontext</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/servicecontext/ServiceContexts.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>encoding</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../encoding/ByteBufferWithInfo.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>encoding</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../encoding/CDRInputStream_1_0.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>logging</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>orbutil</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>orbutil</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>orbutil</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../orbutil/ORBClassLoader.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>protocol</namespaces>
    <classifier xsi:type="classifiers:Class" href="../AddressingDispositionException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="MessageBase">
    <members xsi:type="members:Field" name="giopHeader">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// This is only used when the giopDebug flag is</comments>
        <comments>// turned on.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="byteBuffer">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="threadPoolToUse">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="encodingVersion">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="references:IdentifierReference">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.11"/>
          </next>
          <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
        </child>
      </initialValue>
      <typeReference xsi:type="types:Byte">
        <comments>// (encodingVersion == 0x00) implies CDR encoding, </comments>
        <comments>// (encodingVersion >  0x00) implies Java serialization version.</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="wrapper">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.300"/>
          <arguments xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../spi/logging/CORBALogDomains.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../spi/logging/CORBALogDomains.class.xmi#//@classifiers.0"/>
          </arguments>
        </next>
        <target xsi:type="classifiers:Class" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:ClassMethod" name="typeToString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// Static methods</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.6">
          <arguments xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:Byte"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
          </arguments>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="typeToString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="result">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
            <children xsi:type="references:StringReference" value="/"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:StringReference" value="GIOPRequest"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.13"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:StringReference" value="GIOPReply"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.14"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:StringReference" value="GIOPCancelRequest"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.15"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:StringReference" value="GIOPLocateRequest"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.16"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:StringReference" value="GIOPLocateReply"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.17"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:StringReference" value="GIOPCloseConnection"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.18"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:StringReference" value="GIOPMessageError"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.19"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:StringReference" value="GIOPFragment"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.20"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:AssignmentPlus"/>
              <value xsi:type="references:StringReference" value="Unknown"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="readGIOPMessage">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="connection">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../spi/transport/CorbaConnection.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="msg">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.8">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0"/>
            </typeReference>
            <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.9">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.1"/>
              <arguments xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable"/>
              </arguments>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="readGIOPHeader">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="connection">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../spi/transport/CorbaConnection.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="msg">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="readTimeouts">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../spi/transport/ReadTimeouts.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../spi/orb/ORBData.class.xmi#//@classifiers.0/@members.44"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.54"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="buf">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../spi/transport/CorbaConnection.class.xmi#//@classifiers.0/@members.7"/>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.5"/>
                </arguments>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.5"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../spi/transport/ReadTimeouts.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                </arguments>
              </next>
            </value>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.635"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.3/@catcheBlocks.0/@parameter"/>
              </next>
            </throwable>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
              <comments>// Since this is executed in debug mode only the overhead of</comments>
              <comments>// using a View Buffer is not an issue. We'll also use a</comments>
              <comments>// read-only View Buffer so we don't disturb the state of</comments>
              <comments>// byteBuffer. </comments>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value=".readGIOPHeader: "/>
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.6">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
                    </next>
                  </arguments>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
              <arguments xsi:type="references:StringReference" value=".readGIOPHeader: GIOP header is: "/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="viewBuffer">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.13"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.4/@statement/@statements.2/@variable">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/Buffer.class.xmi#//@classifiers.0/@members.10"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.5"/>
                  </arguments>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/Buffer.class.xmi#//@classifiers.0/@members.8"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="bbwi">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../encoding/ByteBufferWithInfo.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../encoding/ByteBufferWithInfo.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.4/@statement/@statements.2/@variable"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.4/@statement/@statements.4/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../encoding/ByteBufferWithInfo.class.xmi#//@classifiers.0/@members.4"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.5"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../encoding/CDRInputStream_1_0.class.xmi#//@classifiers.0/@members.123"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.4/@statement/@statements.4/@variable"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../encoding/CDRInputStream_1_0.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.12"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="b1">
          <typeReference xsi:type="types:Int">
            <comments>// Sanity checks</comments>
            <comments>/*&#xA;         * check for magic corruption&#xA;         * check for version incompatibility&#xA;         * check if fragmentation is allowed based on mesg type.&#xA;            . 1.0 fragmentation disallowed; FragmentMessage is non-existent.&#xA;            . 1.1 only {Request, Reply} msgs maybe fragmented.&#xA;            . 1.2 only {Request, Reply, LocateRequest, LocateReply} msgs&#xA;              maybe fragmented.&#xA;        */</comments>
          </typeReference>
          <additionalLocalVariables name="b2"/>
          <additionalLocalVariables name="b3"/>
          <additionalLocalVariables name="b4"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.5/@variable"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:ShiftExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                  </next>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                <shiftOperators xsi:type="operators:LeftShift"/>
              </expression>
            </children>
            <children xsi:type="literals:HexIntegerLiteral" hexValue="4278190080"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.5/@variable/@additionalLocalVariables.0"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:ShiftExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  </next>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                <shiftOperators xsi:type="operators:LeftShift"/>
              </expression>
            </children>
            <children xsi:type="literals:HexIntegerLiteral" hexValue="16711680"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.5/@variable/@additionalLocalVariables.1"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:ShiftExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                  </next>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                <shiftOperators xsi:type="operators:LeftShift"/>
              </expression>
            </children>
            <children xsi:type="literals:HexIntegerLiteral" hexValue="65280"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.5/@variable/@additionalLocalVariables.2"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:AndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:ShiftExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                  </next>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <shiftOperators xsi:type="operators:LeftShift"/>
              </expression>
            </children>
            <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="magic">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:InclusiveOrExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.5/@variable"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.5/@variable/@additionalLocalVariables.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.5/@variable/@additionalLocalVariables.1"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.5/@variable/@additionalLocalVariables.2"/>
            </expression>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <comments>// If Magic is incorrect, it is an error.</comments>
            <comments>// ACTION : send MessageError and close the connection.</comments>
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.862"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.10/@variable"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.3"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="requestEncodingVersion">
          <typeReference xsi:type="types:Byte">
            <comments>// Extract the encoding version from the request GIOP Version,</comments>
            <comments>// if it contains an encoding, and set GIOP version appropriately.</comments>
            <comments>// For Java serialization, we use GIOP Version 1.2 message format.</comments>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.11"/>
            </next>
            <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.12/@variable">
                <comments>// Entering this block means the request is using Java encoding,</comments>
                <comments>// and the encoding version is &lt;= this ORB's Java encoding version.</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                <arguments xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Byte"/>
                  <child xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                <arguments xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Byte"/>
                  <child xsi:type="literals:HexIntegerLiteral" hexValue="2"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                </next>
              </children>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="13"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.12"/>
                </next>
                <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
              </children>
              <relationOperators xsi:type="operators:LessThanOrEqual"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.11"/>
                </next>
                <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
              </children>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </expression>
          </children>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../spi/orb/ORBData.class.xmi#//@classifiers.0/@members.46"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.54"/>
            </next>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="orbVersion">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../spi/orb/ORBData.class.xmi#//@classifiers.0/@members.13"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.54"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value=".readGIOPHeader: Message GIOP version: "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                  </next>
                </children>
                <children xsi:type="literals:CharacterLiteral" value="46"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                  </next>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:StringReference" value=".readGIOPHeader: ORB Max GIOP Version: "/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.14/@variable"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.12"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <comments>// For requests, sending ORB should use the version info</comments>
            <comments>// published in the IOR or may choose to use a &lt;= version</comments>
            <comments>// for requests. If the version is greater than published version,</comments>
            <comments>// it is an error.</comments>
            <comments>// For replies, the ORB should always receive a version it supports</comments>
            <comments>// or less, but never greater (except for MessageError)</comments>
            <comments>// ACTION : Send back a MessageError() with the the highest version</comments>
            <comments>// the server ORB supports, and close the connection.</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.19"/>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.14/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.16"/>
                </next>
              </children>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.14/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.16"/>
                    </next>
                  </children>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.14/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.17"/>
                    </next>
                  </children>
                  <relationOperators xsi:type="operators:GreaterThan"/>
                </expression>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.22">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
            </next>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
            </next>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
            </next>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
            </next>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:Switch">
        <comments>// create appropriate messages types</comments>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
                  <arguments xsi:type="references:StringReference" value=".readGIOPHeader: creating RequestMessage"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.12"/>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>//msg = new RequestMessage(orb.giopDebugFlag);</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                    <comments>// 1.0</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="RequestMessage_1_0.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                </expression>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                      <comments>// 1.1</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="RequestMessage_1_1.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                        <comments>// 1.2</comments>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="instantiations:NewConstructorCall">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="RequestMessage_1_2.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                    </expression>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="2"/>
                    </expression>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:Throw">
                    <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </throwable>
                  </statements>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.13"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
                  <arguments xsi:type="references:StringReference" value=".readGIOPHeader: creating LocateRequestMessage"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.12"/>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>//msg = new LocateRequestMessage(orb.giopDebugFlag);</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                    <comments>// 1.0</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="LocateRequestMessage_1_0.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                </expression>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                      <comments>// 1.1</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="LocateRequestMessage_1_1.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                        <comments>// 1.2</comments>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="instantiations:NewConstructorCall">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="LocateRequestMessage_1_2.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                    </expression>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="2"/>
                    </expression>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:Throw">
                    <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </throwable>
                  </statements>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.16"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
                  <arguments xsi:type="references:StringReference" value=".readGIOPHeader: creating CancelRequestMessage"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.12"/>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>//msg = new CancelRequestMessage(orb.giopDebugFlag);</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                    <comments>// 1.0</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="CancelRequestMessage_1_0.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                </expression>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                      <comments>// 1.1</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="CancelRequestMessage_1_1.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                        <comments>// 1.2</comments>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="instantiations:NewConstructorCall">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="CancelRequestMessage_1_2.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                    </expression>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="2"/>
                    </expression>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:Throw">
                    <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </throwable>
                  </statements>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.15"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
                  <arguments xsi:type="references:StringReference" value=".readGIOPHeader: creating ReplyMessage"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.12"/>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>//msg = new ReplyMessage(orb.giopDebugFlag);</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                    <comments>// 1.0</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="ReplyMessage_1_0.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                </expression>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                      <comments>// 1.1</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="ReplyMessage_1_1.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                        <comments>// 1.2</comments>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="instantiations:NewConstructorCall">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="ReplyMessage_1_2.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                    </expression>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="2"/>
                    </expression>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:Throw">
                    <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </throwable>
                  </statements>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.14"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
                  <arguments xsi:type="references:StringReference" value=".readGIOPHeader: creating LocateReplyMessage"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.12"/>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>//msg = new LocateReplyMessage(orb.giopDebugFlag);</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                    <comments>// 1.0</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="LocateReplyMessage_1_0.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                </expression>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                      <comments>// 1.1</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="LocateReplyMessage_1_1.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                        <comments>// 1.2</comments>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="instantiations:NewConstructorCall">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="LocateReplyMessage_1_2.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                    </expression>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="2"/>
                    </expression>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:Throw">
                    <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </throwable>
                  </statements>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.17"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.18"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
                  <arguments xsi:type="references:StringReference" value=".readGIOPHeader: creating Message for CloseConnection or MessageError"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.12"/>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// REVISIT a MessageError  may contain the highest version server</comments>
            <comments>// can support. In such a case, a new request may be made with the</comments>
            <comments>// correct version or the connection be simply closed. Note the</comments>
            <comments>// connection may have been closed by the server.</comments>
            <comments>//msg = new Message(orb.giopDebugFlag);</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                    <comments>// 1.0</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="Message_1_0.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                </expression>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                      <comments>// 1.1</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="Message_1_1.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                        <comments>// 1.2</comments>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="instantiations:NewConstructorCall">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="Message_1_1.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                    </expression>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="2"/>
                    </expression>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:Throw">
                    <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </throwable>
                  </statements>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.19"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
                  <arguments xsi:type="references:StringReference" value=".readGIOPHeader: creating FragmentMessage"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.12"/>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>//msg = new FragmentMessage(orb.giopDebugFlag);</comments>
            <statement xsi:type="statements:Block">
              <comments>// 1.0</comments>
              <comments>// not possible (error checking done already)</comments>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                    </next>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                </expression>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                      <comments>// 1.1</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="FragmentMessage_1_1.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:Equal"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                      </next>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                  </expression>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                        <comments>// 1.2</comments>
                      </child>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="instantiations:NewConstructorCall">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="FragmentMessage_1_2.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                      </value>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                    </expression>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                          <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                        </next>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="2"/>
                    </expression>
                  </children>
                </condition>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:Throw">
                    <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </throwable>
                  </statements>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.20"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value=".readGIOPHeader: UNKNOWN MESSAGE TYPE: "/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
                    </next>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </expression>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.12"/>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:Throw">
            <comments>// unknown message type ?</comments>
            <comments>// ACTION : send MessageError and close the connection</comments>
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
          </next>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>//</comments>
        <comments>// Initialize the generic GIOP header instance variables.</comments>
        <comments>//</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="msg10">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// 1.0</comments>
                  <target xsi:type="classifiers:Class" href="Message_1_0.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Message_1_0.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.19/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message_1_0.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.10/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.19/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message_1_0.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                  </next>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                  </next>
                </arguments>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.19/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message_1_0.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
                    </next>
                  </children>
                  <children xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.6"/>
                  </children>
                </expression>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                <comments>// 'request partitioning' not supported on GIOP version 1.0</comments>
                <comments>// so just use the default thread pool, 0.</comments>
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.19/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message_1_0.class.xmi#//@classifiers.0/@members.4"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.19/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message_1_0.class.xmi#//@classifiers.0/@members.5"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.25">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.19/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="Message_1_0.class.xmi#//@classifiers.0/@members.11"/>
                    </next>
                  </arguments>
                </children>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.5"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                </next>
              </children>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                </next>
              </children>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
            </expression>
          </children>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="msg11">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// 1.1 &amp; 1.2</comments>
                  <target xsi:type="classifiers:Class" href="Message_1_1.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Message_1_1.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.19/@elseStatement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message_1_1.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.10/@variable"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.19/@elseStatement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message_1_1.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                  </next>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
                  </next>
                </arguments>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.19/@elseStatement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message_1_1.class.xmi#//@classifiers.0/@members.4"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Byte"/>
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
                      </next>
                    </children>
                    <children xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.9"/>
                    </children>
                  </expression>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
                <comments>// IMPORTANT: For 'request partitioning', the thread pool to use</comments>
                <comments>//            information is stored in the leading 6 bits of byte 6.</comments>
                <comments>//</comments>
                <comments>// IMPORTANT: Request partitioning is a PROPRIETARY EXTENSION !!!</comments>
                <comments>//</comments>
                <comments>// NOTE: Bitwise operators will promote a byte to an int before </comments>
                <comments>//       performing a bitwise operation and bytes, ints, longs, etc</comments>
                <comments>//       are signed types in Java. Thus, the need for the </comments>
                <comments>//       THREAD_POOL_TO_USE_MASK operation.</comments>
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                        <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
                      </next>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                  </expression>
                </children>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.10"/>
                </children>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.19/@elseStatement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message_1_1.class.xmi#//@classifiers.0/@members.5"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.19/@elseStatement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message_1_1.class.xmi#//@classifiers.0/@members.6"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.25">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.19/@elseStatement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="Message_1_1.class.xmi#//@classifiers.0/@members.12"/>
                    </next>
                  </arguments>
                </children>
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.5"/>
                </children>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
              <comments>// Since this is executed in debug mode only the overhead of</comments>
              <comments>// using a View Buffer is not an issue. We'll also use a</comments>
              <comments>// read-only View Buffer so we don't disturb the state of</comments>
              <comments>// byteBuffer. </comments>
              <arguments xsi:type="references:StringReference" value=".readGIOPHeader: header construction complete."/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="viewBuf">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// For debugging purposes, save the 12 bytes of the header</comments>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.13"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="msgBuf">
              <typeReference xsi:type="types:Byte"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="arrays:ArrayInstantiationBySize">
                <typeReference xsi:type="types:Byte"/>
                <sizes xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.5"/>
                </sizes>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.20/@statement/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/Buffer.class.xmi#//@classifiers.0/@members.10"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.5"/>
                  </arguments>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/Buffer.class.xmi#//@classifiers.0/@members.8"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.20/@statement/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.20/@statement/@statements.2/@variable"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.20/@statement/@statements.2/@variable">
                  <next xsi:type="references:IdentifierReference"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="expressions:NestedExpression">
                <comments>// REVISIT: is giopHeader still used?</comments>
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                <expression xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences target="//@classifiers.0"/>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable"/>
                </expression>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.20/@statement/@statements.2/@variable"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.12"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.33">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.12/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="readGIOPBody">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="connection">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../spi/transport/CorbaConnection.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="msg">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="readTimeouts">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../spi/transport/ReadTimeouts.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../spi/orb/ORBData.class.xmi#//@classifiers.0/@members.44"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.54"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="buf">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.2">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="Message.class.xmi#//@classifiers.0/@members.27"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.1/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/Buffer.class.xmi#//@classifiers.0/@members.8"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.5"/>
              </next>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="msgSizeMinusHeader">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.2">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="Message.class.xmi#//@classifiers.0/@members.26"/>
              </next>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.5"/>
              </next>
            </children>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.1/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../spi/transport/CorbaConnection.class.xmi#//@classifiers.0/@members.8"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.5"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.3/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../spi/transport/ReadTimeouts.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                </arguments>
              </next>
            </value>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.635"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.4/@catcheBlocks.0/@parameter"/>
              </next>
            </throwable>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.2">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="Message.class.xmi#//@classifiers.0/@members.34"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.1/@variable"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.34">
              <arguments xsi:type="references:StringReference" value=".readGIOPBody: received message:"/>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="viewBuffer">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.13"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.6/@statement/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/Buffer.class.xmi#//@classifiers.0/@members.10"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.2">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="Message.class.xmi#//@classifiers.0/@members.26"/>
                    </next>
                  </arguments>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/Buffer.class.xmi#//@classifiers.0/@members.8"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="bbwi">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../encoding/ByteBufferWithInfo.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../encoding/ByteBufferWithInfo.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.6/@statement/@statements.1/@variable"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../encoding/CDRInputStream_1_0.class.xmi#//@classifiers.0/@members.123"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@statements.6/@statement/@statements.3/@variable"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../encoding/CDRInputStream_1_0.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0">
          <next xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.12"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.2"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createRequest">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="RequestMessage.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gv">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="encodingVersion">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="request_id">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="response_expected">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="object_key">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="operation">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="service_contexts">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/servicecontext/ServiceContexts.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="requesting_principal">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/Principal.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <comments>// 1.0</comments>
            <returnValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="RequestMessage_1_0.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.7"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.3"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.4"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.5"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.6"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.8"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <comments>// 1.1</comments>
              <returnValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="RequestMessage_1_1.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.7"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.3"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.4"/>
                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                  <typeReference xsi:type="types:Byte"/>
                  <arrayDimensionsBefore/>
                  <arrayInitializer>
                    <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                    <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                    <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                  </arrayInitializer>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.5"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.6"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.8"/>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="response_flags">
                  <typeReference xsi:type="types:Byte">
                    <comments>// 1.2</comments>
                    <comments>// Note: Currently we use response_expected flag to decide if the</comments>
                    <comments>// call is oneway or not. Ideally, it is possible to expect a</comments>
                    <comments>// response on a oneway call too, but we do not support it now.</comments>
                  </typeReference>
                  <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="3"/>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:HexIntegerLiteral" hexValue="3"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.4"/>
                <elseStatement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="expressions:AssignmentExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                      <assignmentOperator xsi:type="operators:Assignment"/>
                      <value xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="target">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <comments>/*&#xA;            // REVISIT The following is the correct way to do it. This gives&#xA;            // more flexibility.&#xA;            if ((DII::INV_NO_RESPONSE == false) &amp;&amp; response_expected) {&#xA;                response_flags = 0x03; // regular two-way&#xA;            } else if ((DII::INV_NO_RESPONSE == false) &amp;&amp; !response_expected) {&#xA;                // this condition is not possible&#xA;            } else if ((DII::INV_NO_RESPONSE == true) &amp;&amp; response_expected) {&#xA;                // oneway, but we need response for LocationForwards or&#xA;                // SystemExceptions.&#xA;                response_flags = 0x01;&#xA;            } else if ((DII::INV_NO_RESPONSE == true) &amp;&amp; !response_expected) {&#xA;                // oneway, no response required&#xA;                response_flags = 0x00;&#xA;            }&#xA;            */</comments>
                      <target xsi:type="classifiers:Class" href="TargetAddress.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="TargetAddress.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@elseStatement/@elseStatement/@statement/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="TargetAddress.class.xmi#//@classifiers.0/@members.8"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.5"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="msg">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Interface" href="RequestMessage.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="RequestMessage_1_2.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.3"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                      <typeReference xsi:type="types:Byte"/>
                      <arrayDimensionsBefore/>
                      <arrayInitializer>
                        <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                        <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                        <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                      </arrayInitializer>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@elseStatement/@elseStatement/@statement/@statements.2/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.6"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.7"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@elseStatement/@elseStatement/@statement/@statements.4/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="Message.class.xmi#//@classifiers.0/@members.35"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.2"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@elseStatement/@elseStatement/@statement/@statements.4/@variable"/>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </throwable>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createRequest">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="RequestMessage.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gv">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="encodingVersion">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="request_id">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="response_expected">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ior">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../spi/ior/IOR.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="addrDisp">
        <typeReference xsi:type="types:Short"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="operation">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="service_contexts">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/servicecontext/ServiceContexts.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="requesting_principal">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/Principal.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="requestMessage">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="RequestMessage.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="profile">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../spi/ior/iiop/IIOPProfile.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.5">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/IOR.class.xmi#//@classifiers.0/@members.8"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@variable">
                <comments>// object key will be used for target addressing</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.5">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/IOR.class.xmi#//@classifiers.0/@members.8"/>
                </next>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="objKey">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectKey.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/TaggedProfile.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="object_key">
              <typeReference xsi:type="types:Byte"/>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.2/@statement/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/ObjectKey.class.xmi#//@classifiers.0/@members.2"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.10">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.1"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.2"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.3"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.4"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.2/@statement/@statements.2/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.7"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.8"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.9"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.6"/>
          <children xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="KeyAddr.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Interface" href="KeyAddr.class.xmi#//@classifiers.0"/>
          </children>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <comments>// only object_key based target addressing is allowed for </comments>
                <comments>// GIOP 1.0 &amp; 1.1</comments>
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.2"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </expression>
              </child>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="response_flags">
              <typeReference xsi:type="types:Byte">
                <comments>// Note: Currently we use response_expected flag to decide if the</comments>
                <comments>// call is oneway or not. Ideally, it is possible to expect a</comments>
                <comments>// response on a oneway call too, but we do not support it now.</comments>
              </typeReference>
              <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="3"/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.2/@elseStatement/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:HexIntegerLiteral" hexValue="3"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.4"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.2/@elseStatement/@statements.1/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="target">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="TargetAddress.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="TargetAddress.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@variable">
                    <comments>// iop profile will be used</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.5">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/IOR.class.xmi#//@classifiers.0/@members.8"/>
                    </next>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.2/@elseStatement/@statements.3/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="TargetAddress.class.xmi#//@classifiers.0/@members.11"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/TaggedProfile.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.6"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ProfileAddr.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <target xsi:type="classifiers:Interface" href="ProfileAddr.class.xmi#//@classifiers.0"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="iorInfo">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <comments>// ior will be used</comments>
                        <target xsi:type="classifiers:Class" href="IORAddressingInfo.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="IORAddressingInfo.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.5">
                        <comments>// profile index</comments>
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/IOR.class.xmi#//@classifiers.0/@members.4"/>
                        </next>
                      </arguments>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.2/@elseStatement/@statements.3/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="TargetAddress.class.xmi#//@classifiers.0/@members.14"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.2/@elseStatement/@statements.4/@elseStatement/@statement/@statements.0/@variable"/>
                    </next>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.6"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="ReferenceAddr.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Interface" href="ReferenceAddr.class.xmi#//@classifiers.0"/>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:Throw">
                  <comments>// invalid target addressing disposition value</comments>
                  <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.898"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.4"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </next>
                  </throwable>
                </statements>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="RequestMessage_1_2.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.3"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.2/@elseStatement/@statements.1/@variable"/>
                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                  <typeReference xsi:type="types:Byte"/>
                  <arrayDimensionsBefore/>
                  <arrayInitializer>
                    <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                    <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                    <initialValues xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
                  </arrayInitializer>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.2/@elseStatement/@statements.3/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.7"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.8"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="Message.class.xmi#//@classifiers.0/@members.35"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.2"/>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="poolToUse">
              <typeReference xsi:type="types:Int">
                <comments>// add request partitioning thread pool to use info</comments>
              </typeReference>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="temp">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// default pool</comments>
                  <target xsi:type="classifiers:Interface" href="../../../spi/ior/iiop/IIOPProfileTemplate.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../spi/ior/iiop/IIOPProfileTemplate.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/TaggedProfile.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="iter">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@statement/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/TaggedProfileTemplate.class.xmi#//@classifiers.0/@members.0"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0/@members.7"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@statement/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:NestedExpression">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/iiop/RequestPartitioningComponent.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <expression xsi:type="expressions:CastExpression">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Interface" href="../../../spi/ior/iiop/RequestPartitioningComponent.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@statement/@statements.2/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                      </child>
                    </expression>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@statement/@statements.2/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.548"/>
                    <arguments xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@statement/@statements.0/@variable"/>
                    </arguments>
                    <arguments xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0/@members.70"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </arguments>
                    <arguments xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Integer.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0/@members.71"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </arguments>
                  </next>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalOrExpression">
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@statement/@statements.0/@variable"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0/@members.70"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0"/>
                </children>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@statement/@statements.0/@variable"/>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0/@members.71"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0"/>
                </children>
                <relationOperators xsi:type="operators:GreaterThan"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="RequestMessage.class.xmi#//@classifiers.0/@members.8"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.3/@statement/@statements.0/@variable"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.1">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.27"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createReply">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="ReplyMessage.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gv">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="encodingVersion">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="request_id">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="reply_status">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="service_contexts">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/servicecontext/ServiceContexts.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ior">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../spi/ior/IOR.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <comments>// 1.0</comments>
            <returnValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="ReplyMessage_1_0.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.5"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.3"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.4"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.6"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.1">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <comments>// 1.1</comments>
              <returnValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="ReplyMessage_1_1.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.5"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.3"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.4"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.6"/>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="msg">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <comments>// 1.2</comments>
                      <target xsi:type="classifiers:Interface" href="ReplyMessage.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="ReplyMessage_1_2.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.3"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.4"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.5"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.6"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="Message.class.xmi#//@classifiers.0/@members.35"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.2"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </throwable>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createLocateRequest">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="LocateRequestMessage.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gv">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="encodingVersion">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="request_id">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="object_key">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <comments>// 1.0</comments>
            <returnValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="LocateRequestMessage_1_0.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.3"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.4"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <comments>// 1.1</comments>
              <returnValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="LocateRequestMessage_1_1.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.3"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.4"/>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="target">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <comments>// 1.2</comments>
                      <target xsi:type="classifiers:Class" href="TargetAddress.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="TargetAddress.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="TargetAddress.class.xmi#//@classifiers.0/@members.8"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.4"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="msg">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Interface" href="LocateRequestMessage.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="LocateRequestMessage_1_2.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.3"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.0/@elseStatement/@elseStatement/@statement/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="Message.class.xmi#//@classifiers.0/@members.35"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.2"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.0/@elseStatement/@elseStatement/@statement/@statements.2/@variable"/>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </throwable>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createLocateReply">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="LocateReplyMessage.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gv">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="encodingVersion">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="request_id">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="locate_status">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ior">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../spi/ior/IOR.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <comments>// 1.0</comments>
            <returnValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="LocateReplyMessage_1_0.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.3"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.4"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.5"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.1">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <comments>// 1.1</comments>
              <returnValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="LocateReplyMessage_1_1.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.3"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.4"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.5"/>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="msg">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <comments>// 1.2</comments>
                      <target xsi:type="classifiers:Interface" href="LocateReplyMessage.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="LocateReplyMessage_1_2.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.3"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.4"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.5"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="Message.class.xmi#//@classifiers.0/@members.35"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.2"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@statements.0/@elseStatement/@elseStatement/@statement/@statements.0/@variable"/>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </throwable>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createCancelRequest">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="CancelRequestMessage.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gv">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="request_id">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <comments>// 1.0</comments>
            <returnValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="CancelRequestMessage_1_0.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.1"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <comments>// 1.1</comments>
              <returnValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="CancelRequestMessage_1_1.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.1"/>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <comments>// 1.2</comments>
                <returnValue xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="CancelRequestMessage_1_2.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.1"/>
                </returnValue>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </throwable>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createCloseConnection">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gv">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <comments>// 1.0</comments>
            <returnValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Message_1_0.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.3"/>
                </next>
                <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
              </arguments>
              <arguments xsi:type="literals:BooleanLiteral"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.18"/>
                </next>
                <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
              </arguments>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <comments>// 1.1</comments>
              <returnValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Message_1_1.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                  <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.8"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.18"/>
                  </next>
                  <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <comments>// 1.2</comments>
                <returnValue xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="Message_1_1.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                    <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.8"/>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.18"/>
                    </next>
                    <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
                  </arguments>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </returnValue>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </throwable>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createMessageError">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gv">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <comments>// 1.0</comments>
            <returnValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Message_1_0.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.3"/>
                </next>
                <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
              </arguments>
              <arguments xsi:type="literals:BooleanLiteral"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.19"/>
                </next>
                <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
              </arguments>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <comments>// 1.1</comments>
              <returnValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Message_1_1.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                  <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.8"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.19"/>
                  </next>
                  <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
              </arguments>
            </next>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <comments>// 1.2</comments>
                <returnValue xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="Message_1_1.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.3"/>
                    </next>
                    <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.2"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.8"/>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.19"/>
                    </next>
                    <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
                  </arguments>
                  <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </returnValue>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.866"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </throwable>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createFragmentMessage">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="FragmentMessage.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="gv">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Return">
        <comments>// This method is not currently used.</comments>
        <comments>// New fragment messages are always created from existing messages.</comments>
        <comments>// Creating a FragmentMessage from InputStream is done in</comments>
        <comments>// createFromStream(..)</comments>
        <returnValue xsi:type="literals:NullLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getRequestId">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="msg">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:NestedExpression">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="RequestMessage.class.xmi#//@classifiers.0/@members.2"/>
              </next>
              <expression xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="RequestMessage.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
              </expression>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.13"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:NestedExpression">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="LocateReplyOrReplyMessage.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <expression xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="ReplyMessage.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
              </expression>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.14"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:NestedExpression">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="LocateRequestMessage.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <expression xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="LocateRequestMessage.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
              </expression>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.16"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:NestedExpression">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="LocateReplyOrReplyMessage.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <expression xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="LocateReplyMessage.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
              </expression>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.17"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:NestedExpression">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="CancelRequestMessage.class.xmi#//@classifiers.0/@members.1"/>
              </next>
              <expression xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="CancelRequestMessage.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
              </expression>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.15"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:NestedExpression">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="FragmentMessage.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <expression xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="FragmentMessage.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0"/>
              </expression>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.20"/>
          </condition>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="Message.class.xmi#//@classifiers.0/@members.25"/>
          </next>
        </variable>
      </statements>
      <statements xsi:type="statements:Throw">
        <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.874"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </throwable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setFlag">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="byteBuffer">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="flag">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set a flag in the given buffer (fragment bit, byte order bit, etc)&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="b">
          <typeReference xsi:type="types:Byte"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@variable"/>
          <assignmentOperator xsi:type="operators:AssignmentOr"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20/@statements.0/@variable"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="clearFlag">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="buf">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="flag">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Clears a flag in the given buffer&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.0">
            <arraySelectors>
              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:AssignmentAnd"/>
          <value xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ExclusiveOrExpression">
              <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.1"/>
            </expression>
          </value>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="AreFragmentsAllowed">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="major">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="minor">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="flag">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="msgType">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <comments>// 1.0</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.878"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.3"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.20"/>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.0"/>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.1"/>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Switch">
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.15"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.18"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.878"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </throwable>
              </statements>
              <condition xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.19"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <condition xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.16"/>
              </condition>
            </cases>
            <cases xsi:type="statements:NormalSwitchCase">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:Throw">
                    <comments>// 1.1</comments>
                    <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.878"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                        </arguments>
                      </next>
                    </throwable>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.0"/>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                    </expression>
                  </children>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:EqualityExpression">
                      <equalityOperators xsi:type="operators:Equal"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.1"/>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
                    </expression>
                  </children>
                </condition>
              </statements>
              <statements xsi:type="statements:Break"/>
              <condition xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.17"/>
              </condition>
            </cases>
            <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.3"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.2"/>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.7"/>
              </children>
            </expression>
          </children>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.7"/>
          </children>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="extractObjectKey">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectKey.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="objKey">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>/**&#xA;     * Construct an ObjectKey from a byte[].&#xA;     *&#xA;     * @return ObjectKey the object key.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="objectKey">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectKey.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.1">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/ObjectKeyFactory.class.xmi#//@classifiers.0/@members.0"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.0"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.69"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.0/@statements.0/@statement/@statements.0/@variable"/>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@statements.0/@statements.0/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23/@parameters.0"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <catcheBlocks>
          <comments>// XXX log this exception</comments>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Exception.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Throw">
        <comments>// This exception is thrown if any exceptions are raised while</comments>
        <comments>// extracting the object key or if the object key is empty.</comments>
        <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.1192"/>
          </next>
        </throwable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="extractObjectKey">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectKey.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="target">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="TargetAddress.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>/**&#xA;     * Extract the object key from TargetAddress.&#xA;     *&#xA;     * @return ObjectKey the object key.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="orbTargetAddrPref">
          <typeReference xsi:type="types:Short"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../spi/orb/ORBData.class.xmi#//@classifiers.0/@members.20"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.54"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="reqAddrDisp">
          <typeReference xsi:type="types:Short"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="TargetAddress.class.xmi#//@classifiers.0/@members.6"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../AddressingDispositionException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="KeyAddr.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Interface" href="KeyAddr.class.xmi#//@classifiers.0"/>
                  </arguments>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@variable"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="KeyAddr.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <target xsi:type="classifiers:Interface" href="KeyAddr.class.xmi#//@classifiers.0"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0/@members.53"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../AddressingDispositionException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ProfileAddr.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Interface" href="ProfileAddr.class.xmi#//@classifiers.0"/>
                  </arguments>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@variable"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ProfileAddr.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <target xsi:type="classifiers:Interface" href="ProfileAddr.class.xmi#//@classifiers.0"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0/@members.54"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../AddressingDispositionException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="ReferenceAddr.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Interface" href="ReferenceAddr.class.xmi#//@classifiers.0"/>
                  </arguments>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@variable"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="ReferenceAddr.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <target xsi:type="classifiers:Interface" href="ReferenceAddr.class.xmi#//@classifiers.0"/>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0/@members.55"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0/@members.56"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.908"/>
              </next>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.0/@variable"/>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:Switch">
          <cases xsi:type="statements:NormalSwitchCase">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="objKey">
                <typeReference xsi:type="types:Byte"/>
                <arrayDimensionsBefore/>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="TargetAddress.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="objectKey">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <comments>// AddressingDisposition::KeyAddr</comments>
                        <target xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectKey.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/ObjectKeyFactory.class.xmi#//@classifiers.0/@members.0"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.0/@statements.0/@variable"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.69"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.0/@statements.1/@statement/@statements.0/@variable"/>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.0/@statements.1/@statement/@statements.0/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.0/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:Break"/>
            <condition xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="KeyAddr.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Interface" href="KeyAddr.class.xmi#//@classifiers.0"/>
            </condition>
          </cases>
          <cases xsi:type="statements:NormalSwitchCase">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="iiopProfile">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../spi/ior/iiop/IIOPProfile.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="literals:NullLiteral"/>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="profile">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/IOP/TaggedProfile.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="TargetAddress.class.xmi#//@classifiers.0/@members.10"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.1/@statements.0/@variable">
                      <comments>// AddressingDisposition::ProfileAddr</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/IIOPFactories.class.xmi#//@classifiers.0/@members.17"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.1/@statements.1/@variable"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/IIOPFactories.class.xmi#//@classifiers.0"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="objectKey">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectKey.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.1/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/TaggedProfile.class.xmi#//@classifiers.0/@members.3"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.1/@statements.2/@statement/@statements.1/@variable"/>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.1/@statements.2/@statement/@statements.1/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.1/@statements.1/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:Break"/>
            <condition xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ProfileAddr.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Interface" href="ProfileAddr.class.xmi#//@classifiers.0"/>
            </condition>
          </cases>
          <cases xsi:type="statements:NormalSwitchCase">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="iorInfo">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="IORAddressingInfo.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="TargetAddress.class.xmi#//@classifiers.0/@members.13"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.1/@statements.1/@variable">
                      <comments>// AddressingDisposition::IORAddr</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.2/@statements.0/@variable">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <arraySelectors>
                            <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.2/@statements.0/@variable">
                              <next xsi:type="references:IdentifierReference">
                                <target xsi:type="members:Field" href="IORAddressingInfo.class.xmi#//@classifiers.0/@members.0"/>
                              </next>
                            </position>
                          </arraySelectors>
                          <target xsi:type="members:Field" href="../../../../../../../org/omg/IOP/IOR.class.xmi#//@classifiers.0/@members.1"/>
                        </next>
                        <target xsi:type="members:Field" href="IORAddressingInfo.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.1/@statements.0/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/IIOPFactories.class.xmi#//@classifiers.0/@members.17"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@parameters.1"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.1/@statements.1/@variable"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/IIOPFactories.class.xmi#//@classifiers.0"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:LocalVariableStatement">
                  <variable name="objectKey">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectKey.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.1/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/TaggedProfile.class.xmi#//@classifiers.0/@members.3"/>
                      </next>
                    </initialValue>
                  </variable>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:Return">
                      <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.2/@statements.1/@statement/@statements.2/@variable"/>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.2/@statements.1/@statement/@statements.2/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </condition>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.3/@statements.0/@cases.2/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:Break"/>
            <condition xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="ReferenceAddr.class.xmi#//@classifiers.0/@members.0"/>
              </next>
              <target xsi:type="classifiers:Interface" href="ReferenceAddr.class.xmi#//@classifiers.0"/>
            </condition>
          </cases>
          <cases xsi:type="statements:DefaultSwitchCase">
            <statements xsi:type="statements:Break">
              <comments>// this cannot happen</comments>
              <comments>// There is no need for a explicit exception, since the</comments>
              <comments>// TargetAddressHelper.read() would have raised a BAD_OPERATION</comments>
              <comments>// exception by now.</comments>
            </statements>
          </cases>
          <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24/@statements.1/@variable"/>
        </statements>
        <catcheBlocks>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Exception.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Throw">
        <comments>// This exception is thrown if any exceptions are raised while</comments>
        <comments>// extracting the object key from the TargetAddress or if all the</comments>
        <comments>// the valid TargetAddress::AddressingDispositions are empty.</comments>
        <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.1192"/>
          </next>
        </throwable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="readSize">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="b1">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="b2">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="b3">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="b4">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="littleEndian">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="a1">
          <typeReference xsi:type="types:Int"/>
          <additionalLocalVariables name="a2"/>
          <additionalLocalVariables name="a3"/>
          <additionalLocalVariables name="a4"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                    <shiftOperators xsi:type="operators:LeftShift"/>
                  </expression>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="4278190080"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable/@additionalLocalVariables.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.1"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                    <shiftOperators xsi:type="operators:LeftShift"/>
                  </expression>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="16711680"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable/@additionalLocalVariables.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.2"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                    <shiftOperators xsi:type="operators:LeftShift"/>
                  </expression>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="65280"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable/@additionalLocalVariables.2"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.3"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <shiftOperators xsi:type="operators:LeftShift"/>
                  </expression>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.4"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.3"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                    <shiftOperators xsi:type="operators:LeftShift"/>
                  </expression>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="4278190080"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable/@additionalLocalVariables.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.2"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                    <shiftOperators xsi:type="operators:LeftShift"/>
                  </expression>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="16711680"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable/@additionalLocalVariables.1"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.1"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                    <shiftOperators xsi:type="operators:LeftShift"/>
                  </expression>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="65280"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable/@additionalLocalVariables.2"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@parameters.0"/>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    <shiftOperators xsi:type="operators:LeftShift"/>
                  </expression>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
              </value>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:NestedExpression">
          <expression xsi:type="expressions:InclusiveOrExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable/@additionalLocalVariables.0"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable/@additionalLocalVariables.1"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25/@statements.0/@variable/@additionalLocalVariables.2"/>
          </expression>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="nullCheck">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="obj">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.1300"/>
              </next>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getSystemException">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/SystemException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="exClassName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="minorCode">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="completionStatus">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="message">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="wrapper">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="sysEx">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/SystemException.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="clazz">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Class.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../orbutil/ORBClassLoader.class.xmi#//@classifiers.0/@members.1"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../orbutil/ORBClassLoader.class.xmi#//@classifiers.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/SystemException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.1/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Class.class.xmi#//@classifiers.0/@members.35"/>
                    </next>
                  </child>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.3"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="types">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Class.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <initialValue xsi:type="arrays:ArrayInstantiationByValues">
                  <arrayInitializer>
                    <initialValues xsi:type="references:IdentifierReference">
                      <next xsi:type="references:ReflectiveClassReference"/>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
                    </initialValues>
                  </arrayInitializer>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="constructor">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/reflect/Constructor.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.1/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Class.class.xmi#//@classifiers.0/@members.79"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.1/@statements.1/@elseStatement/@statements.0/@variable"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="args">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <initialValue xsi:type="arrays:ArrayInstantiationByValues">
                  <arrayInitializer>
                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.3"/>
                  </arrayInitializer>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/SystemException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.1/@statements.1/@elseStatement/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/reflect/Constructor.class.xmi#//@classifiers.0/@members.29"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.1/@statements.1/@elseStatement/@statements.2/@variable"/>
                    </next>
                  </child>
                </value>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.4">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.985"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.1/@catcheBlocks.0/@parameter"/>
              </next>
            </throwable>
          </statements>
          <parameter name="someEx">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Exception.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/SystemException.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/SystemException.class.xmi#//@classifiers.0/@members.1"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.2"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="callback">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="handler">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="MessageHandler.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <namespaces>java</namespaces>
        <namespaces>io</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="MessageHandler.class.xmi#//@classifiers.0/@members.0"/>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getByteBuffer">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setByteBuffer">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="byteBuffer">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getThreadPoolToUse">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getEncodingVersion">
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          <self xsi:type="literals:This"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setEncodingVersion">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="version">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="dprint">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="msg">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.31"/>
            <arguments xsi:type="references:StringReference" value="MessageBase"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.34/@parameters.0"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This class acts as the base class for the various GIOP message types. This&#xA; * also serves as a factory to create various message types. We currently&#xA; * support GIOP 1.0, 1.1 and 1.2 message types.&#xA; *&#xA; * @author Ram Jeyaraman 05/14/2000&#xA; * @version 1.0&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="Message.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
  </classifiers>
</containers:CompilationUnit>
