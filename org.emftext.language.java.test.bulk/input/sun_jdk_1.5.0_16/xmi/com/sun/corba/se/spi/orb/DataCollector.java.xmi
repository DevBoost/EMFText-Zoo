<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../../../java.ecore#/16" name="DataCollector.java">
  <comments>/*&#xA; * @(#)DataCollector.java&#x9;1.13 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>corba</namespaces>
  <namespaces>se</namespaces>
  <namespaces>spi</namespaces>
  <namespaces>orb</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>applet</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../java/applet/Applet.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../java/util/Properties.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../java/util/Vector.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="DataCollector">
    <members xsi:type="members:InterfaceMethod" name="isApplet">
      <typeReference xsi:type="types:Boolean">
        <comments>/** Return true iff this DataCollector was created from&#xA;     * applet data.&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="initialHostIsLocal">
      <typeReference xsi:type="types:Boolean">
        <comments>/** Return true iff the local host and ORB initial host are the same.&#xA;    * This is provided to avoid exposing the local host in insecure&#xA;    * contexts.&#xA;    */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setParser">
      <typeReference xsi:type="types:Void">
        <comments>/** Set the parser which is used to obtain property names.&#xA;     * This must be called before getProperties &#xA;     * may be called.  It may be called multiple times if different&#xA;     * sets of properties are needed for the same data sources.&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parser">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="PropertyParser.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getProperties">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/** Return the consolidated property information to be used&#xA;     * for ORB configuration.  Note that -ORBInitRef arguments are&#xA;     * handled specially: all -ORBInitRef name=value arguments are&#xA;     * converted into ( org.omg.CORBA.ORBInitRef.name, value )&#xA;     * mappings in the resulting properties.  Also, -ORBInitialServices&#xA;     * is handled specially in applet mode: they are converted from&#xA;     * relative to absolute URLs.&#xA;     * @raises IllegalStateException if setPropertyNames has not&#xA;     * been called.&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../../../../../../java/util/Properties.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/** Interface for collecting all sources of ORB configuration properties&#xA; * into a single properties object.   A PropertyParser is needed so that&#xA; * the set of property names of interest is known.&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
