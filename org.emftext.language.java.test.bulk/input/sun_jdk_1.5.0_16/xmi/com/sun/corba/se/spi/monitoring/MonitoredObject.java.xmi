<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../../../java.ecore#/16" name="MonitoredObject.java">
  <comments>/*&#xA; * @(#)MonitoredObject.java&#x9;1.4 03/12/19&#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>corba</namespaces>
  <namespaces>se</namespaces>
  <namespaces>spi</namespaces>
  <namespaces>monitoring</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>monitoring</namespaces>
    <classifier xsi:type="classifiers:Interface" href="MonitoredAttribute.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../java/util/Collection.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="MonitoredObject">
    <members xsi:type="members:InterfaceMethod" name="getName">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>///////////////////////////////////////</comments>
        <comments>// operations</comments>
        <comments>/**&#xA; * &lt;p>&#xA; * Gets the name of this MonitoredObject&#xA; * &lt;/p>&lt;p>&#xA; * &#xA; * @return a String with name of this Monitored Object &#xA; * &lt;/p>&#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getDescription">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * &lt;p>&#xA; * Gets the description of MonitoredObject&#xA; * &lt;/p>&lt;p>&#xA; * &#xA; * @return a String with Monitored Object Description.&#xA; * &lt;/p>&#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="addChild">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="m">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * &lt;p>&#xA; * This method will add a child Monitored Object to this Monitored Object. &#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * &lt;/p>&#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="removeChild">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * &lt;p>&#xA; * This method will remove child Monitored Object identified by the given name &#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * @param name of the ChildMonitored Object&#xA; * &lt;/p>&#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getChild">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * &lt;p>&#xA; * Gets the child MonitoredObject associated with this MonitoredObject&#xA; * instance using name as the key. The name should be fully qualified name&#xA; * like orb.connectionmanager&#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * &#xA; * @return a MonitoredObject identified by the given name&#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * @param name of the ChildMonitored Object&#xA; * &lt;/p>&#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getChildren">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../java/util/Collection.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * &lt;p>&#xA; * Gets all the Children registered under this instance of Monitored&#xA; * Object. &#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * &#xA; * @return Collection of immediate Children associated with this MonitoredObject.&#xA; * &lt;/p>&#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setParent">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="m">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * &lt;p>&#xA; * Sets the parent for this Monitored Object.&#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * &lt;/p>&#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getParent">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * &lt;p>&#xA; * There will be only one parent for an instance of MontoredObject, this&#xA; * call gets parent and returns null if the Monitored Object is the root.&#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * &#xA; * @return a MonitoredObject which is a Parent of this Monitored Object instance&#xA; * &lt;/p>&#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="addAttribute">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="MonitoredAttribute.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * &lt;p>&#xA; * Adds the attribute with the given name.&#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * &#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * @param value is the MonitoredAttribute which will be set as one of the&#xA; * attribute of this MonitoredObject.&#xA; * &lt;/p>&#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="removeAttribute">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * &lt;p>&#xA; * Removes the attribute with the given name.&#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * &#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * @param name is the MonitoredAttribute name&#xA; * &lt;/p>&#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAttribute">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="MonitoredAttribute.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * &lt;p>&#xA; * Gets the Monitored Object registered by the given name&#xA; * &lt;/p>&#xA; * &#xA; * &lt;p>&#xA; * @return a MonitoredAttribute identified by the given name &#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * @param name of the attribute&#xA; * &lt;/p>&#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAttributes">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../java/util/Collection.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * &lt;p>&#xA; * Gets all the Monitored Attributes for this Monitored Objects. It doesn't&#xA; * include the Child Monitored Object, that needs to be traversed using&#xA; * getChild() or getChildren() call.&#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * &#xA; * @return Collection of all the Attributes for this MonitoredObject&#xA; * &lt;/p>&#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="clearState">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA; * &lt;p>&#xA; * Clears the state of all the Monitored Attributes associated with the&#xA; * Monitored Object. It will also clear the state on all it's child&#xA; * Monitored Object. The call to clearState will be initiated from&#xA; * CORBAMBean.startMonitoring() call.&#xA; * &lt;/p>&#xA; * &#xA; */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;p>&#xA; *&#xA; * @author Hemanth Puttaswamy&#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * Monitored Object provides an Hierarchichal view of the ORB Monitoring&#xA; * System. It can contain multiple children and a single parent. Each&#xA; * Monitored Object may also contain Multiple Monitored Attributes.&#xA; * &lt;/p>&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
