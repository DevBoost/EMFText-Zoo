<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../../../../java.ecore#/7 http://www.emftext.org/java/literals ../../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../../../../java.ecore#/16" name="Message.java">
  <comments>/*&#xA; * @(#)Message.java&#x9;1.11 04/06/21&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>corba</namespaces>
  <namespaces>se</namespaces>
  <namespaces>impl</namespaces>
  <namespaces>protocol</namespaces>
  <namespaces>giopmsgheaders</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>nio</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <namespaces>iiop</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="Message">
    <members xsi:type="members:Field" name="defaultBufferSize">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1024"/>
      <typeReference xsi:type="types:Int">
        <comments>// Generic constants</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="GIOPBigEndian">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="GIOPLittleEndian">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="GIOPBigMagic">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="1195986768"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="GIOPLittleMagic">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="1347373383"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="GIOPMessageHeaderLength">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="12"/>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Field" name="LITTLE_ENDIAN_BIT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
      <typeReference xsi:type="types:Byte">
        <comments>// Other useful constants</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="MORE_FRAGMENTS_BIT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="2"/>
      <typeReference xsi:type="types:Byte"/>
    </members>
    <members xsi:type="members:Field" name="FLAG_NO_FRAG_BIG_ENDIAN">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
      <typeReference xsi:type="types:Byte"/>
    </members>
    <members xsi:type="members:Field" name="TRAILING_TWO_BIT_BYTE_MASK">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="3"/>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="THREAD_POOL_TO_USE_MASK">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="63"/>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="CDR_ENC_VERSION">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
      <typeReference xsi:type="types:Byte">
        <comments>// Encoding related constants</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="JAVA_ENC_VERSION">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
      <typeReference xsi:type="types:Byte"/>
    </members>
    <members xsi:type="members:Field" name="GIOPRequest">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Byte">
        <comments>// Message types</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="GIOPReply">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Byte"/>
    </members>
    <members xsi:type="members:Field" name="GIOPCancelRequest">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Byte"/>
    </members>
    <members xsi:type="members:Field" name="GIOPLocateRequest">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Byte"/>
    </members>
    <members xsi:type="members:Field" name="GIOPLocateReply">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      <typeReference xsi:type="types:Byte"/>
    </members>
    <members xsi:type="members:Field" name="GIOPCloseConnection">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
      <typeReference xsi:type="types:Byte"/>
    </members>
    <members xsi:type="members:Field" name="GIOPMessageError">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="6"/>
      <typeReference xsi:type="types:Byte"/>
    </members>
    <members xsi:type="members:Field" name="GIOPFragment">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="7"/>
      <typeReference xsi:type="types:Byte"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getGIOPVersion">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>// 1.1 &amp; 1.2:</comments>
          <comments>// Accessor methods</comments>
          <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getEncodingVersion">
      <typeReference xsi:type="types:Byte"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isLittleEndian">
      <typeReference xsi:type="types:Boolean"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="moreFragmentsToFollow">
      <typeReference xsi:type="types:Boolean"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getType">
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getSize">
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getByteBuffer">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getThreadPoolToUse">
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="read">
      <typeReference xsi:type="types:Void">
        <comments>// Mutator methods</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="istream">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CORBA</namespaces>
          <namespaces>portable</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/portable/InputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="write">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ostream">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CORBA</namespaces>
          <namespaces>portable</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/portable/OutputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setSize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="byteBuffer">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="size">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="createFragmentMessage">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="FragmentMessage.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="callback">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="handler">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="MessageHandler.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setByteBuffer">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="byteBuffer">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setEncodingVersion">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="version">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This is the base interface for different message type interfaces.&#xA; *&#xA; * @author Ram Jeyaraman 05/14/2000&#xA; * @version 1.0&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
