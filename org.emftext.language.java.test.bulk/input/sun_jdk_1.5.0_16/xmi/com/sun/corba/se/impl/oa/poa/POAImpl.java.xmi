<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../../../../../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../../../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../../java.ecore#/16 http://www.emftext.org/java/variables ../../../../../../../java.ecore#/17" name="POAImpl.java">
  <comments>/*&#xA; * @(#)POAImpl.java&#x9;1.138 04/03/01&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>corba</namespaces>
  <namespaces>se</namespaces>
  <namespaces>impl</namespaces>
  <namespaces>oa</namespaces>
  <namespaces>poa</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../java/util/Collection.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../java/util/Set.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/util/HashSet.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../java/util/Map.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/util/HashMap.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>CORBA</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/CORBA/Policy.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>CORBA</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/SystemException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/POA.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/POAManager.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/AdapterActivator.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/ServantManager.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/ForwardRequest.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/ThreadPolicy.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/LifespanPolicy.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/IdUniquenessPolicy.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/IdAssignmentPolicy.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/ImplicitActivationPolicy.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/ServantRetentionPolicy.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/RequestProcessingPolicy.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/ThreadPolicyValue.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/LifespanPolicyValue.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/IdUniquenessPolicyValue.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/IdAssignmentPolicyValue.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/ImplicitActivationPolicyValue.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/ServantRetentionPolicyValue.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/RequestProcessingPolicyValue.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <namespaces>POAPackage</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/AdapterAlreadyExists.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <namespaces>POAPackage</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/AdapterNonExistent.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <namespaces>POAPackage</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/InvalidPolicy.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <namespaces>POAPackage</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <namespaces>POAPackage</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongAdapter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <namespaces>POAPackage</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/NoServant.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <namespaces>POAPackage</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ServantAlreadyActive.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <namespaces>POAPackage</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ObjectAlreadyActive.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <namespaces>POAPackage</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ServantNotActive.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableServer</namespaces>
    <namespaces>POAPackage</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ObjectNotActive.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableInterceptor</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableInterceptor/ObjectReferenceFactory.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableInterceptor</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableInterceptor/ObjectReferenceTemplate.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>PortableInterceptor</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableInterceptor/NON_EXISTENT.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>IOP</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../../org/omg/IOP/TAG_INTERNET_IOP.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>copyobject</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/copyobject/CopierManager.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>copyobject</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/copyobject/ObjectCopier.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>copyobject</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/copyobject/ObjectCopierFactory.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>oa</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/oa/OADestroyed.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>oa</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/oa/OAInvocationInfo.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>oa</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/oa/ObjectAdapter.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>oa</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>oa</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/oa/ObjectAdapterFactory.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectKeyTemplate.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectId.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectAdapterId.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/IOR.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/ior/IORFactories.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/IORTemplate.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/IORTemplateList.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/TaggedProfile.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <namespaces>iiop</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/iiop/IIOPProfile.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <namespaces>iiop</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/ior/iiop/IIOPAddress.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <namespaces>iiop</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/ior/iiop/IIOPFactories.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>orb</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>protocol</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/protocol/ForwardException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>transport</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../spi/transport/SocketOrChannelAcceptor.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../ior/POAObjectKeyTemplate.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>ior</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../ior/ObjectAdapterIdArray.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>orbutil</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>orbutil</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>orbutil</namespaces>
    <namespaces>concurrent</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../orbutil/concurrent/Sync.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>orbutil</namespaces>
    <namespaces>concurrent</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../orbutil/concurrent/SyncUtil.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>orbutil</namespaces>
    <namespaces>concurrent</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../orbutil/concurrent/ReentrantMutex.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>orbutil</namespaces>
    <namespaces>concurrent</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="POAImpl">
    <members xsi:type="members:Field" name="debug">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="STATE_START">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/* POA creation takes place in 2 stages: first, the POAImpl constructor is &#xA;       called, then the initialize method is called.  This separation is &#xA;       needed because an AdapterActivator does not know the POAManager or &#xA;       the policies when &#xA;       the unknown_adapter method is invoked.  However, the POA must be created&#xA;       before the unknown_adapter method is invoked, so that the parent knows&#xA;       when concurrent attempts are made to create the same POA.&#xA;       Calling the POAImpl constructor results in a new POA in state STATE_START.&#xA;       Calling initialize( POAManager, Policies ) results in state STATE_RUN.&#xA;       Calling destroy results in STATE_DESTROY, which marks the beginning of&#xA;       POA destruction.&#xA;    */</comments>
        <comments>// Notes on concurrency.</comments>
        <comments>// The POA requires careful design for concurrency management to correctly</comments>
        <comments>// implement the specification and avoid deadlocks.  The order of acquiring</comments>
        <comments>// locks must respect the following locking hierarchy:</comments>
        <comments>//</comments>
        <comments>// 1. Lock POAs before POAManagers</comments>
        <comments>// 2. Lock a POA before locking its child POA</comments>
        <comments>//</comments>
        <comments>// Also note that there are 3 separate conditions on which threads may wait</comments>
        <comments>// in the POA, as defined by invokeCV, beingDestroyedCV, and </comments>
        <comments>// adapterActivatorCV.  This means that (for this reason as well as others)&#x9;</comments>
        <comments>// we cannot simply use the standard Java synchronized primitive.  </comments>
        <comments>// This implementation uses a modified version of Doug Lea's </comments>
        <comments>// util.concurrent (version 1.3.0) that supports reentrant</comments>
        <comments>// mutexes to handle the locking.  This will all be replaced by the new JSR </comments>
        <comments>// 166 concurrency primitives in J2SE 1.5 and later once the ORB moves to </comments>
        <comments>// J2SE 1.5.</comments>
        <comments>// POA state constants</comments>
        <comments>//</comments>
        <comments>// Note that ordering is important here: we must have the state defined in </comments>
        <comments>// this order so that ordered comparison is possible.</comments>
        <comments>// DO NOT CHANGE THE VALUES OF THE STATE CONSTANTS!!!  In particular, the</comments>
        <comments>// initialization related states must be lower than STATE_RUN.</comments>
        <comments>//</comments>
        <comments>// POA is created in STATE_START</comments>
        <comments>//</comments>
        <comments>// Valid state transitions:</comments>
        <comments>//</comments>
        <comments>// START to INIT&#x9;&#x9;&#x9;    after find_POA constructor call </comments>
        <comments>// START to RUN&#x9;&#x9;&#x9;    after initialize completes</comments>
        <comments>// INIT to INIT_DONE&#x9;&#x9;    after initialize completes</comments>
        <comments>// INIT to DESTROYED&#x9;&#x9;    after failed unknown_adapter </comments>
        <comments>// INIT_DONE to RUN&#x9;&#x9;&#x9;    after successful unknown_adapter </comments>
        <comments>// STATE_RUN to STATE_DESTROYING&#x9;    after start of destruction</comments>
        <comments>// STATE_DESTROYING to STATE_DESTROYED  after destruction completes.</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STATE_INIT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// constructor complete</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STATE_INIT_DONE">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// waiting for adapter activator</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STATE_RUN">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// adapter activator called create_POA</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STATE_DESTROYING">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// initialized and running</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="STATE_DESTROYED">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// being destroyed</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:ClassMethod" name="stateToString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// destruction complete</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="START"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="INIT"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="INIT_DONE"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="RUN"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="DESTROYING"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:StringReference" value="DESTROYED"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:StringReference" value="UNKNOWN("/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
              <children xsi:type="references:StringReference" value=")"/>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </returnValue>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
      </statements>
    </members>
    <members xsi:type="members:Field" name="state">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// Current state of the POA</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="mediator">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="POAPolicyMediator.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// The POA request handler that performs all policy specific operations</comments>
        <comments>// Note that POAImpl handles all synchronization, so mediator is (mostly)</comments>
        <comments>// unsynchronized.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="numLevels">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// Representation of object adapter ID</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="poaId">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectAdapterId.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// counts depth of tree.  Root = 1.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="name">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// the actual object adapter ID for this POA</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="manager">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="POAManagerImpl.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// the name of this POA</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="uniquePOAId">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// This POA's POAManager</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="parent">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// ID for this POA that is unique relative </comments>
        <comments>// to the POAFactory, which has the same </comments>
        <comments>// lifetime as the ORB.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="children">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../java/util/Map.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// The POA that created this POA.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="activator">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/AdapterActivator.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// Map from name to POA of POAs created by</comments>
        <comments>// this POA.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="invocationCount">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:Field" name="poaMutex">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>// pending invocations on this POA.</comments>
          <comments>// Data used to control POA concurrency</comments>
          <comments>// XXX revisit for JSR 166</comments>
          <comments>// Master lock for all POA synchronization.  See lock and unlock.</comments>
          <comments>// package private for access by AOMEntry.</comments>
          <target xsi:type="classifiers:Interface" href="../../orbutil/concurrent/Sync.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="adapterActivatorCV">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// Wait on this CV for AdapterActivator upcalls to complete </comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="invokeCV">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// Wait on this CV for all active invocations to complete </comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="beingDestroyedCV">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// Wait on this CV for the destroy method to complete doing its work</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="isDestroying">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/ThreadLocal.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// thread local variable to store a boolean to detect deadlock in </comments>
        <comments>// POA.destroy().</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="toString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// This includes the most important information for debugging</comments>
        <comments>// POA problems.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:AdditiveExpression">
          <children xsi:type="references:StringReference" value="POA["/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.6"/>
            </next>
          </children>
          <children xsi:type="references:StringReference" value=", uniquePOAId="/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
          <children xsi:type="references:StringReference" value=", state="/>
          <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.7"/>
          <children xsi:type="references:StringReference" value=", invocationCount="/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
          <children xsi:type="references:StringReference" value="]"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getDebug">
      <typeReference xsi:type="types:Boolean">
        <comments>// package private for mediator implementations. </comments>
      </typeReference>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getPOAFactory">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="POAFactory.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// package private for access to servant to POA map</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:CastExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="POAFactory.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26/@parameters.0">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../spi/protocol/RequestDispatcherRegistry.class.xmi#//@classifiers.0/@members.9"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0/@members.18"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.53"/>
            </next>
          </child>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="makeRootPOA">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// package private so that POAFactory can access it.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="poaManager">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="POAManagerImpl.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="POAManagerImpl.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.26">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.0"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.46"/>
              </next>
            </arguments>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="result">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0"/>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0/@members.121"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../orbutil/ORBConstants.class.xmi#//@classifiers.0"/>
            </arguments>
            <arguments xsi:type="literals:NullLiteral"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.1/@variable">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.33">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.0/@variable"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="Policies.class.xmi#//@classifiers.0/@members.6"/>
              </next>
              <target xsi:type="classifiers:Class" href="Policies.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27/@statements.1/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getPOAId">
      <typeReference xsi:type="types:Int">
        <comments>// package private so that POAPolicyMediatorBase can access it.</comments>
      </typeReference>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="lock">
      <typeReference xsi:type="types:Void">
        <comments>// package private so that POAPolicyMediator can access it.</comments>
      </typeReference>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../orbutil/concurrent/SyncUtil.class.xmi#//@classifiers.0/@members.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
          </next>
          <target xsi:type="classifiers:Class" href="../../orbutil/concurrent/SyncUtil.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:SelfReference">
                  <self xsi:type="literals:This"/>
                </arguments>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="LOCKED poa "/>
                  <children xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="unlock">
      <typeReference xsi:type="types:Void">
        <comments>// package private so that POAPolicyMediator can access it.</comments>
      </typeReference>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:SelfReference">
                  <self xsi:type="literals:This"/>
                </arguments>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="UNLOCKED poa "/>
                  <children xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../../orbutil/concurrent/Sync.class.xmi#//@classifiers.0/@members.9"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getPolicies">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>// package private so that DelegateImpl can access it.</comments>
          <target xsi:type="classifiers:Class" href="Policies.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.0"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:Constructor" name="POAImpl">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.2"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.2">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.3"/>
            </next>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:SelfReference">
                  <self xsi:type="literals:This"/>
                </arguments>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="Creating POA with name="/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0"/>
                  <children xsi:type="references:StringReference" value=" parent="/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.1"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.3"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/util/HashMap.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14">
            <comments>// This was done in initialize, but I moved it here</comments>
            <comments>// to get better searchability when tracing.</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:MethodCall" target="//@classifiers.0/@members.26">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="POAFactory.class.xmi#//@classifiers.0/@members.23"/>
            </next>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.2"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
                <comments>// This is the root POA, which counts as 1 level</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10">
                <comments>// My level is one more than that of my parent</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.1">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.1">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.5"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.0"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                </next>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="names">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Get an array of all of the POA names in order to</comments>
              <comments>// create the poaid.</comments>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="poaImpl">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
          <initialValue xsi:type="references:SelfReference">
            <self xsi:type="literals:This"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ctr">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@variable">
                <arraySelectors>
                  <position xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.12/@variable"/>
                    <operator xsi:type="operators:MinusMinus"/>
                  </position>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.11/@variable">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.11/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.11/@variable">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.11/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../ior/ObjectAdapterIdArray.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@statements.10/@variable"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../orbutil/concurrent/ReentrantMutex.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.2">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.4"/>
              </next>
            </arguments>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.2">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.4"/>
              </next>
            </arguments>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.2">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.4"/>
              </next>
            </arguments>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.32/@parameters.2">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.4"/>
              </next>
            </arguments>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/ThreadLocal.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <anonymousClass>
              <members xsi:type="members:ClassMethod" name="initialValue">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <namespaces>java</namespaces>
                  <namespaces>lang</namespaces>
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <annotationsAndModifiers xsi:type="modifiers:Protected"/>
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                  </returnValue>
                </statements>
              </members>
            </anonymousClass>
          </value>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="orb">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="initialState">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// Note that the parent POA must be locked when this constructor is called.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="manager">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="POAManagerImpl.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="policies">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Policies.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// The POA lock must be held when this method is called.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:SelfReference">
                  <self xsi:type="literals:This"/>
                </arguments>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="Initializing poa "/>
                  <children xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </children>
                  <children xsi:type="references:StringReference" value=" with POAManager="/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@parameters.0"/>
                  <children xsi:type="references:StringReference" value=" policies="/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@parameters.1"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="POAManagerImpl.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="POAPolicyMediatorFactory.class.xmi#//@classifiers.0/@members.1"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@parameters.1"/>
              <arguments xsi:type="references:SelfReference">
                <self xsi:type="literals:This"/>
              </arguments>
            </next>
            <target xsi:type="classifiers:Class" href="POAPolicyMediatorFactory.class.xmi#//@classifiers.0"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="serverid">
          <typeReference xsi:type="types:Int">
            <comments>// Construct the object key template</comments>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="scid">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.1"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="orbId">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../spi/orb/ORBData.class.xmi#//@classifiers.0/@members.10"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.54"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.19"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oktemp">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectKeyTemplate.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../ior/POAObjectKeyTemplate.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.19"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@statements.5/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@statements.4/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@statements.6/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:SelfReference">
                  <self xsi:type="literals:This"/>
                </arguments>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="Initializing poa: oktemp="/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@statements.7/@variable"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="objectAdapterCreated">
          <typeReference xsi:type="types:Boolean">
            <comments>// Note that parent == null iff this is the root POA.</comments>
            <comments>// This was used to avoid executing interceptors on the RootPOA.</comments>
            <comments>// That is no longer necessary.</comments>
          </typeReference>
          <initialValue xsi:type="literals:BooleanLiteral" value="true"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall">
          <comments>// parent != null ;</comments>
          <comments>// XXX extract codebase from policies and pass into initializeTemplate</comments>
          <comments>// after the codebase policy change is finalized.</comments>
          <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.16"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@statements.7/@variable"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@statements.9/@variable"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@parameters.1"/>
          <arguments xsi:type="literals:NullLiteral"/>
          <arguments xsi:type="literals:NullLiteral">
            <comments>// codebase</comments>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.33/@statements.7/@variable">
            <comments>// manager id</comments>
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/ObjectKeyTemplate.class.xmi#//@classifiers.0/@members.4"/>
            </next>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          </expression>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
            </expression>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          </condition>
          <elseStatement xsi:type="statements:Throw">
            <throwable xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../logging/POASystemException.class.xmi#//@classifiers.0/@members.202"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.12"/>
            </throwable>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="waitUntilRunning">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// The poaMutex must be held when this method is called</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:SelfReference">
                  <self xsi:type="literals:This"/>
                </arguments>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="Calling waitUntilRunning on poa "/>
                  <children xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0/@members.7"/>
                </next>
              </expression>
            </statements>
            <catcheBlocks>
              <comments>// NO-OP</comments>
              <parameter name="exc">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/InterruptedException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:SelfReference">
                  <self xsi:type="literals:This"/>
                </arguments>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="Exiting waitUntilRunning on poa "/>
                  <children xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
      <statements xsi:type="statements:Return">
        <comments>// Note that a POA could be destroyed while in STATE_INIT due to a </comments>
        <comments>// failure in the AdapterActivator upcall.</comments>
        <returnValue xsi:type="expressions:NestedExpression">
          <expression xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          </expression>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="destroyIfNotInitDone">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// This method checks that the AdapterActivator finished the </comments>
        <comments>// initialization of a POA activated in find_POA.  This is</comments>
        <comments>// determined by checking the state of the POA.  If the state is</comments>
        <comments>// STATE_INIT, the AdapterActivator did not complete the </comments>
        <comments>// inialization.  In this case, we destroy the POA that was</comments>
        <comments>// partially created and return false.  Otherwise, we return true.</comments>
        <comments>// In any case, we must wake up all threads waiting for the adapter</comments>
        <comments>// activator, either to continue their invocations, or to return</comments>
        <comments>// errors to their client.</comments>
        <comments>//</comments>
        <comments>// The poaMutex must NOT be held when this method is called.</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling destroyIfNotInitDone on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="success">
            <typeReference xsi:type="types:Boolean"/>
            <initialValue xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
              </expression>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
            </expression>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.0/@statements.2/@variable"/>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="destroyer">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0/@members.37">
                    <comments>// Don't just use destroy, because the check for </comments>
                    <comments>// deadlock is too general, and can prevent this from</comments>
                    <comments>// functioning properly.</comments>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences target="//@classifiers.0/@members.37"/>
                  </typeReference>
                  <arguments xsi:type="literals:BooleanLiteral"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.0/@statements.3/@elseStatement/@statements.0/@variable">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.37/@members.5">
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                </next>
              </expression>
            </statements>
          </elseStatement>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.35/@statements.0/@statements.2/@variable"/>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0/@members.10"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Exiting destroyIfNotInitDone on poa "/>
                      <children xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="internalReferenceToId">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="reference">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CORBA</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/CORBA/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongAdapter.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ior">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../spi/ior/IOR.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.40"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@parameters.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="thisTemplate">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../spi/ior/IORTemplateList.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/IOR.class.xmi#//@classifiers.0/@members.7"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="orf">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableInterceptor/ObjectReferenceFactory.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.25"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="poaTemplate">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../spi/ior/IORTemplateList.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../spi/ior/IORFactories.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.2/@variable"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../spi/ior/IORFactories.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongAdapter.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </throwable>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.3/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/IORFactory.class.xmi#//@classifiers.0/@members.1"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.1/@variable"/>
            </next>
          </child>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="iter">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// Extract the ObjectId from the first TaggedProfile in the IOR.</comments>
              <comments>// If ior was created in this POA, the same ID was used for </comments>
              <comments>// every profile through the profile templates in the currentFactory,</comments>
              <comments>// so we will get the same result from any profile.</comments>
              <target xsi:type="classifiers:Interface" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/List.class.xmi#//@classifiers.0/@members.3"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Throw">
          <throwable xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../logging/POASystemException.class.xmi#//@classifiers.0/@members.190"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.11"/>
          </throwable>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </child>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="prof">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../spi/ior/TaggedProfile.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../spi/ior/TaggedProfile.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.5/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </expression>
            </child>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oid">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../spi/ior/ObjectId.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.7/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/TaggedProfile.class.xmi#//@classifiers.0/@members.1"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.36/@statements.8/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../../../spi/ior/ObjectId.class.xmi#//@classifiers.0/@members.0"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="classifiers:Class" name="DestroyThread">
      <members xsi:type="members:Field" name="wait">
        <typeReference xsi:type="types:Boolean"/>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="etherealize">
        <typeReference xsi:type="types:Boolean"/>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="debug">
        <typeReference xsi:type="types:Boolean"/>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Field" name="thePoa">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
      </members>
      <members xsi:type="members:Constructor" name="DestroyThread">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.4/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.2"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.4/@parameters.1"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="etherealize">
          <typeReference xsi:type="types:Boolean"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="debug">
          <typeReference xsi:type="types:Boolean"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
      </members>
      <members xsi:type="members:ClassMethod" name="doIt">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="thePoa">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="wait">
          <typeReference xsi:type="types:Boolean"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling DestroyThread.doIt(thePOA="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.5/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=" wait="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.5/@parameters.1"/>
                    <children xsi:type="references:StringReference" value=" etherealize="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.1"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.2"/>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.3"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.5/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.5/@parameters.1"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.37/@members.6"/>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.5/@parameters.1"/>
          <elseStatement xsi:type="statements:Block">
            <statements xsi:type="statements:TryBlock">
              <comments>// Catch exceptions since setDaemon can cause a</comments>
              <comments>// security exception to be thrown under netscape</comments>
              <comments>// in the Applet mode</comments>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.72"/>
                  <arguments xsi:type="literals:BooleanLiteral" value="true"/>
                </expression>
              </statements>
              <catcheBlocks>
                <parameter name="e">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Exception.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameter>
              </catcheBlocks>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0/@members.46"/>
              </expression>
            </statements>
          </elseStatement>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="run">
        <typeReference xsi:type="types:Void"/>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="destroyedPOATemplates">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../../../../../java/util/Set.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/util/HashSet.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.37/@members.8">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.3"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.6/@statements.0/@variable"/>
          </expression>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="iter">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.6/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Set.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="orts">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableInterceptor/ObjectReferenceTemplate.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="arrays:ArrayInstantiationBySize">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableInterceptor/ObjectReferenceTemplate.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.6/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Set.class.xmi#//@classifiers.0/@members.0"/>
                </next>
              </sizes>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="index">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </variable>
        </statements>
        <statements xsi:type="statements:WhileLoop">
          <statement xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.6/@statements.3/@variable">
                <arraySelectors>
                  <position xsi:type="expressions:SuffixUnaryModificationExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.6/@statements.4/@variable"/>
                    <operator xsi:type="operators:PlusPlus"/>
                  </position>
                </arraySelectors>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableInterceptor/ObjectReferenceTemplate.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.6/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                </child>
              </value>
            </expression>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.6/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.3">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../../../spi/protocol/PIHandler.class.xmi#//@classifiers.0/@members.4"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.6/@statements.3/@variable"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../../../org/omg/PortableInterceptor/NON_EXISTENT.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableInterceptor/NON_EXISTENT.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.46"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.19"/>
            </next>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="prepareForDestruction">
        <typeReference xsi:type="types:Boolean"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="poa">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="destroyedPOATemplates">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../../java/util/Set.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private">
          <comments>// Returns true if destruction must be completed, false </comments>
          <comments>// if not, which means that another thread is already</comments>
          <comments>// destroying poa.</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="childPoas">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0"/>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="literals:NullLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:TryBlock">
          <comments>// Note that we do not synchronize on this, since this is</comments>
          <comments>// the PerformDestroy instance, not the POA.</comments>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@parameters.0">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Calling performDestroy on poa "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@parameters.0"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.2"/>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@parameters.0">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@parameters.0">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              <relationOperators xsi:type="operators:LessThanOrEqual"/>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <comments>// destroy may be called multiple times, and each call</comments>
                <comments>// is allowed to proceed with its own setting of the wait </comments>
                <comments>// flag, but the etherealize value is used from the first </comments>
                <comments>// call to destroy.  Also all children should be destroyed </comments>
                <comments>// before the parent POA.  If the poa is already destroyed, </comments>
                <comments>// we can just return.  If the poa has started destruction, </comments>
                <comments>// but not completed, and wait is true, we need to wait </comments>
                <comments>// until destruction is complete, then just return.</comments>
                <statement xsi:type="statements:WhileLoop">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:TryBlock">
                      <statements xsi:type="statements:ExpressionStatement">
                        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@parameters.0">
                          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0/@members.7"/>
                            </next>
                          </next>
                        </expression>
                      </statements>
                      <catcheBlocks>
                        <comments>// NO-OP</comments>
                        <parameter name="exc">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences>
                              <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/InterruptedException.class.xmi#//@classifiers.0"/>
                            </classifierReferences>
                          </typeReference>
                        </parameter>
                      </catcheBlocks>
                    </statements>
                  </statement>
                  <condition xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@parameters.0">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                    </children>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                  </condition>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.0"/>
              </statements>
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:BooleanLiteral"/>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@parameters.0">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/ThreadLocal.class.xmi#//@classifiers.0/@members.7"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                  </arguments>
                </next>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@statements.0/@variable">
                <comments>// Make a copy since we can't hold the lock while destroying</comments>
                <comments>// the children, and an iterator is not deletion-safe.</comments>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences target="//@classifiers.0"/>
                </typeReference>
                <arrayDimensionsBefore/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@parameters.0">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                    <next xsi:type="references:MethodCall">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Collection.class.xmi#//@classifiers.0/@members.5"/>
                        <arguments xsi:type="arrays:ArrayInstantiationBySize">
                          <typeReference xsi:type="types:NamespaceClassifierReference">
                            <classifierReferences target="//@classifiers.0"/>
                          </typeReference>
                          <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        </arguments>
                      </next>
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.10"/>
                    </next>
                  </next>
                </child>
              </value>
            </expression>
          </statements>
          <finallyBlock>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@parameters.0">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
              </expression>
            </statements>
          </finallyBlock>
        </statements>
        <statements xsi:type="statements:ForLoop">
          <comments>// We are not holding the POA mutex here to avoid holding it </comments>
          <comments>// while destroying the POA's children, since this may involve </comments>
          <comments>// upcalls to etherealize methods.</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.37/@members.8">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@statements.0/@variable">
                  <arraySelectors>
                    <position xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@statements.2/@init"/>
                  </arraySelectors>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@parameters.1"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@statements.2/@init"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@statements.0/@variable">
              <next xsi:type="references:IdentifierReference"/>
            </children>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
          <init xsi:type="variables:LocalVariable" name="ctr">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </init>
          <updates xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.7/@statements.2/@init"/>
            <operator xsi:type="operators:PlusPlus"/>
          </updates>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="performDestroy">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="poa">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="destroyedPOATemplates">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../../java/util/Set.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public"/>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Return"/>
          <condition xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.37/@members.7">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@parameters.1"/>
            </child>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="parent">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0">
                <comments>// NOTE: If we are here, poa is in STATE_DESTROYING state. All </comments>
                <comments>// other state checks are taken care of in prepareForDestruction.</comments>
                <comments>// No other threads may either be starting new invocations </comments>
                <comments>// by calling enter or starting to destroy poa.  There may</comments>
                <comments>// still be pending invocations.</comments>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@parameters.0">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="isRoot">
            <typeReference xsi:type="types:Boolean"/>
            <initialValue xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@statements.1/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:TryBlock">
          <statements xsi:type="statements:Condition">
            <comments>// Note that we must lock the parent before the child.</comments>
            <comments>// The parent lock is required (if poa is not the root)</comments>
            <comments>// to safely remove poa from parent's children Map.</comments>
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@statements.1/@variable">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
              </expression>
            </statement>
            <condition xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@statements.2/@variable"/>
            </condition>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@parameters.0">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.37/@members.9">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@statements.1/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@parameters.1"/>
              </expression>
            </statements>
            <finallyBlock>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@parameters.0">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@parameters.0">
                    <comments>// We have just destroyed the root POA, so we need to </comments>
                    <comments>// make sure that the next call to </comments>
                    <comments>// resolve_initial_reference( &quot;RootPOA&quot; )</comments>
                    <comments>// will recreate a valid root POA.</comments>
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                      <next xsi:type="references:MethodCall">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="POAFactory.class.xmi#//@classifiers.0/@members.20"/>
                        </next>
                        <target xsi:type="members:ClassMethod" href="POAManagerImpl.class.xmi#//@classifiers.0/@members.11"/>
                      </next>
                    </next>
                  </expression>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@statements.2/@variable"/>
              </statements>
            </finallyBlock>
          </statements>
          <finallyBlock>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@statements.1/@variable">
                    <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
                  </expression>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@parameters.0">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="literals:NullLiteral"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.8/@statements.2/@variable"/>
              </condition>
            </statements>
          </finallyBlock>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="completeDestruction">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="poa">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="parent">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="destroyedPOATemplates">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../../java/util/Set.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Private"/>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling completeDestruction on poa "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.2"/>
        </statements>
        <statements xsi:type="statements:TryBlock">
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:TryBlock">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0/@members.7"/>
                      </next>
                    </next>
                  </expression>
                </statements>
                <catcheBlocks>
                  <comments>// NO-OP</comments>
                  <parameter name="ex">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/InterruptedException.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </parameter>
                </catcheBlocks>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.5"/>
                      </next>
                    </next>
                  </expression>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.1"/>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.6"/>
                    </next>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
              </children>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="POAManagerImpl.class.xmi#//@classifiers.0/@members.18"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0"/>
                  </next>
                </next>
              </expression>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
              </children>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.1">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.6"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                      <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
                    </arguments>
                  </next>
                </next>
              </expression>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.1"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.2">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Set.class.xmi#//@classifiers.0/@members.6"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.24"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
          <catcheBlocks>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Throw">
                <throwable xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/ThreadDeath.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@statements.1/@catcheBlocks.0/@parameter"/>
                </throwable>
              </statement>
              <condition xsi:type="expressions:InstanceOfExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/ThreadDeath.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@statements.1/@catcheBlocks.0/@parameter"/>
              </condition>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/POASystemException.class.xmi#//@classifiers.0/@members.205"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@statements.1/@catcheBlocks.0/@parameter"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.24"/>
                    </arguments>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.12"/>
                </next>
              </expression>
            </statements>
            <parameter name="thr">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Throwable.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </parameter>
          </catcheBlocks>
          <finallyBlock>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                  <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0/@members.10"/>
                  </next>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0">
                <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/ThreadLocal.class.xmi#//@classifiers.0/@members.7"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                    </arguments>
                  </next>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                      <arguments xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </arguments>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="Exiting completeDestruction on poa "/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.9/@parameters.0"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.37/@members.2"/>
            </statements>
          </finallyBlock>
        </statements>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// Converted from anonymous class to local class</comments>
        <comments>// so that we can call performDestroy() directly.</comments>
      </annotationsAndModifiers>
      <extends xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Thread.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </extends>
    </members>
    <members xsi:type="members:ClassMethod" name="etherealizeAll">
      <typeReference xsi:type="types:Void"/>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling etheralizeAll on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.5"/>
            </next>
          </expression>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Exiting etheralizeAll on poa "/>
                      <children xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="create_POA">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/POA.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="theManager">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/POAManager.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="policies">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/CORBA/Policy.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/AdapterAlreadyExists.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/InvalidPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>//*******************************************************************</comments>
        <comments>// Public POA API </comments>
        <comments>//*******************************************************************</comments>
        <comments>/**&#xA;     * &lt;code>create_POA&lt;/code>&#xA;     * &lt;b>Section 3.3.8.2&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling create_POA(name="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=" theManager="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.1"/>
                    <children xsi:type="references:StringReference" value=" policies="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.2"/>
                    <children xsi:type="references:StringReference" value=") on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <comments>// We cannot create children of a POA that is (being) destroyed.</comments>
          <comments>// This has been added to the CORBA 3.0 spec.</comments>
          <statement xsi:type="statements:Throw">
            <throwable xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../logging/OMGSystemException.class.xmi#//@classifiers.0/@members.222"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.13"/>
            </throwable>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
            <relationOperators xsi:type="operators:GreaterThan"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="poa">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0"/>
            </typeReference>
            <initialValue xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0"/>
              </typeReference>
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0"/>
                  </next>
                </expression>
              </child>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.3/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences target="//@classifiers.0"/>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.0"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.19"/>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                </value>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.3/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </condition>
        </statements>
        <statements xsi:type="statements:TryBlock">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.3/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Calling create_POA: new poa is "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.3/@variable"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/AdapterAlreadyExists.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </throwable>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:NotEqual"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.3/@variable">
                    <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                  </children>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                </expression>
              </children>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="newManager">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="POAManagerImpl.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="POAManagerImpl.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.1"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.5/@statements.3/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="POAManagerImpl.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="POAManagerImpl.class.xmi#//@classifiers.0/@members.11"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="POAManagerImpl.class.xmi#//@classifiers.0/@members.12"/>
                    </next>
                  </arguments>
                </value>
              </expression>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.5/@statements.3/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="defaultCopierId">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../../../spi/copyobject/CopierManager.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.79"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.19"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="POAPolicies">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Policies.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Policies.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@parameters.2"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.5/@statements.5/@variable"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.3/@variable">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.33">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.5/@statements.3/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.5/@statements.6/@variable"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.3/@variable"/>
          </statements>
          <finallyBlock>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39/@statements.0/@statements.3/@variable">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
              </expression>
            </statements>
          </finallyBlock>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="find_POA">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/POA.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="name">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="activate">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/AdapterNonExistent.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>find_POA&lt;/code>&#xA;     * &lt;b>Section 3.3.8.3&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="found">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="act">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/AdapterActivator.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                <arguments xsi:type="references:SelfReference">
                  <self xsi:type="literals:This"/>
                </arguments>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:StringReference" value="Calling find_POA(name="/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.0"/>
                  <children xsi:type="references:StringReference" value=" activate="/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.1"/>
                  <children xsi:type="references:StringReference" value=") on poa "/>
                  <children xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Addition"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@variable"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0"/>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.4"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.0"/>
              </next>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Calling find_POA: found poa "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@variable"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <comments>// Note that found may be in state DESTROYING or DESTROYED at</comments>
            <comments>// this point.  That's OK, since destruction could start at</comments>
            <comments>// any time.</comments>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@variable">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30">
                <comments>// Do not hold the parent POA lock while </comments>
                <comments>// waiting for child to complete initialization.</comments>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <comments>// Make sure that the child has completed its initialization,</comments>
              <comments>// if it was created by an AdapterActivator, otherwise throw</comments>
              <comments>// a standard TRANSIENT exception with minor code 4 (see</comments>
              <comments>// CORBA 3.0 11.3.9.3, in reference to unknown_adapter)</comments>
              <statement xsi:type="statements:Throw">
                <throwable xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/OMGSystemException.class.xmi#//@classifiers.0/@members.602"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.13"/>
                </throwable>
              </statement>
              <condition xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@variable">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.34"/>
                </child>
              </condition>
            </statements>
            <finallyBlock>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@variable">
                  <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
                </expression>
              </statements>
            </finallyBlock>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                      <arguments xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </arguments>
                      <arguments xsi:type="references:StringReference" value="Calling find_POA: no poa found"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@variable">
                      <comments>// Create a child, but don't initialize it.  The newly</comments>
                      <comments>// created POA will be in state STATE_START, which will </comments>
                      <comments>// cause other calls to find_POA that are creating the same</comments>
                      <comments>// POA to block on the waitUntilRunning call above.</comments>
                      <comments>// Initialization must be completed by a call to create_POA </comments>
                      <comments>// inside the unknown_adapter upcall.  Note that </comments>
                      <comments>// this.poaMutex must be held here so that this.children </comments>
                      <comments>// can be safely updated.  The state is set to STATE_INIT </comments>
                      <comments>// so that initialize can make the correct state transition </comments>
                      <comments>// when create_POA is called inside the AdapterActivator.  </comments>
                      <comments>// This avoids activating the new POA too soon </comments>
                      <comments>// by transitioning to STATE_RUN after unknown_adapter </comments>
                      <comments>// returns.</comments>
                    </child>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences target="//@classifiers.0"/>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.0"/>
                      <arguments xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </arguments>
                      <arguments xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.19"/>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
                    </value>
                  </expression>
                </statements>
                <statements xsi:type="statements:Condition">
                  <statement xsi:type="statements:Block">
                    <statements xsi:type="statements:ExpressionStatement">
                      <expression xsi:type="references:IdentifierReference">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                          <arguments xsi:type="references:SelfReference">
                            <self xsi:type="literals:This"/>
                          </arguments>
                          <arguments xsi:type="expressions:AdditiveExpression">
                            <children xsi:type="references:StringReference" value="Calling find_POA: created poa "/>
                            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@variable"/>
                            <additiveOperators xsi:type="operators:Addition"/>
                          </arguments>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                      </expression>
                    </statements>
                  </statement>
                  <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
                </statements>
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.1/@variable"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.1"/>
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </expression>
                </children>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:Throw">
                  <throwable xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/AdapterNonExistent.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                  </throwable>
                </statements>
              </elseStatement>
            </statements>
            <finallyBlock>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
              </statements>
            </finallyBlock>
          </statements>
        </elseStatement>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// assert (found != null) </comments>
        <comments>// assert not holding this.poaMutex OR found.poaMutex</comments>
        <comments>// We must not hold either this.poaMutex or found.poaMutex here while </comments>
        <comments>// waiting for intialization of found to complete to prevent possible </comments>
        <comments>// deadlocks.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="status">
              <typeReference xsi:type="types:Boolean"/>
              <initialValue xsi:type="literals:BooleanLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="adapterResult">
              <typeReference xsi:type="types:Boolean"/>
              <initialValue xsi:type="literals:BooleanLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="references:StringReference" value="Calling find_POA: calling AdapterActivator"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:SynchronizedBlock">
              <comments>// Prevent more than one thread at a time from executing in act </comments>
              <comments>// in case act is shared between multiple POAs.</comments>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.6/@statement/@statements.0/@variable"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../../../../../../../org/omg/PortableServer/AdapterActivatorOperations.class.xmi#//@classifiers.0/@members.0"/>
                      <arguments xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.0"/>
                    </next>
                  </value>
                </expression>
              </statements>
              <lockProvider xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.1/@variable"/>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/OMGSystemException.class.xmi#//@classifiers.0/@members.621"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.6/@statement/@statements.3/@catcheBlocks.0/@parameter"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.0"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.6"/>
                      </next>
                    </arguments>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.13"/>
                </throwable>
              </statements>
              <parameter name="exc">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/SystemException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall">
                  <comments>// ignore most non-system exceptions, but log them for </comments>
                  <comments>// diagnostic purposes.</comments>
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../logging/POASystemException.class.xmi#//@classifiers.0/@members.205"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.6/@statement/@statements.3/@catcheBlocks.1/@parameter"/>
                    <arguments xsi:type="references:SelfReference">
                      <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.24"/>
                      <self xsi:type="literals:This"/>
                    </arguments>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.12"/>
                </expression>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="expressions:CastExpression">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/ThreadDeath.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.6/@statement/@statements.3/@catcheBlocks.1/@parameter"/>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:InstanceOfExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/ThreadDeath.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.6/@statement/@statements.3/@catcheBlocks.1/@parameter"/>
                </condition>
              </statements>
              <parameter name="thr">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Throwable.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
            <finallyBlock>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.6/@statement/@statements.1/@variable">
                    <comments>// At this point, we have completed adapter activation.</comments>
                    <comments>// Whether this was successful or not, we must call </comments>
                    <comments>// destroyIfNotInitDone so that calls to enter() and create_POA()</comments>
                    <comments>// that are waiting can execute again.  Failing to do this</comments>
                    <comments>// will cause the system to hang in complex tests.</comments>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@variable">
                    <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.35"/>
                  </value>
                </expression>
              </statements>
            </finallyBlock>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Throw">
                  <throwable xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../logging/OMGSystemException.class.xmi#//@classifiers.0/@members.622"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@parameters.0"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.6"/>
                        </next>
                      </arguments>
                    </next>
                    <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.13"/>
                  </throwable>
                </statement>
                <condition xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Negate"/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.6/@statement/@statements.1/@variable"/>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.6/@statement/@statements.0/@variable"/>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                        <arguments xsi:type="references:SelfReference">
                          <self xsi:type="literals:This"/>
                        </arguments>
                        <arguments xsi:type="references:StringReference" value="Calling find_POA: AdapterActivator returned false"/>
                      </next>
                      <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              </statements>
              <statements xsi:type="statements:Throw">
                <comments>// OMG Issue 3740 is resolved to throw AdapterNonExistent if</comments>
                <comments>// unknown_adapter() returns false.</comments>
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/AdapterNonExistent.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </throwable>
              </statements>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.1/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="destroy">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="etherealize">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="wait_for_completion">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>destroy&lt;/code>&#xA;     * &lt;b>Section 3.3.8.4&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <comments>// This is to avoid deadlock</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../logging/POASystemException.class.xmi#//@classifiers.0/@members.82"/>
              </next>
              <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.12"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.1"/>
          <children xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.48"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.19"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="destroyer">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0/@members.37"/>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences target="//@classifiers.0/@members.37"/>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@statements.1/@variable">
          <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.37/@members.5">
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41/@parameters.1"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="create_thread_policy">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/ThreadPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/ThreadPolicyValue.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>create_thread_policy&lt;/code>&#xA;     * &lt;b>Section 3.3.8.5&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="ThreadPolicyImpl.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="create_lifespan_policy">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/LifespanPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/LifespanPolicyValue.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>create_lifespan_policy&lt;/code>&#xA;     * &lt;b>Section 3.3.8.5&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="LifespanPolicyImpl.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.43/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="create_id_uniqueness_policy">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/IdUniquenessPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/IdUniquenessPolicyValue.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>create_id_uniqueness_policy&lt;/code>&#xA;     * &lt;b>Section 3.3.8.5&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="IdUniquenessPolicyImpl.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.44/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="create_id_assignment_policy">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/IdAssignmentPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/IdAssignmentPolicyValue.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>create_id_assignment_policy&lt;/code>&#xA;     * &lt;b>Section 3.3.8.5&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="IdAssignmentPolicyImpl.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.45/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="create_implicit_activation_policy">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/ImplicitActivationPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/ImplicitActivationPolicyValue.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>create_implicit_activation_policy&lt;/code>&#xA;     * &lt;b>Section 3.3.8.5&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="ImplicitActivationPolicyImpl.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.46/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="create_servant_retention_policy">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/ServantRetentionPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/ServantRetentionPolicyValue.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>create_servant_retention_policy&lt;/code>&#xA;     * &lt;b>Section 3.3.8.5&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="ServantRetentionPolicyImpl.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.47/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="create_request_processing_policy">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/RequestProcessingPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/RequestProcessingPolicyValue.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>create_request_processing_policy&lt;/code>&#xA;     * &lt;b>Section 3.3.8.5&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="RequestProcessingPolicyImpl.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.48/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="the_name">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>the_name&lt;/code>&#xA;     * &lt;b>Section 3.3.8.6&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="the_parent">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/POA.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>the_parent&lt;/code>&#xA;     * &lt;b>Section 3.3.8.7&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="the_children">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>PortableServer</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/POA.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>the_children&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="coll">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../../../../../java/util/Collection.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Map.class.xmi#//@classifiers.0/@members.10"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="size">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.0/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Collection.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="result">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/POA.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="arrays:ArrayInstantiationBySize">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/POA.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.0/@statements.2/@variable"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="index">
            <typeReference xsi:type="types:Int"/>
            <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="iter">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.0/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Collection.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:WhileLoop">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="poa">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/POA.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/POA.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.0/@statements.5/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                      </next>
                    </expression>
                  </child>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.0/@statements.3/@variable">
                  <arraySelectors>
                    <position xsi:type="expressions:SuffixUnaryModificationExpression">
                      <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.0/@statements.4/@variable"/>
                      <operator xsi:type="operators:PlusPlus"/>
                    </position>
                  </arraySelectors>
                </child>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.0/@statements.6/@statement/@statements.0/@variable"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.0/@statements.5/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../../../../../../../java/util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.51/@statements.0/@statements.3/@variable"/>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="the_POAManager">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/POAManager.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>the_POAManager&lt;/code>&#xA;     * &lt;b>Section 3.3.8.8&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="the_activator">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/AdapterActivator.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>the_activator&lt;/code>&#xA;     * &lt;b>Section 3.3.8.9&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="the_activator">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="activator">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/AdapterActivator.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>the_activator&lt;/code>&#xA;     * &lt;b>Section 3.3.8.9&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling the_activator on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="references:StringReference" value=" activator="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54/@parameters.0"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.54/@parameters.0"/>
          </expression>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="get_servant_manager">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/ServantManager.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>get_servant_manager&lt;/code>&#xA;     * &lt;b>Section 3.3.8.10&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.7"/>
            </next>
          </returnValue>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="set_servant_manager">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="servantManager">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/ServantManager.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>set_servant_manager&lt;/code>&#xA;     * &lt;b>Section 3.3.8.10&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling set_servant_manager on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="references:StringReference" value=" servantManager="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.56/@parameters.0"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.8"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.56/@parameters.0"/>
            </next>
          </expression>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="get_servant">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/NoServant.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>get_servant&lt;/code>&#xA;     * &lt;b>Section 3.3.8.12&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.9"/>
            </next>
          </returnValue>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="set_servant">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="defaultServant">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>set_servant&lt;/code>&#xA;     * &lt;b>Section 3.3.8.13&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling set_servant on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="references:StringReference" value=" defaultServant="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.10"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.58/@parameters.0"/>
            </next>
          </expression>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="activate_object">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="servant">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ServantAlreadyActive.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>activate_object&lt;/code>&#xA;     * &lt;b>Section 3.3.8.14&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling activate_object on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="references:StringReference" value=" (servant="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=")"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="id">
            <typeReference xsi:type="types:Byte">
              <comments>// Allocate a new system-generated object-id.</comments>
              <comments>// This will throw WrongPolicy if not SYSTEM_ID</comments>
              <comments>// policy.</comments>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.13"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:TryBlock">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.11"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@statements.0/@statements.2/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@parameters.0"/>
              </next>
            </expression>
          </statements>
          <catcheBlocks>
            <comments>// This exception can not occur in this case,</comments>
            <comments>// since id is always brand new.</comments>
            <comments>// </comments>
            <parameter name="oaa">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ObjectAlreadyActive.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </parameter>
          </catcheBlocks>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.59/@statements.0/@statements.2/@variable"/>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Exiting activate_object on poa "/>
                      <children xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="activate_object_with_id">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="servant">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ObjectAlreadyActive.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ServantAlreadyActive.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>activate_object_with_id&lt;/code>&#xA;     * &lt;b>Section 3.3.8.15&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling activate_object_with_id on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="references:StringReference" value=" (servant="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@parameters.1"/>
                    <children xsi:type="references:StringReference" value=" id="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=")"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="idClone">
            <typeReference xsi:type="types:Byte">
              <comments>// Clone the id to avoid possible errors due to aliasing</comments>
              <comments>// (e.g. the client passes the id in and then changes it later).</comments>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Byte"/>
              <arrayDimensionsBefore/>
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.5"/>
                  </next>
                </expression>
              </child>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@statements.0/@statements.2/@variable"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.60/@parameters.1"/>
            </next>
          </expression>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Exiting activate_object_with_id on poa "/>
                      <children xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="deactivate_object">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ObjectNotActive.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>deactivate_object&lt;/code>&#xA;     * &lt;b>3.3.8.16&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling deactivate_object on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <children xsi:type="references:StringReference" value=" (id="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=")"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.12"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.61/@parameters.0"/>
            </next>
          </expression>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Exiting deactivate_object on poa "/>
                      <children xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="create_reference">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CORBA</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/CORBA/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="repId">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>create_reference&lt;/code>&#xA;     * &lt;b>3.3.8.17&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling create_reference(repId="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=") on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.62/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.13"/>
              </next>
            </arguments>
          </returnValue>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="create_reference_with_id">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CORBA</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/CORBA/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oid">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="repId">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>create_reference_with_id&lt;/code>&#xA;     * &lt;b>3.3.8.18&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling create_reference_with_id(oid="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=" repId="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63/@parameters.1"/>
                    <children xsi:type="references:StringReference" value=") on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="idClone">
            <typeReference xsi:type="types:Byte">
              <comments>// Clone the id to avoid possible errors due to aliasing</comments>
              <comments>// (e.g. the client passes the id in and then changes it later).</comments>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Byte"/>
              <arrayDimensionsBefore/>
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0/@members.5"/>
                  </next>
                </expression>
              </child>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.63/@statements.0/@statements.2/@variable"/>
          </returnValue>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="servant_to_id">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="servant">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ServantNotActive.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>servant_to_id&lt;/code>&#xA;     * &lt;b>3.3.8.19&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling servant_to_id(servant="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.64/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=") on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.14"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.64/@parameters.0"/>
            </next>
          </returnValue>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="servant_to_reference">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CORBA</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/CORBA/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="servant">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ServantNotActive.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>servant_to_reference&lt;/code>&#xA;     * &lt;b>3.3.8.20&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling servant_to_reference(servant="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=") on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="oid">
            <typeReference xsi:type="types:Byte"/>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.14"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@parameters.0"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="repId">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@parameters.0">
              <next xsi:type="references:MethodCall">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </arraySelectors>
                <target xsi:type="members:ClassMethod" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0/@members.13"/>
                <arguments xsi:type="references:SelfReference">
                  <self xsi:type="literals:This"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.0/@statements.2/@variable"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.63">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.0/@statements.2/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.65/@statements.0/@statements.3/@variable"/>
          </returnValue>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="reference_to_servant">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="reference">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CORBA</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/CORBA/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ObjectNotActive.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongAdapter.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>reference_to_servant&lt;/code>&#xA;     * &lt;b>3.3.8.21&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling reference_to_servant(reference="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=") on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../logging/POASystemException.class.xmi#//@classifiers.0/@members.358"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.12"/>
              </throwable>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="id">
            <typeReference xsi:type="types:Byte">
              <comments>// reference_to_id should throw WrongAdapter</comments>
              <comments>// if the objref was not created by this POA</comments>
            </typeReference>
            <arrayDimensionsBefore/>
            <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.36">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@parameters.0"/>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.66/@statements.0/@statements.3/@variable"/>
            </next>
          </returnValue>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="reference_to_id">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="reference">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CORBA</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/CORBA/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongAdapter.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>reference_to_id&lt;/code>&#xA;     * &lt;b>3.3.8.22&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling reference_to_id(reference="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=") on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../logging/POASystemException.class.xmi#//@classifiers.0/@members.358"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.12"/>
              </throwable>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.36">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67/@parameters.0"/>
          </returnValue>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="id_to_servant">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ObjectNotActive.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>id_to_servant&lt;/code>&#xA;     * &lt;b>3.3.8.23&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling id_to_servant(id="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.68/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=") on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../logging/POASystemException.class.xmi#//@classifiers.0/@members.358"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.12"/>
              </throwable>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </condition>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.68/@parameters.0"/>
            </next>
          </returnValue>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="id_to_reference">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CORBA</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/CORBA/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/ObjectNotActive.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/POAPackage/WrongPolicy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>id_to_reference&lt;/code>&#xA;     * &lt;b>3.3.8.24&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling id_to_reference(id="/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69/@parameters.0"/>
                    <children xsi:type="references:StringReference" value=") on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Throw">
              <throwable xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../logging/POASystemException.class.xmi#//@classifiers.0/@members.358"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.12"/>
              </throwable>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </condition>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="s">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.15"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69/@parameters.0"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="repId">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69/@statements.0/@statements.3/@variable">
              <next xsi:type="references:MethodCall">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </arraySelectors>
                <target xsi:type="members:ClassMethod" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0/@members.13"/>
                <arguments xsi:type="references:SelfReference">
                  <self xsi:type="literals:This"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69/@parameters.0"/>
              </next>
            </initialValue>
          </variable>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.17"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69/@statements.0/@statements.4/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69/@parameters.0"/>
          </returnValue>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="id">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * &lt;code>id&lt;/code>&#xA;     * &lt;b>11.3.8.26 in ptc/00-08-06&lt;/b>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.18"/>
          </returnValue>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getEffectivePolicy">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/CORBA/Policy.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>//***************************************************************</comments>
        <comments>//Implementation of ObjectAdapter interface</comments>
        <comments>//***************************************************************</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Policies.class.xmi#//@classifiers.0/@members.17"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71/@parameters.0"/>
            </next>
            <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.0"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getManagerId">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="POAManagerImpl.class.xmi#//@classifiers.0/@members.15"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getState">
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="POAManagerImpl.class.xmi#//@classifiers.0/@members.19"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getInterfaces">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="servant">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>lang</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="objectId">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="serv">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.74/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.74/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../org/omg/PortableServer/Servant.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:SelfReference">
              <self xsi:type="literals:This"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.74/@parameters.1"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getObjectCopierFactory">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../spi/copyobject/ObjectCopierFactory.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="copierId">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Policies.class.xmi#//@classifiers.0/@members.33"/>
              </next>
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="cm">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../../../spi/copyobject/CopierManager.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../spi/orb/ORB.class.xmi#//@classifiers.0/@members.79"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.19"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.75/@statements.1/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../../../spi/copyobject/CopierManager.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.75/@statements.0/@variable"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="enter">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../spi/oa/OADestroyed.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling enter on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:WhileLoop">
          <comments>// Avoid deadlock if this is the thread that is processing the </comments>
          <comments>// POA.destroy because this is the only thread that can notify </comments>
          <comments>// waiters on beingDestroyedCV.  This can happen if an</comments>
          <comments>// etherealize upcall invokes a method on a colocated object</comments>
          <comments>// served by this POA.</comments>
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:TryBlock">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                </expression>
              </statements>
              <catcheBlocks>
                <comments>// NO-OP</comments>
                <parameter name="ex">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/InterruptedException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                </parameter>
              </catcheBlocks>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../../../../../../java/lang/ThreadLocal.class.xmi#//@classifiers.0/@members.6"/>
                  </next>
                </children>
                <children xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0/@members.1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Boolean.class.xmi#//@classifiers.0"/>
                </children>
              </expression>
            </children>
          </condition>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../spi/oa/OADestroyed.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </throwable>
          </statement>
          <condition xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.34"/>
          </condition>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
            <operator xsi:type="operators:PlusPlus"/>
          </expression>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Exiting enter on poa "/>
                      <children xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="POAManagerImpl.class.xmi#//@classifiers.0/@members.27"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="exit">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling exit on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:SuffixUnaryModificationExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
            <operator xsi:type="operators:MinusMinus"/>
          </expression>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/concurrent/CondVar.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
              </expression>
            </children>
          </condition>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Exiting exit on poa "/>
                      <children xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="POAManagerImpl.class.xmi#//@classifiers.0/@members.28"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getInvocationServant">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="info">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../spi/oa/OAInvocationInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling getInvocationServant on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:LocalVariableStatement">
          <variable name="servant">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>lang</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Object.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <initialValue xsi:type="literals:NullLiteral"/>
          </variable>
        </statements>
        <statements xsi:type="statements:TryBlock">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.0/@statements.2/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.3"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../spi/oa/OAInvocationInfo.class.xmi#//@classifiers.0/@members.9"/>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@parameters.0">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../../spi/oa/OAInvocationInfo.class.xmi#//@classifiers.0/@members.12"/>
                    </next>
                  </arguments>
                </next>
              </value>
            </expression>
          </statements>
          <catcheBlocks>
            <statements xsi:type="statements:Throw">
              <throwable xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../spi/protocol/ForwardException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0/@members.19"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.0/@statements.3/@catcheBlocks.0/@parameter">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../../../../../../../org/omg/PortableServer/ForwardRequest.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                </arguments>
              </throwable>
            </statements>
            <parameter name="freq">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/PortableServer/ForwardRequest.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </parameter>
          </catcheBlocks>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../spi/oa/OAInvocationInfo.class.xmi#//@classifiers.0/@members.16"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.78/@statements.0/@statements.2/@variable"/>
            </next>
          </expression>
        </statements>
        <finallyBlock>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Exiting getInvocationServant on poa "/>
                      <children xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getLocalServant">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <namespaces>org</namespaces>
        <namespaces>omg</namespaces>
        <namespaces>CORBA</namespaces>
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/CORBA/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="objectId">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:NullLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="returnServant">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Called from the subcontract to let this POA cleanup after an&#xA;     *  invocation. Note: If getServant was called, then returnServant&#xA;     *  MUST be called, even in the case of exceptions.  This may be&#xA;     *  called multiple times for a single request.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.29"/>
        </statements>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                  <arguments xsi:type="references:SelfReference">
                    <self xsi:type="literals:This"/>
                  </arguments>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Calling returnServant on poa "/>
                    <children xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </children>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
              </expression>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="POAPolicyMediator.class.xmi#//@classifiers.0/@members.4"/>
            </next>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Exception "/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@catcheBlocks.0/@parameter"/>
                      <children xsi:type="references:StringReference" value=" in returnServant on poa "/>
                      <children xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Throw">
              <throwable xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Error.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@catcheBlocks.0/@parameter"/>
              </throwable>
            </statement>
            <condition xsi:type="expressions:InstanceOfExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Error.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@catcheBlocks.0/@parameter"/>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Throw">
                <throwable xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/RuntimeException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@catcheBlocks.0/@parameter"/>
                </throwable>
              </statement>
              <condition xsi:type="expressions:InstanceOfExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/RuntimeException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80/@statements.0/@catcheBlocks.0/@parameter"/>
              </condition>
            </elseStatement>
          </statements>
          <parameter name="thr">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../../../../../../java/lang/Throwable.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
        <finallyBlock>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0/@members.30"/>
                    <arguments xsi:type="references:SelfReference">
                      <self xsi:type="literals:This"/>
                    </arguments>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="Exiting returnServant on poa "/>
                      <children xsi:type="references:SelfReference">
                        <self xsi:type="literals:This"/>
                      </children>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../orbutil/ORBUtility.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.30"/>
          </statements>
        </finallyBlock>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * POAImpl is the implementation of the Portable Object Adapter. It &#xA; * contains an implementation of the POA interfaces specified in&#xA; * COBRA 2.3.1 chapter 11 (formal/99-10-07).  This implementation&#xA; * is moving to comply with CORBA 3.0 due to the many clarifications&#xA; * that have been made to the POA semantics since CORBA 2.3.1.&#xA; * Specific comments have been added where 3.0 applies, but note that&#xA; * we do not have the new 3.0 APIs yet.&#xA; */</comments>
    </annotationsAndModifiers>
    <implements xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../../../../../../org/omg/PortableServer/POA.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </implements>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="../../../spi/oa/ObjectAdapterBase.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
