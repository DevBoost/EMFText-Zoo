<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../../../java.ecore#/16" name="InputObject.java">
  <comments>/*&#xA; * @(#)InputObject.java&#x9;1.13 03/12/19&#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>corba</namespaces>
  <namespaces>se</namespaces>
  <namespaces>pept</namespaces>
  <namespaces>encoding</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>pept</namespaces>
    <namespaces>protocol</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../protocol/MessageMediator.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="InputObject">
    <members xsi:type="members:InterfaceMethod" name="setMessageMediator">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="messageMediator">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../protocol/MessageMediator.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getMessageMediator">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../protocol/MessageMediator.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="close">
      <typeReference xsi:type="types:Void"/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../../../java/io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;p> An &lt;code>InputObject&lt;/code> is the interface used by the&#xA; * presentation block to get programming language typed data from data&#xA; *  encoded in a message. &lt;/p>&#xA; *&#xA; * &lt;p> The implementation of an &lt;code>InputObject&lt;/code> contains the&#xA; * encoded data.  When the presentation block asks for data the&#xA; * implementation of &lt;code>InputObject&lt;/code> is responsible for converting&#xA; * the encoded representation of the data to the types expected by the&#xA; * programming language.&lt;/p>&#xA; *&#xA; * &lt;p>A particular &lt;em>encoding&lt;/em> would subclass&#xA; * &lt;code>InputObject&lt;/code>.  The subclass would provide methods to get&#xA; * the data types appropriate to the presentation block (e.g., simple&#xA; * types such as int or boolean, all the way to any type derived from&#xA; * &lt;code>java.io.Serializable&lt;/code>.).&lt;/p>&#xA; *&#xA; * &lt;p>Note: the protocol block may also use the &lt;code>InputObject&lt;/code> to&#xA; * obtain header metadata.&lt;/p>&#xA; *&#xA; * @author Harold Carr&#xA;*/</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
