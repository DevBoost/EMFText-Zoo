<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../../../../java.ecore#/7 http://www.emftext.org/java/members ../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../../../../java.ecore#/13 http://www.emftext.org/java/types ../../../../../../java.ecore#/16" name="IIOPPrimaryToContactInfo.java">
  <comments>/*&#xA; * @(#)IIOPPrimaryToContactInfo.java&#x9;1.4 04/07/26&#xA; * &#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>corba</namespaces>
  <namespaces>se</namespaces>
  <namespaces>spi</namespaces>
  <namespaces>transport</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../../../../../java/util/List.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>pept</namespaces>
    <namespaces>transport</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../pept/transport/ContactInfo.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="IIOPPrimaryToContactInfo">
    <members xsi:type="members:InterfaceMethod" name="reset">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="primary">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../pept/transport/ContactInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * @param primary - clear any state relating to primary.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="hasNext">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="primary">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../pept/transport/ContactInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="previous">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../pept/transport/ContactInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="contactInfos">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../java/util/List.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * @param primary - the key.&#xA;     * @param previous - if null return true.  Otherwise, find previous in &#xA;     * &lt;code>contactInfos&lt;/code> and if another &lt;code>ContactInfo&lt;/code>&#xA;     * follows it in the list then return true.  Otherwise false.&#xA;     * @param contactInfos - the list of replicas associated with the&#xA;     * primary.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="next">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="../../pept/transport/ContactInfo.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="primary">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../pept/transport/ContactInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="previous">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../pept/transport/ContactInfo.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="contactInfos">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../../../../../java/util/List.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * @param primary - the key.&#xA;     * @param previous - if null then map primary to failover.  If failover is&#xA;     * empty then map primary to primary and return primary.  If failover is&#xA;     * non-empty then return failover.  If previous is non-null that&#xA;     * indicates that the previous failed.  Therefore, find previous in&#xA;     * contactInfos.  Map the &lt;code>ContactInfo&lt;/code> following&#xA;     * previous to primary and return that &lt;code>ContactInfo&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This interface is the &quot;sticky manager&quot; for IIOP failover.  The default&#xA; * ORB does NOT contain a sticky manager.  One is registered by supplying&#xA; * a class via the com.sun.CORBA.transport.ORBIIOPPrimaryToContactInfoClass.&#xA; *&#xA; * It uses the IIOP primary host/port (with a SocketInfo.IIOP_CLEAR_TEXT type)&#xA; * as a key to map to the last ContactInfo that resulted in successful'&#xA; * communication.&#xA; *&#xA; * It mainly prevents &quot;fallback&quot; - if a previously failed replica comes&#xA; * back up we do NOT want to switch back to using it - particularly in the&#xA; * case of statefull session beans.&#xA; *&#xA; * Note: This assumes static lists of replicas (e.g., AS 8.1 EE).&#xA; * This does NOT work well with LOCATION_FORWARD.  &#xA; *&#xA; * @author Harold Carr&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
