<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../../../../../java.ecore#/7 http://www.emftext.org/java/literals ../../../../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../../../../../java.ecore#/13 http://www.emftext.org/java/references ../../../../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../../../../java.ecore#/16" name="Message_1_0.java">
  <comments>/*&#xA; * @(#)Message_1_0.java&#x9;1.10 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>corba</namespaces>
  <namespaces>se</namespaces>
  <namespaces>impl</namespaces>
  <namespaces>protocol</namespaces>
  <namespaces>giopmsgheaders</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>nio</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>CORBA</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/INTERNAL.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>org</namespaces>
    <namespaces>omg</namespaces>
    <namespaces>CORBA</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>ior</namespaces>
    <namespaces>iiop</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>spi</namespaces>
    <namespaces>logging</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../../spi/logging/CORBALogDomains.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>com</namespaces>
    <namespaces>sun</namespaces>
    <namespaces>corba</namespaces>
    <namespaces>se</namespaces>
    <namespaces>impl</namespaces>
    <namespaces>logging</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="Message_1_0">
    <members xsi:type="members:Field" name="wrapper">
      <initialValue xsi:type="references:IdentifierReference">
        <next xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.300"/>
          <arguments xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../spi/logging/CORBALogDomains.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../spi/logging/CORBALogDomains.class.xmi#//@classifiers.0"/>
          </arguments>
        </next>
        <target xsi:type="classifiers:Class" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="magic">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Int"/>
        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      </initialValue>
      <typeReference xsi:type="types:Int">
        <comments>// Instance variables</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="GIOP_version">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="byte_order">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
    </members>
    <members xsi:type="members:Field" name="message_type">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
    </members>
    <members xsi:type="members:Field" name="message_size">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Int"/>
        <child xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
    </members>
    <members xsi:type="members:Constructor" name="Message_1_0">
      <comments>// Constructor</comments>
    </members>
    <members xsi:type="members:Constructor" name="Message_1_0">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.0"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.2"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.3"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="_magic">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="_byte_order">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="_message_type">
        <typeReference xsi:type="types:Byte"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="_message_size">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <members xsi:type="members:ClassMethod" name="getGIOPVersion">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// Accessor methods</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
          <self xsi:type="literals:This"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getType">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
          <self xsi:type="literals:This"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getSize">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
          <self xsi:type="literals:This"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isLittleEndian">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
          <self xsi:type="literals:This"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="moreFragmentsToFollow">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setSize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="byteBuffer">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="size">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// Mutator methods</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="patch">
          <typeReference xsi:type="types:Int">
            <comments>//</comments>
            <comments>// Patch the size field in the header.</comments>
            <comments>//</comments>
          </typeReference>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.1"/>
            <children xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="Message.class.xmi#//@classifiers.0/@members.5"/>
            </children>
            <additiveOperators xsi:type="operators:Subtraction"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                <arguments xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Byte"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.1/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                          <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </expression>
                  </child>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
                <arguments xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Byte"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.1/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                          <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </expression>
                  </child>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
                <arguments xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Byte"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.1/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                          <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </expression>
                  </child>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
                <arguments xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Byte"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.1/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </expression>
                  </child>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:MethodCall" target="//@classifiers.0/@members.11"/>
        </condition>
        <elseStatement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                <arguments xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Byte"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.1/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                          <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </expression>
                  </child>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="9"/>
                <arguments xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Byte"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.1/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                          <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </expression>
                  </child>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
                <arguments xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Byte"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.1/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                          <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </expression>
                  </child>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../../../../../../java/nio/ByteBuffer.class.xmi#//@classifiers.0/@members.17"/>
                <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="11"/>
                <arguments xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Byte"/>
                  <child xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.1/@variable"/>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                          <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </expression>
                  </child>
                </arguments>
              </next>
            </expression>
          </statements>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="createFragmentMessage">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="FragmentMessage.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Throw">
        <throwable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../logging/ORBUtilSystemException.class.xmi#//@classifiers.0/@members.878"/>
            <arguments xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0/@members.5"/>
              </next>
              <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/CompletionStatus.class.xmi#//@classifiers.0"/>
            </arguments>
          </next>
        </throwable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="read">
      <comments>/*&#xA;        this.magic = istream.read_long();&#xA;        this.GIOP_version = (new GIOPVersion()).read(istream);&#xA;        this.byte_order = istream.read_boolean();&#xA;        this.message_type = istream.read_octet();&#xA;        this.message_size = istream.read_ulong();&#xA;        */</comments>
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="istream">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CORBA</namespaces>
          <namespaces>portable</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/portable/InputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// IO methods</comments>
        <comments>// This should do nothing even if it is called. The Message Header already</comments>
        <comments>// is read off java.io.InputStream (not a CDRInputStream) by IIOPConnection</comments>
        <comments>// in order to choose the correct CDR Version, msg_type, and msg_size.</comments>
        <comments>// So, we would never need to read the Message Header off a CDRInputStream.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="write">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="ostream">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>org</namespaces>
          <namespaces>omg</namespaces>
          <namespaces>CORBA</namespaces>
          <namespaces>portable</namespaces>
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../../../../../../org/omg/CORBA/portable/OutputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../org/omg/CORBA/portable/OutputStream.class.xmi#//@classifiers.0/@members.8"/>
            <arguments xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
              <self xsi:type="literals:This"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="MessageBase.class.xmi#//@classifiers.0/@members.27"/>
          <arguments xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2"/>
            <self xsi:type="literals:This"/>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../../spi/ior/iiop/GIOPVersion.class.xmi#//@classifiers.0/@members.29"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0"/>
            </next>
          </next>
          <self xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../org/omg/CORBA/portable/OutputStream.class.xmi#//@classifiers.0/@members.2"/>
            <arguments xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
              <self xsi:type="literals:This"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../org/omg/CORBA/portable/OutputStream.class.xmi#//@classifiers.0/@members.5"/>
            <arguments xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
              <self xsi:type="literals:This"/>
            </arguments>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../../../../../../org/omg/CORBA/portable/OutputStream.class.xmi#//@classifiers.0/@members.9"/>
            <arguments xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
              <self xsi:type="literals:This"/>
            </arguments>
          </next>
        </expression>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/*&#xA; * This implements the GIOP 1.0 Message header.&#xA; *&#xA; * @author Ram Jeyaraman 05/14/2000&#xA; * @version 1.0&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <namespaces>com</namespaces>
      <namespaces>sun</namespaces>
      <namespaces>corba</namespaces>
      <namespaces>se</namespaces>
      <namespaces>impl</namespaces>
      <namespaces>protocol</namespaces>
      <namespaces>giopmsgheaders</namespaces>
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="MessageBase.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
