<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/types ../../../java.ecore#/16" name="ProgramElementDoc.java">
  <comments>/*&#xA; * @(#)ProgramElementDoc.java&#x9;1.8 02/10/04&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>javadoc</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="ProgramElementDoc">
    <members xsi:type="members:InterfaceMethod" name="containingClass">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Get the containing class or interface of this program element.&#xA;     *&#xA;     * @return a ClassDoc for this element's containing class or interface.&#xA;     * If this is a top-level class or interface, return null.&#xA;     */</comments>
          <target xsi:type="classifiers:Interface" href="ClassDoc.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="containingPackage">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Get the package that this program element is contained in.&#xA;     *&#xA;     * @return a PackageDoc for this element containing package.&#xA;     * If in the unnamed package, this PackageDoc will have the&#xA;     * name &quot;&quot;.&#xA;     */</comments>
          <target xsi:type="classifiers:Interface" href="PackageDoc.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="qualifiedName">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Get the fully qualified name of this program element.&#xA;     * For example, for the class &lt;code>java.util.Hashtable&lt;/code>,&#xA;     * return &quot;java.util.Hashtable&quot;.&#xA;     * &lt;p>&#xA;     * For the method &lt;code>bar()&lt;/code> in class &lt;code>Foo&lt;/code>&#xA;     * in the unnamed package, return &quot;Foo.bar&quot;.&#xA;     * &lt;/pre>&#xA;     *&#xA;     * @return the qualified name of the program element as a String.&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="modifierSpecifier">
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;     * Get the modifier specifier integer.&#xA;     *&#xA;     * @see java.lang.reflect.Modifier&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="modifiers">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Get modifiers string.&#xA;     * For example, for:&#xA;     * &lt;pre>&#xA;     *   public abstract int foo() { ... }&#xA;     * &lt;/pre>&#xA;     * return &quot;public abstract&quot;.&#xA;     * Annotations are not included.&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="annotations">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Get the annotations of this program element.&#xA;     * Return an empty array if there are none.&#xA;     *&#xA;     * @return the annotations of this program element.&#xA;     * @since 1.5&#xA;     */</comments>
          <target xsi:type="classifiers:Interface" href="AnnotationDesc.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isPublic">
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * Return true if this program element is public.&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isProtected">
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * Return true if this program element is protected.&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isPrivate">
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * Return true if this program element is private.&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isPackagePrivate">
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * Return true if this program element is package private.&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isStatic">
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * Return true if this program element is static.&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isFinal">
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * Return true if this program element is final.&#xA;     */</comments>
      </typeReference>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Represents a java program element: class, interface, field,&#xA; * constructor, or method.&#xA; * This is an abstract class dealing with information common to&#xA; * these elements.&#xA; *&#xA; * @see MemberDoc&#xA; * @see ClassDoc&#xA; *&#xA; * @author Robert Field&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="Doc.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
