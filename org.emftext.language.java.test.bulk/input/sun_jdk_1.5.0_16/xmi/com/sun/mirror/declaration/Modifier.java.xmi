<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../../java.ecore#/5 http://www.emftext.org/java/literals ../../../../java.ecore#/9 http://www.emftext.org/java/members ../../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../../java.ecore#/12 http://www.emftext.org/java/references ../../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../../java.ecore#/15 http://www.emftext.org/java/types ../../../../java.ecore#/16" name="Modifier.java">
  <comments>/*&#xA; * @(#)Modifier.java&#x9;1.1 04/01/26&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc.  All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL.  Use is subject to license terms.&#xA; */</comments>
  <namespaces>com</namespaces>
  <namespaces>sun</namespaces>
  <namespaces>mirror</namespaces>
  <namespaces>declaration</namespaces>
  <classifiers xsi:type="classifiers:Enumeration" name="Modifier">
    <members xsi:type="members:Field" name="lowercase">
      <initialValue xsi:type="literals:NullLiteral"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
    </members>
    <members xsi:type="members:ClassMethod" name="toString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../../../java/lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// modifier name in lowercase</comments>
        <comments>/**&#xA;     * Returns this modifier's name in lowercase.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../../../java/lang/String.class.xmi#//@classifiers.0/@members.67"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../../../../java/util/Locale.class.xmi#//@classifiers.0/@members.18"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../../../../java/util/Locale.class.xmi#//@classifiers.0"/>
                      </next>
                    </next>
                  </arguments>
                </next>
                <target xsi:type="members:ClassMethod" href="../../../../java/lang/Enum.class.xmi#//@classifiers.0/@members.2"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Represents a modifier on the declaration of a program element such&#xA; * as a class, method, or field.&#xA; *&#xA; * &lt;p> Not all modifiers are applicable to all kinds of declarations.&#xA; * When two or more modifiers appear in the source code of a declaration,&#xA; * then it is customary, though not required, that they appear in the same&#xA; * order as the constants listed in the detail section below.&#xA; *&#xA; * @author Joseph D. Darcy&#xA; * @author Scott Seligman&#xA; * @version 1.1 04/01/25&#xA; * @since 1.5&#xA; */</comments>
    </annotationsAndModifiers>
    <constants name="PUBLIC">
      <comments>// See JLS2 sections 8.1.1, 8.3.1, 8.4.3, 8.8.3, and 9.1.1.</comments>
      <comments>// java.lang.reflect.Modifier includes INTERFACE, but that's a VMism.</comments>
      <comments>/** The modifier &lt;tt>public&lt;/tt> */</comments>
    </constants>
    <constants name="PROTECTED">
      <comments>/** The modifier &lt;tt>protected&lt;/tt> */</comments>
    </constants>
    <constants name="PRIVATE">
      <comments>/** The modifier &lt;tt>private&lt;/tt> */</comments>
    </constants>
    <constants name="ABSTRACT">
      <comments>/** The modifier &lt;tt>abstract&lt;/tt> */</comments>
    </constants>
    <constants name="STATIC">
      <comments>/** The modifier &lt;tt>static&lt;/tt> */</comments>
    </constants>
    <constants name="FINAL">
      <comments>/** The modifier &lt;tt>final&lt;/tt> */</comments>
    </constants>
    <constants name="TRANSIENT">
      <comments>/** The modifier &lt;tt>transient&lt;/tt> */</comments>
    </constants>
    <constants name="VOLATILE">
      <comments>/** The modifier &lt;tt>volatile&lt;/tt> */</comments>
    </constants>
    <constants name="SYNCHRONIZED">
      <comments>/** The modifier &lt;tt>synchronized&lt;/tt> */</comments>
    </constants>
    <constants name="NATIVE">
      <comments>/** The modifier &lt;tt>native&lt;/tt> */</comments>
    </constants>
    <constants name="STRICTFP">
      <comments>/** The modifier &lt;tt>strictfp&lt;/tt> */</comments>
    </constants>
  </classifiers>
</containers:CompilationUnit>
