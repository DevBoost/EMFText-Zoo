<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/expressions ../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../java.ecore#/8 http://www.emftext.org/java/literals ../../java.ecore#/9 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/operators ../../java.ecore#/12 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/references ../../java.ecore#/14 http://www.emftext.org/java/statements ../../java.ecore#/15 http://www.emftext.org/java/types ../../java.ecore#/16" name="RoundingMode.java">
  <comments>/*&#xA; * @(#)RoundingMode.java&#x9;1.3 04/06/18&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <comments>/*&#xA; * @(#)RoundingMode.java  1.x 01/xx/xx&#xA; *&#xA; * Copyright 2001 Sun Microsystems, Inc. All Rights Reserved.&#xA; * Portions Copyright IBM Corporation, 2001. All Rights Reserved.&#xA; *&#xA; * This software is the proprietary information of Sun Microsystems, Inc.&#xA; * Use is subject to license terms.&#xA; *&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>math</namespaces>
  <classifiers xsi:type="classifiers:Enumeration" name="RoundingMode">
    <members xsi:type="members:Field" name="oldMode">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>// Corresponding BigDecimal rounding constant</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="RoundingMode">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@parameters.0"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldMode">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Constructor&#xA;     *&#xA;     * @param oldMode The &lt;tt>BigDecimal&lt;/tt> constant corresponding to &#xA;     *        this mode&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="valueOf">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="rm">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the &lt;tt>RoundingMode&lt;/tt> object corresponding to a&#xA;     * legacy integer rounding mode constant in {@link BigDecimal}.&#xA;     *&#xA;     * @param  rm legacy integer rounding mode to convert&#xA;     * @return &lt;tt>RoundingMode&lt;/tt> corresponding to the given integer.&#xA;     * @throws IllegalArgumentException integer is out of range&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@constants.0"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.13"/>
            </next>
            <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@constants.1"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.14"/>
            </next>
            <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@constants.2"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.15"/>
            </next>
            <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@constants.3"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.16"/>
            </next>
            <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@constants.4"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.17"/>
            </next>
            <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@constants.5"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.18"/>
            </next>
            <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@constants.6"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.19"/>
            </next>
            <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@constants.7"/>
          </statements>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.20"/>
            </next>
            <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
          </condition>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="argument out of range"/>
            </throwable>
          </statements>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.2/@parameters.0"/>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Specifies a &lt;i>rounding behavior&lt;/i> for numerical operations&#xA; * capable of discarding precision. Each rounding mode indicates how&#xA; * the least significant returned digit of a rounded result is to be&#xA; * calculated.  If fewer digits are returned than the digits needed to&#xA; * represent the exact numerical result, the discarded digits will be&#xA; * referred to as the &lt;i>discarded fraction&lt;/i> regardless the digits'&#xA; * contribution to the value of the number.  In other words,&#xA; * considered as a numerical value, the discarded fraction could have&#xA; * an absolute value greater than one.&#xA; *&#xA; * &lt;p>Each rounding mode description includes a table listing how&#xA; * different two-digit decimal values would round to a one digit&#xA; * decimal value under the rounding mode in question.  The result&#xA; * column in the tables could be gotten by creating a&#xA; * &lt;tt>BigDecimal&lt;/tt> number with the specified value, forming a&#xA; * {@link MathContext} object with the proper settings&#xA; * (&lt;tt>precision&lt;/tt> set to &lt;tt>1&lt;/tt>, and the&#xA; * &lt;tt>roundingMode&lt;/tt> set to the rounding mode in question), and&#xA; * calling {@link BigDecimal#round round} on this number with the&#xA; * proper &lt;tt>MathContext&lt;/tt>.  A summary table showing the results&#xA; * of these rounding operations for all rounding modes appears below.&#xA; *&#xA; *&lt;p>&#xA; *&lt;table border>&#xA; * &lt;caption top>&lt;h3>Summary of Rounding Operations Under Different Rounding Modes&lt;/h3>&lt;/caption>&#xA; * &lt;tr>&lt;th>&lt;/th>&lt;th colspan=8>Result of rounding input to one digit with the given &#xA; *                           rounding mode&lt;/th>&#xA; * &lt;tr valign=top>&#xA; * &lt;th>Input Number&lt;/th>&#x9; &lt;th>&lt;tt>UP&lt;/tt>&lt;/th> &#xA; *                                           &lt;th>&lt;tt>DOWN&lt;/tt>&lt;/th> &#xA; *                                                        &lt;th>&lt;tt>CEILING&lt;/tt>&lt;/th>&#xA; *                                                                       &lt;th>&lt;tt>FLOOR&lt;/tt>&lt;/th>&#xA; *                                                                                    &lt;th>&lt;tt>HALF_UP&lt;/tt>&lt;/th>&#xA; *                                                                                                   &lt;th>&lt;tt>HALF_DOWN&lt;/tt>&lt;/th>&#xA; *                                                                                                                    &lt;th>&lt;tt>HALF_EVEN&lt;/tt>&lt;/th>&#xA; *                                                                                                                                     &lt;th>&lt;tt>UNNECESSARY&lt;/tt>&lt;/th>&#xA; *    &#xA; * &lt;tr align=right>&lt;td>5.5&lt;/td>&#x9; &lt;td>6&lt;/td>  &lt;td>5&lt;/td>    &lt;td>6&lt;/td>    &lt;td>5&lt;/td>  &lt;td>6&lt;/td>      &lt;td>5&lt;/td>       &lt;td>6&lt;/td>       &lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA; * &lt;tr align=right>&lt;td>2.5&lt;/td>&#x9; &lt;td>3&lt;/td>  &lt;td>2&lt;/td>    &lt;td>3&lt;/td>    &lt;td>2&lt;/td>  &lt;td>3&lt;/td>      &lt;td>2&lt;/td>       &lt;td>2&lt;/td>       &lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA; * &lt;tr align=right>&lt;td>1.6&lt;/td>&#x9; &lt;td>2&lt;/td>  &lt;td>1&lt;/td>    &lt;td>2&lt;/td> &#x9; &lt;td>1&lt;/td>  &lt;td>2&lt;/td>      &lt;td>2&lt;/td>       &lt;td>2&lt;/td>       &lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA; * &lt;tr align=right>&lt;td>1.1&lt;/td>&#x9; &lt;td>2&lt;/td>  &lt;td>1&lt;/td>    &lt;td>2&lt;/td> &#x9; &lt;td>1&lt;/td>  &lt;td>1&lt;/td>      &lt;td>1&lt;/td>       &lt;td>1&lt;/td>       &lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA; * &lt;tr align=right>&lt;td>1.0&lt;/td>&#x9; &lt;td>1&lt;/td>  &lt;td>1&lt;/td>    &lt;td>1&lt;/td> &#x9; &lt;td>1&lt;/td>  &lt;td>1&lt;/td>      &lt;td>1&lt;/td>       &lt;td>1&lt;/td>       &lt;td>1&lt;/td>                                &#xA; * &lt;tr align=right>&lt;td>-1.0&lt;/td> &lt;td>-1&lt;/td> &lt;td>-1&lt;/td>   &lt;td>-1&lt;/td>&#x9; &lt;td>-1&lt;/td> &lt;td>-1&lt;/td>     &lt;td>-1&lt;/td>      &lt;td>-1&lt;/td>      &lt;td>-1&lt;/td>                               &#xA; * &lt;tr align=right>&lt;td>-1.1&lt;/td> &lt;td>-2&lt;/td> &lt;td>-1&lt;/td>   &lt;td>-1&lt;/td>&#x9; &lt;td>-2&lt;/td> &lt;td>-1&lt;/td>     &lt;td>-1&lt;/td>      &lt;td>-1&lt;/td>      &lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA; * &lt;tr align=right>&lt;td>-1.6&lt;/td> &lt;td>-2&lt;/td> &lt;td>-1&lt;/td>   &lt;td>-1&lt;/td>&#x9; &lt;td>-2&lt;/td> &lt;td>-2&lt;/td>     &lt;td>-2&lt;/td>      &lt;td>-2&lt;/td>      &lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA; * &lt;tr align=right>&lt;td>-2.5&lt;/td> &lt;td>-3&lt;/td> &lt;td>-2&lt;/td>   &lt;td>-2&lt;/td>&#x9; &lt;td>-3&lt;/td> &lt;td>-3&lt;/td>     &lt;td>-2&lt;/td>      &lt;td>-2&lt;/td>      &lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA; * &lt;tr align=right>&lt;td>-5.5&lt;/td> &lt;td>-6&lt;/td> &lt;td>-5&lt;/td>   &lt;td>-5&lt;/td>&#x9; &lt;td>-6&lt;/td> &lt;td>-6&lt;/td>     &lt;td>-5&lt;/td>      &lt;td>-6&lt;/td>      &lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA; *&lt;/table>&#xA; *&#xA; * &#xA; * &lt;p>This &lt;tt>enum&lt;/tt> is intended to replace the integer-based&#xA; * enumeration of rounding mode constants in {@link BigDecimal}&#xA; * ({@link BigDecimal#ROUND_UP}, {@link BigDecimal#ROUND_DOWN},&#xA; * etc. ).&#xA; *&#xA; * @see     BigDecimal&#xA; * @see     MathContext&#xA; * @version 1.x 01/xx/xx&#xA; * @author  Josh Bloch&#xA; * @author  Mike Cowlishaw&#xA; * @author  Joseph D. Darcy&#xA; */</comments>
    </annotationsAndModifiers>
    <constants name="UP">
      <comments>/**&#xA;&#x9; * Rounding mode to round away from zero.  Always increments the&#xA;&#x9; * digit prior to a non-zero discarded fraction.  Note that this&#xA;&#x9; * rounding mode never decreases the magnitude of the calculated&#xA;&#x9; * value.&#xA;&#x9; *&#xA;&#x9; *&lt;p>Example:&#xA;&#x9; *&lt;table border>&#xA;&#x9; *&lt;tr valign=top>&lt;th>Input Number&lt;/th>&#xA;&#x9; *    &lt;th>Input rounded to one digit&lt;br> with &lt;tt>UP&lt;/tt> rounding&#xA;&#x9; *&lt;tr align=right>&lt;td>5.5&lt;/td>&#x9;&lt;td>6&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>2.5&lt;/td>&#x9;&lt;td>3&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.6&lt;/td>&#x9;&lt;td>2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.1&lt;/td>&#x9;&lt;td>2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.0&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.0&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.1&lt;/td>&#x9;&lt;td>-2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.6&lt;/td>&#x9;&lt;td>-2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-2.5&lt;/td>&#x9;&lt;td>-3&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-5.5&lt;/td>&#x9;&lt;td>-6&lt;/td>&#xA;&#x9; *&lt;/table>&#xA;&#x9; */</comments>
      <arguments xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.13"/>
        </next>
        <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
      </arguments>
    </constants>
    <constants name="DOWN">
      <comments>/**&#xA;&#x9; * Rounding mode to round towards zero.  Never increments the digit&#xA;&#x9; * prior to a discarded fraction (i.e., truncates).  Note that this&#xA;&#x9; * rounding mode never increases the magnitude of the calculated value.&#xA;&#x9; *&#xA;&#x9; *&lt;p>Example:&#xA;&#x9; *&lt;table border>&#xA;&#x9; *&lt;tr valign=top>&lt;th>Input Number&lt;/th>&#xA;&#x9; *    &lt;th>Input rounded to one digit&lt;br> with &lt;tt>DOWN&lt;/tt> rounding&#xA;&#x9; *&lt;tr align=right>&lt;td>5.5&lt;/td>&#x9;&lt;td>5&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>2.5&lt;/td>&#x9;&lt;td>2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.6&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.1&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.0&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.0&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.1&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.6&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-2.5&lt;/td>&#x9;&lt;td>-2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-5.5&lt;/td>&#x9;&lt;td>-5&lt;/td>&#xA;&#x9; *&lt;/table>&#xA;&#x9; */</comments>
      <arguments xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.14"/>
        </next>
        <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
      </arguments>
    </constants>
    <constants name="CEILING">
      <comments>/**&#xA;&#x9; * Rounding mode to round towards positive infinity.  If the&#xA;&#x9; * result is positive, behaves as for &lt;tt>RoundingMode.UP&lt;/tt>;&#xA;&#x9; * if negative, behaves as for &lt;tt>RoundingMode.DOWN&lt;/tt>.  Note&#xA;&#x9; * that this rounding mode never decreases the calculated value.&#xA;&#x9; *&#xA;&#x9; *&lt;p>Example:&#xA;&#x9; *&lt;table border>&#xA;&#x9; *&lt;tr valign=top>&lt;th>Input Number&lt;/th>&#xA;&#x9; *    &lt;th>Input rounded to one digit&lt;br> with &lt;tt>CEILING&lt;/tt> rounding&#xA;&#x9; *&lt;tr align=right>&lt;td>5.5&lt;/td>&#x9;&lt;td>6&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>2.5&lt;/td>&#x9;&lt;td>3&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.6&lt;/td>&#x9;&lt;td>2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.1&lt;/td>&#x9;&lt;td>2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.0&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.0&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.1&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.6&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-2.5&lt;/td>&#x9;&lt;td>-2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-5.5&lt;/td>&#x9;&lt;td>-5&lt;/td>&#xA;&#x9; *&lt;/table>&#xA;&#x9; */</comments>
      <arguments xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.15"/>
        </next>
        <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
      </arguments>
    </constants>
    <constants name="FLOOR">
      <comments>/**&#xA;&#x9; * Rounding mode to round towards negative infinity.  If the&#xA;&#x9; * result is positive, behave as for &lt;tt>RoundingMode.DOWN&lt;/tt>;&#xA;&#x9; * if negative, behave as for &lt;tt>RoundingMode.UP&lt;/tt>.  Note that&#xA;&#x9; * this rounding mode never increases the calculated value.&#xA;&#x9; *&#xA;&#x9; *&lt;p>Example:&#xA;&#x9; *&lt;table border>&#xA;&#x9; *&lt;tr valign=top>&lt;th>Input Number&lt;/th>&#xA;&#x9; *    &lt;th>Input rounded to one digit&lt;br> with &lt;tt>FLOOR&lt;/tt> rounding&#xA;&#x9; *&lt;tr align=right>&lt;td>5.5&lt;/td>&#x9;&lt;td>5&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>2.5&lt;/td>&#x9;&lt;td>2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.6&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.1&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.0&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.0&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.1&lt;/td>&#x9;&lt;td>-2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.6&lt;/td>&#x9;&lt;td>-2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-2.5&lt;/td>&#x9;&lt;td>-3&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-5.5&lt;/td>&#x9;&lt;td>-6&lt;/td>&#xA;&#x9; *&lt;/table>&#xA;&#x9; */</comments>
      <arguments xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.16"/>
        </next>
        <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
      </arguments>
    </constants>
    <constants name="HALF_UP">
      <comments>/**&#xA;&#x9; * Rounding mode to round towards &amp;quot;nearest neighbor&amp;quot;&#xA;&#x9; * unless both neighbors are equidistant, in which case round up.&#xA;&#x9; * Behaves as for &lt;tt>RoundingMode.UP&lt;/tt> if the discarded&#xA;&#x9; * fraction is &amp;gt;= 0.5; otherwise, behaves as for&#xA;&#x9; * &lt;tt>RoundingMode.DOWN&lt;/tt>.  Note that this is the rounding&#xA;&#x9; * mode commonly taught at school.&#xA;&#x9; *&#xA;&#x9; *&lt;p>Example:&#xA;&#x9; *&lt;table border>&#xA;&#x9; *&lt;tr valign=top>&lt;th>Input Number&lt;/th>&#xA;&#x9; *    &lt;th>Input rounded to one digit&lt;br> with &lt;tt>HALF_UP&lt;/tt> rounding&#xA;&#x9; *&lt;tr align=right>&lt;td>5.5&lt;/td>&#x9;&lt;td>6&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>2.5&lt;/td>&#x9;&lt;td>3&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.6&lt;/td>&#x9;&lt;td>2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.1&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.0&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.0&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.1&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.6&lt;/td>&#x9;&lt;td>-2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-2.5&lt;/td>&#x9;&lt;td>-3&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-5.5&lt;/td>&#x9;&lt;td>-6&lt;/td>&#xA;&#x9; *&lt;/table>&#xA;&#x9; */</comments>
      <arguments xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.17"/>
        </next>
        <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
      </arguments>
    </constants>
    <constants name="HALF_DOWN">
      <comments>/**&#xA;&#x9; * Rounding mode to round towards &amp;quot;nearest neighbor&amp;quot;&#xA;&#x9; * unless both neighbors are equidistant, in which case round&#xA;&#x9; * down.  Behaves as for &lt;tt>RoundingMode.UP&lt;/tt> if the discarded&#xA;&#x9; * fraction is &amp;gt; 0.5; otherwise, behaves as for&#xA;&#x9; * &lt;tt>RoundingMode.DOWN&lt;/tt>.&#xA;&#x9; *&#xA;&#x9; *&lt;p>Example:&#xA;&#x9; *&lt;table border>&#xA;&#x9; *&lt;tr valign=top>&lt;th>Input Number&lt;/th>&#xA;&#x9; *    &lt;th>Input rounded to one digit&lt;br> with &lt;tt>HALF_DOWN&lt;/tt> rounding&#xA;&#x9; *&lt;tr align=right>&lt;td>5.5&lt;/td>&#x9;&lt;td>5&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>2.5&lt;/td>&#x9;&lt;td>2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.6&lt;/td>&#x9;&lt;td>2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.1&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.0&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.0&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.1&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.6&lt;/td>&#x9;&lt;td>-2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-2.5&lt;/td>&#x9;&lt;td>-2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-5.5&lt;/td>&#x9;&lt;td>-5&lt;/td>&#xA;&#x9; *&lt;/table>&#xA;&#x9; */</comments>
      <arguments xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.18"/>
        </next>
        <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
      </arguments>
    </constants>
    <constants name="HALF_EVEN">
      <comments>/**&#xA;&#x9; * Rounding mode to round towards the &amp;quot;nearest neighbor&amp;quot;&#xA;&#x9; * unless both neighbors are equidistant, in which case, round&#xA;&#x9; * towards the even neighbor.  Behaves as for&#xA;&#x9; * &lt;tt>RoundingMode.HALF_UP&lt;/tt> if the digit to the left of the&#xA;&#x9; * discarded fraction is odd; behaves as for&#xA;&#x9; * &lt;tt>RoundingMode.HALF_DOWN&lt;/tt> if it's even.  Note that this&#xA;&#x9; * is the rounding mode that statistically minimizes cumulative&#xA;&#x9; * error when applied repeatedly over a sequence of calculations.&#xA;&#x9; * It is sometimes known as &amp;quot;Banker's rounding,&amp;quot; and is&#xA;&#x9; * chiefly used in the USA.  This rounding mode is analogous to&#xA;&#x9; * the rounding policy used for &lt;tt>float&lt;/tt> and &lt;tt>double&lt;/tt>&#xA;&#x9; * arithmetic in Java.&#xA;&#x9; *&#xA;&#x9; *&lt;p>Example:&#xA;&#x9; *&lt;table border>&#xA;&#x9; *&lt;tr valign=top>&lt;th>Input Number&lt;/th>&#xA;&#x9; *    &lt;th>Input rounded to one digit&lt;br> with &lt;tt>HALF_EVEN&lt;/tt> rounding&#xA;&#x9; *&lt;tr align=right>&lt;td>5.5&lt;/td>&#x9;&lt;td>6&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>2.5&lt;/td>&#x9;&lt;td>2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.6&lt;/td>&#x9;&lt;td>2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.1&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.0&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.0&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.1&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.6&lt;/td>&#x9;&lt;td>-2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-2.5&lt;/td>&#x9;&lt;td>-2&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-5.5&lt;/td>&#x9;&lt;td>-6&lt;/td>&#xA;&#x9; *&lt;/table>&#xA;&#x9; */</comments>
      <arguments xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.19"/>
        </next>
        <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
      </arguments>
    </constants>
    <constants name="UNNECESSARY">
      <comments>/**&#xA;&#x9; * Rounding mode to assert that the requested operation has an exact&#xA;&#x9; * result, hence no rounding is necessary.  If this rounding mode is&#xA;&#x9; * specified on an operation that yields an inexact result, an&#xA;&#x9; * &lt;tt>ArithmeticException&lt;/tt> is thrown.&#xA;&#x9; *&lt;p>Example:&#xA;&#x9; *&lt;table border>&#xA;&#x9; *&lt;tr valign=top>&lt;th>Input Number&lt;/th>&#xA;&#x9; *    &lt;th>Input rounded to one digit&lt;br> with &lt;tt>UNNECESSARY&lt;/tt> rounding&#xA;&#x9; *&lt;tr align=right>&lt;td>5.5&lt;/td>&#x9;&lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>2.5&lt;/td>&#x9;&lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.6&lt;/td>&#x9;&lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.1&lt;/td>&#x9;&lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>1.0&lt;/td>&#x9;&lt;td>1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.0&lt;/td>&#x9;&lt;td>-1&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.1&lt;/td>&#x9;&lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-1.6&lt;/td>&#x9;&lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-2.5&lt;/td>&#x9;&lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#xA;&#x9; *&lt;tr align=right>&lt;td>-5.5&lt;/td>&#x9;&lt;td>throw &lt;tt>ArithmeticException&lt;/tt>&lt;/td>&#x9;&#xA;&#x9; *&lt;/table>&#xA;&#x9; */</comments>
      <arguments xsi:type="references:IdentifierReference">
        <next xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="BigDecimal.class.xmi#//@classifiers.0/@members.20"/>
        </next>
        <target xsi:type="classifiers:Class" href="BigDecimal.class.xmi#//@classifiers.0"/>
      </arguments>
    </constants>
  </classifiers>
</containers:CompilationUnit>
