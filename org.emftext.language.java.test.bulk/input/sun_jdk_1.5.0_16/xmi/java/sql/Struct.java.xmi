<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:generics="http://www.emftext.org/java/generics" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/generics ../../java.ecore#/6 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="Struct.java">
  <comments>/*&#xA; * @(#)Struct.java&#x9;1.22 04/05/05&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>sql</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="Struct">
    <members xsi:type="members:InterfaceMethod" name="getSQLTypeName">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;   * Retrieves the SQL type name of the SQL structured type&#xA;   * that this &lt;code>Struct&lt;/code> object represents.&#xA;   *&#xA;   * @return the fully-qualified type name of the SQL structured &#xA;   *          type for which this &lt;code>Struct&lt;/code> object&#xA;   *          is the generic representation&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
          <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAttributes">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;   * Produces the ordered values of the attributes of the SQL &#xA;   * structurec type that this &lt;code>Struct&lt;/code> object represents.&#xA;   * This method uses the type map associated with the &#xA;   * connection for customizations of the type mappings.&#xA;   * If there is no&#xA;   * entry in the connection's type map that matches the structured&#xA;   * type that this &lt;code>Struct&lt;/code> object represents,&#xA;   * the driver uses the standard mapping.&#xA;   * &lt;p>&#xA;   * Conceptually, this method calls the method&#xA;   * &lt;code>getObject&lt;/code> on each attribute&#xA;   * of the structured type and returns a Java array containing &#xA;   * the result.&#xA;   *&#xA;   * @return an array containing the ordered attribute values&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
          <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getAttributes">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;   * Produces the ordered values of the attributes of the SQL &#xA;   * structurec type that this &lt;code>Struct&lt;/code> object represents.&#xA;   * This method uses the given type map&#xA;   * for customizations of the type mappings.&#xA;   * If there is no&#xA;   * entry in the given type map that matches the structured&#xA;   * type that this &lt;code>Struct&lt;/code> object represents,&#xA;   * the driver uses the standard mapping. This method never&#xA;   * uses the type map associated with the connection.&#xA;   * &lt;p>&#xA;   * Conceptually, this method calls the method&#xA;   * &lt;code>getObject&lt;/code> on each attribute&#xA;   * of the structured type and returns a Java array containing&#xA;   * the result.&#xA;   *&#xA;   * @param map a mapping of SQL type names to Java classes&#xA;   * @return an array containing the ordered attribute values&#xA;   * @exception SQLException if a database access error occurs&#xA;   */</comments>
          <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <arrayDimensionsBefore/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="map">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <namespaces>java</namespaces>
          <namespaces>util</namespaces>
          <classifierReferences>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <typeArguments xsi:type="generics:QualifiedTypeArgument">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <typeArguments xsi:type="generics:UnknownTypeArgument"/>
                  <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
            </typeArguments>
            <target xsi:type="classifiers:Interface" href="../util/Map.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="SQLException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;p>The standard mapping in the Java programming language for an SQL&#xA; * structured type. A &lt;code>Struct&lt;/code> object contains a&#xA; * value for each attribute of the SQL structured type that&#xA; * it represents.&#xA; * By default, an instance of&lt;code>Struct&lt;/code> is valid as long as the &#xA; * application has a reference to it.&#xA; * @since 1.2&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
