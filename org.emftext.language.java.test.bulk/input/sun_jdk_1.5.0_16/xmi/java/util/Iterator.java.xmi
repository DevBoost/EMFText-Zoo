<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/types ../../java.ecore#/16" name="Iterator.java">
  <comments>/*&#xA; * @(#)Iterator.java&#x9;1.24 04/01/17&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>util</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="Iterator">
    <typeParameters name="E"/>
    <members xsi:type="members:InterfaceMethod" name="hasNext">
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * Returns &lt;tt>true&lt;/tt> if the iteration has more elements. (In other&#xA;     * words, returns &lt;tt>true&lt;/tt> if &lt;tt>next&lt;/tt> would return an element&#xA;     * rather than throwing an exception.)&#xA;     *&#xA;     * @return &lt;tt>true&lt;/tt> if the iterator has more elements.&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="next">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0/@typeParameters.0">
          <comments>/**&#xA;     * Returns the next element in the iteration.  Calling this method&#xA;     * repeatedly until the {@link #hasNext()} method returns false will&#xA;     * return each element in the underlying collection exactly once.&#xA;     *&#xA;     * @return the next element in the iteration.&#xA;     * @exception NoSuchElementException iteration has no more elements.&#xA;     */</comments>
        </classifierReferences>
      </typeReference>
    </members>
    <members xsi:type="members:InterfaceMethod" name="remove">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * &#xA;     * Removes from the underlying collection the last element returned by the&#xA;     * iterator (optional operation).  This method can be called only once per&#xA;     * call to &lt;tt>next&lt;/tt>.  The behavior of an iterator is unspecified if&#xA;     * the underlying collection is modified while the iteration is in&#xA;     * progress in any way other than by calling this method.&#xA;     *&#xA;     * @exception UnsupportedOperationException if the &lt;tt>remove&lt;/tt>&#xA;     *&#x9;&#x9;  operation is not supported by this Iterator.&#xA;     &#xA;     * @exception IllegalStateException if the &lt;tt>next&lt;/tt> method has not&#xA;     *&#x9;&#x9;  yet been called, or the &lt;tt>remove&lt;/tt> method has already&#xA;     *&#x9;&#x9;  been called after the last call to the &lt;tt>next&lt;/tt>&#xA;     *&#x9;&#x9;  method.&#xA;     */</comments>
      </typeReference>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * An iterator over a collection.  Iterator takes the place of Enumeration in&#xA; * the Java collections framework.  Iterators differ from enumerations in two&#xA; * ways: &lt;ul>&#xA; *&#x9;&lt;li> Iterators allow the caller to remove elements from the&#xA; *&#x9;     underlying collection during the iteration with well-defined&#xA; * &#x9;     semantics.&#xA; *&#x9;&lt;li> Method names have been improved.&#xA; * &lt;/ul>&lt;p>&#xA; *&#xA; * This interface is a member of the &#xA; * &lt;a href=&quot;{@docRoot}/../guide/collections/index.html&quot;>&#xA; * Java Collections Framework&lt;/a>.&#xA; *&#xA; * @author  Josh Bloch&#xA; * @version 1.24, 01/17/04&#xA; * @see Collection&#xA; * @see ListIterator&#xA; * @see Enumeration&#xA; * @since 1.2&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
