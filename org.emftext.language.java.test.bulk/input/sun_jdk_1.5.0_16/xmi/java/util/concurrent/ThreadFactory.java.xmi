<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="ThreadFactory.java">
  <comments>/*&#xA; * @(#)ThreadFactory.java&#x9;1.4 04/01/12&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>util</namespaces>
  <namespaces>concurrent</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="ThreadFactory">
    <members xsi:type="members:InterfaceMethod" name="newThread">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Constructs a new &lt;tt>Thread&lt;/tt>.  Implementations may also initialize&#xA;     * priority, name, daemon status, &lt;tt>ThreadGroup&lt;/tt>, etc.&#xA;     *&#xA;     * @param r a runnable to be executed by new thread instance&#xA;     * @return constructed thread&#xA;     */</comments>
          <target xsi:type="classifiers:Class" href="../../lang/Thread.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="r">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../lang/Runnable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * An object that creates new threads on demand.  Using thread factories&#xA; * removes hardwiring of calls to {@link Thread#Thread(Runnable) new Thread},&#xA; * enabling applications to use special thread subclasses, priorities, etc.&#xA; *&#xA; * &lt;p> &#xA; * The simplest implementation of this interface is just:&#xA; * &lt;pre>&#xA; * class SimpleThreadFactory implements ThreadFactory {&#xA; *   public Thread newThread(Runnable r) {&#xA; *     return new Thread(r);&#xA; *   }&#xA; * }&#xA; * &lt;/pre>&#xA; *&#xA; * The {@link Executors#defaultThreadFactory} method provides a more&#xA; * useful simple implementation, that sets the created thread context&#xA; * to known values before returning it. &#xA; * @since 1.5&#xA; * @author Doug Lea&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
