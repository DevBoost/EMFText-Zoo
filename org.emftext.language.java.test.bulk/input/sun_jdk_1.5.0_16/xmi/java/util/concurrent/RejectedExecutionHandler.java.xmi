<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="RejectedExecutionHandler.java">
  <comments>/*&#xA; * @(#)RejectedExecutionHandler.java&#x9;1.3 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>util</namespaces>
  <namespaces>concurrent</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="RejectedExecutionHandler">
    <members xsi:type="members:InterfaceMethod" name="rejectedExecution">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Method that may be invoked by a {@link ThreadPoolExecutor} when&#xA;     * &lt;tt>execute&lt;/tt> cannot accept a task. This may occur when no&#xA;     * more threads or queue slots are available because their bounds&#xA;     * would be exceeded, or upon shutdown of the Executor.&#xA;     *&#xA;     * In the absence other alternatives, the method may throw an&#xA;     * unchecked {@link RejectedExecutionException}, which will be&#xA;     * propagated to the caller of &lt;tt>execute&lt;/tt>.&#xA;     *&#xA;     * @param r the runnable task requested to be executed&#xA;     * @param executor the executor attempting to execute this task&#xA;     * @throws RejectedExecutionException if there is no remedy&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="r">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="../../lang/Runnable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="executor">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="ThreadPoolExecutor.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * A handler for tasks that cannot be executed by a {@link&#xA; * ThreadPoolExecutor}.&#xA; *&#xA; * @since 1.5&#xA; * @author Doug Lea&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
