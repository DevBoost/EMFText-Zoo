<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/expressions ../../java.ecore#/5 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../java.ecore#/8 http://www.emftext.org/java/literals ../../java.ecore#/9 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/operators ../../java.ecore#/12 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/references ../../java.ecore#/14 http://www.emftext.org/java/statements ../../java.ecore#/15 http://www.emftext.org/java/types ../../java.ecore#/16" name="Inet4Address.java">
  <comments>/*&#xA; * @(#)Inet4Address.java&#x9;1.28 04/02/12&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>net</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <classifier xsi:type="classifiers:Class" href="../security/AccessController.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../io/ObjectStreamException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:PackageImport">
    <namespaces>sun</namespaces>
    <namespaces>security</namespaces>
    <namespaces>action</namespaces>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="Inet4Address">
    <members xsi:type="members:Field" name="INADDRSZ">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="serialVersionUID">
      <initialValue xsi:type="literals:DecimalLongLiteral" decimalValue="3286316764910316507"/>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/** use serialVersionUID from InetAddress, but Inet4Address instance&#xA;     *  is always replaced by an InetAddress instance before being&#xA;     *  serialized */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="statements:Block">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.23"/>
      </statements>
      <modifiers xsi:type="modifiers:Static">
        <comments>/*&#xA;     * Perform initializations.&#xA;     */</comments>
      </modifiers>
    </members>
    <members xsi:type="members:Constructor" name="Inet4Address">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.3"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:NullLiteral"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.5"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.0"/>
          </value>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:Constructor" name="Inet4Address">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.5"/>
            </next>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.0"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                  </child>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1">
                      <arraySelectors>
                        <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                  </child>
                  <assignmentOperator xsi:type="operators:AssignmentOr"/>
                  <value xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1">
                            <arraySelectors>
                              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                            </arraySelectors>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                          <shiftOperators xsi:type="operators:LeftShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="65280"/>
                    </expression>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                  </child>
                  <assignmentOperator xsi:type="operators:AssignmentOr"/>
                  <value xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1">
                            <arraySelectors>
                              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                            </arraySelectors>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                          <shiftOperators xsi:type="operators:LeftShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="16711680"/>
                    </expression>
                  </value>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                  </child>
                  <assignmentOperator xsi:type="operators:AssignmentOr"/>
                  <value xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1">
                            <arraySelectors>
                              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                            </arraySelectors>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                          <shiftOperators xsi:type="operators:LeftShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="4278190080"/>
                    </expression>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4/@parameters.1"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="hostName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="addr">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsAfter/>
      </parameters>
    </members>
    <members xsi:type="members:Constructor" name="Inet4Address">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.5"/>
            </next>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.0"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5/@parameters.1"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="hostName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="address">
        <typeReference xsi:type="types:Int"/>
      </parameters>
    </members>
    <members xsi:type="members:ClassMethod" name="writeReplace">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../io/ObjectStreamException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Replaces the object to be serialized with an InetAddress object.&#xA;     *&#xA;     * @return the alternate object to be serialized.&#xA;     *&#xA;     * @throws ObjectStreamException if a new object replacing this&#xA;     * object could not be created&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="inet">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// will replace the to be serialized 'this' object</comments>
              <target xsi:type="classifiers:Class" href="InetAddress.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="InetAddress.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.3"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.3"/>
            </next>
            <self xsi:type="literals:This"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
            </next>
            <self xsi:type="literals:This"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable">
            <comments>/**&#xA;&#x9; * Prior to 1.4 an InetAddress was created with a family&#xA;  &#x9; * based on the platform AF_INET value (usually 2).&#xA;         * For compatibility reasons we must therefore write the&#xA;&#x9; * the InetAddress with this family.&#xA;&#x9; */</comments>
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.5"/>
            </next>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isMulticastAddress">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Utility routine to check if the InetAddress is an&#xA;     * IP multicast address. IP multicast address is a Class D&#xA;     * address i.e first four bits of the address are 1110.&#xA;     * @return a &lt;code>boolean&lt;/code> indicating if the InetAddress is &#xA;     * an IP multicast address&#xA;     * @since   JDK1.1&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:NestedExpression">
          <expression xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AndExpression">
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="4026531840"/>
              </expression>
            </children>
            <children xsi:type="literals:HexIntegerLiteral" hexValue="3758096384"/>
          </expression>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isAnyLocalAddress">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Utility routine to check if the InetAddress in a wildcard address.&#xA;     * @return a &lt;code>boolean&lt;/code> indicating if the Inetaddress is&#xA;     *         a wildcard address.&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference">
            <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:Field" name="loopback">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2130706433"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Utility routine to check if the InetAddress is a loopback address. &#xA;     *&#xA;     * @return a &lt;code>boolean&lt;/code> indicating if the InetAddress is &#xA;     * a loopback address; or false otherwise.&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:ClassMethod" name="isLoopbackAddress">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/* 127.0.0.1 */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="byteAddr">
          <typeReference xsi:type="types:Byte">
            <comments>/* 127.x.x.x */</comments>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.18"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.0/@variable">
            <arraySelectors>
              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </arraySelectors>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="127"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isLinkLocalAddress">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Utility routine to check if the InetAddress is an link local address. &#xA;     *&#xA;     * @return a &lt;code>boolean&lt;/code> indicating if the InetAddress is &#xA;     * a link local address; or false if address is not a link local unicast address.&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <comments>// link-local unicast in IPv4 (169.254.0.0/16)</comments>
        <comments>// defined in &quot;Documenting Special Use IPv4 Address Blocks</comments>
        <comments>// that have been Registered with IANA&quot; by Bill Manning</comments>
        <comments>// draft-manning-dsua-06.txt</comments>
        <returnValue xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                      <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="169"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                      <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="254"/>
            </expression>
          </children>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isSiteLocalAddress">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Utility routine to check if the InetAddress is a site local address. &#xA;     *&#xA;     * @return a &lt;code>boolean&lt;/code> indicating if the InetAddress is &#xA;     * a site local address; or false if address is not a site local unicast address.&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <comments>// refer to RFC 1918</comments>
        <comments>// 10/8 prefix</comments>
        <comments>// 172.16/12 prefix</comments>
        <comments>// 192.168/16 prefix</comments>
        <returnValue xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                      <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="10"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                          <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="172"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                          <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="240"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                </expression>
              </children>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                          <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="192"/>
                </expression>
              </children>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="expressions:NestedExpression">
                        <expression xsi:type="expressions:ShiftExpression">
                          <children xsi:type="references:IdentifierReference">
                            <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                          </children>
                          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                          <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                        </expression>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="168"/>
                </expression>
              </children>
            </expression>
          </children>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isMCGlobal">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Utility routine to check if the multicast address has global scope.&#xA;     *&#xA;     * @return a &lt;code>boolean&lt;/code> indicating if the address has &#xA;     *         is a multicast address of global scope, false if it is not &#xA;     *         of global scope or it is not a multicast address&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="byteAddr">
          <typeReference xsi:type="types:Byte">
            <comments>// 224.0.1.0 to 238.255.255.255</comments>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.18"/>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="224"/>
                <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AndExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.0/@variable">
                      <arraySelectors>
                        <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                      </arraySelectors>
                    </children>
                    <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                  </expression>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="238"/>
                <relationOperators xsi:type="operators:LessThanOrEqual"/>
              </children>
            </expression>
          </children>
          <children xsi:type="expressions:UnaryExpression">
            <operators xsi:type="operators:Negate"/>
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:ConditionalAndExpression">
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AndExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.0/@variable">
                        <arraySelectors>
                          <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                        </arraySelectors>
                      </children>
                      <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="224"/>
                </children>
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </children>
                <children xsi:type="expressions:EqualityExpression">
                  <equalityOperators xsi:type="operators:Equal"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                    </arraySelectors>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </children>
              </expression>
            </child>
          </children>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isMCNodeLocal">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Utility routine to check if the multicast address has node scope.&#xA;     *&#xA;     * @return a &lt;code>boolean&lt;/code> indicating if the address has &#xA;     *         is a multicast address of node-local scope, false if it is not &#xA;     *         of node-local scope or it is not a multicast address&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <comments>// unless ttl == 0</comments>
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isMCLinkLocal">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Utility routine to check if the multicast address has link scope.&#xA;     *&#xA;     * @return a &lt;code>boolean&lt;/code> indicating if the address has &#xA;     *         is a multicast address of link-local scope, false if it is not &#xA;     *         of link-local scope or it is not a multicast address&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <comments>// 224.0.0/24 prefix and ttl == 1</comments>
        <returnValue xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                      <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="224"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                      <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                      <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </children>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isMCSiteLocal">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Utility routine to check if the multicast address has site scope.&#xA;     *&#xA;     * @return a &lt;code>boolean&lt;/code> indicating if the address has &#xA;     *         is a multicast address of site-local scope, false if it is not &#xA;     *         of site-local scope or it is not a multicast address&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <comments>// 239.255/16 prefix or ttl &lt; 32</comments>
        <returnValue xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                      <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="239"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                      <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="255"/>
            </expression>
          </children>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isMCOrgLocal">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Utility routine to check if the multicast address has organization scope.&#xA;     *&#xA;     * @return a &lt;code>boolean&lt;/code> indicating if the address has &#xA;     *         is a multicast address of organization-local scope, &#xA;     *         false if it is not of organization-local scope &#xA;     *         or it is not a multicast address&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <comments>// 239.192 - 239.195</comments>
        <returnValue xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                      <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="239"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                      <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="192"/>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:AndExpression">
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:ShiftExpression">
                      <children xsi:type="references:IdentifierReference">
                        <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                      </children>
                      <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                      <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                    </expression>
                  </children>
                  <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
                </expression>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="195"/>
              <relationOperators xsi:type="operators:LessThanOrEqual"/>
            </expression>
          </children>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getAddress">
      <typeReference xsi:type="types:Byte"/>
      <arrayDimensionsBefore/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the raw IP address of this &lt;code>InetAddress&lt;/code>&#xA;     * object. The result is in network byte order: the highest order&#xA;     * byte of the address is in &lt;code>getAddress()[0]&lt;/code>.&#xA;     *&#xA;     * @return  the raw IP address of this object.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="addr">
          <typeReference xsi:type="types:Byte"/>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:Byte"/>
            <sizes xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable">
            <arraySelectors>
              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:Byte"/>
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="24"/>
                    <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                  </expression>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
              </expression>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable">
            <arraySelectors>
              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:Byte"/>
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
                    <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                  </expression>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
              </expression>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable">
            <arraySelectors>
              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:Byte"/>
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AndExpression">
                <children xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:ShiftExpression">
                    <children xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                    </children>
                    <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="8"/>
                    <shiftOperators xsi:type="operators:UnsignedRightShift"/>
                  </expression>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
              </expression>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable">
            <arraySelectors>
              <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
            </arraySelectors>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:Byte"/>
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AndExpression">
                <children xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                </children>
                <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
              </expression>
            </child>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getHostAddress">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the IP address string in textual presentation form.&#xA;     *&#xA;     * @return  the raw IP address in a string format.&#xA;     * @since   JDK1.0.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.22">
          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.18"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="hashCode">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a hashcode for this IP address.&#xA;     *&#xA;     * @return  a hash code value for this IP address.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="equals">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="obj">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Compares this object against the specified object.&#xA;     * The result is &lt;code>true&lt;/code> if and only if the argument is&#xA;     * not &lt;code>null&lt;/code> and it represents the same IP address as&#xA;     * this object.&#xA;     * &lt;p>&#xA;     * Two instances of &lt;code>InetAddress&lt;/code> represent the same IP&#xA;     * address if the length of the byte arrays returned by&#xA;     * &lt;code>getAddress&lt;/code> is the same for both, and each of the&#xA;     * array components is the same for the byte arrays.&#xA;     *&#xA;     * @param   obj   the object to compare against.&#xA;     * @return  &lt;code>true&lt;/code> if the objects are the same;&#xA;     *          &lt;code>false&lt;/code> otherwise.&#xA;     * @see     java.net.InetAddress#getAddress()&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.0"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:InstanceOfExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences target="//@classifiers.0"/>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.0"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
                </next>
                <expression xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="InetAddress.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21/@parameters.0"/>
                </expression>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InetAddress.class.xmi#//@classifiers.0/@members.4"/>
              </children>
            </expression>
          </children>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="numericToTextFormat">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="src">
        <typeReference xsi:type="types:Byte"/>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>// Utilities</comments>
        <comments>/* &#xA;     * Converts IPv4 binary address into a string suitable for presentation.&#xA;     *&#xA;     * @param src a byte array representing an IPv4 numeric address&#xA;     * @return a String representing the IPv4 address in &#xA;     *         textual representation format&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:AdditiveExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.0">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </arraySelectors>
              </children>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
            </expression>
          </children>
          <children xsi:type="references:StringReference" value="."/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.0">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                </arraySelectors>
              </children>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
            </expression>
          </children>
          <children xsi:type="references:StringReference" value="."/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.0">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                </arraySelectors>
              </children>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
            </expression>
          </children>
          <children xsi:type="references:StringReference" value="."/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22/@parameters.0">
                <arraySelectors>
                  <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                </arraySelectors>
              </children>
              <children xsi:type="literals:HexIntegerLiteral" hexValue="255"/>
            </expression>
          </children>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:InterfaceMethod" name="init">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Perform class load-time initializations.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Native"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This class represents an Internet Protocol version 4 (IPv4) address.&#xA; * Defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc790.txt&quot;>&#xA; * &lt;i>RFC&amp;nbsp;790: Assigned Numbers&lt;/i>&lt;/a>,&#xA; * &lt;a href=&quot;http://www.ietf.org/rfc/rfc1918.txt&quot;>&#xA; * &lt;i>RFC&amp;nbsp;1918: Address Allocation for Private Internets&lt;/i>&lt;/a>,&#xA; * and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2365.txt&quot;>&lt;i>RFC&amp;nbsp;2365:&#xA; * Administratively Scoped IP Multicast&lt;/i>&lt;/a>&#xA; *&#xA; * &lt;h4> &lt;A NAME=&quot;format&quot;>Textual representation of IP addresses&lt;/a> &lt;/h4>&#xA; *&#xA; * Textual representation of IPv4 address used as input to methods&#xA; * takes one of the following forms:&#xA; *&#xA; * &lt;blockquote>&lt;table cellpadding=0 cellspacing=0 summary=&quot;layout&quot;>&#xA; * &lt;tr>&lt;td>&lt;tt>d.d.d.d&lt;/tt>&lt;/td>&lt;/tr>&#xA; * &lt;tr>&lt;td>&lt;tt>d.d.d&lt;/tt>&lt;/td>&lt;/tr>&#xA; * &lt;tr>&lt;td>&lt;tt>d.d&lt;/tt>&lt;/td>&lt;/tr>&#xA; * &lt;tr>&lt;td>&lt;tt>d&lt;/tt>&lt;/td>&lt;/tr>&#xA; * &lt;/table>&lt;/blockquote>&#xA; *&#xA; * &lt;p> When four parts are specified, each is interpreted as a byte of&#xA; * data and assigned, from left to right, to the four bytes of an IPv4&#xA; * address.&#xA;&#xA; * &lt;p> When a three part address is specified, the last part is&#xA; * interpreted as a 16-bit quantity and placed in the right most two&#xA; * bytes of the network address. This makes the three part address&#xA; * format convenient for specifying Class B net- work addresses as&#xA; * 128.net.host.&#xA; *&#xA; * &lt;p> When a two part address is supplied, the last part is&#xA; * interpreted as a 24-bit quantity and placed in the right most three&#xA; * bytes of the network address. This makes the two part address&#xA; * format convenient for specifying Class A network addresses as&#xA; * net.host.&#xA; *&#xA; * &lt;p> When only one part is given, the value is stored directly in&#xA; * the network address without any byte rearrangement.&#xA; *&#xA; * &lt;p> For methods that return a textual representation as output&#xA; * value, the first form, i.e. a dotted-quad string, is used.&#xA; *&#xA; * &lt;h4> The Scope of a Multicast Address &lt;/h4>&#xA; * &#xA; * Historically the IPv4 TTL field in the IP header has doubled as a&#xA; * multicast scope field: a TTL of 0 means node-local, 1 means&#xA; * link-local, up through 32 means site-local, up through 64 means&#xA; * region-local, up through 128 means continent-local, and up through&#xA; * 255 are global. However, the administrative scoping is preferred.&#xA; * Please refer to &lt;a href=&quot;http://www.ietf.org/rfc/rfc2365.txt&quot;>&#xA; * &lt;i>RFC&amp;nbsp;2365: Administratively Scoped IP Multicast&lt;/i>&lt;/a>&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Final"/>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="InetAddress.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
