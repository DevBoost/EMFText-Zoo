<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/references ../../java.ecore#/14 http://www.emftext.org/java/types ../../java.ecore#/16" name="DesignMode.java">
  <comments>/*&#xA; * @(#)DesignMode.java&#x9;1.14 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>beans</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="DesignMode">
    <members xsi:type="members:Field" name="PROPERTYNAME">
      <initialValue xsi:type="references:StringReference" value="designTime"/>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>/**&#xA;     * The standard value of the propertyName as fired from a BeanContext or&#xA;     * other source of PropertyChangeEvents.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setDesignTime">
      <typeReference xsi:type="types:Void">
        <comments>/**&#xA;     * Sets the &quot;value&quot; of the &quot;designTime&quot; property.&#xA;     * &lt;p>&#xA;     * If the implementing object is an instance of java.beans.beancontext.BeanContext, &#xA;     * or a subinterface thereof, then that BeanContext should fire a&#xA;     * PropertyChangeEvent, to its registered BeanContextMembershipListeners, with&#xA;     * parameters:&#xA;     * &lt;ul>&#xA;     * &#x9;  &lt;li>&lt;code>propertyName&lt;/code> - &lt;code>java.beans.DesignMode.PROPERTYNAME&lt;/code>&#xA;     *    &lt;li>&lt;code>oldValue&lt;/code> - previous value of &quot;designTime&quot;&#xA;     *    &lt;li>&lt;code>newValue&lt;/code> - current value of &quot;designTime&quot;&#xA;     * &lt;/ul>&#xA;     * Note it is illegal for a BeanContextChild to invoke this method&#xA;     * associated with a BeanContext that it is nested within.&#xA;     *&#xA;     * @param designTime  the current &quot;value&quot; of the &quot;designTime&quot; property&#xA;     * @see java.beans.beancontext.BeanContext&#xA;     * @see java.beans.beancontext.BeanContextMembershipListener&#xA;     * @see java.beans.PropertyChangeEvent&#xA;     */</comments>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="designTime">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="isDesignTime">
      <typeReference xsi:type="types:Boolean">
        <comments>/**&#xA;     * A value of true denotes that JavaBeans should behave in design time&#xA;     * mode, a value of false denotes runtime behavior.&#xA;     *&#xA;     * @return the current &quot;value&quot; of the &quot;designTime&quot; property.&#xA;     */</comments>
      </typeReference>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;p>&#xA; * This interface is intended to be implemented by, or delegated from, instances&#xA; * of java.beans.beancontext.BeanContext, in order to propagate to its nested hierarchy&#xA; * of java.beans.beancontext.BeanContextChild instances, the current &quot;designTime&quot; property.&#xA; * &lt;p>&#xA; * The JavaBeans specification defines the notion of design time as is a &#xA; * mode in which JavaBeans instances should function during their composition&#xA; * and customization in a interactive design, composition or construction tool,&#xA; * as opposed to runtime when the JavaBean is part of an applet, application,&#xA; * or other live Java executable abstraction.&#xA; *&#xA; * @author Laurence P. G. Cable&#xA; * @version 1.14, 12/19/03&#xA; * @since 1.2&#xA; *&#xA; * @see java.beans.beancontext.BeanContext&#xA; * @see java.beans.beancontext.BeanContextChild&#xA; * @see java.beans.beancontext.BeanContextMembershipListener&#xA; * @see java.beans.PropertyChangeEvent&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
