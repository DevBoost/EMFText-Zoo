<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="BeanContextServiceProvider.java">
  <comments>/*&#xA; * @(#)BeanContextServiceProvider.java&#x9;1.10 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>beans</namespaces>
  <namespaces>beancontext</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../util/Iterator.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="BeanContextServiceProvider">
    <members xsi:type="members:InterfaceMethod" name="getService">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;    * Invoked by &lt;code>BeanContextServices&lt;/code>, this method &#xA;    * requests an instance of a&#xA;    * service from this &lt;code>BeanContextServiceProvider&lt;/code>. &#xA;    * &#xA;    * @param bcs The &lt;code>BeanContextServices&lt;/code> associated with this&#xA;    * particular request. This parameter enables the&#xA;    * &lt;code>BeanContextServiceProvider&lt;/code> to distinguish service &#xA;    * requests from multiple sources.&#xA;    *&#xA;    * @param requestor&#x9; &#x9;The object requesting the service&#xA;    *&#xA;    * @param serviceClass&#x9;The service requested&#xA;    *&#xA;    * @param serviceSelector the service dependent parameter &#xA;    * for a particular service, or &lt;code>null&lt;/code> if not applicable.&#xA;    * &#xA;    * @return a reference to the requested service&#xA;    */</comments>
          <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bcs">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="BeanContextServices.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="requestor">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="serviceClass">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="serviceSelector">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <members xsi:type="members:InterfaceMethod" name="releaseService">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bcs">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="BeanContextServices.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="requestor">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="service">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Invoked by &lt;code>BeanContextServices&lt;/code>, &#xA;     * this method releases a nested &lt;code>BeanContextChild&lt;/code>'s &#xA;     * (or any arbitrary object associated with a&#xA;     * &lt;code>BeanContextChild&lt;/code>) reference to the specified service.&#xA;     * &#xA;     * @param bcs the &lt;code>BeanContextServices&lt;/code> associated with this&#xA;     * particular release request&#xA;     *&#xA;     * @param requestor the object requesting the service to be released&#xA;     * &#xA;     * @param service the service that is to be released&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getCurrentServiceSelectors">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <comments>/**&#xA;     * Invoked by &lt;code>BeanContextServices&lt;/code>, this method&#xA;     * gets the current service selectors for the specified service. &#xA;     * A service selector is a service specific parameter, &#xA;     * typical examples of which could include: a&#xA;     * parameter to a constructor for the service implementation class, &#xA;     * a value for a particular service's property, or a key into a &#xA;     * map of existing implementations. &#xA;     *&#xA;     * @param bcs           the &lt;code>BeanContextServices&lt;/code> for this request&#xA;     * @param serviceClass  the specified service&#xA;     * @return   the current service selectors for the specified serviceClass&#xA;     */</comments>
          <target xsi:type="classifiers:Interface" href="../../util/Iterator.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="bcs">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="BeanContextServices.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="serviceClass">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * &lt;p>&#xA; * One of the primary functions of a BeanContext is to act a as rendezvous &#xA; * between JavaBeans, and BeanContextServiceProviders.&#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * A JavaBean nested within a BeanContext, may ask that BeanContext to &#xA; * provide an instance of a &quot;service&quot;, based upon a reference to a Java&#xA; * Class object that represents that service.&#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * If such a service has been registered with the context, or one of its &#xA; * nesting context's, in the case where a context delegate to its context&#xA; * to satisfy a service request, then the BeanContextServiceProvider associated with &#xA; * the service is asked to provide an instance of that service.&#xA; * &lt;/p>&#xA; * &lt;p>&#xA; * The ServcieProvider may always return the same instance, or it may&#xA; * construct a new instance for each request.&#xA; * &lt;/p>&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
