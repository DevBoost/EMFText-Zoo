<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:arrays="http://www.emftext.org/java/arrays" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:generics="http://www.emftext.org/java/generics" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xmlns:variables="http://www.emftext.org/java/variables" xsi:schemaLocation="http://www.emftext.org/java/arrays ../../java.ecore#/1 http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/expressions ../../java.ecore#/5 http://www.emftext.org/java/generics ../../java.ecore#/6 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../java.ecore#/8 http://www.emftext.org/java/literals ../../java.ecore#/9 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/operators ../../java.ecore#/12 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/references ../../java.ecore#/14 http://www.emftext.org/java/statements ../../java.ecore#/15 http://www.emftext.org/java/types ../../java.ecore#/16 http://www.emftext.org/java/variables ../../java.ecore#/17" name="MetaData.java">
  <comments>/*&#xA; * @(#)MetaData.java&#x9;1.39 04/05/05&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>beans</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>lang</namespaces>
    <namespaces>reflect</namespaces>
    <classifier xsi:type="classifiers:Class" href="../lang/reflect/Array.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>lang</namespaces>
    <namespaces>reflect</namespaces>
    <classifier xsi:type="classifiers:Class" href="../lang/reflect/Field.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>lang</namespaces>
    <namespaces>reflect</namespaces>
    <classifier xsi:type="classifiers:Class" href="../lang/reflect/Method.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../util/Vector.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Class" href="../util/Hashtable.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../util/Iterator.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../util/Enumeration.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="NullPersistenceDelegate">
    <comments>/*&#xA; * Like the &lt;code>Intropector&lt;/code>, the &lt;code>MetaData&lt;/code> class&#xA; * contains &lt;em>meta&lt;/em> objects that describe the way&#xA; * classes should express their state in terms of their&#xA; * own public APIs.&#xA; *&#xA; * @see java.beans.Intropector&#xA; *&#xA; * @version 1.39 05/05/04&#xA; * @author Philip Milne&#xA; * @author Steve Langley&#xA; */</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>// Note this will be called by all classes when they reach the</comments>
        <comments>// top of their superclass chain.</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:ClassMethod" name="instantiate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:NullLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="writeObject">
      <comments>// System.out.println(&quot;NullPersistenceDelegate:writeObject &quot; + oldInstance);</comments>
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="PrimitivePersistenceDelegate">
    <members xsi:type="members:ClassMethod" name="mutatesTo">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.1/@members.0/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.1/@members.0/@parameters.1"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="instantiate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.1/@members.1/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.1/@members.1/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </arguments>
          <arguments xsi:type="references:StringReference" value="new"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.1/@members.1/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.6"/>
                </next>
              </initialValues>
            </arrayInitializer>
          </arguments>
        </returnValue>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="ArrayPersistenceDelegate">
    <members xsi:type="members:ClassMethod" name="mutatesTo">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:NestedExpression">
          <expression xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.0/@parameters.1"/>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.0/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </children>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.0/@parameters.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </children>
            </children>
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference">
                <comments>// Also ensures the subtype is correct.</comments>
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/reflect/Array.class.xmi#//@classifiers.0/@members.3"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.0/@parameters.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="../lang/reflect/Array.class.xmi#//@classifiers.0"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/reflect/Array.class.xmi#//@classifiers.0/@members.3"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.0/@parameters.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="../lang/reflect/Array.class.xmi#//@classifiers.0"/>
              </children>
            </children>
          </expression>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="instantiate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldClass">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// System.out.println(&quot;instantiate: &quot; + type + &quot; &quot; + oldInstance);</comments>
              <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.1/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.1/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference">
            <next xsi:type="references:ReflectiveClassReference"/>
            <target xsi:type="classifiers:Class" href="../lang/reflect/Array.class.xmi#//@classifiers.0"/>
          </arguments>
          <arguments xsi:type="references:StringReference" value="newInstance"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.1/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.54"/>
                </next>
              </initialValues>
              <initialValues xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Integer.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../lang/reflect/Array.class.xmi#//@classifiers.0/@members.3"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.1/@parameters.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../lang/reflect/Array.class.xmi#//@classifiers.0"/>
                </arguments>
              </initialValues>
            </arrayInitializer>
          </arguments>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="n">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../lang/reflect/Array.class.xmi#//@classifiers.0/@members.3"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@parameters.1"/>
            </next>
            <target xsi:type="classifiers:Class" href="../lang/reflect/Array.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="index">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Integer.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.1/@init"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="oldGetExp">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// Expression oldGetExp = new Expression(Array.class, &quot;get&quot;, new Object[]{oldInstance, index});</comments>
                  <comments>// Expression newGetExp = new Expression(Array.class, &quot;get&quot;, new Object[]{newInstance, index});</comments>
                  <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@parameters.1"/>
                <arguments xsi:type="references:StringReference" value="get"/>
                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arrayDimensionsBefore/>
                  <arrayInitializer>
                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.1/@statement/@statements.0/@variable"/>
                  </arrayInitializer>
                </arguments>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="newGetExp">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@parameters.2"/>
                <arguments xsi:type="references:StringReference" value="get"/>
                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arrayDimensionsBefore/>
                  <arrayInitializer>
                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.1/@statement/@statements.0/@variable"/>
                  </arrayInitializer>
                </arguments>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="oldValue">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.1/@statement/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Expression.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="newValue">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.1/@statement/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Expression.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@parameters.3">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.1/@statement/@statements.1/@variable"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:IdentifierReference">
                    <comments>// System.out.println(&quot;Not equal: &quot; + newGetExp + &quot; != &quot; + actualGetExp);</comments>
                    <comments>// invokeStatement(Array.class, &quot;set&quot;, new Object[]{oldInstance, index, oldValue}, out);</comments>
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@parameters.1"/>
                      <arguments xsi:type="references:StringReference" value="set"/>
                      <arguments xsi:type="arrays:ArrayInstantiationByValues">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arrayDimensionsBefore/>
                        <arrayInitializer>
                          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.1/@statement/@statements.0/@variable"/>
                          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.1/@statement/@statements.3/@statements.0/@variable"/>
                        </arrayInitializer>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@parameters.3"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.37">
                  <next xsi:type="references:MethodCall" target="//@classifiers.37/@members.8">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.1/@statement/@statements.3/@statements.1/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@parameters.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.12"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.1/@statement/@statements.3/@statements.0/@variable"/>
                      </next>
                    </arguments>
                  </next>
                </child>
              </condition>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@parameters.3">
                  <comments>// System.err.println(&quot;Warning:: failed to write: &quot; + oldGetExp);</comments>
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="ExceptionListener.class.xmi#//@classifiers.0/@members.0"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.1/@statement/@statements.3/@catcheBlocks.0/@parameter"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                </expression>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Exception.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.1/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.0/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.2/@members.2/@statements.1/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="ProxyPersistenceDelegate">
    <members xsi:type="members:ClassMethod" name="instantiate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="type">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="p">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>lang</namespaces>
            <namespaces>reflect</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../lang/reflect/Proxy.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>lang</namespaces>
              <namespaces>reflect</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/reflect/Proxy.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ih">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <comments>// This unappealing hack is not required but makes the</comments>
            <comments>// representation of EventHandlers much more concise.</comments>
            <namespaces>java</namespaces>
            <namespaces>lang</namespaces>
            <namespaces>reflect</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../lang/reflect/InvocationHandler.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../lang/reflect/Proxy.class.xmi#//@classifiers.0/@members.14"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.1/@variable"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../lang/reflect/Proxy.class.xmi#//@classifiers.0"/>
                </next>
              </next>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="eh">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="EventHandler.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="EventHandler.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.2/@variable"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="args">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../util/Vector.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../util/Vector.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.3/@statement/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <arraySelectors>
                      <position xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                    </arraySelectors>
                    <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.52"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.3/@statement/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.3/@statement/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="EventHandler.class.xmi#//@classifiers.0/@members.8"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.3/@statement/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.3/@statement/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="EventHandler.class.xmi#//@classifiers.0/@members.9"/>
                  </next>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.3/@statement/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.3/@statement/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="EventHandler.class.xmi#//@classifiers.0/@members.10"/>
                      </next>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.3/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="EventHandler.class.xmi#//@classifiers.0/@members.10"/>
                </next>
              </children>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.3/@statement/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../util/Vector.class.xmi#//@classifiers.0/@members.12"/>
                    <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                  </next>
                </expression>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.3/@statement/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../util/Vector.class.xmi#//@classifiers.0/@members.36"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.3/@statement/@statements.0/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="EventHandler.class.xmi#//@classifiers.0/@members.11"/>
                      </next>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.3/@statement/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="EventHandler.class.xmi#//@classifiers.0/@members.11"/>
                </next>
              </children>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:ReflectiveClassReference"/>
                <target xsi:type="classifiers:Class" href="EventHandler.class.xmi#//@classifiers.0"/>
              </arguments>
              <arguments xsi:type="references:StringReference" value="create"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.3/@statement/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../util/Vector.class.xmi#//@classifiers.0/@members.32"/>
                </next>
              </arguments>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="EventHandler.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.2/@variable"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:ReflectiveClassReference"/>
                  <target xsi:type="classifiers:Class" href="../lang/reflect/Proxy.class.xmi#//@classifiers.0"/>
                </next>
              </next>
            </next>
          </arguments>
          <arguments xsi:type="references:StringReference" value="newProxyInstance"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.46"/>
                </next>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.52"/>
                </next>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.3/@members.0/@statements.2/@variable"/>
            </arrayInitializer>
          </arguments>
        </returnValue>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_lang_String_PersistenceDelegate">
    <comments>// Strings</comments>
    <members xsi:type="members:ClassMethod" name="instantiate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:NullLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="writeObject">
      <comments>// System.out.println(&quot;NullPersistenceDelegate:writeObject &quot; + oldInstance);</comments>
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_lang_Class_PersistenceDelegate">
    <comments>// Classes</comments>
    <members xsi:type="members:ClassMethod" name="instantiate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="c">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.5/@members.0/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// As of 1.3 it is not possible to call Class.forName(&quot;int&quot;),</comments>
        <comments>// so we have to generate different code for primitive types.</comments>
        <comments>// This is needed for arrays whose subtype may be primitive.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="field">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../lang/reflect/Field.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="literals:NullLiteral"/>
            </variable>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.5/@members.0/@statements.1/@statement/@statements.0/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.84"/>
                      <arguments xsi:type="references:StringReference" value="TYPE"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="ReflectionUtils.class.xmi#//@classifiers.0/@members.2"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.5/@members.0/@statements.0/@variable"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="ReflectionUtils.class.xmi#//@classifiers.0"/>
                </value>
              </expression>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="Unknown primitive type: "/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.5/@members.0/@statements.0/@variable"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                    <target xsi:type="members:Field" href="../lang/System.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../lang/System.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
              <parameter name="ex">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/NoSuchFieldException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.5/@members.0/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.5/@members.0/@statements.1/@statement/@statements.0/@variable"/>
              <arguments xsi:type="references:StringReference" value="get"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="literals:NullLiteral"/>
                </arrayInitializer>
              </arguments>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.5/@members.0/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.41"/>
          </next>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.5/@members.0/@parameters.0"/>
                <arguments xsi:type="references:StringReference" value=""/>
                <arguments xsi:type="references:StringReference" value="getClass"/>
                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arrayDimensionsBefore/>
                  <arrayInitializer/>
                </arguments>
              </returnValue>
            </statements>
          </statement>
          <condition xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.5/@members.0/@parameters.0"/>
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:ReflectiveClassReference"/>
              <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
            </children>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.5/@members.0/@parameters.0"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:ReflectiveClassReference"/>
                    <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
                  </arguments>
                  <arguments xsi:type="references:StringReference" value="getClass"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer/>
                  </arguments>
                </returnValue>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.5/@members.0/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:ReflectiveClassReference"/>
                <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.5/@members.0/@parameters.0"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:ReflectiveClassReference"/>
                    <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
                  </arguments>
                  <arguments xsi:type="references:StringReference" value="forName"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.5/@members.0/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.44"/>
                        </next>
                      </initialValues>
                    </arrayInitializer>
                  </arguments>
                </returnValue>
              </statements>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_lang_reflect_Field_PersistenceDelegate">
    <comments>// Fields</comments>
    <members xsi:type="members:ClassMethod" name="instantiate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="f">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../lang/reflect/Field.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/reflect/Field.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.6/@members.0/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.6/@members.0/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.6/@members.0/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../lang/reflect/Field.class.xmi#//@classifiers.0/@members.19"/>
            </next>
          </arguments>
          <arguments xsi:type="references:StringReference" value="getField"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.6/@members.0/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/reflect/Field.class.xmi#//@classifiers.0/@members.20"/>
                </next>
              </initialValues>
            </arrayInitializer>
          </arguments>
        </returnValue>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_lang_reflect_Method_PersistenceDelegate">
    <comments>// Methods</comments>
    <members xsi:type="members:ClassMethod" name="instantiate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="m">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../lang/reflect/Method.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/reflect/Method.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.7/@members.0/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.7/@members.0/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.7/@members.0/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../lang/reflect/Method.class.xmi#//@classifiers.0/@members.22"/>
            </next>
          </arguments>
          <arguments xsi:type="references:StringReference" value="getMethod"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.7/@members.0/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/reflect/Method.class.xmi#//@classifiers.0/@members.23"/>
                </next>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.7/@members.0/@statements.0/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/reflect/Method.class.xmi#//@classifiers.0/@members.28"/>
                </next>
              </initialValues>
            </arrayInitializer>
          </arguments>
        </returnValue>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_util_Collection_PersistenceDelegate">
    <comments>// Collections</comments>
    <comments>/*&#xA;The Hashtable and AbstractMap classes have no common ancestor yet may&#xA;be handled with a single persistence delegate: one which uses the methods&#xA;of the Map insterface exclusively. Attatching the persistence delegates&#xA;to the interfaces themselves is fraught however since, in the case of&#xA;the Map, both the AbstractMap and HashMap classes are declared to&#xA;implement the Map interface, leaving the obvious implementation prone&#xA;to repeating their initialization. These issues and questions around&#xA;the ordering of delegates attached to interfaces have lead us to&#xA;ignore any delegates attached to interfaces and force all persistence&#xA;delegates to be registered with concrete classes.&#xA;*/</comments>
    <comments>// Collection</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldO">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>util</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../util/Collection.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>util</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../util/Collection.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.8/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="newO">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>util</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../util/Collection.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>util</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../util/Collection.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.8/@members.0/@parameters.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.8/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="clear"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.8/@members.0/@parameters.3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.8/@members.0/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../util/Collection.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.8/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="add"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.8/@members.0/@statements.3/@init">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.8/@members.0/@parameters.3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.8/@members.0/@statements.3/@init">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
          </next>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../util/Iterator.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.8/@members.0/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../util/Collection.class.xmi#//@classifiers.0/@members.3"/>
            </next>
          </initialValue>
        </init>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_util_List_PersistenceDelegate">
    <comments>// List</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldO">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>util</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../util/List.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>util</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../util/List.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="newO">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>util</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../util/List.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>util</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../util/List.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@parameters.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldSize">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="../util/List.class.xmi#//@classifiers.0/@members.0"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="newSize">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.1/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </child>
            <expressionIf xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.1/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../util/List.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </expressionElse>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="clear"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@parameters.3"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.3/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.2/@variable"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.3/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="index">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Integer.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.5/@init"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="oldGetExp">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@parameters.1"/>
                <arguments xsi:type="references:StringReference" value="get"/>
                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arrayDimensionsBefore/>
                  <arrayInitializer>
                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.5/@statement/@statements.0/@variable"/>
                  </arrayInitializer>
                </arguments>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="newGetExp">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@parameters.2"/>
                <arguments xsi:type="references:StringReference" value="get"/>
                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arrayDimensionsBefore/>
                  <arrayInitializer>
                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.5/@statement/@statements.0/@variable"/>
                  </arrayInitializer>
                </arguments>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="oldValue">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.5/@statement/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Expression.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="newValue">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.5/@statement/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Expression.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@parameters.3">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.5/@statement/@statements.1/@variable"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@parameters.1"/>
                    <arguments xsi:type="references:StringReference" value="set"/>
                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arrayDimensionsBefore/>
                      <arrayInitializer>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.5/@statement/@statements.0/@variable"/>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.5/@statement/@statements.3/@statements.0/@variable"/>
                      </arrayInitializer>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@parameters.3"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.37">
                  <next xsi:type="references:MethodCall" target="//@classifiers.37/@members.8">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.5/@statement/@statements.3/@statements.1/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@parameters.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.12"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.5/@statement/@statements.3/@statements.0/@variable"/>
                      </next>
                    </arguments>
                  </next>
                </child>
              </condition>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@parameters.3">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="ExceptionListener.class.xmi#//@classifiers.0/@members.0"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.5/@statement/@statements.3/@catcheBlocks.0/@parameter"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                </expression>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Exception.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.5/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.3/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.5/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="add"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../util/List.class.xmi#//@classifiers.0/@members.16"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.6/@init"/>
                    </next>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@parameters.3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.6/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.2/@variable"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.3/@variable"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.9/@members.0/@statements.6/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_util_Map_PersistenceDelegate">
    <comments>// Map</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldMap">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <comments>// System.out.println(&quot;Initializing: &quot; + newInstance);</comments>
            <namespaces>java</namespaces>
            <namespaces>util</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../util/Map.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>util</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../util/Map.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="newMap">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>util</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../util/Map.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>util</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Interface" href="../util/Map.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@parameters.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Remove the new elements.</comments>
        <comments>// Do this first otherwise we undo the adding work.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="newKeys">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>java</namespaces>
                <namespaces>util</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../util/Iterator.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:InterfaceMethod" href="../util/Set.class.xmi#//@classifiers.0/@members.3"/>
                  </next>
                  <target xsi:type="members:InterfaceMethod" href="../util/Map.class.xmi#//@classifiers.0/@members.9"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:WhileLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="newKey">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.2/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <comments>// PENDING: This &quot;key&quot; is not in the right environment.</comments>
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@parameters.1"/>
                      <arguments xsi:type="references:StringReference" value="remove"/>
                      <arguments xsi:type="arrays:ArrayInstantiationByValues">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arrayDimensionsBefore/>
                        <arrayInitializer>
                          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable"/>
                        </arrayInitializer>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@parameters.3"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Negate"/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../util/Map.class.xmi#//@classifiers.0/@members.2"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.2/@statement/@statements.1/@statement/@statements.0/@variable"/>
                    </next>
                  </child>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.2/@statement/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.1/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldKeys">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <comments>// Add the new elements.</comments>
            <namespaces>java</namespaces>
            <namespaces>util</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="../util/Iterator.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../util/Set.class.xmi#//@classifiers.0/@members.3"/>
              </next>
              <target xsi:type="members:InterfaceMethod" href="../util/Map.class.xmi#//@classifiers.0/@members.9"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:WhileLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="oldKey">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.3/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:InterfaceMethod" href="../util/Iterator.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="oldGetExp">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@parameters.1"/>
                <arguments xsi:type="references:StringReference" value="get"/>
                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arrayDimensionsBefore/>
                  <arrayInitializer>
                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.4/@statement/@statements.0/@variable"/>
                  </arrayInitializer>
                </arguments>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="newGetExp">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <comments>// Pending: should use newKey.</comments>
                  <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@parameters.2"/>
                <arguments xsi:type="references:StringReference" value="get"/>
                <arguments xsi:type="arrays:ArrayInstantiationByValues">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arrayDimensionsBefore/>
                  <arrayInitializer>
                    <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.4/@statement/@statements.0/@variable"/>
                  </arrayInitializer>
                </arguments>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="oldValue">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.4/@statement/@statements.1/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Expression.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="newValue">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.4/@statement/@statements.2/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Expression.class.xmi#//@classifiers.0/@members.4"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@parameters.3">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.16"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.4/@statement/@statements.1/@variable"/>
                </next>
              </expression>
            </statements>
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@parameters.1"/>
                    <arguments xsi:type="references:StringReference" value="put"/>
                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arrayDimensionsBefore/>
                      <arrayInitializer>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.4/@statement/@statements.0/@variable"/>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.4/@statement/@statements.3/@statements.0/@variable"/>
                      </arrayInitializer>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@parameters.3"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.37">
                  <next xsi:type="references:MethodCall" target="//@classifiers.37/@members.8">
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.4/@statement/@statements.3/@statements.1/@variable"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@parameters.3">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.12"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.4/@statement/@statements.3/@statements.0/@variable"/>
                      </next>
                    </arguments>
                  </next>
                </child>
              </condition>
            </statements>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@parameters.3">
                  <next xsi:type="references:MethodCall">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="ExceptionListener.class.xmi#//@classifiers.0/@members.0"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.4/@statement/@statements.3/@catcheBlocks.0/@parameter"/>
                    </next>
                    <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                </expression>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Exception.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.10/@members.0/@statements.3/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:InterfaceMethod" href="../util/Iterator.class.xmi#//@classifiers.0/@members.0"/>
          </next>
        </condition>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_util_AbstractCollection_PersistenceDelegate">
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences target="//@classifiers.8"/>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_util_AbstractList_PersistenceDelegate">
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences target="//@classifiers.9"/>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_util_AbstractMap_PersistenceDelegate">
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences target="//@classifiers.10"/>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_util_Hashtable_PersistenceDelegate">
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences target="//@classifiers.10"/>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_beans_beancontext_BeanContextSupport_PersistenceDelegate">
    <comments>// Beans</comments>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences target="//@classifiers.8"/>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="StaticFieldsPersistenceDelegate">
    <comments>// AWT</comments>
    <members xsi:type="members:ClassMethod" name="installFields">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="cls">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="fields">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../lang/reflect/Field.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsAfter/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.0/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.74"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="field">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../lang/reflect/Field.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.0/@statements.0/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.0/@statements.1/@init"/>
                </arraySelectors>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// Don't install primitives, their identity will not be preserved </comments>
            <comments>// by wrapping. </comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.0/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.16"/>
                    <arguments xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.0/@statements.1/@statement/@statements.0/@variable"/>
                      <arguments xsi:type="references:StringReference" value="get"/>
                      <arguments xsi:type="arrays:ArrayInstantiationByValues">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arrayDimensionsBefore/>
                        <arrayInitializer>
                          <initialValues xsi:type="literals:NullLiteral"/>
                        </arrayInitializer>
                      </arguments>
                    </arguments>
                  </next>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference">
              <next xsi:type="references:ReflectiveClassReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.38"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.0/@statements.1/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../lang/reflect/Field.class.xmi#//@classifiers.0/@members.24"/>
                    </next>
                  </arguments>
                </next>
              </next>
              <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.0/@statements.1/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.0/@statements.0/@variable">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.0/@statements.1/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="instantiate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:Throw">
        <throwable xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../lang/RuntimeException.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:StringReference" value="Unrecognized instance: "/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.1/@parameters.0"/>
            <additiveOperators xsi:type="operators:Addition"/>
          </arguments>
        </throwable>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="writeObject">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.2/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.18"/>
                <arguments xsi:type="references:SelfReference">
                  <self xsi:type="literals:This"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <target xsi:type="members:Field" href="../lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../lang/Boolean.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.16/@members.0">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.2/@parameters.1"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.2/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </arguments>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.2/@parameters.1">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.19"/>
              <arguments xsi:type="references:SelfReference">
                <self xsi:type="literals:This"/>
              </arguments>
            </next>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="PersistenceDelegate.class.xmi#//@classifiers.0/@members.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.2/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.16/@members.2/@parameters.1"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_awt_SystemColor_PersistenceDelegate">
    <comments>// SystemColor</comments>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences target="//@classifiers.16"/>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_awt_font_TextAttribute_PersistenceDelegate">
    <comments>// TextAttribute</comments>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences target="//@classifiers.16"/>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_awt_MenuShortcut_PersistenceDelegate">
    <comments>// MenuShortcut</comments>
    <members xsi:type="members:ClassMethod" name="instantiate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="m">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/MenuShortcut.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/MenuShortcut.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.19/@members.0/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.19/@members.0/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.19/@members.0/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </arguments>
          <arguments xsi:type="references:StringReference" value="new"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Integer.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.19/@members.0/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../awt/MenuShortcut.class.xmi#//@classifiers.0/@members.5"/>
                  </next>
                </arguments>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/Boolean.class.xmi#//@classifiers.0/@members.9"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.19/@members.0/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../awt/MenuShortcut.class.xmi#//@classifiers.0/@members.6"/>
                    </next>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="../lang/Boolean.class.xmi#//@classifiers.0"/>
              </initialValues>
            </arrayInitializer>
          </arguments>
        </returnValue>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_awt_Component_PersistenceDelegate">
    <comments>// Component</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="c">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Component.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/Component.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="c2">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Component.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/Component.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// The &quot;background&quot;, &quot;foreground&quot; and &quot;font&quot; properties.</comments>
        <comments>// The foreground and font properties of Windows change from</comments>
        <comments>// null to defined values after the Windows are made visible -</comments>
        <comments>// special case them for now.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="fieldNames">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arrayDimensionsBefore/>
              <initialValue xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:StringReference" value="background"/>
                  <initialValues xsi:type="references:StringReference" value="foreground"/>
                  <initialValues xsi:type="references:StringReference" value="font"/>
                </arrayInitializer>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="name">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.3/@statement/@statements.0/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.3/@statement/@statements.1/@init"/>
                    </arraySelectors>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="oldValue">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="ReflectionUtils.class.xmi#//@classifiers.0/@members.15"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.1"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <next xsi:type="references:ReflectiveClassReference"/>
                            <target xsi:type="classifiers:Class" href="../awt/Component.class.xmi#//@classifiers.0"/>
                          </next>
                        </next>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.3/@statement/@statements.1/@statement/@statements.0/@variable"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.3">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.7"/>
                        </next>
                      </arguments>
                    </next>
                    <target xsi:type="classifiers:Class" href="ReflectionUtils.class.xmi#//@classifiers.0"/>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="newValue">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="expressions:ConditionalExpression">
                    <child xsi:type="expressions:NestedExpression">
                      <expression xsi:type="expressions:EqualityExpression">
                        <equalityOperators xsi:type="operators:Equal"/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.2"/>
                        <children xsi:type="literals:NullLiteral"/>
                      </expression>
                    </child>
                    <expressionIf xsi:type="literals:NullLiteral"/>
                    <expressionElse xsi:type="references:IdentifierReference">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="ReflectionUtils.class.xmi#//@classifiers.0/@members.15"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.2"/>
                        <arguments xsi:type="references:IdentifierReference">
                          <next xsi:type="references:IdentifierReference">
                            <next xsi:type="references:IdentifierReference">
                              <next xsi:type="references:ReflectiveClassReference"/>
                              <target xsi:type="classifiers:Class" href="../awt/Component.class.xmi#//@classifiers.0"/>
                            </next>
                          </next>
                        </arguments>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.3/@statement/@statements.1/@statement/@statements.0/@variable"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.3">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.7"/>
                          </next>
                        </arguments>
                      </next>
                      <target xsi:type="classifiers:Class" href="ReflectionUtils.class.xmi#//@classifiers.0"/>
                    </expressionElse>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.1"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="set"/>
                        <children xsi:type="references:IdentifierReference">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="NameGenerator.class.xmi#//@classifiers.0/@members.5"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.3/@statement/@statements.1/@statement/@statements.0/@variable"/>
                          </next>
                          <target xsi:type="classifiers:Class" href="NameGenerator.class.xmi#//@classifiers.0"/>
                        </children>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                      <arguments xsi:type="arrays:ArrayInstantiationByValues">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arrayDimensionsBefore/>
                        <arrayInitializer>
                          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.3/@statement/@statements.1/@statement/@statements.1/@variable"/>
                        </arrayInitializer>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.3"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:ConditionalAndExpression">
                  <children xsi:type="expressions:EqualityExpression">
                    <equalityOperators xsi:type="operators:NotEqual"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.3/@statement/@statements.1/@statement/@statements.1/@variable"/>
                    <children xsi:type="literals:NullLiteral"/>
                  </children>
                  <children xsi:type="expressions:UnaryExpression">
                    <operators xsi:type="operators:Negate"/>
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.3/@statement/@statements.1/@statement/@statements.1/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
                        <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.3/@statement/@statements.1/@statement/@statements.2/@variable"/>
                      </next>
                    </child>
                  </children>
                </condition>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.3/@statement/@statements.1/@init"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.3/@statement/@statements.0/@variable">
                <next xsi:type="references:IdentifierReference"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <init xsi:type="variables:LocalVariable" name="i">
              <typeReference xsi:type="types:Int"/>
              <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </init>
            <updates xsi:type="expressions:SuffixUnaryModificationExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.3/@statement/@statements.1/@init"/>
              <operator xsi:type="operators:PlusPlus"/>
            </updates>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:InstanceOfExpression">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>java</namespaces>
                <namespaces>awt</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../awt/Window.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.1"/>
            </expression>
          </child>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="p">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <comments>// Bounds</comments>
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Container.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../awt/Component.class.xmi#//@classifiers.0/@members.96"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="locationCorrect">
              <typeReference xsi:type="types:Boolean">
                <comments>// Use the most concise construct.</comments>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../awt/Point.class.xmi#//@classifiers.0/@members.14"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../awt/Component.class.xmi#//@classifiers.0/@members.145"/>
                      </next>
                    </arguments>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../awt/Component.class.xmi#//@classifiers.0/@members.145"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="sizeCorrect">
              <typeReference xsi:type="types:Boolean"/>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../awt/Dimension.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.2/@variable">
                      <next xsi:type="references:MethodCall">
                        <target xsi:type="members:ClassMethod" href="../awt/Component.class.xmi#//@classifiers.0/@members.152"/>
                      </next>
                    </arguments>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../awt/Component.class.xmi#//@classifiers.0/@members.152"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.1"/>
                  <arguments xsi:type="references:StringReference" value="setBounds"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../awt/Component.class.xmi#//@classifiers.0/@members.158"/>
                        </next>
                      </initialValues>
                    </arrayInitializer>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.3"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.5/@statement/@statements.0/@variable"/>
              </children>
              <children xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.5/@statement/@statements.1/@variable"/>
              </children>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.1"/>
                    <arguments xsi:type="references:StringReference" value="setLocation"/>
                    <arguments xsi:type="arrays:ArrayInstantiationByValues">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences>
                          <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                        </classifierReferences>
                      </typeReference>
                      <arrayDimensionsBefore/>
                      <arrayInitializer>
                        <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../awt/Component.class.xmi#//@classifiers.0/@members.145"/>
                          </next>
                        </initialValues>
                      </arrayInitializer>
                    </arguments>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.3"/>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:UnaryExpression">
                <operators xsi:type="operators:Negate"/>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.5/@statement/@statements.0/@variable"/>
              </condition>
              <elseStatement xsi:type="statements:Condition">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.1"/>
                      <arguments xsi:type="references:StringReference" value="setSize"/>
                      <arguments xsi:type="arrays:ArrayInstantiationByValues">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <arrayDimensionsBefore/>
                        <arrayInitializer>
                          <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.1/@variable">
                            <next xsi:type="references:MethodCall">
                              <target xsi:type="members:ClassMethod" href="../awt/Component.class.xmi#//@classifiers.0/@members.152"/>
                            </next>
                          </initialValues>
                        </arrayInitializer>
                      </arguments>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@parameters.3"/>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:UnaryExpression">
                  <operators xsi:type="operators:Negate"/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.5/@statement/@statements.1/@variable"/>
                </condition>
              </elseStatement>
            </elseStatement>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.4/@variable"/>
            <children xsi:type="literals:NullLiteral"/>
          </children>
          <children xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.4/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../awt/Container.class.xmi#//@classifiers.0/@members.62"/>
                </next>
              </children>
              <children xsi:type="literals:NullLiteral"/>
            </children>
            <children xsi:type="expressions:UnaryExpression">
              <operators xsi:type="operators:Negate"/>
              <child xsi:type="expressions:NestedExpression">
                <expression xsi:type="expressions:InstanceOfExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <namespaces>javax</namespaces>
                    <namespaces>swing</namespaces>
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../javax/swing/JLayeredPane.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.20/@members.0/@statements.4/@variable"/>
                </expression>
              </child>
            </children>
          </children>
        </condition>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_awt_Container_PersistenceDelegate">
    <comments>// Container</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Ignore the children of a JScrollPane.</comments>
        <comments>// Pending(milne) find a better way to do this.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return"/>
        </statement>
        <condition xsi:type="expressions:InstanceOfExpression">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>javax</namespaces>
            <namespaces>swing</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../javax/swing/JScrollPane.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <child xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@parameters.1"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldC">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Container.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/Container.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldChildren">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Component.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../awt/Container.class.xmi#//@classifiers.0/@members.28"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="newC">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Container.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/Container.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@parameters.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="newChildren">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Component.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@statements.4/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </expression>
            </child>
            <expressionIf xsi:type="arrays:ArrayInstantiationBySize">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <namespaces>java</namespaces>
                <namespaces>awt</namespaces>
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../awt/Component.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expressionIf>
            <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@statements.4/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../awt/Container.class.xmi#//@classifiers.0/@members.28"/>
              </next>
            </expressionElse>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <comments>// Pending. Assume all the new children are unaltered.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="add"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@statements.3/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@statements.6/@init"/>
                    </arraySelectors>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@parameters.3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@statements.6/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@statements.3/@variable">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@statements.5/@variable">
            <next xsi:type="references:IdentifierReference"/>
          </initialValue>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.21/@members.0/@statements.6/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_awt_Choice_PersistenceDelegate">
    <comments>// Choice</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="m">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Choice.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/Choice.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Choice.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/Choice.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@parameters.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="add"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../awt/Choice.class.xmi#//@classifiers.0/@members.12"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@statements.3/@init"/>
                    </next>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@parameters.3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@statements.3/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../awt/Choice.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../awt/Choice.class.xmi#//@classifiers.0/@members.10"/>
            </next>
          </initialValue>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.22/@members.0/@statements.3/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_awt_Menu_PersistenceDelegate">
    <comments>// Menu</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="m">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Menu.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/Menu.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Menu.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/Menu.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@parameters.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="add"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../awt/Menu.class.xmi#//@classifiers.0/@members.17"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@statements.3/@init"/>
                    </next>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@parameters.3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@statements.3/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../awt/Menu.class.xmi#//@classifiers.0/@members.14"/>
            </next>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../awt/Menu.class.xmi#//@classifiers.0/@members.14"/>
            </next>
          </initialValue>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.23/@members.0/@statements.3/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_awt_MenuBar_PersistenceDelegate">
    <comments>// MenuBar</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="m">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/MenuBar.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/MenuBar.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/MenuBar.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/MenuBar.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@parameters.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="add"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../awt/MenuBar.class.xmi#//@classifiers.0/@members.18"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@statements.3/@init"/>
                    </next>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@parameters.3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@statements.3/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../awt/MenuBar.class.xmi#//@classifiers.0/@members.15"/>
            </next>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../awt/MenuBar.class.xmi#//@classifiers.0/@members.15"/>
            </next>
          </initialValue>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.24/@members.0/@statements.3/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_awt_List_PersistenceDelegate">
    <comments>// List</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="m">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/List.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/List.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/List.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/List.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@parameters.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="add"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../awt/List.class.xmi#//@classifiers.0/@members.20"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@statements.3/@init"/>
                    </next>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@parameters.3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@statements.3/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../awt/List.class.xmi#//@classifiers.0/@members.18"/>
            </next>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../awt/List.class.xmi#//@classifiers.0/@members.18"/>
            </next>
          </initialValue>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.25/@members.0/@statements.3/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_awt_BorderLayout_PersistenceDelegate">
    <comments>// LayoutManagers</comments>
    <comments>// BorderLayout</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="locations">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="north"/>
              <initialValues xsi:type="references:StringReference" value="south"/>
              <initialValues xsi:type="references:StringReference" value="east"/>
              <initialValues xsi:type="references:StringReference" value="west"/>
              <initialValues xsi:type="references:StringReference" value="center"/>
            </arrayInitializer>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="names">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="arrays:ArrayInstantiationByValues">
            <arrayInitializer>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../awt/BorderLayout.class.xmi#//@classifiers.0/@members.11"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../awt/BorderLayout.class.xmi#//@classifiers.0"/>
                  </next>
                </next>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../awt/BorderLayout.class.xmi#//@classifiers.0/@members.12"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../awt/BorderLayout.class.xmi#//@classifiers.0"/>
                  </next>
                </next>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../awt/BorderLayout.class.xmi#//@classifiers.0/@members.13"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../awt/BorderLayout.class.xmi#//@classifiers.0"/>
                  </next>
                </next>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../awt/BorderLayout.class.xmi#//@classifiers.0/@members.14"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../awt/BorderLayout.class.xmi#//@classifiers.0"/>
                  </next>
                </next>
              </initialValues>
              <initialValues xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../awt/BorderLayout.class.xmi#//@classifiers.0/@members.15"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../awt/BorderLayout.class.xmi#//@classifiers.0"/>
                  </next>
                </next>
              </initialValues>
            </arrayInitializer>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="oldC">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="ReflectionUtils.class.xmi#//@classifiers.0/@members.15"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@parameters.1"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:ReflectiveClassReference"/>
                        <target xsi:type="classifiers:Class" href="../awt/BorderLayout.class.xmi#//@classifiers.0"/>
                      </next>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@statements.3/@init"/>
                    </arraySelectors>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@parameters.3">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.7"/>
                    </next>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="ReflectionUtils.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="newC">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="ReflectionUtils.class.xmi#//@classifiers.0/@members.15"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@parameters.2"/>
                  <arguments xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <next xsi:type="references:IdentifierReference">
                        <next xsi:type="references:ReflectiveClassReference"/>
                        <target xsi:type="classifiers:Class" href="../awt/BorderLayout.class.xmi#//@classifiers.0"/>
                      </next>
                    </next>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@statements.1/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@statements.3/@init"/>
                    </arraySelectors>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@parameters.3">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.7"/>
                    </next>
                  </arguments>
                </next>
                <target xsi:type="classifiers:Class" href="ReflectionUtils.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <comments>// Pending, assume any existing elements are OK.</comments>
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@parameters.1"/>
                  <arguments xsi:type="references:StringReference" value="addLayoutComponent"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@statements.3/@statement/@statements.0/@variable"/>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@statements.2/@variable">
                        <arraySelectors>
                          <position xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@statements.3/@init"/>
                        </arraySelectors>
                      </initialValues>
                    </arrayInitializer>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@parameters.3"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@statements.3/@statement/@statements.0/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </children>
              <children xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@statements.3/@statement/@statements.1/@variable"/>
                <children xsi:type="literals:NullLiteral"/>
              </children>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@statements.3/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@statements.1/@variable">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.26/@members.0/@statements.3/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_awt_CardLayout_PersistenceDelegate">
    <comments>// CardLayout</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tab">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../util/Hashtable.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../util/Hashtable.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="ReflectionUtils.class.xmi#//@classifiers.0/@members.15"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@parameters.1"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <next xsi:type="references:ReflectiveClassReference"/>
                      <target xsi:type="classifiers:Class" href="../awt/CardLayout.class.xmi#//@classifiers.0"/>
                    </next>
                  </next>
                </arguments>
                <arguments xsi:type="references:StringReference" value="tab"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@parameters.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="ReflectionUtils.class.xmi#//@classifiers.0"/>
            </child>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="child">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@statements.2/@statement/@statements.0/@init">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../util/Enumeration.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@parameters.1"/>
                  <arguments xsi:type="references:StringReference" value="addLayoutComponent"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@statements.2/@statement/@statements.0/@statement/@statements.0/@variable"/>
                      <initialValues xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@statements.1/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@statements.2/@statement/@statements.0/@statement/@statements.0/@variable"/>
                          </next>
                        </child>
                      </initialValues>
                    </arrayInitializer>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@parameters.3"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@statements.2/@statement/@statements.0/@init">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../util/Enumeration.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </condition>
            <init xsi:type="variables:LocalVariable" name="e">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../util/Enumeration.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../util/Hashtable.class.xmi#//@classifiers.0/@members.20"/>
                </next>
              </initialValue>
            </init>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.27/@members.0/@statements.1/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="java_awt_GridBagLayout_PersistenceDelegate">
    <comments>// GridBagLayout</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="comptable">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../util/Hashtable.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../util/Hashtable.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="ReflectionUtils.class.xmi#//@classifiers.0/@members.15"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@parameters.1"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <next xsi:type="references:ReflectiveClassReference"/>
                      <target xsi:type="classifiers:Class" href="../awt/GridBagLayout.class.xmi#//@classifiers.0"/>
                    </next>
                  </next>
                </arguments>
                <arguments xsi:type="references:StringReference" value="comptable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@parameters.3">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.7"/>
                  </next>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="ReflectionUtils.class.xmi#//@classifiers.0"/>
            </child>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ForLoop">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:LocalVariableStatement">
                <variable name="child">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@statements.2/@statement/@statements.0/@init">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:InterfaceMethod" href="../util/Enumeration.class.xmi#//@classifiers.0/@members.1"/>
                    </next>
                  </initialValue>
                </variable>
              </statements>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@parameters.1"/>
                  <arguments xsi:type="references:StringReference" value="addLayoutComponent"/>
                  <arguments xsi:type="arrays:ArrayInstantiationByValues">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences>
                        <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                      </classifierReferences>
                    </typeReference>
                    <arrayDimensionsBefore/>
                    <arrayInitializer>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@statements.2/@statement/@statements.0/@statement/@statements.0/@variable"/>
                      <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@statements.1/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@statements.2/@statement/@statements.0/@statement/@statements.0/@variable"/>
                        </next>
                      </initialValues>
                    </arrayInitializer>
                  </arguments>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@parameters.3"/>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@statements.2/@statement/@statements.0/@init">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:InterfaceMethod" href="../util/Enumeration.class.xmi#//@classifiers.0/@members.0"/>
              </next>
            </condition>
            <init xsi:type="variables:LocalVariable" name="e">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Interface" href="../util/Enumeration.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@statements.1/@variable">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../util/Hashtable.class.xmi#//@classifiers.0/@members.20"/>
                </next>
              </initialValue>
            </init>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.28/@members.0/@statements.1/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="javax_swing_JFrame_PersistenceDelegate">
    <comments>// Swing</comments>
    <comments>// JFrame (If we do this for Window instead of JFrame, the setVisible call</comments>
    <comments>// will be issued before we have added all the children to the JFrame and</comments>
    <comments>// will appear blank).</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldC">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Window.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/Window.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="newC">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Window.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>java</namespaces>
              <namespaces>awt</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../awt/Window.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@parameters.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="oldV">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../awt/Component.class.xmi#//@classifiers.0/@members.110"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="newV">
          <typeReference xsi:type="types:Boolean"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../awt/Component.class.xmi#//@classifiers.0/@members.110"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="executeStatements">
              <typeReference xsi:type="types:Boolean">
                <comments>// false means: don't execute this statement at write time.</comments>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@parameters.3">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Encoder.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@parameters.3">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Encoder.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="literals:BooleanLiteral"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="setVisible"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../lang/Boolean.class.xmi#//@classifiers.0/@members.9"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@statements.3/@variable"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../lang/Boolean.class.xmi#//@classifiers.0"/>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@parameters.3"/>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@parameters.3">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="Encoder.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </child>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@statements.5/@statement/@statements.0/@variable"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@statements.4/@variable"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.29/@members.0/@statements.3/@variable"/>
        </condition>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="javax_swing_DefaultListModel_PersistenceDelegate">
    <comments>// Models</comments>
    <comments>// DefaultListModel</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super">
            <comments>// Note, the &quot;size&quot; property will be set here.</comments>
          </self>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="m">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>javax</namespaces>
            <namespaces>swing</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../javax/swing/DefaultListModel.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>javax</namespaces>
              <namespaces>swing</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../javax/swing/DefaultListModel.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>javax</namespaces>
            <namespaces>swing</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../javax/swing/DefaultListModel.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>javax</namespaces>
              <namespaces>swing</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../javax/swing/DefaultListModel.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@parameters.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="add"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <comments>// Can also use &quot;addElement&quot;.</comments>
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../javax/swing/DefaultListModel.class.xmi#//@classifiers.0/@members.3"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@statements.3/@init"/>
                    </next>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@parameters.3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@statements.3/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../javax/swing/DefaultListModel.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../javax/swing/DefaultListModel.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </initialValue>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.30/@members.0/@statements.3/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="javax_swing_DefaultComboBoxModel_PersistenceDelegate">
    <comments>// DefaultComboBoxModel</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.31/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.31/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.31/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.31/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="m">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>javax</namespaces>
            <namespaces>swing</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../javax/swing/DefaultComboBoxModel.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>javax</namespaces>
              <namespaces>swing</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../javax/swing/DefaultComboBoxModel.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.31/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.31/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="addElement"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.31/@members.0/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../javax/swing/DefaultComboBoxModel.class.xmi#//@classifiers.0/@members.8"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.31/@members.0/@statements.2/@init"/>
                    </next>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.31/@members.0/@parameters.3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.31/@members.0/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.31/@members.0/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../javax/swing/DefaultComboBoxModel.class.xmi#//@classifiers.0/@members.7"/>
            </next>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.31/@members.0/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="javax_swing_tree_DefaultMutableTreeNode_PersistenceDelegate">
    <comments>// DefaultMutableTreeNode</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="m">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>javax</namespaces>
            <namespaces>swing</namespaces>
            <namespaces>tree</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../javax/swing/tree/DefaultMutableTreeNode.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>javax</namespaces>
              <namespaces>swing</namespaces>
              <namespaces>tree</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../javax/swing/tree/DefaultMutableTreeNode.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="n">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>javax</namespaces>
            <namespaces>swing</namespaces>
            <namespaces>tree</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../javax/swing/tree/DefaultMutableTreeNode.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>javax</namespaces>
              <namespaces>swing</namespaces>
              <namespaces>tree</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../javax/swing/tree/DefaultMutableTreeNode.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@parameters.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="add"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../javax/swing/tree/DefaultMutableTreeNode.class.xmi#//@classifiers.0/@members.12"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@statements.3/@init"/>
                    </next>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@parameters.3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@statements.3/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../javax/swing/tree/DefaultMutableTreeNode.class.xmi#//@classifiers.0/@members.13"/>
            </next>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@statements.2/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../javax/swing/tree/DefaultMutableTreeNode.class.xmi#//@classifiers.0/@members.13"/>
            </next>
          </initialValue>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.32/@members.0/@statements.3/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="javax_swing_ToolTipManager_PersistenceDelegate">
    <comments>// ToolTipManager</comments>
    <members xsi:type="members:ClassMethod" name="instantiate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.33/@members.0/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:ReflectiveClassReference"/>
                <target xsi:type="classifiers:Class" href="../../javax/swing/ToolTipManager.class.xmi#//@classifiers.0"/>
              </next>
            </next>
          </arguments>
          <arguments xsi:type="references:StringReference" value="sharedInstance"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer/>
          </arguments>
        </returnValue>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="javax_swing_JTabbedPane_PersistenceDelegate">
    <comments>// JTabbedPane</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="p">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>javax</namespaces>
            <namespaces>swing</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../javax/swing/JTabbedPane.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>javax</namespaces>
              <namespaces>swing</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../javax/swing/JTabbedPane.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="addTab"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../javax/swing/JTabbedPane.class.xmi#//@classifiers.0/@members.48"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@statements.2/@init"/>
                    </next>
                  </initialValues>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../javax/swing/JTabbedPane.class.xmi#//@classifiers.0/@members.49"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@statements.2/@init"/>
                    </next>
                  </initialValues>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../javax/swing/JTabbedPane.class.xmi#//@classifiers.0/@members.55"/>
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@statements.2/@init"/>
                    </next>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@parameters.3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../javax/swing/JTabbedPane.class.xmi#//@classifiers.0/@members.46"/>
            </next>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.34/@members.0/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="javax_swing_Box_PersistenceDelegate">
    <comments>// Box</comments>
    <members xsi:type="members:ClassMethod" name="instantiate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="lm">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>javax</namespaces>
            <namespaces>swing</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../javax/swing/BoxLayout.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>javax</namespaces>
              <namespaces>swing</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../javax/swing/BoxLayout.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="expressions:NestedExpression">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../awt/Container.class.xmi#//@classifiers.0/@members.62"/>
              </next>
              <expression xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <namespaces>javax</namespaces>
                  <namespaces>swing</namespaces>
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../../javax/swing/Box.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.35/@members.0/@parameters.0"/>
              </expression>
            </child>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="value">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="ReflectionUtils.class.xmi#//@classifiers.0/@members.15"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.35/@members.0/@statements.0/@variable"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:ReflectiveClassReference"/>
                    <target xsi:type="classifiers:Class" href="../../javax/swing/BoxLayout.class.xmi#//@classifiers.0"/>
                  </next>
                </next>
              </arguments>
              <arguments xsi:type="references:StringReference" value="axis"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.35/@members.0/@parameters.1">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="Encoder.class.xmi#//@classifiers.0/@members.7"/>
                </next>
              </arguments>
            </next>
            <target xsi:type="classifiers:Class" href="ReflectionUtils.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="method">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="expressions:NestedExpression">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../lang/Integer.class.xmi#//@classifiers.0/@members.27"/>
                </next>
                <expression xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../lang/Integer.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.35/@members.0/@statements.1/@variable"/>
                </expression>
              </children>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="../../javax/swing/BoxLayout.class.xmi#//@classifiers.0/@members.0"/>
                    </next>
                    <target xsi:type="classifiers:Class" href="../../javax/swing/BoxLayout.class.xmi#//@classifiers.0"/>
                  </next>
                </next>
              </children>
            </child>
            <expressionIf xsi:type="references:StringReference" value="createHorizontalBox"/>
            <expressionElse xsi:type="references:StringReference" value="createVerticalBox"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="Expression.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.35/@members.0/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.35/@members.0/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.35/@members.0/@statements.2/@variable"/>
          <arguments xsi:type="arrays:ArrayInstantiationBySize">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <sizes xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </arguments>
        </returnValue>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="javax_swing_JMenu_PersistenceDelegate">
    <comments>// JMenu</comments>
    <comments>// Note that we do not need to state the initialiser for</comments>
    <comments>// JMenuItems since the getComponents() method defined in</comments>
    <comments>// Container will return all of the sub menu items that</comments>
    <comments>// need to be added to the menu item.</comments>
    <comments>// Not so for JMenu apparently.</comments>
    <members xsi:type="members:ClassMethod" name="initialize">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <typeArguments xsi:type="generics:UnknownTypeArgument"/>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="oldInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="newInstance">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="out">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Encoder.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:SelfReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.13"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.36/@members.0/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.36/@members.0/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.36/@members.0/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.36/@members.0/@parameters.3"/>
          </next>
          <self xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="m">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>javax</namespaces>
            <namespaces>swing</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>javax</namespaces>
              <namespaces>swing</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../javax/swing/JMenu.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.36/@members.0/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="c">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <namespaces>java</namespaces>
            <namespaces>awt</namespaces>
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../awt/Component.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.36/@members.0/@statements.1/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../javax/swing/JMenu.class.xmi#//@classifiers.0/@members.50"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0/@members.11"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.36/@members.0/@parameters.1"/>
              <arguments xsi:type="references:StringReference" value="add"/>
              <arguments xsi:type="arrays:ArrayInstantiationByValues">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <arrayDimensionsBefore/>
                <arrayInitializer>
                  <initialValues xsi:type="references:IdentifierReference" target="//@classifiers.36/@members.0/@statements.2/@variable">
                    <arraySelectors>
                      <position xsi:type="references:IdentifierReference" target="//@classifiers.36/@members.0/@statements.3/@init"/>
                    </arraySelectors>
                  </initialValues>
                </arrayInitializer>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.36/@members.0/@parameters.3"/>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.36/@members.0/@statements.3/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.36/@members.0/@statements.2/@variable">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.36/@members.0/@statements.3/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
    </members>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
  <classifiers xsi:type="classifiers:Class" name="MetaData">
    <comments>/* XXX - doens't seem to work. Debug later.&#xA;class javax_swing_JMenu_PersistenceDelegate extends DefaultPersistenceDelegate {&#xA;    protected void initialize(Class&lt;?> type, Object oldInstance, Object newInstance, Encoder out) {&#xA;        super.initialize(type, oldInstance, newInstance, out);&#xA;        javax.swing.JMenu m = (javax.swing.JMenu)oldInstance;&#xA;        javax.swing.JMenu n = (javax.swing.JMenu)newInstance;&#xA;        for (int i = n.getItemCount(); i &lt; m.getItemCount(); i++) {&#xA;            invokeStatement(oldInstance, &quot;add&quot;, new Object[]{m.getItem(i)}, out);&#xA;        }&#xA;    }&#xA;}&#xA;*/</comments>
    <members xsi:type="members:Field" name="internalPersistenceDelegates">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="transientProperties">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../util/Hashtable.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../util/Hashtable.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="nullPersistenceDelegate">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="primitivePersistenceDelegate">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.1"/>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="defaultPersistenceDelegate">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="arrayPersistenceDelegate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="proxyPersistenceDelegate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="statements:Block">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <comments>// Constructors.</comments>
          <comments>// util</comments>
          <arguments xsi:type="references:StringReference" value="java.util.Date"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="time"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <comments>// beans</comments>
          <arguments xsi:type="references:StringReference" value="java.beans.Statement"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="target"/>
              <initialValues xsi:type="references:StringReference" value="methodName"/>
              <initialValues xsi:type="references:StringReference" value="arguments"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="java.beans.Expression"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="target"/>
              <initialValues xsi:type="references:StringReference" value="methodName"/>
              <initialValues xsi:type="references:StringReference" value="arguments"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="java.beans.EventHandler"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="target"/>
              <initialValues xsi:type="references:StringReference" value="action"/>
              <initialValues xsi:type="references:StringReference" value="eventPropertyName"/>
              <initialValues xsi:type="references:StringReference" value="listenerMethodName"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <comments>// awt</comments>
          <arguments xsi:type="references:StringReference" value="java.awt.Point"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="x"/>
              <initialValues xsi:type="references:StringReference" value="y"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="java.awt.Dimension"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="width"/>
              <initialValues xsi:type="references:StringReference" value="height"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="java.awt.Rectangle"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="x"/>
              <initialValues xsi:type="references:StringReference" value="y"/>
              <initialValues xsi:type="references:StringReference" value="width"/>
              <initialValues xsi:type="references:StringReference" value="height"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="java.awt.Insets"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="top"/>
              <initialValues xsi:type="references:StringReference" value="left"/>
              <initialValues xsi:type="references:StringReference" value="bottom"/>
              <initialValues xsi:type="references:StringReference" value="right"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="java.awt.Color"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="red"/>
              <initialValues xsi:type="references:StringReference" value="green"/>
              <initialValues xsi:type="references:StringReference" value="blue"/>
              <initialValues xsi:type="references:StringReference" value="alpha"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="java.awt.Font"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="name"/>
              <initialValues xsi:type="references:StringReference" value="style"/>
              <initialValues xsi:type="references:StringReference" value="size"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="java.awt.Cursor"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="type"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="java.awt.GridBagConstraints"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="gridx"/>
              <initialValues xsi:type="references:StringReference" value="gridy"/>
              <initialValues xsi:type="references:StringReference" value="gridwidth"/>
              <initialValues xsi:type="references:StringReference" value="gridheight"/>
              <initialValues xsi:type="references:StringReference" value="weightx"/>
              <initialValues xsi:type="references:StringReference" value="weighty"/>
              <initialValues xsi:type="references:StringReference" value="anchor"/>
              <initialValues xsi:type="references:StringReference" value="fill"/>
              <initialValues xsi:type="references:StringReference" value="insets"/>
              <initialValues xsi:type="references:StringReference" value="ipadx"/>
              <initialValues xsi:type="references:StringReference" value="ipady"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="java.awt.ScrollPane"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="scrollbarDisplayPolicy"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <comments>// swing</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.plaf.FontUIResource"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="name"/>
              <initialValues xsi:type="references:StringReference" value="style"/>
              <initialValues xsi:type="references:StringReference" value="size"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.plaf.ColorUIResource"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="red"/>
              <initialValues xsi:type="references:StringReference" value="green"/>
              <initialValues xsi:type="references:StringReference" value="blue"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.tree.DefaultTreeModel"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="root"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.JTree"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="model"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.tree.TreePath"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="path"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.OverlayLayout"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="target"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.BoxLayout"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="target"/>
              <initialValues xsi:type="references:StringReference" value="axis"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.Box$Filler"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="minimumSize"/>
              <initialValues xsi:type="references:StringReference" value="preferredSize"/>
              <initialValues xsi:type="references:StringReference" value="maximumSize"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.DefaultCellEditor"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="component"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <comments>/*&#xA;        This is required because the JSplitPane reveals a private layout class&#xA;        called BasicSplitPaneUI$BasicVerticalLayoutManager which changes with&#xA;        the orientation. To avoid the necessity for instantiating it we cause&#xA;        the orientation attribute to get set before the layout manager - that&#xA;        way the layout manager will be changed as a side effect. Unfortunately,&#xA;        the layout property belongs to the superclass and therefore precedes&#xA;        the orientation property. PENDING - we need to allow this kind of&#xA;        modification. For now, put the property in the constructor.&#xA;        */</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.JSplitPane"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="orientation"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <comments>// Try to synthesize the ImageIcon from its description.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.ImageIcon"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="description"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <comments>// JButton's &quot;label&quot; and &quot;actionCommand&quot; properties are related,</comments>
          <comments>// use the label as a constructor argument to ensure that it is set first.</comments>
          <comments>// This remove the benign, but unnecessary, manipulation of actionCommand</comments>
          <comments>// property in the common case.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.JButton"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="label"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <comments>// borders</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.border.BevelBorder"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="bevelType"/>
              <initialValues xsi:type="references:StringReference" value="highlightOuter"/>
              <initialValues xsi:type="references:StringReference" value="highlightInner"/>
              <initialValues xsi:type="references:StringReference" value="shadowOuter"/>
              <initialValues xsi:type="references:StringReference" value="shadowInner"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.plaf.BorderUIResource$BevelBorderUIResource"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="bevelType"/>
              <initialValues xsi:type="references:StringReference" value="highlightOuter"/>
              <initialValues xsi:type="references:StringReference" value="highlightInner"/>
              <initialValues xsi:type="references:StringReference" value="shadowOuter"/>
              <initialValues xsi:type="references:StringReference" value="shadowInner"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.border.CompoundBorder"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="outsideBorder"/>
              <initialValues xsi:type="references:StringReference" value="insideBorder"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.plaf.BorderUIResource$CompoundBorderUIResource"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="outsideBorder"/>
              <initialValues xsi:type="references:StringReference" value="insideBorder"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.border.EmptyBorder"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="top"/>
              <initialValues xsi:type="references:StringReference" value="left"/>
              <initialValues xsi:type="references:StringReference" value="bottom"/>
              <initialValues xsi:type="references:StringReference" value="right"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.plaf.BorderUIResource$EmptyBorderUIResource"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="top"/>
              <initialValues xsi:type="references:StringReference" value="left"/>
              <initialValues xsi:type="references:StringReference" value="bottom"/>
              <initialValues xsi:type="references:StringReference" value="right"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.border.EtchedBorder"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="etchType"/>
              <initialValues xsi:type="references:StringReference" value="highlight"/>
              <initialValues xsi:type="references:StringReference" value="shadow"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.plaf.BorderUIResource$EtchedBorderUIResource"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="etchType"/>
              <initialValues xsi:type="references:StringReference" value="highlight"/>
              <initialValues xsi:type="references:StringReference" value="shadow"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.border.LineBorder"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="lineColor"/>
              <initialValues xsi:type="references:StringReference" value="thickness"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.plaf.BorderUIResource$LineBorderUIResource"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="lineColor"/>
              <initialValues xsi:type="references:StringReference" value="thickness"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <comments>// Note this should check to see which of &quot;color&quot; and &quot;tileIcon&quot; is non-null.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.border.MatteBorder"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="top"/>
              <initialValues xsi:type="references:StringReference" value="left"/>
              <initialValues xsi:type="references:StringReference" value="bottom"/>
              <initialValues xsi:type="references:StringReference" value="right"/>
              <initialValues xsi:type="references:StringReference" value="tileIcon"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.plaf.BorderUIResource$MatteBorderUIResource"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="top"/>
              <initialValues xsi:type="references:StringReference" value="left"/>
              <initialValues xsi:type="references:StringReference" value="bottom"/>
              <initialValues xsi:type="references:StringReference" value="right"/>
              <initialValues xsi:type="references:StringReference" value="tileIcon"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.border.SoftBevelBorder"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="bevelType"/>
              <initialValues xsi:type="references:StringReference" value="highlightOuter"/>
              <initialValues xsi:type="references:StringReference" value="highlightInner"/>
              <initialValues xsi:type="references:StringReference" value="shadowOuter"/>
              <initialValues xsi:type="references:StringReference" value="shadowInner"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <comments>// registerConstructorWithBadEqual(&quot;javax.swing.plaf.BorderUIResource$SoftBevelBorderUIResource&quot;, new String[]{&quot;bevelType&quot;, &quot;highlightOuter&quot;, &quot;highlightInner&quot;, &quot;shadowOuter&quot;, &quot;shadowInner&quot;});</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.border.TitledBorder"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="border"/>
              <initialValues xsi:type="references:StringReference" value="title"/>
              <initialValues xsi:type="references:StringReference" value="titleJustification"/>
              <initialValues xsi:type="references:StringReference" value="titlePosition"/>
              <initialValues xsi:type="references:StringReference" value="titleFont"/>
              <initialValues xsi:type="references:StringReference" value="titleColor"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.16">
          <arguments xsi:type="references:StringReference" value="javax.swing.plaf.BorderUIResource$TitledBorderUIResource"/>
          <arguments xsi:type="arrays:ArrayInstantiationByValues">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arrayDimensionsBefore/>
            <arrayInitializer>
              <initialValues xsi:type="references:StringReference" value="border"/>
              <initialValues xsi:type="references:StringReference" value="title"/>
              <initialValues xsi:type="references:StringReference" value="titleJustification"/>
              <initialValues xsi:type="references:StringReference" value="titlePosition"/>
              <initialValues xsi:type="references:StringReference" value="titleFont"/>
              <initialValues xsi:type="references:StringReference" value="titleColor"/>
            </arrayInitializer>
          </arguments>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// Transient properties</comments>
          <comments>// awt</comments>
          <comments>// Infinite graphs.</comments>
          <arguments xsi:type="references:StringReference" value="java.awt.geom.RectangularShape"/>
          <arguments xsi:type="references:StringReference" value="frame"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// removeProperty(&quot;java.awt.Rectangle2D&quot;, &quot;frame&quot;);</comments>
          <comments>// removeProperty(&quot;java.awt.Rectangle&quot;, &quot;frame&quot;);</comments>
          <arguments xsi:type="references:StringReference" value="java.awt.Rectangle"/>
          <arguments xsi:type="references:StringReference" value="bounds"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="java.awt.Dimension"/>
          <arguments xsi:type="references:StringReference" value="size"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="java.awt.Point"/>
          <arguments xsi:type="references:StringReference" value="location"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// The color and font properties in Component need special treatment, see above.</comments>
          <arguments xsi:type="references:StringReference" value="java.awt.Component"/>
          <arguments xsi:type="references:StringReference" value="foreground"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="java.awt.Component"/>
          <arguments xsi:type="references:StringReference" value="background"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="java.awt.Component"/>
          <arguments xsi:type="references:StringReference" value="font"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// The visible property of Component needs special treatment because of Windows.</comments>
          <arguments xsi:type="references:StringReference" value="java.awt.Component"/>
          <arguments xsi:type="references:StringReference" value="visible"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// This property throws an exception if accessed when there is no child. </comments>
          <arguments xsi:type="references:StringReference" value="java.awt.ScrollPane"/>
          <arguments xsi:type="references:StringReference" value="scrollPosition"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// 4917458 this should be removed for XAWT since it may throw</comments>
          <comments>// an unsupported exception if there isn't any input methods.</comments>
          <comments>// This shouldn't be a problem since these are added behind</comments>
          <comments>// the scenes automatically.</comments>
          <arguments xsi:type="references:StringReference" value="java.awt.im.InputContext"/>
          <arguments xsi:type="references:StringReference" value="compositionEnabled"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// swing</comments>
          <comments>// The size properties in JComponent need special treatment, see above.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.JComponent"/>
          <arguments xsi:type="references:StringReference" value="minimumSize"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.JComponent"/>
          <arguments xsi:type="references:StringReference" value="preferredSize"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.JComponent"/>
          <arguments xsi:type="references:StringReference" value="maximumSize"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// These properties have platform specific implementations</comments>
          <comments>// and should not appear in archives.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.ImageIcon"/>
          <arguments xsi:type="references:StringReference" value="image"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.ImageIcon"/>
          <arguments xsi:type="references:StringReference" value="imageObserver"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// This property throws an exception when set in JMenu.</comments>
          <comments>// PENDING: Note we must delete the property from</comments>
          <comments>// the superclass even though the superclass's</comments>
          <comments>// implementation does not throw an error.</comments>
          <comments>// This needs some more thought.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.JMenu"/>
          <arguments xsi:type="references:StringReference" value="accelerator"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.JMenuItem"/>
          <arguments xsi:type="references:StringReference" value="accelerator"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// This property unconditionally throws a &quot;not implemented&quot; exception.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.JMenuBar"/>
          <arguments xsi:type="references:StringReference" value="helpMenu"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// The scrollBars in a JScrollPane are dynamic and should not</comments>
          <comments>// be archived. The row and columns headers are changed by</comments>
          <comments>// components like JTable on &quot;addNotify&quot;.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.JScrollPane"/>
          <arguments xsi:type="references:StringReference" value="verticalScrollBar"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.JScrollPane"/>
          <arguments xsi:type="references:StringReference" value="horizontalScrollBar"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.JScrollPane"/>
          <arguments xsi:type="references:StringReference" value="rowHeader"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.JScrollPane"/>
          <arguments xsi:type="references:StringReference" value="columnHeader"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.JViewport"/>
          <arguments xsi:type="references:StringReference" value="extentSize"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// Renderers need special treatment, since their properties</comments>
          <comments>// change during rendering.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.table.JTableHeader"/>
          <arguments xsi:type="references:StringReference" value="defaultRenderer"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.JList"/>
          <arguments xsi:type="references:StringReference" value="cellRenderer"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.JList"/>
          <arguments xsi:type="references:StringReference" value="selectedIndices"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// The lead and anchor selection indexes are best ignored.</comments>
          <comments>// Selection is rarely something that should persist from</comments>
          <comments>// development to deployment.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.DefaultListSelectionModel"/>
          <arguments xsi:type="references:StringReference" value="leadSelectionIndex"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.DefaultListSelectionModel"/>
          <arguments xsi:type="references:StringReference" value="anchorSelectionIndex"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// The selection must come after the text itself.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.JComboBox"/>
          <arguments xsi:type="references:StringReference" value="selectedIndex"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// All selection information should come after the JTabbedPane is built</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.JTabbedPane"/>
          <arguments xsi:type="references:StringReference" value="selectedIndex"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.JTabbedPane"/>
          <arguments xsi:type="references:StringReference" value="selectedComponent"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// PENDING: The &quot;disabledIcon&quot; property is often computed from the icon property.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.AbstractButton"/>
          <arguments xsi:type="references:StringReference" value="disabledIcon"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.JLabel"/>
          <arguments xsi:type="references:StringReference" value="disabledIcon"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// The caret property throws errors when it it set beyond</comments>
          <comments>// the extent of the text. We could just set it after the</comments>
          <comments>// text, but this is probably not something we want to archive anyway.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.text.JTextComponent"/>
          <arguments xsi:type="references:StringReference" value="caret"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.text.JTextComponent"/>
          <arguments xsi:type="references:StringReference" value="caretPosition"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <comments>// The selectionStart must come after the text itself.</comments>
          <arguments xsi:type="references:StringReference" value="javax.swing.text.JTextComponent"/>
          <arguments xsi:type="references:StringReference" value="selectionStart"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.17">
          <arguments xsi:type="references:StringReference" value="javax.swing.text.JTextComponent"/>
          <arguments xsi:type="references:StringReference" value="selectionEnd"/>
        </expression>
      </statements>
      <modifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:ClassMethod" name="equals">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="o1">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="o2">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Static">
        <comments>/*pp*/</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:ConditionalExpression">
          <child xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.8/@parameters.0"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </child>
          <expressionIf xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.8/@parameters.1"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </expressionIf>
          <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.8/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../lang/Object.class.xmi#//@classifiers.0/@members.4"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.8/@parameters.1"/>
            </next>
          </expressionElse>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setPersistenceDelegate">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="persistenceDelegate">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// Entry points for Encoder.</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.14">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.9/@parameters.0"/>
          <arguments xsi:type="references:StringReference" value="persistenceDelegate"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.9/@parameters.1"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getPersistenceDelegate">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.2"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@parameters.0"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.3"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="ReflectionUtils.class.xmi#//@classifiers.0/@members.3"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@parameters.0"/>
          </next>
          <target xsi:type="classifiers:Class" href="ReflectionUtils.class.xmi#//@classifiers.0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// The persistence delegate for arrays is non-trivial; instantiate it lazily.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="expressions:AssignmentExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.5"/>
                  <assignmentOperator xsi:type="operators:Assignment"/>
                  <value xsi:type="instantiations:NewConstructorCall">
                    <typeReference xsi:type="types:NamespaceClassifierReference">
                      <classifierReferences target="//@classifiers.2"/>
                    </typeReference>
                  </value>
                </expression>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.5"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.5"/>
          </statements>
        </statement>
        <condition xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.40"/>
          </next>
        </condition>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <comments>// Handle proxies lazily for backward compatibility with 1.2.</comments>
        <statements xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:ExpressionStatement">
                  <expression xsi:type="expressions:AssignmentExpression">
                    <child xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.6"/>
                    <assignmentOperator xsi:type="operators:Assignment"/>
                    <value xsi:type="instantiations:NewConstructorCall">
                      <typeReference xsi:type="types:NamespaceClassifierReference">
                        <classifierReferences target="//@classifiers.3"/>
                      </typeReference>
                    </value>
                  </expression>
                </statements>
              </statement>
              <condition xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.6"/>
                <children xsi:type="literals:NullLiteral"/>
              </condition>
            </statements>
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.6"/>
            </statements>
          </statement>
          <condition xsi:type="references:IdentifierReference">
            <next xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../lang/reflect/Proxy.class.xmi#//@classifiers.0/@members.13"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@parameters.0"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../lang/reflect/Proxy.class.xmi#//@classifiers.0"/>
                </next>
              </next>
            </next>
          </condition>
        </statements>
        <catcheBlocks>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/Exception.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="typeName">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <comments>// else if (type.getDeclaringClass() != null) {</comments>
              <comments>//     return new DefaultPersistenceDelegate(new String[]{&quot;this$0&quot;});</comments>
              <comments>// }</comments>
              <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.44"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Check to see if there are properties that have been lazily registered for removal.</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="tp">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../util/Vector.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../util/Vector.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.1">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.4/@variable"/>
                  </next>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:ForLoop">
                <statement xsi:type="statements:Block">
                  <statements xsi:type="statements:ExpressionStatement">
                    <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.13">
                      <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@parameters.0"/>
                      <arguments xsi:type="expressions:CastExpression">
                        <typeReference xsi:type="types:NamespaceClassifierReference">
                          <classifierReferences>
                            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
                          </classifierReferences>
                        </typeReference>
                        <child xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.5/@statement/@statements.0/@variable">
                          <next xsi:type="references:MethodCall">
                            <target xsi:type="members:ClassMethod" href="../util/Vector.class.xmi#//@classifiers.0/@members.34"/>
                            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.0/@init"/>
                          </next>
                        </child>
                      </arguments>
                      <arguments xsi:type="references:StringReference" value="transient"/>
                      <arguments xsi:type="references:IdentifierReference">
                        <next xsi:type="references:IdentifierReference">
                          <target xsi:type="members:Field" href="../lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                        </next>
                        <target xsi:type="classifiers:Class" href="../lang/Boolean.class.xmi#//@classifiers.0"/>
                      </arguments>
                    </expression>
                  </statements>
                </statement>
                <condition xsi:type="expressions:RelationExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.0/@init"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.5/@statement/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../util/Vector.class.xmi#//@classifiers.0/@members.14"/>
                    </next>
                  </children>
                  <relationOperators xsi:type="operators:LessThan"/>
                </condition>
                <init xsi:type="variables:LocalVariable" name="i">
                  <typeReference xsi:type="types:Int"/>
                  <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
                </init>
                <updates xsi:type="expressions:SuffixUnaryModificationExpression">
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.5/@statement/@statements.1/@statement/@statements.0/@init"/>
                  <operator xsi:type="operators:PlusPlus"/>
                </updates>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.5/@statement/@statements.0/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.14">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@parameters.0"/>
              <arguments xsi:type="references:StringReference" value="transient_init"/>
              <arguments xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="../lang/Boolean.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="../lang/Boolean.class.xmi#//@classifiers.0"/>
              </arguments>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:MethodCall" target="//@classifiers.37/@members.15">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@parameters.0"/>
            <arguments xsi:type="references:StringReference" value="transient_init"/>
          </children>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pd">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:MethodCall" target="//@classifiers.37/@members.15">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@parameters.0"/>
              <arguments xsi:type="references:StringReference" value="persistenceDelegate"/>
            </child>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.6/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <child xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                    <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.4/@variable"/>
                  </next>
                </child>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.6/@variable"/>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.6/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </condition>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.4/@variable"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.4"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:TryBlock">
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="name">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@parameters.0">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.44"/>
                  </next>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:LocalVariableStatement">
              <variable name="c">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
                <initialValue xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.32"/>
                    <arguments xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:StringReference" value="java.beans."/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.7/@statement/@statements.3/@statements.0/@variable">
                        <next xsi:type="references:MethodCall">
                          <target xsi:type="members:ClassMethod" href="../lang/String.class.xmi#//@classifiers.0/@members.59"/>
                          <arguments xsi:type="literals:CharacterLiteral" value="46"/>
                          <arguments xsi:type="literals:CharacterLiteral" value="95"/>
                        </next>
                      </children>
                      <children xsi:type="references:StringReference" value="_PersistenceDelegate"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </arguments>
                  </next>
                  <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
                </initialValue>
              </variable>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.6/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="PersistenceDelegate.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.7/@statement/@statements.3/@statements.1/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../lang/Class.class.xmi#//@classifiers.0/@members.35"/>
                    </next>
                  </child>
                </value>
              </expression>
            </statements>
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.4/@variable"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.6/@variable"/>
                </next>
              </expression>
            </statements>
            <catcheBlocks>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/ClassNotFoundException.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
            <catcheBlocks>
              <statements xsi:type="statements:ExpressionStatement">
                <expression xsi:type="references:IdentifierReference">
                  <next xsi:type="references:IdentifierReference">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                      <arguments xsi:type="expressions:AdditiveExpression">
                        <children xsi:type="references:StringReference" value="Internal error: "/>
                        <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.7/@statement/@statements.3/@catcheBlocks.1/@parameter"/>
                        <additiveOperators xsi:type="operators:Addition"/>
                      </arguments>
                    </next>
                    <target xsi:type="members:Field" href="../lang/System.class.xmi#//@classifiers.0/@members.2"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../lang/System.class.xmi#//@classifiers.0"/>
                </expression>
              </statements>
              <parameter name="e">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../lang/Exception.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </parameter>
            </catcheBlocks>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.6/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:ConditionalExpression">
          <child xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.6/@variable"/>
              <children xsi:type="literals:NullLiteral"/>
            </expression>
          </child>
          <expressionIf xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.10/@statements.6/@variable"/>
          <expressionElse xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.4"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getBeanInfo">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="BeanInfo.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>// Wrapper for Introspector.getBeanInfo to handle exception handling.</comments>
        <comments>// Note: this relys on new 1.4 Introspector semantics which cache the BeanInfos</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="info">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="BeanInfo.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="literals:NullLiteral"/>
        </variable>
      </statements>
      <statements xsi:type="statements:TryBlock">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.11/@statements.0/@variable"/>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="Introspector.class.xmi#//@classifiers.0/@members.28"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.11/@parameters.0"/>
              </next>
              <target xsi:type="classifiers:Class" href="Introspector.class.xmi#//@classifiers.0"/>
            </value>
          </expression>
        </statements>
        <catcheBlocks>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.11/@statements.1/@catcheBlocks.0/@parameter">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../lang/Throwable.class.xmi#//@classifiers.0/@members.14"/>
              </next>
            </expression>
          </statements>
          <parameter name="e">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../lang/Throwable.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </parameter>
        </catcheBlocks>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.11/@statements.0/@variable"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getPropertyDescriptor">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="PropertyDescriptor.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="propertyName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="info">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Interface" href="BeanInfo.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.37/@members.11">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.12/@parameters.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="propertyDescriptors">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="PropertyDescriptor.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arrayDimensionsBefore/>
          <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.12/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:InterfaceMethod" href="BeanInfo.class.xmi#//@classifiers.0/@members.7"/>
            </next>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:ForLoop">
        <comments>// System.out.println(&quot;Searching for: &quot; + propertyName + &quot; in &quot; + type);</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="pd">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="PropertyDescriptor.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.12/@statements.1/@variable">
                <arraySelectors>
                  <position xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.12/@statements.2/@init"/>
                </arraySelectors>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.12/@statements.2/@statement/@statements.0/@variable"/>
              </statements>
            </statement>
            <condition xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.12/@parameters.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../lang/String.class.xmi#//@classifiers.0/@members.33"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.12/@statements.2/@statement/@statements.0/@variable">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="FeatureDescriptor.class.xmi#//@classifiers.0/@members.9"/>
                  </next>
                </arguments>
              </next>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.12/@statements.2/@init"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.12/@statements.1/@variable">
            <next xsi:type="references:IdentifierReference"/>
          </children>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <init xsi:type="variables:LocalVariable" name="i">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </init>
        <updates xsi:type="expressions:SuffixUnaryModificationExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.12/@statements.2/@init"/>
          <operator xsi:type="operators:PlusPlus"/>
        </updates>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:NullLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setPropertyAttribute">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="property">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="attribute">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="pd">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="PropertyDescriptor.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.37/@members.12">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.13/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.13/@parameters.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference">
              <next xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../io/PrintStream.class.xmi#//@classifiers.0/@members.42"/>
                  <arguments xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:StringReference" value="Warning: property "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.13/@parameters.1"/>
                    <children xsi:type="references:StringReference" value=" is not defined on "/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.13/@parameters.0"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </arguments>
                </next>
                <target xsi:type="members:Field" href="../lang/System.class.xmi#//@classifiers.0/@members.2"/>
              </next>
              <target xsi:type="classifiers:Class" href="../lang/System.class.xmi#//@classifiers.0"/>
            </expression>
          </statements>
          <statements xsi:type="statements:Return"/>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.13/@statements.0/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.13/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="FeatureDescriptor.class.xmi#//@classifiers.0/@members.21"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.13/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.13/@parameters.3"/>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setBeanAttribute">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="attribute">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="value">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.37/@members.11">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="FeatureDescriptor.class.xmi#//@classifiers.0/@members.21"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.14/@parameters.1"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.14/@parameters.2"/>
            </next>
            <target xsi:type="members:InterfaceMethod" href="BeanInfo.class.xmi#//@classifiers.0/@members.4"/>
          </next>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.14/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getBeanAttribute">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../lang/Object.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="type">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/Class.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="attribute">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:MethodCall" target="//@classifiers.37/@members.11">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="FeatureDescriptor.class.xmi#//@classifiers.0/@members.22"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.15/@parameters.1"/>
            </next>
            <target xsi:type="members:InterfaceMethod" href="BeanInfo.class.xmi#//@classifiers.0/@members.4"/>
          </next>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.15/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="registerConstructor">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="typeName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="constructor">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arrayDimensionsBefore/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>// MetaData registration</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Synchronized"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.16/@parameters.0"/>
            <arguments xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="DefaultPersistenceDelegate.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.16/@parameters.1"/>
            </arguments>
          </next>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="removeProperty">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="typeName">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="property">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../lang/String.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="tp">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../util/Vector.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../util/Vector.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../util/Hashtable.class.xmi#//@classifiers.0/@members.25"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.17/@parameters.0"/>
              </next>
            </child>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.17/@statements.0/@variable"/>
              <assignmentOperator xsi:type="operators:Assignment"/>
              <value xsi:type="instantiations:NewConstructorCall">
                <typeReference xsi:type="types:NamespaceClassifierReference">
                  <classifierReferences>
                    <target xsi:type="classifiers:Class" href="../util/Vector.class.xmi#//@classifiers.0"/>
                  </classifierReferences>
                </typeReference>
              </value>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.1">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../util/Hashtable.class.xmi#//@classifiers.0/@members.27"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.17/@parameters.0"/>
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.17/@statements.0/@variable"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.17/@statements.0/@variable"/>
          <children xsi:type="literals:NullLiteral"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.17/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../util/Vector.class.xmi#//@classifiers.0/@members.36"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.37/@members.17/@parameters.1"/>
          </next>
        </expression>
      </statements>
    </members>
  </classifiers>
</containers:CompilationUnit>
