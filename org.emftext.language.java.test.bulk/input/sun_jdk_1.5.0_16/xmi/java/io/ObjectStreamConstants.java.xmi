<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:references="http://www.emftext.org/java/references" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/expressions ../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../java.ecore#/8 http://www.emftext.org/java/literals ../../java.ecore#/9 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/references ../../java.ecore#/14 http://www.emftext.org/java/types ../../java.ecore#/16" name="ObjectStreamConstants.java">
  <comments>/*&#xA; * @(#)ObjectStreamConstants.java&#x9;1.34 04/01/12&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>io</namespaces>
  <classifiers xsi:type="classifiers:Interface" name="ObjectStreamConstants">
    <members xsi:type="members:Field" name="STREAM_MAGIC">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Short"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="44269"/>
      </initialValue>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Magic number that is written to the stream header.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="STREAM_VERSION">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="5"/>
      <typeReference xsi:type="types:Short"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Version number that is written to the stream header.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_BASE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="112"/>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/* Each item in the stream is preceded by a tag&#xA;     */</comments>
        <comments>/** &#xA;     * First tag value.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_NULL">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="112"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Null object reference.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_REFERENCE">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="113"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Reference to an object already written into the stream.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_CLASSDESC">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="114"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * new Class Descriptor.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_OBJECT">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="115"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * new Object.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_STRING">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="116"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/** &#xA;     * new String.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_ARRAY">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="117"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * new Array.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_CLASS">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="118"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Reference to Class.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_BLOCKDATA">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="119"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Block of optional data. Byte following tag indicates number&#xA;     * of bytes in this block data.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_ENDBLOCKDATA">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="120"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/** &#xA;     * End of optional block data blocks for an object.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_RESET">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="121"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Reset stream context. All handles written into stream are reset.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_BLOCKDATALONG">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="122"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * long Block data. The long following the tag indicates the&#xA;     * number of bytes in this block data.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_EXCEPTION">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="123"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Exception during write. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_LONGSTRING">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="124"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Long string.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_PROXYCLASSDESC">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="125"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * new Proxy Class Descriptor.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_ENUM">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="126"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * new Enum constant.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="TC_MAX">
      <initialValue xsi:type="expressions:CastExpression">
        <typeReference xsi:type="types:Byte"/>
        <child xsi:type="literals:HexIntegerLiteral" hexValue="126"/>
      </initialValue>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/** &#xA;     * Last tag value.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="baseWireHandle">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="8257536"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * First wire handle to be assigned. &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="SC_WRITE_METHOD">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="1"/>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/******************************************************/</comments>
        <comments>/* Bit masks for ObjectStreamClass flag.*/</comments>
        <comments>/** &#xA;     * Bit mask for ObjectStreamClass flag. Indicates a Serializable class &#xA;     * defines its own writeObject method.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="SC_BLOCK_DATA">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="8"/>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Bit mask for ObjectStreamClass flag. Indicates Externalizable data &#xA;     * written in Block Data mode.&#xA;     * Added for PROTOCOL_VERSION_2.&#xA;     *&#xA;     * @see #PROTOCOL_VERSION_2&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="SC_SERIALIZABLE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="2"/>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Bit mask for ObjectStreamClass flag. Indicates class is Serializable.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="SC_EXTERNALIZABLE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="4"/>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Bit mask for ObjectStreamClass flag. Indicates class is Externalizable.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="SC_ENUM">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="16"/>
      <typeReference xsi:type="types:Byte"/>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Bit mask for ObjectStreamClass flag. Indicates class is an enum type.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="SUBSTITUTION_PERMISSION">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="SerializablePermission.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arguments xsi:type="references:StringReference" value="enableSubstitution"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="SerializablePermission.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/* *******************************************************************/</comments>
        <comments>/* Security permissions */</comments>
        <comments>/**&#xA;     * Enable substitution of one object for another during &#xA;     * serialization/deserialization.&#xA;     *&#xA;     * @see java.io.ObjectOutputStream#enableReplaceObject(boolean)&#xA;     * @see java.io.ObjectInputStream#enableResolveObject(boolean)&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="SUBCLASS_IMPLEMENTATION_PERMISSION">
      <initialValue xsi:type="instantiations:NewConstructorCall">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="SerializablePermission.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <arguments xsi:type="references:StringReference" value="enableSubclassImplementation"/>
      </initialValue>
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="SerializablePermission.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Final">
        <comments>/**&#xA;     * Enable overriding of readObject and writeObject.&#xA;     *&#xA;     * @see java.io.ObjectOutputStream#writeObjectOverride(Object)&#xA;     * @see java.io.ObjectInputStream#readObjectOverride()&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="PROTOCOL_VERSION_1">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;    * A Stream Protocol Version. &lt;p>&#xA;    * &#xA;    * All externalizable data is written in JDK 1.1 external data &#xA;    * format after calling this method. This version is needed to write &#xA;    * streams containing Externalizable data that can be read by &#xA;    * pre-JDK 1.1.6 JVMs.&#xA;    *&#xA;    * @see java.io.ObjectOutputStream#useProtocolVersion(int)&#xA;    * @since 1.2&#xA;    */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:Field" name="PROTOCOL_VERSION_2">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;    * A Stream Protocol Version. &lt;p>&#xA;    * &#xA;    * This protocol is written by JVM 1.2.&#xA;    *&#xA;    * Externalizable data is written in block data mode and is &#xA;    * terminated with TC_ENDBLOCKDATA. Externalizable classdescriptor&#xA;    * flags has SC_BLOCK_DATA enabled. JVM 1.1.6 and greater can &#xA;    * read this format change.&#xA;    *&#xA;    * Enables writing a nonSerializable class descriptor into the&#xA;    * stream. The serialVersionUID of a nonSerializable class is &#xA;    * set to 0L. &#xA;    *&#xA;    * @see java.io.ObjectOutputStream#useProtocolVersion(int)&#xA;    * @see #SC_BLOCK_DATA&#xA;    * @since 1.2&#xA;    */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * Constants written into the Object Serialization Stream. &#xA; *&#xA; * @author  unascribed&#xA; * @version 1.34, 01/12/04&#xA; * @since JDK 1.1&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
