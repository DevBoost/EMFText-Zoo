<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="AlgorithmParameterGeneratorSpi.java">
  <comments>/*&#xA; * @(#)AlgorithmParameterGeneratorSpi.java&#x9;1.14 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>security</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>security</namespaces>
    <namespaces>spec</namespaces>
    <classifier xsi:type="classifiers:Interface" href="spec/AlgorithmParameterSpec.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="AlgorithmParameterGeneratorSpi">
    <members xsi:type="members:InterfaceMethod" name="engineInit">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="size">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="random">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="SecureRandom.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Initializes this parameter generator for a certain size&#xA;     * and source of randomness.&#xA;     *&#xA;     * @param size the size (number of bits).&#xA;     * @param random the source of randomness.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="engineInit">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="genParamSpec">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Interface" href="spec/AlgorithmParameterSpec.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="random">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="SecureRandom.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="InvalidAlgorithmParameterException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Initializes this parameter generator with a set of&#xA;     * algorithm-specific parameter generation values.&#xA;     *&#xA;     * @param genParamSpec the set of algorithm-specific parameter generation values.&#xA;     * @param random the source of randomness.&#xA;     *&#xA;     * @exception InvalidAlgorithmParameterException if the given parameter&#xA;     * generation values are inappropriate for this parameter generator.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="engineGenerateParameters">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="AlgorithmParameters.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * Generates the parameters.&#xA;     *&#xA;     * @return the new AlgorithmParameters object.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * This class defines the &lt;i>Service Provider Interface&lt;/i> (&lt;b>SPI&lt;/b>)&#xA; * for the &lt;code>AlgorithmParameterGenerator&lt;/code> class, which &#xA; * is used to generate a set of parameters to be used with a certain algorithm.&#xA; *&#xA; * &lt;p> All the abstract methods in this class must be implemented by each &#xA; * cryptographic service provider who wishes to supply the implementation&#xA; * of a parameter generator for a particular algorithm.&#xA; *&#xA; * &lt;p> In case the client does not explicitly initialize the&#xA; * AlgorithmParameterGenerator (via a call to an &lt;code>engineInit&lt;/code>&#xA; * method), each provider must supply (and document) a default initialization.&#xA; * For example, the Sun provider uses a default modulus prime size of 1024&#xA; * bits for the generation of DSA parameters.&#xA; *&#xA; * @author Jan Luehe&#xA; *&#xA; * @version 1.14, 12/19/03&#xA; *&#xA; * @see AlgorithmParameterGenerator&#xA; * @see AlgorithmParameters&#xA; * @see java.security.spec.AlgorithmParameterSpec&#xA; *&#xA; * @since 1.2&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
  </classifiers>
</containers:CompilationUnit>
