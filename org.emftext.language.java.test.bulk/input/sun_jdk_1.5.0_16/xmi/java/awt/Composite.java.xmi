<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../java.ecore#/2 http://www.emftext.org/java/containers ../../java.ecore#/4 http://www.emftext.org/java/imports ../../java.ecore#/7 http://www.emftext.org/java/members ../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../java.ecore#/11 http://www.emftext.org/java/parameters ../../java.ecore#/13 http://www.emftext.org/java/types ../../java.ecore#/16" name="Composite.java">
  <comments>/*&#xA; * @(#)Composite.java&#x9;1.23 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <namespaces>image</namespaces>
    <classifier xsi:type="classifiers:Class" href="image/ColorModel.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="Composite">
    <members xsi:type="members:InterfaceMethod" name="createContext">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="CompositeContext.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="srcColorModel">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="image/ColorModel.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="dstColorModel">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="image/ColorModel.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="hints">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="RenderingHints.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Creates a context containing state that is used to perform&#xA;     * the compositing operation.  In a multi-threaded environment,&#xA;     * several contexts can exist simultaneously for a single&#xA;     * &lt;code>Composite&lt;/code> object.&#xA;     * @param srcColorModel  the {@link ColorModel} of the source&#xA;     * @param dstColorModel  the &lt;code>ColorModel&lt;/code> of the destination&#xA;     * @param hints the hint that the context object uses to choose between&#xA;     * rendering alternatives&#xA;     * @return the &lt;code>CompositeContext&lt;/code> object used to perform the&#xA;     * compositing operation.&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The &lt;code>Composite&lt;/code> interface, along with &#xA; * {@link CompositeContext}, defines the methods to compose a draw&#xA; * primitive with the underlying graphics area.&#xA; * After the &lt;code>Composite&lt;/code> is set in the &#xA; * {@link Graphics2D} context, it combines a shape, text, or an image&#xA; * being rendered with the colors that have already been rendered&#xA; * according to pre-defined rules. The classes&#xA; * implementing this interface provide the rules and a method to create&#xA; * the context for a particular operation.&#xA; * &lt;code>CompositeContext&lt;/code> is an environment used by the &#xA; * compositing operation, which is created by the &lt;code>Graphics2D&lt;/code>&#xA; * prior to the start of the operation.  &lt;code>CompositeContext&lt;/code>&#xA; * contains private information and resources needed for a compositing &#xA; * operation.  When the &lt;code>CompositeContext&lt;/code> is no longer needed,&#xA; * the &lt;code>Graphics2D&lt;/code> object disposes of it in order to reclaim &#xA; * resources allocated for the operation.&#xA; * &lt;p>&#xA; * Instances of classes implementing &lt;code>Composite&lt;/code> must be &#xA; * immutable because the &lt;code>Graphics2D&lt;/code> does not clone&#xA; * these objects when they are set as an attribute with the &#xA; * &lt;code>setComposite&lt;/code> method or when the &lt;code>Graphics2D&lt;/code>&#xA; * object is cloned.  This is to avoid undefined rendering behavior of &#xA; * &lt;code>Graphics2D&lt;/code>, resulting from the modification of &#xA; * the &lt;code>Composite&lt;/code> object after it has been set in the &#xA; * &lt;code>Graphics2D&lt;/code> context.&#xA; * &lt;p>&#xA; * Since this interface must expose the contents of pixels on the&#xA; * target device or image to potentially arbitrary code, the use of&#xA; * custom objects which implement this interface when rendering directly&#xA; * to a screen device is governed by the &lt;code>readDisplayPixels&lt;/code>&#xA; * {@link AWTPermission}.  The permission check will occur when such&#xA; * a custom object is passed to the &lt;code>setComposite&lt;/code> method&#xA; * of a &lt;code>Graphics2D&lt;/code> retrieved from a {@link Component}.&#xA; * @see AlphaComposite&#xA; * @see CompositeContext&#xA; * @see Graphics2D#setComposite&#xA; * @version 10 Feb 1997&#xA; */</comments>
    </annotationsAndModifiers>
  </classifiers>
</containers:CompilationUnit>
