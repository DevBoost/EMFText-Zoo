<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/instantiations ../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16" name="RoundRectangle2D.java">
  <comments>/*&#xA; * @(#)RoundRectangle2D.java&#x9;1.18 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <namespaces>geom</namespaces>
  <classifiers xsi:type="classifiers:Class" name="RoundRectangle2D">
    <members xsi:type="classifiers:Class" name="Float">
      <members xsi:type="members:Field" name="x">
        <typeReference xsi:type="types:Float"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * The X coordinate of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="y">
        <typeReference xsi:type="types:Float"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * The Y coordinate of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="width">
        <typeReference xsi:type="types:Float"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * The width of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="height">
        <typeReference xsi:type="types:Float"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * The height of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="arcwidth">
        <typeReference xsi:type="types:Float"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * The width of the arc that rounds off the corners.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="archeight">
        <typeReference xsi:type="types:Float"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * The height of the arc that rounds off the corners.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Constructor" name="Float">
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Constructs a new &lt;code>RoundRectangle2D&lt;/code>, initialized to&#xA;         * location (0.0,&amp;nbsp;0), size (0.0,&amp;nbsp;0.0), and corner arcs&#xA;         * of radius 0.0.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Constructor" name="Float">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.0/@members.15">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.7/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.7/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.7/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.7/@parameters.3"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.7/@parameters.4"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.7/@parameters.5"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="x">
          <typeReference xsi:type="types:Float"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="y">
          <typeReference xsi:type="types:Float"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="w">
          <typeReference xsi:type="types:Float"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="h">
          <typeReference xsi:type="types:Float"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="arcw">
          <typeReference xsi:type="types:Float"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="arch">
          <typeReference xsi:type="types:Float"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Constructs and initializes a &lt;code>RoundRectangle2D&lt;/code> &#xA;         * from the specified coordinates.&#xA;&#x9; * @param x,&amp;nbsp;y the coordinates to which to set the newly&#xA;         * constructed &lt;code>RoundRectangle2D&lt;/code>&#xA;&#x9; * @param w the width to which to set the newly&#xA;         * constructed &lt;code>RoundRectangle2D&lt;/code>&#xA;&#x9; * @param h the height to which to set the newly&#xA;         * constructed &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param arcw the width of the arc to use to round off the&#xA;         * corners of the newly constructed &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param arch the height of the arc to use to round off the&#xA;         * corners of the newly constructed &lt;code>RoundRectangle2D&lt;/code>&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:ClassMethod" name="getX">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Returns the X coordinate of this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * in &lt;code>double&lt;/code> precision.&#xA;         * @return the X coordinate of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:Double"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.0"/>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getY">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Returns the Y coordinate of this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * in &lt;code>double&lt;/code> precision.&#xA;         * @return the Y coordinate of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:Double"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.1"/>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getWidth">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Returns the width of this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * in &lt;code>double&lt;/code> precision.&#xA;         * @return the width of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:Double"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.2"/>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getHeight">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Returns the height of this &lt;code>RoundRectangle2D&lt;/code> &#xA;         * in &lt;code>double&lt;/code> precision.&#xA;         * @return the height of this &lt;code>RoundRectangle2D&lt;/code>. &#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:Double"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.3"/>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getArcWidth">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Returns the width of the arc that rounds off the corners.&#xA;         * @return the width of the arc that rounds off the corners&#xA;         * of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:Double"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.4"/>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getArcHeight">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Returns the height of the arc that rounds off the corners.&#xA;         * @return the height of the arc that rounds off the corners&#xA;         * of this &lt;code>RoundRectangle2D&lt;/code>. &#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:Double"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.5"/>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="isEmpty">
        <typeReference xsi:type="types:Boolean"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Determines whether or not this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * is empty.&#xA;         * @return &lt;code>true&lt;/code> if this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * is empty; &lt;code>false&lt;/code> othwerwise.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:ConditionalOrExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.2"/>
                <children xsi:type="literals:DecimalFloatLiteral"/>
                <relationOperators xsi:type="operators:LessThanOrEqual"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.3"/>
                <children xsi:type="literals:DecimalFloatLiteral"/>
                <relationOperators xsi:type="operators:LessThanOrEqual"/>
              </expression>
            </children>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setRoundRect">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="x">
          <typeReference xsi:type="types:Float"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="y">
          <typeReference xsi:type="types:Float"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="w">
          <typeReference xsi:type="types:Float"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="h">
          <typeReference xsi:type="types:Float"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="arcw">
          <typeReference xsi:type="types:Float"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="arch">
          <typeReference xsi:type="types:Float"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Sets the location, size, and arc radii of this &#xA;         * &lt;code>RoundRectangle2D&lt;/code> to the&#xA;&#x9; * specified &lt;code>float&lt;/code> values.&#xA;         * @param x,&amp;nbsp;y the coordinates to which to set the&#xA;         * location of this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param w the width to which to set this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param h the height to which to set this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param arcw the width to which to set the arc of this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param arch the height to which to set the arc of this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.15/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.15/@parameters.1"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.2"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.15/@parameters.2"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.3"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.15/@parameters.3"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.4"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.15/@parameters.4"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.5"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.15/@parameters.5"/>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setRoundRect">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="x">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="y">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="w">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="h">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="arcw">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="arch">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Sets the location, size, and arc radii of this &#xA;         * &lt;code>RoundRectangle2D&lt;/code> to the&#xA;&#x9; * specified &lt;code>double&lt;/code> values.&#xA;         * @param x,&amp;nbsp;y the coordinates to which to set the&#xA;         * location of this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param w the width to which to set this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param h the height to which to set this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param arcw the width to which to set the arc of this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param arch the height to which to set the arc of this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>&#x9;&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Float"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.16/@parameters.0"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Float"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.16/@parameters.1"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.2"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Float"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.16/@parameters.2"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.3"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Float"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.16/@parameters.3"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.4"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Float"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.16/@parameters.4"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.5"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Float"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.16/@parameters.5"/>
            </value>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setRoundRect">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="rr">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Sets this &lt;code>RoundRectangle2D&lt;/code> to be the same as the&#xA;         * specified &lt;code>RoundRectangle2D&lt;/code>.&#xA;         * @param rr the specified &lt;code>RoundRectangle2D&lt;/code>&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Float"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.17/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.1"/>
                </next>
              </child>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Float"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.17/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.2"/>
                </next>
              </child>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.2"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Float"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.17/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.3"/>
                </next>
              </child>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.3"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Float"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.17/@parameters.0">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.4"/>
                </next>
              </child>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.4"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Float"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.17/@parameters.0">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.3"/>
              </child>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.5"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="expressions:CastExpression">
              <typeReference xsi:type="types:Float"/>
              <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.17/@parameters.0">
                <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.4"/>
              </child>
            </value>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getBounds2D">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Rectangle2D.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;&#x9; * Returns the high precision bounding box of this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>.&#xA;         * @return a {@link Rectangle2D} that is the bounding&#xA;         * box of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Rectangle2D</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="Rectangle2D$Float.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0/@members.3"/>
          </returnValue>
        </statements>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The &lt;code>Float&lt;/code> class defines a rectangle with rounded&#xA;     * corners all specified in &lt;code>float&lt;/code> coordinates.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <extends xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </extends>
    </members>
    <members xsi:type="classifiers:Class" name="Double">
      <members xsi:type="members:Field" name="x">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * The X coordinate of this &lt;code>RoundRectangle2D&lt;/code>. &#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="y">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * The Y coordinate of this &lt;code>RoundRectangle2D&lt;/code>. &#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="width">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * The width of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="height">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * The height of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="arcwidth">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * The width of the arc that rounds off the corners.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Field" name="archeight">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * The height of the arc that rounds off the corners.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Constructor" name="Double">
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Constructs a new &lt;code>RoundRectangle2D&lt;/code>, initialized to&#xA;         * location (0.0,&amp;nbsp;0), size (0.0,&amp;nbsp;0.0), and corner arcs&#xA;         * of radius 0.0.&#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:Constructor" name="Double">
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.1/@members.15">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.7/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.7/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.7/@parameters.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.7/@parameters.3"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.7/@parameters.4"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.7/@parameters.5"/>
          </expression>
        </statements>
        <parameters xsi:type="parameters:OrdinaryParameter" name="x">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="y">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="w">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="h">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="arcw">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="arch">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Constructs and initializes a &lt;code>RoundRectangle2D&lt;/code>&#xA;         * from the specified coordinates.&#xA;         * @param x,&amp;nbsp;y the coordinates to which to set the newly&#xA;         * constructed &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param w the width to which to set the newly&#xA;         * constructed &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param h the height to which to set the newly&#xA;         * constructed &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param arcw the width of the arc to use to round off the&#xA;         * corners of the newly constructed &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param arch the height of the arc to use to round off the &#xA;         * corners of the newly constructed &lt;code>RoundRectangle2D&lt;/code>&#xA;         */</comments>
        </annotationsAndModifiers>
      </members>
      <members xsi:type="members:ClassMethod" name="getX">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Returns the X coordinate of this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * in &lt;code>double&lt;/code> precision.&#xA;         * @return the X coordinate of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.0"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getY">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Returns the Y coordinate of this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * in &lt;code>double&lt;/code> precision.&#xA;         * @return the Y coordinate of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.1"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getWidth">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Returns the width of this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * in &lt;code>double&lt;/code> precision.&#xA;         * @return the width of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.2"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getHeight">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Returns the height of this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * in &lt;code>double&lt;/code> precision.&#xA;         * @return the height of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getArcWidth">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Returns the width of the arc that rounds off the corners.&#xA;         * @return the width of the arc that rounds off the corners&#xA;         * of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.4"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getArcHeight">
        <typeReference xsi:type="types:Double"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Returns the height of the arc that rounds off the corners.&#xA;         * @return the height of the arc that rounds off the corners&#xA;         * of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.5"/>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="isEmpty">
        <typeReference xsi:type="types:Boolean"/>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Determines whether or not this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * is empty.&#xA;         * @return &lt;code>true&lt;/code> if this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * is empty; &lt;code>false&lt;/code> othwerwise.&#x9;&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="expressions:ConditionalOrExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.2"/>
                <children xsi:type="literals:DecimalFloatLiteral"/>
                <relationOperators xsi:type="operators:LessThanOrEqual"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3"/>
                <children xsi:type="literals:DecimalFloatLiteral"/>
                <relationOperators xsi:type="operators:LessThanOrEqual"/>
              </expression>
            </children>
          </returnValue>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setRoundRect">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="x">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="y">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="w">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="h">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="arcw">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <parameters xsi:type="parameters:OrdinaryParameter" name="arch">
          <typeReference xsi:type="types:Double"/>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Sets the location, size, and arc radii of this&#xA;         * &lt;code>RoundRectangle2D&lt;/code> to the&#xA;         * specified &lt;code>double&lt;/code> values.&#xA;         * @param x,&amp;nbsp;y the coordinates to which to set the&#xA;         * location of this &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param w the width to which to set this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param h the height to which to set this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param arcw the width to which to set the arc of this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>&#xA;         * @param arch the height to which to set the arc of this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.15/@parameters.0"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.15/@parameters.1"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.2"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.15/@parameters.2"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.15/@parameters.3"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.4"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.15/@parameters.4"/>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.5"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.15/@parameters.5"/>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="setRoundRect">
        <typeReference xsi:type="types:Void"/>
        <parameters xsi:type="parameters:OrdinaryParameter" name="rr">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences target="//@classifiers.0"/>
          </typeReference>
        </parameters>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Sets this &lt;code>RoundRectangle2D&lt;/code> to be the same as the&#xA;         * specified &lt;code>RoundRectangle2D&lt;/code>.&#xA;         * @param rr the specified &lt;code>RoundRectangle2D&lt;/code>&#xA;         */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.0"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.16/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.1"/>
              </next>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.1"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.16/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.2"/>
              </next>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.2"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.16/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.3"/>
              </next>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.16/@parameters.0">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.4"/>
              </next>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.4"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.16/@parameters.0">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.3"/>
            </value>
          </expression>
        </statements>
        <statements xsi:type="statements:ExpressionStatement">
          <expression xsi:type="expressions:AssignmentExpression">
            <child xsi:type="references:SelfReference">
              <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.5"/>
              <self xsi:type="literals:This"/>
            </child>
            <assignmentOperator xsi:type="operators:Assignment"/>
            <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.16/@parameters.0">
              <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.4"/>
            </value>
          </expression>
        </statements>
      </members>
      <members xsi:type="members:ClassMethod" name="getBounds2D">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="Rectangle2D.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
        <annotationsAndModifiers xsi:type="modifiers:Public">
          <comments>/**&#xA;         * Returns the high precision bounding box of this&#xA;         * &lt;code>RoundRectangle2D&lt;/code>.&#xA;         * @return a {@link Rectangle2D} that is the bounding&#xA;         * box of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;&#x9; */</comments>
        </annotationsAndModifiers>
        <statements xsi:type="statements:Return">
          <returnValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <namespaces>Rectangle2D</namespaces>
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="Rectangle2D$Double.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.2"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1/@members.3"/>
          </returnValue>
        </statements>
      </members>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The &lt;code>Double&lt;/code> class defines a rectangle with rounded&#xA;     * corners all specified in &lt;code>double&lt;/code> coordinates.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <extends xsi:type="types:NamespaceClassifierReference">
        <classifierReferences target="//@classifiers.0"/>
      </extends>
    </members>
    <members xsi:type="members:Constructor" name="RoundRectangle2D">
      <annotationsAndModifiers xsi:type="modifiers:Protected">
        <comments>/**&#xA;     * This is an abstract class that cannot be instantiated directly.&#xA;     * Type-specific implementation subclasses are available for&#xA;     * instantiation and provide a number of formats for storing&#xA;     * the information necessary to satisfy the various accessor&#xA;     * methods below.&#xA;     *&#xA;     * @see java.awt.geom.RoundRectangle2D.Float&#xA;     * @see java.awt.geom.RoundRectangle2D.Double&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getArcWidth">
      <typeReference xsi:type="types:Double"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the width of the arc that rounds off the corners.&#xA;     * @return the width of the arc that rounds off the corners&#xA;     * of this &lt;code>RoundRectangle2D&lt;/code>.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="getArcHeight">
      <typeReference xsi:type="types:Double"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Gets the height of the arc that rounds off the corners.&#xA;     * @return the height of the arc that rounds off the corners&#xA;     * of this &lt;code>RoundRectangle2D&lt;/code>.    &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="setRoundRect">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="arcWidth">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="arcHeight">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the location, size, and corner radii of this &#xA;     * &lt;code>RoundRectangle2D&lt;/code> to the specified &#xA;     * &lt;code>double&lt;/code> values.&#xA;     * @param x,&amp;nbsp;y the coordinates to which to set the&#xA;     * location of this &lt;code>RoundRectangle2D&lt;/code>&#xA;     * @param w the width to which to set this&#xA;     * &lt;code>RoundRectangle2D&lt;/code>&#xA;     * @param h the height to which to set this&#xA;     * &lt;code>RoundRectangle2D&lt;/code>&#xA;     * @param arcWidth the width to which to set the arc of this&#xA;     * &lt;code>RoundRectangle2D&lt;/code>&#xA;     * @param arcHeight the height to which to set the arc of this&#xA;     * &lt;code>RoundRectangle2D&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    </members>
    <members xsi:type="members:ClassMethod" name="setRoundRect">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="rr">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences target="//@classifiers.0"/>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets this &lt;code>RoundRectangle2D&lt;/code> to be the same as the&#xA;     * specified &lt;code>RoundRectangle2D&lt;/code>.&#xA;     * @param rr the specified &lt;code>RoundRectangle2D&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.1"/>
            </next>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.2"/>
            </next>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.3"/>
            </next>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.4"/>
            </next>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.3"/>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6/@parameters.0">
            <next xsi:type="references:MethodCall" target="//@classifiers.0/@members.4"/>
          </arguments>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setFrame">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Sets the location and size of the outer bounds of this&#xA;     * &lt;code>RoundRectangle2D&lt;/code> to the specified rectangular values.&#xA;     * @param x,&amp;nbsp;y the coordinates to which to set the location&#xA;     * of this &lt;code>RoundRectangle2D&lt;/code>&#xA;     * @param w the width to which to set this&#xA;     * &lt;code>RoundRectangle2D&lt;/code>&#xA;     * @param h the height to which to set this&#xA;     * &lt;code>RoundRectangle2D&lt;/code>&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.5">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.1"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.2"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7/@parameters.3"/>
          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.3"/>
          <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.4"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="contains">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Tests if the specified coordinates are inside the boundary of&#xA;     * this &lt;code>RoundRectangle2D&lt;/code>.&#xA;     * @param x,&amp;nbsp;y the coordinates to test&#xA;     * @return &lt;code>true&lt;/code> if the specified coordinates are&#xA;     * inside the boundary of this &lt;code>RoundRectangle2D&lt;/code>;&#xA;     * &lt;code>false&lt;/code> otherwise.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="references:MethodCall">
          <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.12"/>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rrx0">
          <typeReference xsi:type="types:Double"/>
          <initialValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rry0">
          <typeReference xsi:type="types:Double"/>
          <initialValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rrx1">
          <typeReference xsi:type="types:Double"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.1/@variable"/>
            <children xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.3"/>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rry1">
          <typeReference xsi:type="types:Double"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable"/>
            <children xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.4"/>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Check for trivial rejection - point is outside bounding rectangle</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.1/@variable"/>
            <relationOperators xsi:type="operators:LessThan"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable"/>
            <relationOperators xsi:type="operators:LessThan"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.3/@variable"/>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.4/@variable"/>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="aw">
          <typeReference xsi:type="types:Double"/>
          <initialValue xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/Math.class.xmi#//@classifiers.0/@members.40"/>
                <arguments xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.3"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../lang/Math.class.xmi#//@classifiers.0/@members.32"/>
                    <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.3"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../lang/Math.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../lang/Math.class.xmi#//@classifiers.0"/>
            </children>
            <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="2.0"/>
            <multiplicativeOperators xsi:type="operators:Division"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ah">
          <typeReference xsi:type="types:Double"/>
          <initialValue xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/Math.class.xmi#//@classifiers.0/@members.40"/>
                <arguments xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.4"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../lang/Math.class.xmi#//@classifiers.0/@members.32"/>
                    <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.4"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../lang/Math.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../lang/Math.class.xmi#//@classifiers.0"/>
            </children>
            <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="2.0"/>
            <multiplicativeOperators xsi:type="operators:Division"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Check which corner point is in and do circular containment</comments>
        <comments>// test - otherwise simple acceptance</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.1/@variable"/>
                <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.6/@variable"/>
              </expression>
            </children>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.1/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.3/@variable"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.6/@variable"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </value>
              </expression>
            </children>
            <relationOperators xsi:type="operators:LessThan"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable"/>
                <assignmentOperator xsi:type="operators:AssignmentPlus"/>
                <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.7/@variable"/>
              </expression>
            </children>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.4/@variable"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.7/@variable"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </value>
              </expression>
            </children>
            <relationOperators xsi:type="operators:LessThan"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.1/@variable"/>
                <additiveOperators xsi:type="operators:Subtraction"/>
              </expression>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.6/@variable"/>
            <multiplicativeOperators xsi:type="operators:Division"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.2/@variable"/>
                <additiveOperators xsi:type="operators:Subtraction"/>
              </expression>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@statements.7/@variable"/>
            <multiplicativeOperators xsi:type="operators:Division"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:NestedExpression">
          <expression xsi:type="expressions:RelationExpression">
            <children xsi:type="expressions:AdditiveExpression">
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.0"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8/@parameters.1"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
            </children>
            <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="1.0"/>
            <relationOperators xsi:type="operators:LessThanOrEqual"/>
          </expression>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="classify">
      <typeReference xsi:type="types:Int"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="coord">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="left">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="right">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="arcsize">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.1"/>
          <relationOperators xsi:type="operators:LessThan"/>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:Return">
              <returnValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
            </statements>
          </statement>
          <condition xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
            <children xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.1"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.3"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </children>
            <relationOperators xsi:type="operators:LessThan"/>
          </condition>
          <elseStatement xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Return">
                <returnValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
              </statements>
            </statement>
            <condition xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
              <children xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.2"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.3"/>
                <additiveOperators xsi:type="operators:Subtraction"/>
              </children>
              <relationOperators xsi:type="operators:LessThan"/>
            </condition>
            <elseStatement xsi:type="statements:Condition">
              <statement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
                </statements>
              </statement>
              <condition xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.0"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9/@parameters.2"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </condition>
              <elseStatement xsi:type="statements:Block">
                <statements xsi:type="statements:Return">
                  <returnValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
                </statements>
              </elseStatement>
            </elseStatement>
          </elseStatement>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="intersects">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Tests if the interior of this &lt;code>RoundRectangle2D&lt;/code> &#xA;     * intersects the interior of a specified set of rectangular&#xA;     * coordinates.&#xA;     * @param x,&amp;nbsp;y the coordinates of the upper left corner&#xA;     * of the specified set of rectangular coordinates&#xA;     * @param w the width of the specified set of rectangular&#xA;     * coordinates&#xA;     * @param h the height of the specified set of rectangular&#xA;     * coordinates&#xA;     * @return &lt;code>true&lt;/code> if the interior of this&#xA;     * &lt;code>RoundRectangle2D&lt;/code> intersects the interior of the&#xA;     * specified set of rectangular coordinates.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.12"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.2"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:LessThanOrEqual"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.3"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:LessThanOrEqual"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rrx0">
          <typeReference xsi:type="types:Double"/>
          <initialValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.1"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rry0">
          <typeReference xsi:type="types:Double"/>
          <initialValue xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.2"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rrx1">
          <typeReference xsi:type="types:Double"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.1/@variable"/>
            <children xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.3"/>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="rry1">
          <typeReference xsi:type="types:Double"/>
          <initialValue xsi:type="expressions:AdditiveExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.2/@variable"/>
            <children xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.4"/>
            </children>
            <additiveOperators xsi:type="operators:Addition"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Check for trivial rejection - bounding rectangles do not intersect</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.2"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.1/@variable"/>
            <relationOperators xsi:type="operators:LessThanOrEqual"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.3/@variable"/>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.3"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </children>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.2/@variable"/>
            <relationOperators xsi:type="operators:LessThanOrEqual"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.4/@variable"/>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="aw">
          <typeReference xsi:type="types:Double"/>
          <initialValue xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/Math.class.xmi#//@classifiers.0/@members.40"/>
                <arguments xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.3"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../lang/Math.class.xmi#//@classifiers.0/@members.32"/>
                    <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.3"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../lang/Math.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../lang/Math.class.xmi#//@classifiers.0"/>
            </children>
            <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="2.0"/>
            <multiplicativeOperators xsi:type="operators:Division"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="ah">
          <typeReference xsi:type="types:Double"/>
          <initialValue xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/Math.class.xmi#//@classifiers.0/@members.40"/>
                <arguments xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.4"/>
                </arguments>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../lang/Math.class.xmi#//@classifiers.0/@members.32"/>
                    <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.4"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../../lang/Math.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../lang/Math.class.xmi#//@classifiers.0"/>
            </children>
            <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="2.0"/>
            <multiplicativeOperators xsi:type="operators:Division"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="x0class">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.9">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.1/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.3/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.6/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="x1class">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.9">
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.2"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.1/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.3/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.6/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="y0class">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.9">
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.2/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.4/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.7/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="y1class">
          <typeReference xsi:type="types:Int"/>
          <initialValue xsi:type="references:MethodCall" target="//@classifiers.0/@members.9">
            <arguments xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.3"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </arguments>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.2/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.4/@variable"/>
            <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.7/@variable"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Trivially accept if any point is inside inner rectangle</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.8/@variable"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.9/@variable"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.10/@variable"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.11/@variable"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <comments>// Trivially accept if either edge spans inner rectangle</comments>
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.8/@variable"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.9/@variable"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                <relationOperators xsi:type="operators:GreaterThan"/>
              </children>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:ConditionalAndExpression">
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.10/@variable"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                <relationOperators xsi:type="operators:LessThan"/>
              </children>
              <children xsi:type="expressions:RelationExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.11/@variable"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
                <relationOperators xsi:type="operators:GreaterThan"/>
              </children>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0">
            <comments>// Since neither edge spans the center, then one of the corners</comments>
            <comments>// must be in one of the rounded edges.  We detect this case if</comments>
            <comments>// a [xy]0class is 3 or a [xy]1class is 1.  One of those two cases</comments>
            <comments>// must be true for each direction.</comments>
            <comments>// We now find a &quot;nearest point&quot; to test for being inside a rounded</comments>
            <comments>// corner.</comments>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.9/@variable"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </expression>
            </child>
            <expressionIf xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.2"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.1/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.6/@variable"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </expression>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </value>
              </expression>
            </expressionIf>
            <expressionElse xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.3/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.6/@variable"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </expression>
                  </children>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </value>
              </expression>
            </expressionElse>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:ConditionalExpression">
            <child xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.11/@variable"/>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
              </expression>
            </child>
            <expressionIf xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.3"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.2/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.7/@variable"/>
                      <additiveOperators xsi:type="operators:Addition"/>
                    </expression>
                  </children>
                  <additiveOperators xsi:type="operators:Addition"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </value>
              </expression>
            </expressionIf>
            <expressionElse xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:AssignmentExpression">
                <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
                <assignmentOperator xsi:type="operators:Assignment"/>
                <value xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
                  <children xsi:type="expressions:NestedExpression">
                    <expression xsi:type="expressions:AdditiveExpression">
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.4/@variable"/>
                      <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.7/@variable"/>
                      <additiveOperators xsi:type="operators:Subtraction"/>
                    </expression>
                  </children>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </value>
              </expression>
            </expressionElse>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.6/@variable"/>
            <multiplicativeOperators xsi:type="operators:Division"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="expressions:MultiplicativeExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@statements.7/@variable"/>
            <multiplicativeOperators xsi:type="operators:Division"/>
          </value>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:NestedExpression">
          <expression xsi:type="expressions:RelationExpression">
            <children xsi:type="expressions:AdditiveExpression">
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.0"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <children xsi:type="expressions:MultiplicativeExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10/@parameters.1"/>
                <multiplicativeOperators xsi:type="operators:Multiplication"/>
              </children>
              <additiveOperators xsi:type="operators:Addition"/>
            </children>
            <children xsi:type="literals:DecimalDoubleLiteral" decimalValue="1.0"/>
            <relationOperators xsi:type="operators:LessThanOrEqual"/>
          </expression>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="contains">
      <typeReference xsi:type="types:Boolean"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="x">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="y">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="w">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="h">
        <typeReference xsi:type="types:Double"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Tests if the interior of this &lt;code>RoundRectangle2D&lt;/code>&#xA;     * entirely contains the specified set of rectangular coordinates.&#xA;     * @param x,&amp;nbsp;y the coordinates of the specified set of&#xA;     * rectangular coordinates&#xA;     * @param w the width of the specified set of rectangular&#xA;     * coordinates&#xA;     * @param h the height of the specified set of rectangular &#xA;     * coordinates&#xA;     * @return &lt;code>true&lt;/code> if the interior of this&#xA;     * &lt;code>RoundRectangle2D&lt;/code> entirely contains the specified&#xA;     * set of rectangular coordinates; &lt;code>false&lt;/code> otherwise.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="RectangularShape.class.xmi#//@classifiers.0/@members.12"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.2"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:LessThanOrEqual"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.3"/>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            <relationOperators xsi:type="operators:LessThanOrEqual"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:NestedExpression">
          <expression xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.8">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.1"/>
            </children>
            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.8">
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.2"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.1"/>
            </children>
            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.8">
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0"/>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.1"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.3"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </children>
            <children xsi:type="references:MethodCall" target="//@classifiers.0/@members.8">
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.0"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.2"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
              <arguments xsi:type="expressions:AdditiveExpression">
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.1"/>
                <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11/@parameters.3"/>
                <additiveOperators xsi:type="operators:Addition"/>
              </arguments>
            </children>
          </expression>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getPathIterator">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Interface" href="PathIterator.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="at">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="AffineTransform.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns an iteration object that defines the boundary of this&#xA;     * &lt;code>RoundRectangle2D&lt;/code>.&#xA;     * The iterator for this class is multi-threaded safe, which means&#xA;     * that this &lt;code>RoundRectangle2D&lt;/code> class guarantees that&#xA;     * modifications to the geometry of this &lt;code>RoundRectangle2D&lt;/code>&#xA;     * object do not affect any iterations of that geometry that&#xA;     * are already in process.&#xA;     * @param at an optional &lt;code>AffineTransform&lt;/code> to be applied to&#xA;     * the coordinates as they are returned in the iteration, or&#xA;     * &lt;code>null&lt;/code> if untransformed coordinates are desired&#xA;     * @return    the &lt;code>PathIterator&lt;/code> object that returns the&#xA;     *          geometry of the outline of this&#xA;     *          &lt;code>RoundRectangle2D&lt;/code>, one segment at a time.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="instantiations:NewConstructorCall">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="RoundRectIterator.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <arguments xsi:type="references:SelfReference">
            <self xsi:type="literals:This"/>
          </arguments>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12/@parameters.0"/>
        </returnValue>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The &lt;code>RoundRectangle2D&lt;/code> class defines a rectangle with&#xA; * rounded corners defined by a location (x,&amp;nbsp;y), a&#xA; * dimension (w&amp;nbsp;x&amp;nbsp;h), and the width and height of an arc &#xA; * with which to round the corners.&#xA; * &lt;p>&#xA; * This class is the abstract superclass for all objects that&#xA; * store a 2D rounded rectangle.&#xA; * The actual storage representation of the coordinates is left to&#xA; * the subclass.&#xA; *&#xA; * @version 1.18, 12/19/03&#xA; * @author&#x9;Jim Graham&#xA; */</comments>
    </annotationsAndModifiers>
    <annotationsAndModifiers xsi:type="modifiers:Abstract"/>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="RectangularShape.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
