<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:annotations="http://www.emftext.org/java/annotations" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:expressions="http://www.emftext.org/java/expressions" xmlns:imports="http://www.emftext.org/java/imports" xmlns:instantiations="http://www.emftext.org/java/instantiations" xmlns:literals="http://www.emftext.org/java/literals" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:operators="http://www.emftext.org/java/operators" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:references="http://www.emftext.org/java/references" xmlns:statements="http://www.emftext.org/java/statements" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/annotations ../../../java.ecore#/0 http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/expressions ../../../java.ecore#/5 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/instantiations ../../../java.ecore#/8 http://www.emftext.org/java/literals ../../../java.ecore#/9 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/operators ../../../java.ecore#/12 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/references ../../../java.ecore#/14 http://www.emftext.org/java/statements ../../../java.ecore#/15 http://www.emftext.org/java/types ../../../java.ecore#/16" name="KeyEvent.java">
  <comments>/*&#xA; * @(#)KeyEvent.java&#x9;1.76 07/11/22&#xA; *&#xA; * Copyright 2007 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <namespaces>event</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../Event.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../Component.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../GraphicsEnvironment.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>awt</namespaces>
    <classifier xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../io/IOException.class.xmi#//@classifiers.0"/>
  </imports>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>io</namespaces>
    <classifier xsi:type="classifiers:Class" href="../../io/ObjectInputStream.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Class" name="KeyEvent">
    <members xsi:type="members:Field" name="isProxyActive">
      <initialValue xsi:type="literals:BooleanLiteral"/>
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Stores the state of native event dispatching system&#xA;     * - true, if when the event was created event proxying &#xA;     *         mechanism was active&#xA;     * - false, if it was inactive&#xA;     * Used in Component.dispatchEventImpl to correctly dispatch&#xA;     * events when proxy is active&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Field" name="KEY_FIRST">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="400"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The first number in the range of ids used for key events.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="KEY_LAST">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="402"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The last number in the range of ids used for key events.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="KEY_TYPED">
      <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The &quot;key typed&quot; event.  This event is generated when a character is&#xA;     * entered.  In the simplest case, it is produced by a single key press.  &#xA;     * Often, however, characters are produced by series of key presses, and &#xA;     * the mapping from key pressed events to key typed events may be &#xA;     * many-to-one or many-to-many.  &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="KEY_PRESSED">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * The &quot;key pressed&quot; event. This event is generated when a key&#xA;     * is pushed down.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="KEY_RELEASED">
      <initialValue xsi:type="expressions:AdditiveExpression">
        <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
        <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.1"/>
        <additiveOperators xsi:type="operators:Addition"/>
      </initialValue>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>//Event.KEY_PRESS</comments>
        <comments>/**&#xA;     * The &quot;key released&quot; event. This event is generated when a key&#xA;     * is let up.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_ENTER">
      <initialValue xsi:type="literals:CharacterLiteral" value="10"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>//Event.KEY_RELEASE</comments>
        <comments>/* Virtual key codes. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_BACK_SPACE">
      <initialValue xsi:type="literals:CharacterLiteral" value="8"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_TAB">
      <initialValue xsi:type="literals:CharacterLiteral" value="9"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_CANCEL">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_CLEAR">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="12"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_SHIFT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="16"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_CONTROL">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="17"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_ALT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="18"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_PAUSE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="19"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_CAPS_LOCK">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="20"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_ESCAPE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="27"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_SPACE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="32"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_PAGE_UP">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="33"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_PAGE_DOWN">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="34"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_END">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="35"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_HOME">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="36"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_LEFT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="37"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the non-numpad &lt;b>left&lt;/b> arrow key.&#xA;     * @see #VK_KP_LEFT&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_UP">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="38"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the non-numpad &lt;b>up&lt;/b> arrow key.&#xA;     * @see #VK_KP_UP&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_RIGHT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="39"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the non-numpad &lt;b>right&lt;/b> arrow key.&#xA;     * @see #VK_KP_RIGHT&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DOWN">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="40"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the non-numpad &lt;b>down&lt;/b> arrow key.&#xA;     * @see #VK_KP_DOWN&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_COMMA">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="44"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the comma key, &quot;,&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_MINUS">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="45"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the minus key, &quot;-&quot;&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_PERIOD">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="46"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the period key, &quot;.&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_SLASH">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="47"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the forward slash key, &quot;/&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_0">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="48"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** VK_0 thru VK_9 are the same as ASCII '0' thru '9' (0x30 - 0x39) */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_1">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="49"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_2">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="50"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_3">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="51"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_4">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="52"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_5">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="53"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_6">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="54"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_7">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="55"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_8">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="56"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_9">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="57"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_SEMICOLON">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="59"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the semicolon key, &quot;;&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_EQUALS">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="61"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the equals key, &quot;=&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_A">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="65"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** VK_A thru VK_Z are the same as ASCII 'A' thru 'Z' (0x41 - 0x5A) */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_B">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="66"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_C">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="67"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_D">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="68"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_E">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="69"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="70"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_G">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="71"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_H">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="72"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_I">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="73"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_J">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="74"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_K">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="75"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_L">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="76"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_M">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="77"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_N">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="78"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_O">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="79"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_P">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="80"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_Q">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="81"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_R">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="82"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_S">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="83"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_T">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="84"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_U">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="85"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_V">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="86"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_W">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="87"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_X">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="88"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_Y">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="89"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_Z">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="90"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_OPEN_BRACKET">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="91"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the open bracket key, &quot;[&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_BACK_SLASH">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="92"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the back slash key, &quot;\&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_CLOSE_BRACKET">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="93"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the close bracket key, &quot;]&quot;&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_NUMPAD0">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="96"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_NUMPAD1">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="97"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_NUMPAD2">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="98"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_NUMPAD3">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="99"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_NUMPAD4">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="100"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_NUMPAD5">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="101"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_NUMPAD6">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="102"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_NUMPAD7">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="103"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_NUMPAD8">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="104"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_NUMPAD9">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="105"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_MULTIPLY">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="106"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_ADD">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="107"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_SEPARATER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="108"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * This constant is obsolete, and is included only for backwards&#xA;     * compatibility.&#xA;     * @see #VK_SEPARATOR&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_SEPARATOR">
      <initialValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.83"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * Constant for the Numpad Separator key. &#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_SUBTRACT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="109"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DECIMAL">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="110"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DIVIDE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="111"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DELETE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="127"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_NUM_LOCK">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="144"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/* ASCII DEL */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_SCROLL_LOCK">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="145"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F1">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="112"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the F1 function key. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F2">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="113"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the F2 function key. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F3">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="114"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the F3 function key. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F4">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="115"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the F4 function key. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F5">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="116"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the F5 function key. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F6">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="117"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the F6 function key. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F7">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="118"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the F7 function key. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F8">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="119"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the F8 function key. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F9">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="120"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the F9 function key. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F10">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="121"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the F10 function key. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F11">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="122"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the F11 function key. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F12">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="123"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the F12 function key. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F13">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="61440"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the F13 function key.&#xA;     * @since 1.2&#xA;     */</comments>
        <comments>/* F13 - F24 are used on IBM 3270 keyboard; use random range for constants. */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F14">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="61441"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the F14 function key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F15">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="61442"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the F15 function key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F16">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="61443"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the F16 function key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F17">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="61444"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the F17 function key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F18">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="61445"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the F18 function key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F19">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="61446"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the F19 function key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F20">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="61447"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the F20 function key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F21">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="61448"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the F21 function key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F22">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="61449"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the F22 function key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F23">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="61450"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the F23 function key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_F24">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="61451"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the F24 function key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_PRINTSCREEN">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="154"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_INSERT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="155"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_HELP">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="156"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_META">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="157"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_BACK_QUOTE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="192"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_QUOTE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="222"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_KP_UP">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="224"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the numeric keypad &lt;b>up&lt;/b> arrow key.&#xA;     * @see #VK_UP&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_KP_DOWN">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="225"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the numeric keypad &lt;b>down&lt;/b> arrow key.&#xA;     * @see #VK_DOWN&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_KP_LEFT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="226"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the numeric keypad &lt;b>left&lt;/b> arrow key.&#xA;     * @see #VK_LEFT&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_KP_RIGHT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="227"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the numeric keypad &lt;b>right&lt;/b> arrow key.&#xA;     * @see #VK_RIGHT&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_GRAVE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="128"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/* For European keyboards */</comments>
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_ACUTE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="129"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_CIRCUMFLEX">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="130"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_TILDE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="131"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_MACRON">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="132"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_BREVE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="133"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_ABOVEDOT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="134"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_DIAERESIS">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="135"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_ABOVERING">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="136"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_DOUBLEACUTE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="137"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_CARON">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="138"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_CEDILLA">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="139"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_OGONEK">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="140"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_IOTA">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="141"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_VOICED_SOUND">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="142"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DEAD_SEMIVOICED_SOUND">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="143"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_AMPERSAND">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="150"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_ASTERISK">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="151"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_QUOTEDBL">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="152"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_LESS">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="153"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_GREATER">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="160"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_BRACELEFT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="161"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_BRACERIGHT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="162"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_AT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="512"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the &quot;@&quot; key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_COLON">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="513"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the &quot;:&quot; key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_CIRCUMFLEX">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="514"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the &quot;^&quot; key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_DOLLAR">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="515"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the &quot;$&quot; key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_EURO_SIGN">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="516"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Euro currency sign key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_EXCLAMATION_MARK">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="517"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the &quot;!&quot; key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_INVERTED_EXCLAMATION_MARK">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="518"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the inverted exclamation mark key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_LEFT_PARENTHESIS">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="519"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the &quot;(&quot; key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_NUMBER_SIGN">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="520"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the &quot;#&quot; key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_PLUS">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="521"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the &quot;+&quot; key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_RIGHT_PARENTHESIS">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="522"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the &quot;)&quot; key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_UNDERSCORE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="523"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the &quot;_&quot; key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_WINDOWS">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="524"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Microsoft Windows &quot;Windows&quot; key.&#xA;     * It is used for both the left and right version of the key.  &#xA;     * @see #getKeyLocation()&#xA;     * @since 1.5&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_CONTEXT_MENU">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="525"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Microsoft Windows Context Menu key.&#xA;     * @since 1.5&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_FINAL">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="24"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/* for input method support on Asian Keyboards */</comments>
        <comments>/* not clear what this means - listed in Microsoft Windows API */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_CONVERT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="28"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the Convert function key. */</comments>
        <comments>/* Japanese PC 106 keyboard, Japanese Solaris keyboard: henkan */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_NONCONVERT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="29"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the Don't Convert function key. */</comments>
        <comments>/* Japanese PC 106 keyboard: muhenkan */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_ACCEPT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="30"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** Constant for the Accept or Commit function key. */</comments>
        <comments>/* Japanese Solaris keyboard: kakutei */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_MODECHANGE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="31"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/* not clear what this means - listed in Microsoft Windows API */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_KANA">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="21"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/* replaced by VK_KANA_LOCK for Microsoft Windows and Solaris; &#xA;       might still be used on other platforms */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_KANJI">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="25"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/* replaced by VK_INPUT_METHOD_ON_OFF for Microsoft Windows and Solaris; &#xA;       might still be used for other platforms */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_ALPHANUMERIC">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="240"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Alphanumeric function key.&#xA;     * @since 1.2&#xA;     */</comments>
        <comments>/* Japanese PC 106 keyboard: eisuu */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_KATAKANA">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="241"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Katakana function key.&#xA;     * @since 1.2&#xA;     */</comments>
        <comments>/* Japanese PC 106 keyboard: katakana */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_HIRAGANA">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="242"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Hiragana function key.&#xA;     * @since 1.2&#xA;     */</comments>
        <comments>/* Japanese PC 106 keyboard: hiragana */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_FULL_WIDTH">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="243"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Full-Width Characters function key.&#xA;     * @since 1.2&#xA;     */</comments>
        <comments>/* Japanese PC 106 keyboard: zenkaku */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_HALF_WIDTH">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="244"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Half-Width Characters function key.&#xA;     * @since 1.2&#xA;     */</comments>
        <comments>/* Japanese PC 106 keyboard: hankaku */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_ROMAN_CHARACTERS">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="245"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Roman Characters function key.&#xA;     * @since 1.2&#xA;     */</comments>
        <comments>/* Japanese PC 106 keyboard: roumaji */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_ALL_CANDIDATES">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="256"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the All Candidates function key.&#xA;     * @since 1.2&#xA;     */</comments>
        <comments>/* Japanese PC 106 keyboard - VK_CONVERT + ALT: zenkouho */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_PREVIOUS_CANDIDATE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="257"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Previous Candidate function key.&#xA;     * @since 1.2&#xA;     */</comments>
        <comments>/* Japanese PC 106 keyboard - VK_CONVERT + SHIFT: maekouho */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_CODE_INPUT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="258"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Code Input function key.&#xA;     * @since 1.2&#xA;     */</comments>
        <comments>/* Japanese PC 106 keyboard - VK_ALPHANUMERIC + ALT: kanji bangou */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_JAPANESE_KATAKANA">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="259"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Japanese-Katakana function key.&#xA;     * This key switches to a Japanese input method and selects its Katakana input mode.&#xA;     * @since 1.2&#xA;     */</comments>
        <comments>/* Japanese Macintosh keyboard - VK_JAPANESE_HIRAGANA + SHIFT */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_JAPANESE_HIRAGANA">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="260"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Japanese-Hiragana function key.&#xA;     * This key switches to a Japanese input method and selects its Hiragana input mode.&#xA;     * @since 1.2&#xA;     */</comments>
        <comments>/* Japanese Macintosh keyboard */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_JAPANESE_ROMAN">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="261"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Japanese-Roman function key.&#xA;     * This key switches to a Japanese input method and selects its Roman-Direct input mode.&#xA;     * @since 1.2&#xA;     */</comments>
        <comments>/* Japanese Macintosh keyboard */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_KANA_LOCK">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="262"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the locking Kana function key.&#xA;     * This key locks the keyboard into a Kana layout.&#xA;     * @since 1.3&#xA;     */</comments>
        <comments>/* Japanese PC 106 keyboard with special Windows driver - eisuu + Control; Japanese Solaris keyboard: kana */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_INPUT_METHOD_ON_OFF">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="263"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the input method on/off key.&#xA;     * @since 1.3&#xA;     */</comments>
        <comments>/* Japanese PC 106 keyboard: kanji. Japanese Solaris keyboard: nihongo */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_CUT">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="65489"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/* for Sun keyboards */</comments>
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_COPY">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="65485"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_PASTE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="65487"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_UNDO">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="65483"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_AGAIN">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="65481"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_FIND">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="65488"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_PROPS">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="65482"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_STOP">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="65480"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** @since 1.2 */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_COMPOSE">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="65312"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Compose function key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_ALT_GRAPH">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="65406"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the AltGraph function key.&#xA;     * @since 1.2&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_BEGIN">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="65368"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constant for the Begin key.&#xA;     * @since 1.5&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="VK_UNDEFINED">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * This value is used to indicate that the keyCode is unknown.&#xA;     * KEY_TYPED events do not have a keyCode value; this value &#xA;     * is used instead.  &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="CHAR_UNDEFINED">
      <initialValue xsi:type="literals:HexIntegerLiteral" hexValue="65535"/>
      <typeReference xsi:type="types:Char"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * KEY_PRESSED and KEY_RELEASED events which do not map to a&#xA;     * valid Unicode character use this for the keyChar value.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="KEY_LOCATION_UNKNOWN">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * A constant indicating that the keyLocation is indeterminate&#xA;     * or not relevant.&#xA;     * &lt;code>KEY_TYPED&lt;/code> events do not have a keyLocation; this value&#xA;     * is used instead.&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="KEY_LOCATION_STANDARD">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * A constant indicating that the key pressed or released&#xA;     * is not distinguished as the left or right version of a key,&#xA;     * and did not originate on the numeric keypad (or did not&#xA;     * originate with a virtual key corresponding to the numeric&#xA;     * keypad).&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="KEY_LOCATION_LEFT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="2"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * A constant indicating that the key pressed or released is in&#xA;     * the left key location (there is more than one possible location&#xA;     * for this key).  Example: the left shift key.&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="KEY_LOCATION_RIGHT">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="3"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * A constant indicating that the key pressed or released is in&#xA;     * the right key location (there is more than one possible location&#xA;     * for this key).  Example: the right shift key.&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="KEY_LOCATION_NUMPAD">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="4"/>
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * A constant indicating that the key event originated on the&#xA;     * numeric keypad or with a virtual key corresponding to the&#xA;     * numeric keypad.&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="members:Field" name="keyCode">
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;     * The unique value assigned to each of the keys on the&#xA;     * keyboard.  There is a common set of key codes that&#xA;     * can be fired by most keyboards.&#xA;     * The symbolic name for a key code should be used rather&#xA;     * than the code value itself.&#xA;     *&#xA;     * @serial&#xA;     * @see #getKeyCode()&#xA;     * @see #setKeyCode(int)&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="keyChar">
      <typeReference xsi:type="types:Char">
        <comments>/**&#xA;     * &lt;code>keyChar&lt;/code> is a valid unicode character&#xA;     * that is fired by a key or a key combination on&#xA;     * a keyboard.&#xA;     *&#xA;     * @serial&#xA;     * @see #getKeyChar()&#xA;     * @see #setKeyChar(char)&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="keyLocation">
      <typeReference xsi:type="types:Int">
        <comments>/**&#xA;     * The location of the key on the keyboard.&#xA;     *&#xA;     * Some keys occur more than once on a keyboard, e.g. the left and&#xA;     * right shift keys.  Additionally, some keys occur on the numeric&#xA;     * keypad.  This variable is used to distinguish such keys.&#xA;     *&#xA;     * The only legal values are &lt;code>KEY_LOCATION_UNKNOWN&lt;/code>, &#xA;     * &lt;code>KEY_LOCATION_STANDARD&lt;/code>, &lt;code>KEY_LOCATION_LEFT&lt;/code>, &#xA;     * &lt;code>KEY_LOCATION_RIGHT&lt;/code>, and &lt;code>KEY_LOCATION_NUMPAD&lt;/code>.&#xA;     *&#xA;     * @serial&#xA;     * @see #getKeyLocation()&#xA;     */</comments>
      </typeReference>
    </members>
    <members xsi:type="members:Field" name="rawCode">
      <initialValue xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>//set from native code.</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Transient"/>
    </members>
    <members xsi:type="members:Field" name="serialVersionUID">
      <initialValue xsi:type="expressions:UnaryExpression">
        <operators xsi:type="operators:Subtraction"/>
        <child xsi:type="literals:DecimalLongLiteral" decimalValue="2352130953028126954"/>
      </initialValue>
      <typeReference xsi:type="types:Long"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/*&#xA;     * JDK 1.1 serialVersionUID &#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Final"/>
    </members>
    <members xsi:type="statements:Block">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference">
          <comments>/* ensure that the necessary native libraries are loaded */</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="NativeLibLoader.class.xmi#//@classifiers.0/@members.1"/>
          </next>
          <target xsi:type="classifiers:Class" href="NativeLibLoader.class.xmi#//@classifiers.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.207"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:UnaryExpression">
          <operators xsi:type="operators:Negate"/>
          <child xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../GraphicsEnvironment.class.xmi#//@classifiers.0/@members.5"/>
            </next>
            <target xsi:type="classifiers:Class" href="../GraphicsEnvironment.class.xmi#//@classifiers.0"/>
          </child>
        </condition>
      </statements>
      <modifiers xsi:type="modifiers:Static"/>
    </members>
    <members xsi:type="members:InterfaceMethod" name="initIDs">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Initialize JNI field and method IDs for fields that may be&#xA;     * accessed from C.&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <annotationsAndModifiers xsi:type="modifiers:Native"/>
    </members>
    <members xsi:type="members:Constructor" name="KeyEvent">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.208/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.208/@parameters.1"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.208/@parameters.2"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.208/@parameters.3"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.208/@parameters.4"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.208/@parameters.5"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.208/@parameters.6"/>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.0"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.208/@parameters.7"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="when">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="modifiers">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyCode">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyChar">
        <typeReference xsi:type="types:Char"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyLocation">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="isProxyActive">
        <typeReference xsi:type="types:Boolean"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Constructs a &lt;code>KeyEvent&lt;/code> object.&#xA;     * &lt;p>Note that passing in an invalid &lt;code>id&lt;/code> results in&#xA;     * unspecified behavior. This method throws an&#xA;     * &lt;code>IllegalArgumentException&lt;/code> if &lt;code>source&lt;/code>&#xA;     * is &lt;code>null&lt;/code>.&#xA;     *&#xA;     * @param source    the &lt;code>Component&lt;/code> that originated the event&#xA;     * @param id        an integer identifying the type of event&#xA;     * @param when      a long integer that specifies the time the event&#xA;     *                  occurred&#xA;     * @param modifiers the modifier keys down during event (shift, ctrl,&#xA;     *                  alt, meta)&#xA;     *                  Either extended _DOWN_MASK or old _MASK modifiers&#xA;     *                  should be used, but both models should not be mixed&#xA;     *                  in one event. Use of the extended modifiers is&#xA;     *                  preferred.&#xA;     * @param keyCode   the integer code for an actual key, or VK_UNDEFINED&#xA;     *                  (for a key-typed event)&#xA;     * @param keyChar   the Unicode character generated by this event, or&#xA;     *                  CHAR_UNDEFINED (for key-pressed and key-released&#xA;     *                  events which do not map to a valid Unicode character)&#xA;     * @param keyLocation  identifies the key location.  The only legal&#xA;     *        values are &lt;code>KEY_LOCATION_UNKNOWN&lt;/code>, &#xA;     *        &lt;code>KEY_LOCATION_STANDARD&lt;/code>, &lt;code>KEY_LOCATION_LEFT&lt;/code>, &#xA;     *        &lt;code>KEY_LOCATION_RIGHT&lt;/code>, and &lt;code>KEY_LOCATION_NUMPAD&lt;/code>.&#xA;     * @throws IllegalArgumentException  &#xA;     *     if &lt;code>id&lt;/code> is &lt;code>KEY_TYPED&lt;/code> and &#xA;     *       &lt;code>keyChar&lt;/code> is &lt;code>CHAR_UNDEFINED&lt;/code>; &#xA;     *     or if &lt;code>id&lt;/code> is &lt;code>KEY_TYPED&lt;/code> and &#xA;     *       &lt;code>keyCode&lt;/code> is not &lt;code>VK_UNDEFINED&lt;/code>; &#xA;     *     or if &lt;code>id&lt;/code> is &lt;code>KEY_TYPED&lt;/code> and&#xA;     *       &lt;code>keyLocation&lt;/code> is not &lt;code>KEY_LOCATION_UNKNOWN&lt;/code>;&#xA;     *     or if &lt;code>keyLocation&lt;/code> is not one of the legal &#xA;     *       values enumerated above.  &#xA;     * @throws IllegalArgumentException if &lt;code>source&lt;/code> is null&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="KeyEvent">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.209/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.209/@parameters.1"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.209/@parameters.2"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.209/@parameters.3"/>
          <callTarget xsi:type="literals:Super"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:StringReference" value="invalid keyChar"/>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.209/@parameters.5"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.195"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:StringReference" value="invalid keyCode"/>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.209/@parameters.4"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.194"/>
            </condition>
          </statements>
          <statements xsi:type="statements:Condition">
            <statement xsi:type="statements:Block">
              <statements xsi:type="statements:Throw">
                <throwable xsi:type="instantiations:NewConstructorCall">
                  <typeReference xsi:type="types:NamespaceClassifierReference">
                    <classifierReferences>
                      <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                    </classifierReferences>
                  </typeReference>
                  <arguments xsi:type="references:StringReference" value="invalid keyLocation"/>
                </throwable>
              </statements>
            </statement>
            <condition xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.209/@parameters.6"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.196"/>
            </condition>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:Equal"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.209/@parameters.1"/>
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.201"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.209/@parameters.4"/>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.202"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.209/@parameters.5"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Throw">
            <throwable xsi:type="instantiations:NewConstructorCall">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/IllegalArgumentException.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <arguments xsi:type="references:StringReference" value="invalid keyLocation"/>
            </throwable>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.209/@parameters.6"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.196"/>
              <relationOperators xsi:type="operators:LessThan"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.209/@parameters.6"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.200"/>
              <relationOperators xsi:type="operators:GreaterThan"/>
            </expression>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.203"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.209/@parameters.6"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.222"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="InputEvent.class.xmi#//@classifiers.0/@members.30"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="InputEvent.class.xmi#//@classifiers.0/@members.31"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </children>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.223"/>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="InputEvent.class.xmi#//@classifiers.0/@members.30"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="InputEvent.class.xmi#//@classifiers.0/@members.31"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </expression>
            </children>
          </condition>
        </elseStatement>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="when">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="modifiers">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyCode">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyChar">
        <typeReference xsi:type="types:Char"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyLocation">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <members xsi:type="members:Constructor" name="KeyEvent">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.210/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.210/@parameters.1"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.210/@parameters.2"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.210/@parameters.3"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.210/@parameters.4"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.210/@parameters.5"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.196"/>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="when">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="modifiers">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyCode">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyChar">
        <typeReference xsi:type="types:Char"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Constructs a &lt;code>KeyEvent&lt;/code> object.&#xA;     * &lt;p>Note that passing in an invalid &lt;code>id&lt;/code> results in&#xA;     * unspecified behavior. This method throws an&#xA;     * &lt;code>IllegalArgumentException&lt;/code> if &lt;code>source&lt;/code>&#xA;     * is &lt;code>null&lt;/code>.&#xA;     *&#xA;     * @param source    the &lt;code>Component&lt;/code> that originated the event&#xA;     * @param id        an integer identifying the type of event&#xA;     * @param when      a long integer that specifies the time the event&#xA;     *                  occurred&#xA;     * @param modifiers the modifier keys down during event (shift, ctrl,&#xA;     *                  alt, meta)&#xA;     *                  Either extended _DOWN_MASK or old _MASK modifiers&#xA;     *                  should be used, but both models should not be mixed&#xA;     *                  in one event. Use of the extended modifiers is&#xA;     *                  preferred.&#xA;     * @param keyCode   the integer code for an actual key, or VK_UNDEFINED &#xA;     *                  (for a key-typed event)&#xA;     * @param keyChar   the Unicode character generated by this event, or &#xA;     *                  CHAR_UNDEFINED (for key-pressed and key-released&#xA;     *                  events which do not map to a valid Unicode character)&#xA;     * @throws IllegalArgumentException  if &lt;code>id&lt;/code> is&#xA;     *     &lt;code>KEY_TYPED&lt;/code> and &lt;code>keyChar&lt;/code> is&#xA;     *     &lt;code>CHAR_UNDEFINED&lt;/code>; or if &lt;code>id&lt;/code> is&#xA;     *     &lt;code>KEY_TYPED&lt;/code> and &lt;code>keyCode&lt;/code> is not&#xA;     *     &lt;code>VK_UNDEFINED&lt;/code>&#xA;     * @throws IllegalArgumentException if &lt;code>source&lt;/code> is null&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <members xsi:type="members:Constructor" name="KeyEvent">
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="instantiations:ExplicitConstructorCall">
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.211/@parameters.0"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.211/@parameters.1"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.211/@parameters.2"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.211/@parameters.3"/>
          <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.211/@parameters.4"/>
          <arguments xsi:type="expressions:CastExpression">
            <typeReference xsi:type="types:Char"/>
            <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.211/@parameters.4"/>
          </arguments>
          <callTarget xsi:type="literals:This"/>
        </expression>
      </statements>
      <parameters xsi:type="parameters:OrdinaryParameter" name="source">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../Component.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="id">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="when">
        <typeReference xsi:type="types:Long"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="modifiers">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyCode">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="annotations:AnnotationInstance">
        <comments>/**&#xA;     * @deprecated as of JDK1.1 &#xA;     */</comments>
        <annotation xsi:type="classifiers:Annotation" href="../../lang/Deprecated.class.xmi#//@classifiers.0"/>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
    </members>
    <members xsi:type="members:ClassMethod" name="getKeyCode">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the integer keyCode associated with the key in this event.&#xA;     * &#xA;     * @return the integer code for an actual key on the keyboard. &#xA;     *         (For &lt;code>KEY_TYPED&lt;/code> events, the keyCode is &#xA;     *         &lt;code>VK_UNDEFINED&lt;/code>.)&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.201"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setKeyCode">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyCode">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set the keyCode value to indicate a physical key.&#xA;     *&#xA;     * @param keyCode an integer corresponding to an actual key on the keyboard.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.201"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.213/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getKeyChar">
      <typeReference xsi:type="types:Char"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the character associated with the key in this event.&#xA;     * For example, the &lt;code>KEY_TYPED&lt;/code> event for shift + &quot;a&quot; &#xA;     * returns the value for &quot;A&quot;.&#xA;     * &lt;p>&#xA;     * &lt;code>KEY_PRESSED&lt;/code> and &lt;code>KEY_RELEASED&lt;/code> events &#xA;     * are not intended for reporting of character input.  Therefore, &#xA;     * the values returned by this method are guaranteed to be &#xA;     * meaningful only for &lt;code>KEY_TYPED&lt;/code> events.  &#xA;     *&#xA;     * @return the Unicode character defined for this key event.&#xA;     *         If no valid Unicode character exists for this key event, &#xA;     *         &lt;code>CHAR_UNDEFINED&lt;/code> is returned.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.202"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setKeyChar">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyChar">
        <typeReference xsi:type="types:Char"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Set the keyChar value to indicate a logical character.&#xA;     *&#xA;     * @param keyChar a char corresponding to to the combination of keystrokes&#xA;     *                that make up this event.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.202"/>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.215/@parameters.0"/>
        </expression>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setModifiers">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="modifiers">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="annotations:AnnotationInstance">
        <comments>/**&#xA;     * Set the modifiers to indicate additional keys that were held down&#xA;     * (e.g. shift, ctrl, alt, meta) defined as part of InputEvent.&#xA;     * &lt;p>&#xA;     * NOTE:  use of this method is not recommended, because many AWT&#xA;     * implementations do not recognize modifier changes.  This is&#xA;     * especially true for &lt;code>KEY_TYPED&lt;/code> events where the shift &#xA;     * modifier is changed.&#xA;     *&#xA;     * @param modifiers an integer combination of the modifier constants.&#xA;     * @see InputEvent&#xA;     * @deprecated as of JDK1.1.4&#xA;     */</comments>
        <annotation xsi:type="classifiers:Annotation" href="../../lang/Deprecated.class.xmi#//@classifiers.0"/>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Public"/>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="expressions:AssignmentExpression">
          <child xsi:type="references:SelfReference">
            <next xsi:type="references:IdentifierReference">
              <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
            </next>
            <self xsi:type="literals:This"/>
          </child>
          <assignmentOperator xsi:type="operators:Assignment"/>
          <value xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.216/@parameters.0"/>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.222"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:NotEqual"/>
              <children xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="InputEvent.class.xmi#//@classifiers.0/@members.30"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </children>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:EqualityExpression">
              <equalityOperators xsi:type="operators:Equal"/>
              <children xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="InputEvent.class.xmi#//@classifiers.0/@members.31"/>
              </children>
              <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
            </expression>
          </children>
        </condition>
        <elseStatement xsi:type="statements:Condition">
          <statement xsi:type="statements:Block">
            <statements xsi:type="statements:ExpressionStatement">
              <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.223"/>
            </statements>
          </statement>
          <condition xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:Equal"/>
                <children xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="InputEvent.class.xmi#//@classifiers.0/@members.30"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </expression>
            </children>
            <children xsi:type="expressions:NestedExpression">
              <expression xsi:type="expressions:EqualityExpression">
                <equalityOperators xsi:type="operators:NotEqual"/>
                <children xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="InputEvent.class.xmi#//@classifiers.0/@members.31"/>
                </children>
                <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
              </expression>
            </children>
          </condition>
        </elseStatement>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getKeyLocation">
      <typeReference xsi:type="types:Int"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns the location of the key that originated this key event.&#xA;     *&#xA;     * Some keys occur more than once on a keyboard, e.g. the left and&#xA;     * right shift keys.  Additionally, some keys occur on the numeric&#xA;     * keypad.  This provides a way of distinguishing such keys.&#xA;     *&#xA;     * @return the location of the key that was pressed or released.&#xA;     *         Always returns &lt;code>KEY_LOCATION_UNKNOWN&lt;/code> for &#xA;     *         &lt;code>KEY_TYPED&lt;/code> events.&#xA;     * @since 1.4&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.203"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getKeyText">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="keyCode">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a String describing the keyCode, such as &quot;HOME&quot;, &quot;F1&quot; or &quot;A&quot;.&#xA;     * These strings can be localized by changing the awt.properties file.&#xA;     *&#xA;     * @return a string containing a text description for a physical key,&#xA;     *         identified by its keyCode&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/String.class.xmi#//@classifiers.0/@members.82"/>
                <arguments xsi:type="expressions:CastExpression">
                  <typeReference xsi:type="types:Char"/>
                  <child xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.218/@parameters.0"/>
                </arguments>
              </next>
              <target xsi:type="classifiers:Class" href="../../lang/String.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalOrExpression">
          <children xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.218/@parameters.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.30"/>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </children>
            <children xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.218/@parameters.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.39"/>
              <relationOperators xsi:type="operators:LessThanOrEqual"/>
            </children>
          </children>
          <children xsi:type="expressions:ConditionalAndExpression">
            <children xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.218/@parameters.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.42"/>
              <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
            </children>
            <children xsi:type="expressions:RelationExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.218/@parameters.0"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.67"/>
              <relationOperators xsi:type="operators:LessThanOrEqual"/>
            </children>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.enter"/>
                <arguments xsi:type="references:StringReference" value="Enter"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.backSpace"/>
                <arguments xsi:type="references:StringReference" value="Backspace"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.tab"/>
                <arguments xsi:type="references:StringReference" value="Tab"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.cancel"/>
                <arguments xsi:type="references:StringReference" value="Cancel"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.clear"/>
                <arguments xsi:type="references:StringReference" value="Clear"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.10"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.compose"/>
                <arguments xsi:type="references:StringReference" value="Compose"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.191"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.pause"/>
                <arguments xsi:type="references:StringReference" value="Pause"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.capsLock"/>
                <arguments xsi:type="references:StringReference" value="Caps Lock"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.escape"/>
                <arguments xsi:type="references:StringReference" value="Escape"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.space"/>
                <arguments xsi:type="references:StringReference" value="Space"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.17"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.pgup"/>
                <arguments xsi:type="references:StringReference" value="Page Up"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.pgdn"/>
                <arguments xsi:type="references:StringReference" value="Page Down"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.end"/>
                <arguments xsi:type="references:StringReference" value="End"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.home"/>
                <arguments xsi:type="references:StringReference" value="Home"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.left"/>
                <arguments xsi:type="references:StringReference" value="Left"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.up"/>
                <arguments xsi:type="references:StringReference" value="Up"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.right"/>
                <arguments xsi:type="references:StringReference" value="Right"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.down"/>
                <arguments xsi:type="references:StringReference" value="Down"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.begin"/>
                <arguments xsi:type="references:StringReference" value="Begin"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.193"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <comments>// modifiers </comments>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.shift"/>
                <arguments xsi:type="references:StringReference" value="Shift"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.11"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.control"/>
                <arguments xsi:type="references:StringReference" value="Control"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.12"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.alt"/>
                <arguments xsi:type="references:StringReference" value="Alt"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.13"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.meta"/>
                <arguments xsi:type="references:StringReference" value="Meta"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.118"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.altGraph"/>
                <arguments xsi:type="references:StringReference" value="Alt Graph"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.192"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <comments>// punctuation</comments>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.comma"/>
                <arguments xsi:type="references:StringReference" value="Comma"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.26"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.period"/>
                <arguments xsi:type="references:StringReference" value="Period"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.28"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.slash"/>
                <arguments xsi:type="references:StringReference" value="Slash"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.29"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.semicolon"/>
                <arguments xsi:type="references:StringReference" value="Semicolon"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.40"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.equals"/>
                <arguments xsi:type="references:StringReference" value="Equals"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.41"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.openBracket"/>
                <arguments xsi:type="references:StringReference" value="Open Bracket"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.68"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.backSlash"/>
                <arguments xsi:type="references:StringReference" value="Back Slash"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.69"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.closeBracket"/>
                <arguments xsi:type="references:StringReference" value="Close Bracket"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.70"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <comments>// numpad numeric keys handled below</comments>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.multiply"/>
                <arguments xsi:type="references:StringReference" value="NumPad *"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.81"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.add"/>
                <arguments xsi:type="references:StringReference" value="NumPad +"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.82"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.separator"/>
                <arguments xsi:type="references:StringReference" value="NumPad ,"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.84"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.subtract"/>
                <arguments xsi:type="references:StringReference" value="NumPad -"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.85"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.decimal"/>
                <arguments xsi:type="references:StringReference" value="NumPad ."/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.86"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.divide"/>
                <arguments xsi:type="references:StringReference" value="NumPad /"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.87"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.delete"/>
                <arguments xsi:type="references:StringReference" value="Delete"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.88"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.numLock"/>
                <arguments xsi:type="references:StringReference" value="Num Lock"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.scrollLock"/>
                <arguments xsi:type="references:StringReference" value="Scroll Lock"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.windows"/>
                <arguments xsi:type="references:StringReference" value="Windows"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.160"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.context"/>
                <arguments xsi:type="references:StringReference" value="Context Menu"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.161"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f1"/>
                <arguments xsi:type="references:StringReference" value="F1"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f2"/>
                <arguments xsi:type="references:StringReference" value="F2"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.92"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f3"/>
                <arguments xsi:type="references:StringReference" value="F3"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.93"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f4"/>
                <arguments xsi:type="references:StringReference" value="F4"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.94"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f5"/>
                <arguments xsi:type="references:StringReference" value="F5"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.95"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f6"/>
                <arguments xsi:type="references:StringReference" value="F6"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f7"/>
                <arguments xsi:type="references:StringReference" value="F7"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f8"/>
                <arguments xsi:type="references:StringReference" value="F8"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f9"/>
                <arguments xsi:type="references:StringReference" value="F9"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.99"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f10"/>
                <arguments xsi:type="references:StringReference" value="F10"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f11"/>
                <arguments xsi:type="references:StringReference" value="F11"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f12"/>
                <arguments xsi:type="references:StringReference" value="F12"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f13"/>
                <arguments xsi:type="references:StringReference" value="F13"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.103"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f14"/>
                <arguments xsi:type="references:StringReference" value="F14"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.104"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f15"/>
                <arguments xsi:type="references:StringReference" value="F15"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.105"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f16"/>
                <arguments xsi:type="references:StringReference" value="F16"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.106"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f17"/>
                <arguments xsi:type="references:StringReference" value="F17"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f18"/>
                <arguments xsi:type="references:StringReference" value="F18"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f19"/>
                <arguments xsi:type="references:StringReference" value="F19"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f20"/>
                <arguments xsi:type="references:StringReference" value="F20"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f21"/>
                <arguments xsi:type="references:StringReference" value="F21"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f22"/>
                <arguments xsi:type="references:StringReference" value="F22"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f23"/>
                <arguments xsi:type="references:StringReference" value="F23"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.f24"/>
                <arguments xsi:type="references:StringReference" value="F24"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.printScreen"/>
                <arguments xsi:type="references:StringReference" value="Print Screen"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.115"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.insert"/>
                <arguments xsi:type="references:StringReference" value="Insert"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.116"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.help"/>
                <arguments xsi:type="references:StringReference" value="Help"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.117"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.backQuote"/>
                <arguments xsi:type="references:StringReference" value="Back Quote"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.119"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.quote"/>
                <arguments xsi:type="references:StringReference" value="Quote"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.120"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.up"/>
                <arguments xsi:type="references:StringReference" value="Up"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.121"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.down"/>
                <arguments xsi:type="references:StringReference" value="Down"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.122"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.left"/>
                <arguments xsi:type="references:StringReference" value="Left"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.right"/>
                <arguments xsi:type="references:StringReference" value="Right"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.124"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadGrave"/>
                <arguments xsi:type="references:StringReference" value="Dead Grave"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.125"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadAcute"/>
                <arguments xsi:type="references:StringReference" value="Dead Acute"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.126"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadCircumflex"/>
                <arguments xsi:type="references:StringReference" value="Dead Circumflex"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.127"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadTilde"/>
                <arguments xsi:type="references:StringReference" value="Dead Tilde"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.128"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadMacron"/>
                <arguments xsi:type="references:StringReference" value="Dead Macron"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.129"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadBreve"/>
                <arguments xsi:type="references:StringReference" value="Dead Breve"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.130"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadAboveDot"/>
                <arguments xsi:type="references:StringReference" value="Dead Above Dot"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.131"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadDiaeresis"/>
                <arguments xsi:type="references:StringReference" value="Dead Diaeresis"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.132"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadAboveRing"/>
                <arguments xsi:type="references:StringReference" value="Dead Above Ring"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.133"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadDoubleAcute"/>
                <arguments xsi:type="references:StringReference" value="Dead Double Acute"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.134"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadCaron"/>
                <arguments xsi:type="references:StringReference" value="Dead Caron"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.135"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadCedilla"/>
                <arguments xsi:type="references:StringReference" value="Dead Cedilla"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.136"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadOgonek"/>
                <arguments xsi:type="references:StringReference" value="Dead Ogonek"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.137"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadIota"/>
                <arguments xsi:type="references:StringReference" value="Dead Iota"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.138"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadVoicedSound"/>
                <arguments xsi:type="references:StringReference" value="Dead Voiced Sound"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.139"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.deadSemivoicedSound"/>
                <arguments xsi:type="references:StringReference" value="Dead Semivoiced Sound"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.140"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.ampersand"/>
                <arguments xsi:type="references:StringReference" value="Ampersand"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.141"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.asterisk"/>
                <arguments xsi:type="references:StringReference" value="Asterisk"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.142"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.quoteDbl"/>
                <arguments xsi:type="references:StringReference" value="Double Quote"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.143"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.Less"/>
                <arguments xsi:type="references:StringReference" value="Less"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.144"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.greater"/>
                <arguments xsi:type="references:StringReference" value="Greater"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.145"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.braceLeft"/>
                <arguments xsi:type="references:StringReference" value="Left Brace"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.146"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.braceRight"/>
                <arguments xsi:type="references:StringReference" value="Right Brace"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.147"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.at"/>
                <arguments xsi:type="references:StringReference" value="At"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.148"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.colon"/>
                <arguments xsi:type="references:StringReference" value="Colon"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.149"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.circumflex"/>
                <arguments xsi:type="references:StringReference" value="Circumflex"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.150"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.dollar"/>
                <arguments xsi:type="references:StringReference" value="Dollar"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.151"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.euro"/>
                <arguments xsi:type="references:StringReference" value="Euro"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.152"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.exclamationMark"/>
                <arguments xsi:type="references:StringReference" value="Exclamation Mark"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.153"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.invertedExclamationMark"/>
                <arguments xsi:type="references:StringReference" value="Inverted Exclamation Mark"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.154"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.leftParenthesis"/>
                <arguments xsi:type="references:StringReference" value="Left Parenthesis"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.155"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.numberSign"/>
                <arguments xsi:type="references:StringReference" value="Number Sign"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.156"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.minus"/>
                <arguments xsi:type="references:StringReference" value="Minus"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.27"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.plus"/>
                <arguments xsi:type="references:StringReference" value="Plus"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.157"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.rightParenthesis"/>
                <arguments xsi:type="references:StringReference" value="Right Parenthesis"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.158"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.underscore"/>
                <arguments xsi:type="references:StringReference" value="Underscore"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.159"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.final"/>
                <arguments xsi:type="references:StringReference" value="Final"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.162"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.convert"/>
                <arguments xsi:type="references:StringReference" value="Convert"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.163"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.noconvert"/>
                <arguments xsi:type="references:StringReference" value="No Convert"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.164"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.accept"/>
                <arguments xsi:type="references:StringReference" value="Accept"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.165"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.modechange"/>
                <arguments xsi:type="references:StringReference" value="Mode Change"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.166"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.kana"/>
                <arguments xsi:type="references:StringReference" value="Kana"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.167"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.kanji"/>
                <arguments xsi:type="references:StringReference" value="Kanji"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.168"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.alphanumeric"/>
                <arguments xsi:type="references:StringReference" value="Alphanumeric"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.169"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.katakana"/>
                <arguments xsi:type="references:StringReference" value="Katakana"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.170"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.hiragana"/>
                <arguments xsi:type="references:StringReference" value="Hiragana"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.171"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.fullWidth"/>
                <arguments xsi:type="references:StringReference" value="Full-Width"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.172"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.halfWidth"/>
                <arguments xsi:type="references:StringReference" value="Half-Width"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.173"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.romanCharacters"/>
                <arguments xsi:type="references:StringReference" value="Roman Characters"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.174"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.allCandidates"/>
                <arguments xsi:type="references:StringReference" value="All Candidates"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.175"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.previousCandidate"/>
                <arguments xsi:type="references:StringReference" value="Previous Candidate"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.176"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.codeInput"/>
                <arguments xsi:type="references:StringReference" value="Code Input"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.177"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.japaneseKatakana"/>
                <arguments xsi:type="references:StringReference" value="Japanese Katakana"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.178"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.japaneseHiragana"/>
                <arguments xsi:type="references:StringReference" value="Japanese Hiragana"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.179"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.japaneseRoman"/>
                <arguments xsi:type="references:StringReference" value="Japanese Roman"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.180"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.kanaLock"/>
                <arguments xsi:type="references:StringReference" value="Kana Lock"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.181"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.inputMethodOnOff"/>
                <arguments xsi:type="references:StringReference" value="Input Method On/Off"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.182"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.again"/>
                <arguments xsi:type="references:StringReference" value="Again"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.187"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.undo"/>
                <arguments xsi:type="references:StringReference" value="Undo"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.186"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.copy"/>
                <arguments xsi:type="references:StringReference" value="Copy"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.184"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.paste"/>
                <arguments xsi:type="references:StringReference" value="Paste"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.185"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.cut"/>
                <arguments xsi:type="references:StringReference" value="Cut"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.183"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.find"/>
                <arguments xsi:type="references:StringReference" value="Find"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.188"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.props"/>
                <arguments xsi:type="references:StringReference" value="Props"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.189"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="references:IdentifierReference">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                <arguments xsi:type="references:StringReference" value="AWT.stop"/>
                <arguments xsi:type="references:StringReference" value="Stop"/>
              </next>
              <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
            </returnValue>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.190"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.218/@parameters.0"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="numpad">
              <typeReference xsi:type="types:NamespaceClassifierReference">
                <classifierReferences>
                  <target xsi:type="classifiers:Class" href="../../lang/String.class.xmi#//@classifiers.0"/>
                </classifierReferences>
              </typeReference>
              <initialValue xsi:type="references:IdentifierReference">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                  <arguments xsi:type="references:StringReference" value="AWT.numpad"/>
                  <arguments xsi:type="references:StringReference" value="NumPad"/>
                </next>
                <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:LocalVariableStatement">
            <variable name="c">
              <typeReference xsi:type="types:Char"/>
              <initialValue xsi:type="expressions:CastExpression">
                <typeReference xsi:type="types:Char"/>
                <child xsi:type="expressions:NestedExpression">
                  <expression xsi:type="expressions:AdditiveExpression">
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.218/@parameters.0"/>
                    <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71"/>
                    <children xsi:type="literals:CharacterLiteral" value="48"/>
                    <additiveOperators xsi:type="operators:Subtraction"/>
                    <additiveOperators xsi:type="operators:Addition"/>
                  </expression>
                </child>
              </initialValue>
            </variable>
          </statements>
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="expressions:AdditiveExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.218/@statements.2/@statement/@statements.0/@variable"/>
              <children xsi:type="references:StringReference" value="-"/>
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.218/@statements.2/@statement/@statements.1/@variable"/>
              <additiveOperators xsi:type="operators:Addition"/>
              <additiveOperators xsi:type="operators:Addition"/>
            </returnValue>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.218/@parameters.0"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.71"/>
            <relationOperators xsi:type="operators:GreaterThanOrEqual"/>
          </children>
          <children xsi:type="expressions:RelationExpression">
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.218/@parameters.0"/>
            <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.80"/>
            <relationOperators xsi:type="operators:LessThanOrEqual"/>
          </children>
        </condition>
      </statements>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="unknown">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../lang/String.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
              <arguments xsi:type="references:StringReference" value="AWT.unknown"/>
              <arguments xsi:type="references:StringReference" value="Unknown"/>
            </next>
            <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="expressions:AdditiveExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.218/@statements.3/@variable"/>
          <children xsi:type="references:StringReference" value=" keyCode: 0x"/>
          <children xsi:type="references:IdentifierReference">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../lang/Integer.class.xmi#//@classifiers.0/@members.10"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.218/@parameters.0"/>
              <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="16"/>
            </next>
            <target xsi:type="classifiers:Class" href="../../lang/Integer.class.xmi#//@classifiers.0"/>
          </children>
          <additiveOperators xsi:type="operators:Addition"/>
          <additiveOperators xsi:type="operators:Addition"/>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="getKeyModifiersText">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <parameters xsi:type="parameters:OrdinaryParameter" name="modifiers">
        <typeReference xsi:type="types:Int"/>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a &lt;code>String&lt;/code> describing the modifier key(s),&#xA;     * such as &quot;Shift&quot;, or &quot;Ctrl+Shift&quot;.  These strings can be&#xA;     * localized by changing the &lt;code>awt.properties&lt;/code> file.&#xA;     * &lt;p>&#xA;     * Note that &lt;code>InputEvent.ALT_MASK&lt;/code> and&#xA;     * &lt;code>InputEvent.BUTTON2_MASK&lt;/code> have the same value,&#xA;     * so the string &quot;Alt&quot; is returned for both modifiers.  Likewise,&#xA;     * &lt;code>InputEvent.META_MASK&lt;/code> and&#xA;     * &lt;code>InputEvent.BUTTON3_MASK&lt;/code> have the same value,&#xA;     * so the string &quot;Meta&quot; is returned for both modifiers.&#xA;     *&#xA;     * @return string a text description of the combination of modifier&#xA;     *                keys that were held down during the event&#xA;     * @see InputEvent#getModifiersExText(int)&#xA;     */</comments>
      </annotationsAndModifiers>
      <annotationsAndModifiers xsi:type="modifiers:Static"/>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="buf">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                    <arguments xsi:type="references:StringReference" value="AWT.meta"/>
                    <arguments xsi:type="references:StringReference" value="Meta"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="+"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.2"/>
                </next>
                <target xsi:type="classifiers:Class" href="InputEvent.class.xmi#//@classifiers.0"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                    <arguments xsi:type="references:StringReference" value="AWT.control"/>
                    <arguments xsi:type="references:StringReference" value="Ctrl"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="+"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.1"/>
                </next>
                <target xsi:type="classifiers:Class" href="InputEvent.class.xmi#//@classifiers.0"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                    <arguments xsi:type="references:StringReference" value="AWT.alt"/>
                    <arguments xsi:type="references:StringReference" value="Alt"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="+"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.3"/>
                </next>
                <target xsi:type="classifiers:Class" href="InputEvent.class.xmi#//@classifiers.0"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                    <arguments xsi:type="references:StringReference" value="AWT.shift"/>
                    <arguments xsi:type="references:StringReference" value="Shift"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="+"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.0"/>
                </next>
                <target xsi:type="classifiers:Class" href="InputEvent.class.xmi#//@classifiers.0"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                    <arguments xsi:type="references:StringReference" value="AWT.altGraph"/>
                    <arguments xsi:type="references:StringReference" value="Alt Graph"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="+"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.4"/>
                </next>
                <target xsi:type="classifiers:Class" href="InputEvent.class.xmi#//@classifiers.0"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                    <arguments xsi:type="references:StringReference" value="AWT.button1"/>
                    <arguments xsi:type="references:StringReference" value="Button1"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="+"/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@parameters.0"/>
              <children xsi:type="references:IdentifierReference">
                <next xsi:type="references:IdentifierReference">
                  <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.5"/>
                </next>
                <target xsi:type="classifiers:Class" href="InputEvent.class.xmi#//@classifiers.0"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <comments>// remove trailing '+'</comments>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.10"/>
                <arguments xsi:type="expressions:AdditiveExpression">
                  <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
                    <next xsi:type="references:MethodCall">
                      <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.6"/>
                    </next>
                  </children>
                  <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="1"/>
                  <additiveOperators xsi:type="operators:Subtraction"/>
                </arguments>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:RelationExpression">
          <children xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.6"/>
            </next>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          <relationOperators xsi:type="operators:GreaterThan"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.219/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="isActionKey">
      <typeReference xsi:type="types:Boolean"/>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/** &#xA;     * Returns whether the key in this event is an &quot;action&quot; key.&#xA;     * Typically an action key does not fire a unicode character and is&#xA;     * not a modifier key.&#xA;     *&#xA;     * @return &lt;code>true&lt;/code> if the key is an &quot;action&quot; key,&#xA;     *         &lt;code>false&lt;/code> otherwise&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.21"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.20"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.18"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.19"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.23"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.25"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.22"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.24"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.193"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.123"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.121"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.124"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.122"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.91"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.92"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.93"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.94"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.95"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.96"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.97"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.98"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.99"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.100"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.101"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.102"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.103"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.104"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.105"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.106"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.107"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.108"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.109"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.110"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.111"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.112"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.113"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.114"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.115"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.90"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.15"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.89"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.14"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.116"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.162"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.163"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.164"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.165"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.166"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.167"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.168"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.169"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.170"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.171"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.172"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.173"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.174"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.175"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.176"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.177"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.178"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.179"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.180"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.181"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.182"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.187"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.186"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.184"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.185"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.183"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.188"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.189"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.190"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.117"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.160"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:Return">
            <returnValue xsi:type="literals:BooleanLiteral" value="true"/>
          </statements>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.161"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.201"/>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="literals:BooleanLiteral"/>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="paramString">
      <typeReference xsi:type="types:NamespaceClassifierReference">
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../lang/String.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </typeReference>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Returns a parameter string identifying this event.&#xA;     * This method is useful for event logging and for debugging.&#xA;     *&#xA;     * @return a string identifying the event and its attributes&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:LocalVariableStatement">
        <variable name="str">
          <typeReference xsi:type="types:NamespaceClassifierReference">
            <classifierReferences>
              <target xsi:type="classifiers:Class" href="../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
            </classifierReferences>
          </typeReference>
          <initialValue xsi:type="instantiations:NewConstructorCall">
            <typeReference xsi:type="types:NamespaceClassifierReference">
              <classifierReferences>
                <target xsi:type="classifiers:Class" href="../../lang/StringBuffer.class.xmi#//@classifiers.0"/>
              </classifierReferences>
            </typeReference>
            <arguments xsi:type="literals:DecimalIntegerLiteral" decimalValue="100"/>
          </initialValue>
        </variable>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="KEY_PRESSED"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.4"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="KEY_RELEASED"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.5"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="KEY_TYPED"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.3"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="unknown type"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
        </cases>
        <variable xsi:type="references:IdentifierReference">
          <target xsi:type="members:Field" href="../AWTEvent.class.xmi#//@classifiers.0/@members.1"/>
        </variable>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.27"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.201"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:StringReference" value=",keyCode="/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
              <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.218">
                <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.201"/>
              </arguments>
            </next>
            <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:StringReference" value=",keyText="/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
          <comments>/* Some keychars don't print well, e.g. escape, backspace,&#xA;         * tab, return, delete, cancel.  Get keyText for the keyCode &#xA;         * instead of the keyChar.  &#xA;         */</comments>
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:StringReference" value=",keyChar="/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.218">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.7"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="8"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.218">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.8"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="9"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.218">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.6"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="10"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.218">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.9"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="92"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.218">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.16"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="92"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.218">
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.88"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="literals:CharacterLiteral" value="92"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:IdentifierReference">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../Toolkit.class.xmi#//@classifiers.0/@members.76"/>
                    <arguments xsi:type="references:StringReference" value="AWT.undefined"/>
                    <arguments xsi:type="references:StringReference" value="Undefined"/>
                  </next>
                  <target xsi:type="classifiers:Class" href="../Toolkit.class.xmi#//@classifiers.0"/>
                </arguments>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value=" keyChar"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.195"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <next xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                    <arguments xsi:type="references:StringReference" value="'"/>
                  </next>
                  <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.26"/>
                  <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.202"/>
                </next>
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="'"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.202"/>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                  <arguments xsi:type="references:MethodCall" target="//@classifiers.0/@members.219">
                    <arguments xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
                    </arguments>
                  </arguments>
                </next>
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value=",modifiers="/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="InputEvent.class.xmi#//@classifiers.0/@members.30"/>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <next xsi:type="references:MethodCall">
                  <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                  <arguments xsi:type="references:MethodCall">
                    <target xsi:type="members:ClassMethod" href="InputEvent.class.xmi#//@classifiers.0/@members.34"/>
                    <arguments xsi:type="references:IdentifierReference">
                      <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
                    </arguments>
                  </arguments>
                </next>
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value=",extModifiers="/>
              </next>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="InputEvent.class.xmi#//@classifiers.0/@members.31"/>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:StringReference" value=",keyLocation="/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Switch">
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="KEY_LOCATION_UNKNOWN"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.196"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="KEY_LOCATION_STANDARD"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.197"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="KEY_LOCATION_LEFT"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.198"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="KEY_LOCATION_RIGHT"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.199"/>
        </cases>
        <cases xsi:type="statements:NormalSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="KEY_LOCATION_NUMPAD"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
          <condition xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.200"/>
        </cases>
        <cases xsi:type="statements:DefaultSwitchCase">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
              <next xsi:type="references:MethodCall">
                <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
                <arguments xsi:type="references:StringReference" value="KEY_LOCATION_UNKNOWN"/>
              </next>
            </expression>
          </statements>
          <statements xsi:type="statements:Break"/>
        </cases>
        <variable xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.203"/>
      </statements>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <next xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.29"/>
              <arguments xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.204"/>
            </next>
            <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.19"/>
            <arguments xsi:type="references:StringReference" value=",rawCode="/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Return">
        <returnValue xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.221/@statements.0/@variable">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../lang/StringBuffer.class.xmi#//@classifiers.0/@members.55"/>
          </next>
        </returnValue>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setNewModifiers">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Sets new modifiers by the old ones. The key modifiers &#xA;     * override overlaping mouse modifiers.&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentOr"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.8"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.0"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentOr"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.11"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.3"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentOr"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.9"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.1"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentOr"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.10"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.2"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentOr"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.15"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.4"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentOr"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.12"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.5"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="setOldModifiers">
      <typeReference xsi:type="types:Void"/>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Sets old modifiers by the new ones. &#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentOr"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.0"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.8"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentOr"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.3"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.11"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentOr"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.1"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.9"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentOr"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.2"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.10"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentOr"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.4"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.15"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="expressions:AssignmentExpression">
              <child xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </child>
              <assignmentOperator xsi:type="operators:AssignmentOr"/>
              <value xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.5"/>
              </value>
            </expression>
          </statements>
        </statement>
        <condition xsi:type="expressions:EqualityExpression">
          <equalityOperators xsi:type="operators:NotEqual"/>
          <children xsi:type="expressions:NestedExpression">
            <expression xsi:type="expressions:AndExpression">
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.18"/>
              </children>
              <children xsi:type="references:IdentifierReference">
                <target xsi:type="members:Field" href="InputEvent.class.xmi#//@classifiers.0/@members.12"/>
              </children>
            </expression>
          </children>
          <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
        </condition>
      </statements>
    </members>
    <members xsi:type="members:ClassMethod" name="readObject">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="s">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="../../io/ObjectInputStream.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../io/IOException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <exceptions>
        <classifierReferences>
          <target xsi:type="classifiers:Class" href="../../lang/ClassNotFoundException.class.xmi#//@classifiers.0"/>
        </classifierReferences>
      </exceptions>
      <annotationsAndModifiers xsi:type="modifiers:Private">
        <comments>/**&#xA;     * Sets new modifiers by the old ones. The key modifiers &#xA;     * override overlaping mouse modifiers.&#xA;     * @serial&#xA;     */</comments>
      </annotationsAndModifiers>
      <statements xsi:type="statements:ExpressionStatement">
        <expression xsi:type="references:IdentifierReference" target="//@classifiers.0/@members.224/@parameters.0">
          <next xsi:type="references:MethodCall">
            <target xsi:type="members:ClassMethod" href="../../io/ObjectInputStream.class.xmi#//@classifiers.0/@members.19"/>
          </next>
        </expression>
      </statements>
      <statements xsi:type="statements:Condition">
        <statement xsi:type="statements:Block">
          <statements xsi:type="statements:ExpressionStatement">
            <expression xsi:type="references:MethodCall" target="//@classifiers.0/@members.222"/>
          </statements>
        </statement>
        <condition xsi:type="expressions:ConditionalAndExpression">
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:NotEqual"/>
            <children xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="InputEvent.class.xmi#//@classifiers.0/@members.30"/>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </children>
          <children xsi:type="expressions:EqualityExpression">
            <equalityOperators xsi:type="operators:Equal"/>
            <children xsi:type="references:MethodCall">
              <target xsi:type="members:ClassMethod" href="InputEvent.class.xmi#//@classifiers.0/@members.31"/>
            </children>
            <children xsi:type="literals:DecimalIntegerLiteral" decimalValue="0"/>
          </children>
        </condition>
      </statements>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * An event which indicates that a keystroke occurred in a component.&#xA; * &lt;p>&#xA; * This low-level event is generated by a component object (such as a text &#xA; * field) when a key is pressed, released, or typed.  &#xA; * The event is passed to every &lt;code>KeyListener&lt;/code>&#xA; * or &lt;code>KeyAdapter&lt;/code> object which registered to receive such&#xA; * events using the component's &lt;code>addKeyListener&lt;/code> method.&#xA; * (&lt;code>KeyAdapter&lt;/code> objects implement the &#xA; * &lt;code>KeyListener&lt;/code> interface.)  Each such listener object &#xA; * gets this &lt;code>KeyEvent&lt;/code> when the event occurs.&#xA; * &lt;p>&#xA; * &lt;em>&quot;Key typed&quot; events&lt;/em> are higher-level and generally do not depend on &#xA; * the platform or keyboard layout.  They are generated when a Unicode character &#xA; * is entered, and are the preferred way to find out about character input.&#xA; * In the simplest case, a key typed event is produced by a single key press &#xA; * (e.g., 'a').  Often, however, characters are produced by series of key &#xA; * presses (e.g., 'shift' + 'a'), and the mapping from key pressed events to &#xA; * key typed events may be many-to-one or many-to-many.  Key releases are not &#xA; * usually necessary to generate a key typed event, but there are some cases &#xA; * where the key typed event is not generated until a key is released (e.g., &#xA; * entering ASCII sequences via the Alt-Numpad method in Windows).  &#xA; * No key typed events are generated for keys that don't generate Unicode &#xA; * characters (e.g., action keys, modifier keys, etc.).&#xA; * &lt;p>&#xA; * The getKeyChar method always returns a valid Unicode character or &#xA; * CHAR_UNDEFINED.  Character input is reported by KEY_TYPED events: &#xA; * KEY_PRESSED and KEY_RELEASED events are not necessarily associated &#xA; * with character input.  Therefore, the result of the getKeyChar method &#xA; * is guaranteed to be meaningful only for KEY_TYPED events.   &#xA; * &lt;p>&#xA; * For key pressed and key released events, the getKeyCode method returns &#xA; * the event's keyCode.  For key typed events, the getKeyCode method &#xA; * always returns VK_UNDEFINED.&#xA; *&#xA; * &lt;p>&#xA; * &lt;em>&quot;Key pressed&quot; and &quot;key released&quot; events&lt;/em> are lower-level and depend &#xA; * on the platform and keyboard layout. They are generated whenever a key is &#xA; * pressed or released, and are the only way to find out about keys that don't &#xA; * generate character input (e.g., action keys, modifier keys, etc.). The key &#xA; * being pressed or released is indicated by the getKeyCode method, which returns &#xA; * a virtual key code.&#xA; *&#xA; * &lt;p>&#xA; * &lt;em>Virtual key codes&lt;/em> are used to report which keyboard key has&#xA; * been pressed, rather than a character generated by the combination&#xA; * of one or more keystrokes (such as &quot;A&quot;, which comes from shift and &quot;a&quot;).  &#xA; *&#xA; * &lt;p>&#xA; * For example, pressing the Shift key will cause a KEY_PRESSED event &#xA; * with a VK_SHIFT keyCode, while pressing the 'a' key will result in &#xA; * a VK_A keyCode.  After the 'a' key is released, a KEY_RELEASED event &#xA; * will be fired with VK_A. Separately, a KEY_TYPED event with a keyChar &#xA; * value of 'A' is generated.&#xA; *&#xA; * &lt;p>&#xA; * Notes:&#xA; * &lt;ul>&#xA; * &lt;li>Key combinations which do not result in Unicode characters, such as action &#xA; * keys like F1 and the HELP key, do not generate KEY_TYPED events.&#xA; * &lt;li>Not all keyboards or systems are capable of generating all&#xA; * virtual key codes.  No attempt is made in Java to generate these keys &#xA; * artificially. &#xA; * &lt;li>Virtual key codes do not identify a physical key: they depend on the&#xA; * platform and keyboard layout. For example, the key that generates VK_Q &#xA; * when using a U.S. keyboard layout will generate VK_A when using a French &#xA; * keyboard layout.&#xA; * &lt;li>Not all characters have a keycode associated with them.  For example, &#xA; * there is no keycode for the question mark because there is no keyboard &#xA; * for which it appears on the primary layer.  &#xA; * &lt;li>In order to support the platform-independent handling of action keys,&#xA; * the Java platform uses a few additional virtual key constants for functions&#xA; * that would otherwise have to be recognized by interpreting virtual key codes&#xA; * and modifiers. For example, for Japanese Windows keyboards, VK_ALL_CANDIDATES&#xA; * is returned instead of VK_CONVERT with the ALT modifier.&#xA; * &lt;/ul>&#xA; *&#xA; * &lt;p>&#xA; * WARNING: Aside from those keys that are defined by the Java language&#xA; * (VK_ENTER, VK_BACK_SPACE, and VK_TAB), do not rely on the values of the VK_&#xA; * constants.  Sun reserves the right to change these values as needed&#xA; * to accomodate a wider range of keyboards in the future.  &#xA; *&#xA; * @author Carl Quinn&#xA; * @author Amy Fowler&#xA; * @author Norbert Lindenberg&#xA; * @version 1.76 11/22/07&#xA; *&#xA; * @see KeyAdapter&#xA; * @see KeyListener&#xA; * @see &lt;a href=&quot;http://java.sun.com/docs/books/tutorial/post1.0/ui/keylistener.html&quot;>Tutorial: Writing a Key Listener&lt;/a>&#xA; * @see &lt;a href=&quot;http://www.awl.com/cp/javaseries/jcl1_2.html&quot;>Reference: The Java Class Libraries (update file)&lt;/a>&#xA; *&#xA; * @since 1.1&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Class" href="InputEvent.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
