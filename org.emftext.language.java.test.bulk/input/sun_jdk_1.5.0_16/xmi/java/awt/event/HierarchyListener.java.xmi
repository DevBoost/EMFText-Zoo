<?xml version="1.0" encoding="ASCII"?>
<containers:CompilationUnit xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:classifiers="http://www.emftext.org/java/classifiers" xmlns:containers="http://www.emftext.org/java/containers" xmlns:imports="http://www.emftext.org/java/imports" xmlns:members="http://www.emftext.org/java/members" xmlns:modifiers="http://www.emftext.org/java/modifiers" xmlns:parameters="http://www.emftext.org/java/parameters" xmlns:types="http://www.emftext.org/java/types" xsi:schemaLocation="http://www.emftext.org/java/classifiers ../../../java.ecore#/2 http://www.emftext.org/java/containers ../../../java.ecore#/4 http://www.emftext.org/java/imports ../../../java.ecore#/7 http://www.emftext.org/java/members ../../../java.ecore#/10 http://www.emftext.org/java/modifiers ../../../java.ecore#/11 http://www.emftext.org/java/parameters ../../../java.ecore#/13 http://www.emftext.org/java/types ../../../java.ecore#/16" name="HierarchyListener.java">
  <comments>/*&#xA; * @(#)HierarchyListener.java&#x9;1.8 03/12/19&#xA; *&#xA; * Copyright 2004 Sun Microsystems, Inc. All rights reserved.&#xA; * SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.&#xA; */</comments>
  <namespaces>java</namespaces>
  <namespaces>awt</namespaces>
  <namespaces>event</namespaces>
  <imports xsi:type="imports:ClassifierImport">
    <namespaces>java</namespaces>
    <namespaces>util</namespaces>
    <classifier xsi:type="classifiers:Interface" href="../../util/EventListener.class.xmi#//@classifiers.0"/>
  </imports>
  <classifiers xsi:type="classifiers:Interface" name="HierarchyListener">
    <members xsi:type="members:InterfaceMethod" name="hierarchyChanged">
      <typeReference xsi:type="types:Void"/>
      <parameters xsi:type="parameters:OrdinaryParameter" name="e">
        <typeReference xsi:type="types:NamespaceClassifierReference">
          <classifierReferences>
            <target xsi:type="classifiers:Class" href="HierarchyEvent.class.xmi#//@classifiers.0"/>
          </classifierReferences>
        </typeReference>
      </parameters>
      <annotationsAndModifiers xsi:type="modifiers:Public">
        <comments>/**&#xA;     * Called when the hierarchy has been changed. To discern the actual&#xA;     * type of change, call &lt;code>HierarchyEvent.getChangeFlags()&lt;/code>.&#xA;     *&#xA;     * @see HierarchyEvent#getChangeFlags()&#xA;     */</comments>
      </annotationsAndModifiers>
    </members>
    <annotationsAndModifiers xsi:type="modifiers:Public">
      <comments>/**&#xA; * The listener interface for receiving hierarchy changed events.&#xA; * The class that is interested in processing a hierarchy changed event&#xA; * should implement this interface.&#xA; * The listener object created from that class is then registered with a&#xA; * Component using the Component's &lt;code>addHierarchyListener&lt;/code> &#xA; * method. When the hierarchy to which the Component belongs changes, the&#xA; * &lt;code>hierarchyChanged&lt;/code> method in the listener object is invoked,&#xA; * and the &lt;code>HierarchyEvent&lt;/code> is passed to it.&#xA; * &lt;p>&#xA; * Hierarchy events are provided for notification purposes ONLY;&#xA; * The AWT will automatically handle changes to the hierarchy internally so&#xA; * that GUI layout, displayability, and visibility work properly regardless&#xA; * of whether a program registers a &lt;code>HierarchyListener&lt;/code> or not.&#xA; *&#xA; * @author&#x9;David Mendenhall&#xA; * @version&#x9;1.8, 12/19/03&#xA; * @see&#x9;&#x9;HierarchyEvent&#xA; * @since &#x9;1.3&#xA; */</comments>
    </annotationsAndModifiers>
    <extends xsi:type="types:NamespaceClassifierReference">
      <classifierReferences>
        <target xsi:type="classifiers:Interface" href="../../util/EventListener.class.xmi#//@classifiers.0"/>
      </classifierReferences>
    </extends>
  </classifiers>
</containers:CompilationUnit>
